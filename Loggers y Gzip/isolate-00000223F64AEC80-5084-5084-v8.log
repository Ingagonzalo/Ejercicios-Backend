v8-version,9,4,146,24,-node.21,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7d6a90000,0x7ff7da7b2000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffad1ed0000,0x7ffad20c5000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffad17f0000,0x7ffad18ae000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffacfaa0000,0x7ffacfd68000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffad1cf0000,0x7ffad1d5b000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffad1d60000,0x7ffad1e8a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffac7ac0000,0x7ffac7ca4000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffad0280000,0x7ffad0288000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffacfe20000,0x7ffacff20000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffad0b00000,0x7ffad0bac000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffad0df0000,0x7ffad0e8e000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7fface9c0000,0x7fface9fb000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffacf4b0000,0x7ffacf4de000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffad0a60000,0x7ffad0afb000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffad19a0000,0x7ffad1b41000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffacf5f0000,0x7ffacf612000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffad1910000,0x7ffad193b000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffacf990000,0x7ffacfa9b000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffacf620000,0x7ffacf6bd000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffacf740000,0x7ffacf896000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ffacf6c0000,0x7ffacf6e7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffac5a90000,0x7ffac5ab7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffaceee0000,0x7ffaceeec000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffad0bb0000,0x7ffad0be0000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ffacf460000,0x7ffacf4ab000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ffacf440000,0x7ffacf452000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffacd030000,0x7ffacd0ce000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffacff20000,0x7ffad0275000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffacecd0000,0x7ffaced3a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ffacd510000,0x7ffacd522000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ffacf900000,0x7ffacf983000,0
shared-library-end
tick,0x7ffad1f6cdf4,200183,0,0x0,6
profiler,begin,1000
new,CodeRange,0x22380000000,0
new,MemoryChunk,0x34998a40000,262144
new,MemoryChunk,0x26f3cd40000,262144
new,MemoryChunk,0x2904d900000,262144
new,MemoryChunk,0x23cee440000,262144
new,MemoryChunk,0x3d399400000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0x3cd9f300000,262144
new,MemoryChunk,0x11463280000,262144
new,MemoryChunk,0x34b3cc40000,262144
new,MemoryChunk,0x10e5cc80000,262144
new,MemoryChunk,0x8a0fdc0000,262144
new,MemoryChunk,0x1e6c46c0000,262144
tick,0x7ff7d7b71239,202825,0,0x0,6
new,MemoryChunk,0x5c9bb80000,262144
new,MemoryChunk,0x22380040000,262144
new,MemoryChunk,0x15f9ea40000,262144
code-creation,Builtin,2,206553,0x7ff7d76008a4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,206596,0x7ff7d7600e04,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,206607,0x7ff7d7600fe4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,206616,0x7ff7d7601264,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,206626,0x7ff7d7601344,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,206635,0x7ff7d76014c4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,206643,0x7ff7d7601564,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,206652,0x7ff7d76015a4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,206661,0x7ff7d7601724,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,206670,0x7ff7d76018e4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,206751,0x7ff7d7601aa4,104,CallBoundFunction
code-creation,Builtin,2,206768,0x7ff7d7601b24,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,206778,0x7ff7d7601ba4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,206786,0x7ff7d7601c24,120,Call_ReceiverIsAny
code-creation,Builtin,2,206794,0x7ff7d7601ca4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,206803,0x7ff7d76020a4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,206811,0x7ff7d76024a4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,206821,0x7ff7d76028e4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,206830,0x7ff7d7602d24,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,206838,0x7ff7d7603164,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,206847,0x7ff7d76035a4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,206856,0x7ff7d7603964,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,206865,0x7ff7d7603d24,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,206873,0x7ff7d76040e4,736,CallProxy
code-creation,Builtin,2,206881,0x7ff7d76043e4,148,CallVarargs
code-creation,Builtin,2,206889,0x7ff7d7604484,944,CallWithSpread
code-creation,Builtin,2,206896,0x7ff7d7604844,1956,CallWithSpread_Baseline
code-creation,Builtin,2,206904,0x7ff7d7605004,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,206913,0x7ff7d76057a4,864,CallWithArrayLike
code-creation,Builtin,2,206921,0x7ff7d7605b24,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,206929,0x7ff7d7606244,156,CallForwardVarargs
code-creation,Builtin,2,206937,0x7ff7d76062e4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,206946,0x7ff7d7606384,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,206954,0x7ff7d7606424,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,206963,0x7ff7d7606524,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,206972,0x7ff7d7606664,28,ConstructFunction
code-creation,Builtin,2,206980,0x7ff7d7606684,104,ConstructBoundFunction
code-creation,Builtin,2,206988,0x7ff7d7606704,28,ConstructedNonConstructable
code-creation,Builtin,2,206996,0x7ff7d7606724,100,Construct
code-creation,Builtin,2,207004,0x7ff7d76067a4,148,ConstructVarargs
code-creation,Builtin,2,207012,0x7ff7d7606844,968,ConstructWithSpread
code-creation,Builtin,2,207020,0x7ff7d7606c24,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,207028,0x7ff7d7607304,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,207036,0x7ff7d7607a04,924,ConstructWithArrayLike
code-creation,Builtin,2,207044,0x7ff7d7607da4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,207052,0x7ff7d7608424,196,ConstructForwardVarargs
code-creation,Builtin,2,207060,0x7ff7d7608504,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,207068,0x7ff7d76085e4,804,Construct_Baseline
code-creation,Builtin,2,207076,0x7ff7d7608924,820,Construct_WithFeedback
code-creation,Builtin,2,207084,0x7ff7d7608c64,476,JSConstructStubGeneric
code-creation,Builtin,2,207092,0x7ff7d7608e44,376,JSBuiltinsConstructStub
code-creation,Builtin,2,207099,0x7ff7d7608fc4,676,FastNewObject
code-creation,Builtin,2,207107,0x7ff7d7609284,292,FastNewClosure
code-creation,Builtin,2,207115,0x7ff7d76093c4,720,ConstructProxy
code-creation,Builtin,2,207123,0x7ff7d76096a4,360,JSEntry
code-creation,Builtin,2,207130,0x7ff7d7609824,360,JSConstructEntry
code-creation,Builtin,2,207138,0x7ff7d76099a4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,207146,0x7ff7d7609b24,96,JSEntryTrampoline
code-creation,Builtin,2,207154,0x7ff7d7609ba4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,207162,0x7ff7d7609c24,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,207169,0x7ff7d7609d44,1116,StringCodePointAt
code-creation,Builtin,2,207177,0x7ff7d760a1a4,1552,StringFromCodePointAt
code-creation,Builtin,2,207185,0x7ff7d760a7c4,544,StringEqual
code-creation,Builtin,2,207223,0x7ff7d760aa04,276,StringGreaterThan
code-creation,Builtin,2,207233,0x7ff7d760ab24,276,StringGreaterThanOrEqual
code-creation,Builtin,2,207240,0x7ff7d760ac44,276,StringLessThan
code-creation,Builtin,2,207248,0x7ff7d760ad64,276,StringLessThanOrEqual
code-creation,Builtin,2,207256,0x7ff7d760ae84,2492,StringSubstring
code-creation,Builtin,2,207264,0x7ff7d760b844,80,OrderedHashTableHealIndex
code-creation,Builtin,2,207273,0x7ff7d760b8a4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,207282,0x7ff7d760bd44,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,207289,0x7ff7d760bda4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,207298,0x7ff7d760be04,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,207306,0x7ff7d760be64,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,207314,0x7ff7d760bec4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,207324,0x7ff7d760bf24,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,207332,0x7ff7d760bf84,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,207340,0x7ff7d760bfe4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,207349,0x7ff7d760c0c4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,207356,0x7ff7d760c104,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,207365,0x7ff7d760c364,56,BaselineOnStackReplacement
code-creation,Builtin,2,207373,0x7ff7d760c3a4,84,BaselineLeaveFrame
code-creation,Builtin,2,207381,0x7ff7d760c404,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,207389,0x7ff7d760c4e4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,207397,0x7ff7d760c5e4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,207405,0x7ff7d760c6c4,1004,CompileLazy
code-creation,Builtin,2,207413,0x7ff7d760cac4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,207421,0x7ff7d760cb24,252,InstantiateAsmJs
code-creation,Builtin,2,207429,0x7ff7d760cc24,32,NotifyDeoptimized
code-creation,Builtin,2,207436,0x7ff7d760cc64,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,207444,0x7ff7d760cf84,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,207452,0x7ff7d760d2a4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,207460,0x7ff7d760d5c4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,207468,0x7ff7d760d8e4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,207476,0x7ff7d760d924,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,207484,0x7ff7d760d964,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,207492,0x7ff7d760d9a4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,207500,0x7ff7d760da04,288,CallApiCallback
code-creation,Builtin,2,207508,0x7ff7d760db44,268,CallApiGetter
code-creation,Builtin,2,207516,0x7ff7d760dc64,12,HandleApiCall
code-creation,Builtin,2,207523,0x7ff7d760dc84,12,HandleApiCallAsFunction
code-creation,Builtin,2,207531,0x7ff7d760dca4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,207539,0x7ff7d760dcc4,64,AllocateInYoungGeneration
code-creation,Builtin,2,207546,0x7ff7d760dd24,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,207555,0x7ff7d760dd64,64,AllocateInOldGeneration
code-creation,Builtin,2,207562,0x7ff7d760ddc4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,207570,0x7ff7d760de04,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,207578,0x7ff7d760dfc4,496,GrowFastDoubleElements
code-creation,Builtin,2,207586,0x7ff7d760e1c4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,207594,0x7ff7d760e364,388,DebugBreakTrampoline
code-creation,Builtin,2,207602,0x7ff7d760e504,180,ToNumber
code-creation,Builtin,2,207610,0x7ff7d760e5c4,292,ToNumber_Baseline
code-creation,Builtin,2,207618,0x7ff7d760e704,360,ToNumeric_Baseline
code-creation,Builtin,2,207626,0x7ff7d760e884,104,PlainPrimitiveToNumber
code-creation,Builtin,2,207634,0x7ff7d760e904,212,ToNumberConvertBigInt
code-creation,Builtin,2,207642,0x7ff7d760e9e4,132,Typeof
code-creation,Builtin,2,207650,0x7ff7d760ea84,104,BigIntToI64
code-creation,Builtin,2,207658,0x7ff7d760eb04,4,BigIntToI32Pair
code-creation,Builtin,2,207668,0x7ff7d760eb24,232,I64ToBigInt
code-creation,Builtin,2,207677,0x7ff7d760ec24,4,I32PairToBigInt
code-creation,Builtin,2,207684,0x7ff7d760ec44,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,207692,0x7ff7d760ecc4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,207701,0x7ff7d760fd64,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,207709,0x7ff7d7613b64,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,207716,0x7ff7d7613c84,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,207724,0x7ff7d7613cc4,12,LoadIC_StringLength
code-creation,Builtin,2,207732,0x7ff7d7613ce4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,207740,0x7ff7d7613d04,3056,LoadIC_NoFeedback
code-creation,Builtin,2,207748,0x7ff7d7614904,32,StoreGlobalIC_Slow
code-creation,Builtin,2,207756,0x7ff7d7614944,7332,StoreIC_NoFeedback
code-creation,Builtin,2,207765,0x7ff7d7616604,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,207773,0x7ff7d76166c4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,207781,0x7ff7d7616724,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,207789,0x7ff7d7616824,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,207798,0x7ff7d7616924,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,207808,0x7ff7d7616a24,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,207817,0x7ff7d7616b24,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,207825,0x7ff7d761a344,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,207834,0x7ff7d761c8e4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,207843,0x7ff7d761fd24,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,207852,0x7ff7d7621504,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,207860,0x7ff7d7623644,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,207869,0x7ff7d7628204,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,207878,0x7ff7d762a344,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,207887,0x7ff7d762ce64,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,207895,0x7ff7d762d184,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,207904,0x7ff7d762d244,72,HasIndexedInterceptorIC
code-creation,Builtin,2,207912,0x7ff7d762d2a4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,207920,0x7ff7d762d324,224,DynamicCheckMaps
code-creation,Builtin,2,207928,0x7ff7d762d424,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,207937,0x7ff7d762d4a4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,207946,0x7ff7d762d564,152,EnqueueMicrotask
code-creation,Builtin,2,207955,0x7ff7d762d604,8,RunMicrotasksTrampoline
code-creation,Builtin,2,207963,0x7ff7d762d624,3476,RunMicrotasks
code-creation,Builtin,2,207971,0x7ff7d762e3c4,2636,HasProperty
code-creation,Builtin,2,207978,0x7ff7d762ee24,1156,DeleteProperty
code-creation,Builtin,2,207986,0x7ff7d762f2c4,1972,CopyDataProperties
code-creation,Builtin,2,207994,0x7ff7d762fa84,9184,SetDataProperties
code-creation,Builtin,2,208002,0x7ff7d7631e84,28,Abort
code-creation,Builtin,2,208009,0x7ff7d7631ea4,28,AbortCSAAssert
code-creation,Builtin,2,208017,0x7ff7d7631ec4,12,EmptyFunction
code-creation,Builtin,2,208025,0x7ff7d7631ee4,12,Illegal
code-creation,Builtin,2,208033,0x7ff7d7631f04,12,StrictPoisonPillThrower
code-creation,Builtin,2,208041,0x7ff7d7631f24,12,UnsupportedThrower
code-creation,Builtin,2,208049,0x7ff7d7631f44,64,ReturnReceiver
code-creation,Builtin,2,208056,0x7ff7d7631fa4,28,ArrayConstructor
code-creation,Builtin,2,208064,0x7ff7d7631fc4,404,ArrayConstructorImpl
code-creation,Builtin,2,208072,0x7ff7d7632164,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,208082,0x7ff7d7632244,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,208091,0x7ff7d7632324,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,208149,0x7ff7d76323e4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,208161,0x7ff7d76324a4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,208170,0x7ff7d7632564,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,208179,0x7ff7d7632624,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,208189,0x7ff7d76326e4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,208198,0x7ff7d76327a4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,208207,0x7ff7d76329c4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,208216,0x7ff7d7632bc4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,208225,0x7ff7d7632d84,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,208235,0x7ff7d7632f24,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,208244,0x7ff7d76330e4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,208253,0x7ff7d7633284,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,208263,0x7ff7d7633464,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,208272,0x7ff7d7633604,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,208280,0x7ff7d7633664,12,ArrayConcat
code-creation,Builtin,2,208288,0x7ff7d7633684,12,ArrayPrototypeFill
code-creation,Builtin,2,208296,0x7ff7d76336a4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,208304,0x7ff7d7633a64,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,208311,0x7ff7d7633b04,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,208319,0x7ff7d7633be4,548,ArrayIncludes
code-creation,Builtin,2,208327,0x7ff7d7633e24,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,208335,0x7ff7d7634184,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,208344,0x7ff7d7634204,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,208351,0x7ff7d7634284,552,ArrayIndexOf
code-creation,Builtin,2,208359,0x7ff7d76344c4,12,ArrayPop
code-creation,Builtin,2,208367,0x7ff7d76344e4,616,ArrayPrototypePop
code-creation,Builtin,2,208374,0x7ff7d7634764,12,ArrayPush
code-creation,Builtin,2,208382,0x7ff7d7634784,2424,ArrayPrototypePush
code-creation,Builtin,2,208390,0x7ff7d7635104,12,ArrayShift
code-creation,Builtin,2,208398,0x7ff7d7635124,12,ArrayUnshift
code-creation,Builtin,2,208407,0x7ff7d7635144,956,CloneFastJSArray
code-creation,Builtin,2,208415,0x7ff7d7635504,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,208424,0x7ff7d7635da4,976,ExtractFastJSArray
code-creation,Builtin,2,208431,0x7ff7d7636184,260,ArrayPrototypeEntries
code-creation,Builtin,2,208440,0x7ff7d76362a4,248,ArrayPrototypeKeys
code-creation,Builtin,2,208448,0x7ff7d76363a4,260,ArrayPrototypeValues
code-creation,Builtin,2,208456,0x7ff7d76364c4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,208464,0x7ff7d7637624,4168,FlattenIntoArray
code-creation,Builtin,2,208473,0x7ff7d7638684,4172,FlatMapIntoArray
code-creation,Builtin,2,208481,0x7ff7d76396e4,372,ArrayPrototypeFlat
code-creation,Builtin,2,208489,0x7ff7d7639864,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,208497,0x7ff7d7639a24,12,ArrayBufferConstructor
code-creation,Builtin,2,208506,0x7ff7d7639a44,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,208515,0x7ff7d7639a64,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,208524,0x7ff7d7639a84,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,208532,0x7ff7d7639aa4,804,AsyncFunctionEnter
code-creation,Builtin,2,208540,0x7ff7d7639de4,132,AsyncFunctionReject
code-creation,Builtin,2,208549,0x7ff7d7639e84,128,AsyncFunctionResolve
code-creation,Builtin,2,208558,0x7ff7d7639f24,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,208567,0x7ff7d7639f44,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,208575,0x7ff7d763aa44,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,208586,0x7ff7d763b544,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,208595,0x7ff7d763b604,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,208604,0x7ff7d763b6c4,12,BigIntConstructor
code-creation,Builtin,2,208611,0x7ff7d763b6e4,12,BigIntAsUintN
code-creation,Builtin,2,208619,0x7ff7d763b704,12,BigIntAsIntN
code-creation,Builtin,2,208627,0x7ff7d763b724,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,208635,0x7ff7d763b744,12,BigIntPrototypeToString
code-creation,Builtin,2,208643,0x7ff7d763b764,12,BigIntPrototypeValueOf
code-creation,Builtin,2,208651,0x7ff7d763b784,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,208659,0x7ff7d763b7a4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,208668,0x7ff7d763b7c4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,208677,0x7ff7d763b7e4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,208685,0x7ff7d763b804,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,208693,0x7ff7d763b824,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,208702,0x7ff7d763b844,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,208710,0x7ff7d763b864,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,208718,0x7ff7d763b884,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,208726,0x7ff7d763b8a4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,208734,0x7ff7d763b8c4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,208742,0x7ff7d763b8e4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,208751,0x7ff7d763b904,12,CallSitePrototypeGetThis
code-creation,Builtin,2,208781,0x7ff7d763b924,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,208798,0x7ff7d763b944,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,208807,0x7ff7d763b964,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,208815,0x7ff7d763b984,12,CallSitePrototypeIsEval
code-creation,Builtin,2,208824,0x7ff7d763b9a4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,208833,0x7ff7d763b9c4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,208843,0x7ff7d763b9e4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,208851,0x7ff7d763ba04,12,CallSitePrototypeToString
code-creation,Builtin,2,208859,0x7ff7d763ba24,12,ConsoleDebug
code-creation,Builtin,2,208867,0x7ff7d763ba44,12,ConsoleError
code-creation,Builtin,2,208875,0x7ff7d763ba64,12,ConsoleInfo
code-creation,Builtin,2,208883,0x7ff7d763ba84,12,ConsoleLog
code-creation,Builtin,2,208891,0x7ff7d763baa4,12,ConsoleWarn
code-creation,Builtin,2,208899,0x7ff7d763bac4,12,ConsoleDir
code-creation,Builtin,2,208907,0x7ff7d763bae4,12,ConsoleDirXml
code-creation,Builtin,2,208915,0x7ff7d763bb04,12,ConsoleTable
code-creation,Builtin,2,208923,0x7ff7d763bb24,12,ConsoleTrace
code-creation,Builtin,2,208931,0x7ff7d763bb44,12,ConsoleGroup
code-creation,Builtin,2,208938,0x7ff7d763bb64,12,ConsoleGroupCollapsed
code-creation,Builtin,2,208946,0x7ff7d763bb84,12,ConsoleGroupEnd
code-creation,Builtin,2,208953,0x7ff7d763bba4,12,ConsoleClear
code-creation,Builtin,2,208961,0x7ff7d763bbc4,12,ConsoleCount
code-creation,Builtin,2,208969,0x7ff7d763bbe4,12,ConsoleCountReset
code-creation,Builtin,2,208977,0x7ff7d763bc04,12,ConsoleAssert
code-creation,Builtin,2,208985,0x7ff7d763bc24,12,ConsoleProfile
code-creation,Builtin,2,208992,0x7ff7d763bc44,12,ConsoleProfileEnd
code-creation,Builtin,2,209001,0x7ff7d763bc64,12,ConsoleTime
code-creation,Builtin,2,209008,0x7ff7d763bc84,12,ConsoleTimeLog
code-creation,Builtin,2,209016,0x7ff7d763bca4,12,ConsoleTimeEnd
code-creation,Builtin,2,209023,0x7ff7d763bcc4,12,ConsoleTimeStamp
code-creation,Builtin,2,209032,0x7ff7d763bce4,12,ConsoleContext
code-creation,Builtin,2,209039,0x7ff7d763bd04,12,DataViewConstructor
code-creation,Builtin,2,209047,0x7ff7d763bd24,12,DateConstructor
code-creation,Builtin,2,209055,0x7ff7d763bd44,216,DatePrototypeGetDate
code-creation,Builtin,2,209063,0x7ff7d763be24,216,DatePrototypeGetDay
code-creation,Builtin,2,209071,0x7ff7d763bf04,216,DatePrototypeGetFullYear
code-creation,Builtin,2,209084,0x7ff7d763bfe4,216,DatePrototypeGetHours
code-creation,Builtin,2,209093,0x7ff7d763c0c4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,209102,0x7ff7d763c1a4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,209110,0x7ff7d763c284,216,DatePrototypeGetMonth
code-creation,Builtin,2,209119,0x7ff7d763c364,216,DatePrototypeGetSeconds
code-creation,Builtin,2,209127,0x7ff7d763c444,124,DatePrototypeGetTime
code-creation,Builtin,2,209135,0x7ff7d763c4c4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,209144,0x7ff7d763c5a4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,209152,0x7ff7d763c684,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,209160,0x7ff7d763c764,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,209168,0x7ff7d763c844,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,209176,0x7ff7d763c924,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,209184,0x7ff7d763ca04,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,209192,0x7ff7d763cae4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,209200,0x7ff7d763cbc4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,209208,0x7ff7d763cca4,124,DatePrototypeValueOf
code-creation,Builtin,2,209216,0x7ff7d763cd24,352,DatePrototypeToPrimitive
code-creation,Builtin,2,209224,0x7ff7d763cea4,12,DatePrototypeGetYear
code-creation,Builtin,2,209232,0x7ff7d763cec4,12,DatePrototypeSetYear
code-creation,Builtin,2,209240,0x7ff7d763cee4,12,DateNow
code-creation,Builtin,2,209247,0x7ff7d763cf04,12,DateParse
code-creation,Builtin,2,209255,0x7ff7d763cf24,12,DatePrototypeSetDate
code-creation,Builtin,2,209263,0x7ff7d763cf44,12,DatePrototypeSetFullYear
code-creation,Builtin,2,209270,0x7ff7d763cf64,12,DatePrototypeSetHours
code-creation,Builtin,2,209278,0x7ff7d763cf84,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,209287,0x7ff7d763cfa4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,209295,0x7ff7d763cfc4,12,DatePrototypeSetMonth
code-creation,Builtin,2,209303,0x7ff7d763cfe4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,209311,0x7ff7d763d004,12,DatePrototypeSetTime
code-creation,Builtin,2,209319,0x7ff7d763d024,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,209327,0x7ff7d763d044,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,209335,0x7ff7d763d064,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,209344,0x7ff7d763d084,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,209352,0x7ff7d763d0a4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,209360,0x7ff7d763d0c4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,209368,0x7ff7d763d0e4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,209376,0x7ff7d763d104,12,DatePrototypeToDateString
code-creation,Builtin,2,209384,0x7ff7d763d124,12,DatePrototypeToISOString
code-creation,Builtin,2,209392,0x7ff7d763d144,12,DatePrototypeToUTCString
code-creation,Builtin,2,209400,0x7ff7d763d164,12,DatePrototypeToString
code-creation,Builtin,2,209408,0x7ff7d763d184,12,DatePrototypeToTimeString
code-creation,Builtin,2,209416,0x7ff7d763d1a4,12,DatePrototypeToJson
code-creation,Builtin,2,209424,0x7ff7d763d1c4,12,DateUTC
code-creation,Builtin,2,209432,0x7ff7d763d1e4,12,ErrorConstructor
code-creation,Builtin,2,209440,0x7ff7d763d204,12,ErrorCaptureStackTrace
code-creation,Builtin,2,209448,0x7ff7d763d224,12,ErrorPrototypeToString
code-creation,Builtin,2,209456,0x7ff7d763d244,12,FunctionConstructor
code-creation,Builtin,2,209464,0x7ff7d763d264,68,FunctionPrototypeApply
code-creation,Builtin,2,209472,0x7ff7d763d2c4,12,FunctionPrototypeBind
code-creation,Builtin,2,209480,0x7ff7d763d2e4,32,FunctionPrototypeCall
code-creation,Builtin,2,209488,0x7ff7d763d324,12,FunctionPrototypeToString
code-creation,Builtin,2,209496,0x7ff7d763d344,192,CreateIterResultObject
code-creation,Builtin,2,209505,0x7ff7d763d424,788,CreateGeneratorObject
code-creation,Builtin,2,209512,0x7ff7d763d744,12,GeneratorFunctionConstructor
code-creation,Builtin,2,209521,0x7ff7d763d764,412,GeneratorPrototypeNext
code-creation,Builtin,2,209529,0x7ff7d763d904,420,GeneratorPrototypeReturn
code-creation,Builtin,2,209539,0x7ff7d763dac4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,209549,0x7ff7d763dc84,12,AsyncFunctionConstructor
code-creation,Builtin,2,209557,0x7ff7d763dca4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,209565,0x7ff7d763de24,88,ResumeGeneratorBaseline
code-creation,Builtin,2,209574,0x7ff7d763de84,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,209582,0x7ff7d763dec4,12,GlobalDecodeURI
code-creation,Builtin,2,209590,0x7ff7d763dee4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,209598,0x7ff7d763df04,12,GlobalEncodeURI
code-creation,Builtin,2,209606,0x7ff7d763df24,12,GlobalEncodeURIComponent
code-creation,Builtin,2,209615,0x7ff7d763df44,12,GlobalEscape
code-creation,Builtin,2,209623,0x7ff7d763df64,12,GlobalUnescape
code-creation,Builtin,2,209630,0x7ff7d763df84,12,GlobalEval
code-creation,Builtin,2,209638,0x7ff7d763dfa4,132,GlobalIsFinite
code-creation,Builtin,2,209646,0x7ff7d763e044,124,GlobalIsNaN
code-creation,Builtin,2,209654,0x7ff7d763e0c4,12,JsonParse
code-creation,Builtin,2,209662,0x7ff7d763e0e4,12,JsonStringify
code-creation,Builtin,2,209669,0x7ff7d763e104,4608,LoadIC
code-creation,Builtin,2,209677,0x7ff7d763f324,4296,LoadIC_Megamorphic
code-creation,Builtin,2,209685,0x7ff7d7640404,4520,LoadIC_Noninlined
code-creation,Builtin,2,209693,0x7ff7d76415c4,44,LoadICTrampoline
code-creation,Builtin,2,209701,0x7ff7d7641604,24,LoadICBaseline
code-creation,Builtin,2,209709,0x7ff7d7641624,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,209717,0x7ff7d7641664,7376,LoadSuperIC
code-creation,Builtin,2,209725,0x7ff7d7643344,24,LoadSuperICBaseline
code-creation,Builtin,2,209733,0x7ff7d7643364,8148,KeyedLoadIC
code-creation,Builtin,2,209741,0x7ff7d7645344,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,209750,0x7ff7d7648684,44,KeyedLoadICTrampoline
code-creation,Builtin,2,209759,0x7ff7d76486c4,24,KeyedLoadICBaseline
code-creation,Builtin,2,209767,0x7ff7d76486e4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,209776,0x7ff7d7648724,5104,StoreGlobalIC
code-creation,Builtin,2,209785,0x7ff7d7649b24,44,StoreGlobalICTrampoline
code-creation,Builtin,2,209793,0x7ff7d7649b64,24,StoreGlobalICBaseline
code-creation,Builtin,2,209801,0x7ff7d7649b84,5340,StoreIC
code-creation,Builtin,2,209809,0x7ff7d764b064,44,StoreICTrampoline
code-creation,Builtin,2,209817,0x7ff7d764b0a4,24,StoreICBaseline
code-creation,Builtin,2,209825,0x7ff7d764b0c4,5780,KeyedStoreIC
code-creation,Builtin,2,209834,0x7ff7d764c764,44,KeyedStoreICTrampoline
code-creation,Builtin,2,209842,0x7ff7d764c7a4,24,KeyedStoreICBaseline
code-creation,Builtin,2,209851,0x7ff7d764c7c4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,209860,0x7ff7d764c964,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,209869,0x7ff7d764c984,140,LookupContextBaseline
code-creation,Builtin,2,209877,0x7ff7d764ca24,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,209886,0x7ff7d764cac4,3244,LoadGlobalIC
code-creation,Builtin,2,209894,0x7ff7d764d784,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,209902,0x7ff7d764e424,44,LoadGlobalICTrampoline
code-creation,Builtin,2,209911,0x7ff7d764e464,24,LoadGlobalICBaseline
code-creation,Builtin,2,209919,0x7ff7d764e484,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,209928,0x7ff7d764e4c4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,209936,0x7ff7d764e4e4,140,LookupGlobalICBaseline
code-creation,Builtin,2,209944,0x7ff7d764e584,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,209954,0x7ff7d764e624,2064,CloneObjectIC
code-creation,Builtin,2,209962,0x7ff7d764ee44,24,CloneObjectICBaseline
code-creation,Builtin,2,209970,0x7ff7d764ee64,1988,CloneObjectIC_Slow
code-creation,Builtin,2,209979,0x7ff7d764f644,2756,KeyedHasIC
code-creation,Builtin,2,209986,0x7ff7d7650124,24,KeyedHasICBaseline
code-creation,Builtin,2,209995,0x7ff7d7650144,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,210003,0x7ff7d7650ba4,1436,IterableToList
code-creation,Builtin,2,210011,0x7ff7d7651144,1240,IterableToFixedArray
code-creation,Builtin,2,210019,0x7ff7d7651624,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,210084,0x7ff7d7651924,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,210096,0x7ff7d7651964,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,210105,0x7ff7d76519e4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,210113,0x7ff7d7651dc4,1616,StringListFromIterable
code-creation,Builtin,2,210122,0x7ff7d7652424,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,210130,0x7ff7d7652904,4156,MapConstructor
code-creation,Builtin,2,210138,0x7ff7d7653944,1996,MapPrototypeSet
code-creation,Builtin,2,210146,0x7ff7d7654124,1524,MapPrototypeDelete
code-creation,Builtin,2,210155,0x7ff7d7654724,204,MapPrototypeGet
code-creation,Builtin,2,210162,0x7ff7d7654804,164,MapPrototypeHas
code-creation,Builtin,2,210170,0x7ff7d76548c4,12,MapPrototypeClear
code-creation,Builtin,2,210179,0x7ff7d76548e4,284,MapPrototypeEntries
code-creation,Builtin,2,210187,0x7ff7d7654a04,144,MapPrototypeGetSize
code-creation,Builtin,2,210195,0x7ff7d7654aa4,492,MapPrototypeForEach
code-creation,Builtin,2,210203,0x7ff7d7654ca4,284,MapPrototypeKeys
code-creation,Builtin,2,210212,0x7ff7d7654dc4,284,MapPrototypeValues
code-creation,Builtin,2,210219,0x7ff7d7654ee4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,210227,0x7ff7d7655304,1168,MapIteratorToList
code-creation,Builtin,2,210236,0x7ff7d76557a4,12,NumberPrototypeToExponential
code-creation,Builtin,2,210244,0x7ff7d76557c4,12,NumberPrototypeToFixed
code-creation,Builtin,2,210253,0x7ff7d76557e4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,210261,0x7ff7d7655804,12,NumberPrototypeToPrecision
code-creation,Builtin,2,210269,0x7ff7d7655824,328,SameValue
code-creation,Builtin,2,210277,0x7ff7d7655984,204,SameValueNumbersOnly
code-creation,Builtin,2,210284,0x7ff7d7655a64,792,Add_Baseline
code-creation,Builtin,2,210292,0x7ff7d7655d84,828,Subtract_Baseline
code-creation,Builtin,2,210300,0x7ff7d76560c4,808,Multiply_Baseline
code-creation,Builtin,2,210308,0x7ff7d7656404,832,Divide_Baseline
code-creation,Builtin,2,210316,0x7ff7d7656764,764,Modulus_Baseline
code-creation,Builtin,2,210324,0x7ff7d7656a64,808,Exponentiate_Baseline
code-creation,Builtin,2,210332,0x7ff7d7656da4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,210340,0x7ff7d7657084,700,BitwiseOr_Baseline
code-creation,Builtin,2,210349,0x7ff7d7657344,708,BitwiseXor_Baseline
code-creation,Builtin,2,210357,0x7ff7d7657624,720,ShiftLeft_Baseline
code-creation,Builtin,2,210365,0x7ff7d7657904,720,ShiftRight_Baseline
code-creation,Builtin,2,210373,0x7ff7d7657be4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,210381,0x7ff7d7657f44,720,Add_WithFeedback
code-creation,Builtin,2,210389,0x7ff7d7658224,780,Subtract_WithFeedback
code-creation,Builtin,2,210397,0x7ff7d7658544,776,Multiply_WithFeedback
code-creation,Builtin,2,210405,0x7ff7d7658864,804,Divide_WithFeedback
code-creation,Builtin,2,210413,0x7ff7d7658ba4,724,Modulus_WithFeedback
code-creation,Builtin,2,210422,0x7ff7d7658e84,764,Exponentiate_WithFeedback
code-creation,Builtin,2,210430,0x7ff7d7659184,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,210439,0x7ff7d7659444,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,210447,0x7ff7d7659704,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,210455,0x7ff7d76599c4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,210463,0x7ff7d7659c84,692,ShiftRight_WithFeedback
code-creation,Builtin,2,210472,0x7ff7d7659f44,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,210480,0x7ff7d765a284,1696,Equal_Baseline
code-creation,Builtin,2,210488,0x7ff7d765a944,908,StrictEqual_Baseline
code-creation,Builtin,2,210496,0x7ff7d765ace4,1264,LessThan_Baseline
code-creation,Builtin,2,210504,0x7ff7d765b1e4,1264,GreaterThan_Baseline
code-creation,Builtin,2,210512,0x7ff7d765b6e4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,210520,0x7ff7d765bbe4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,210529,0x7ff7d765c0e4,1620,Equal_WithFeedback
code-creation,Builtin,2,210537,0x7ff7d765c744,940,StrictEqual_WithFeedback
code-creation,Builtin,2,210544,0x7ff7d765cb04,1240,LessThan_WithFeedback
code-creation,Builtin,2,210586,0x7ff7d765cfe4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,210597,0x7ff7d765d4c4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,210606,0x7ff7d765d9a4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,210615,0x7ff7d765de84,332,BitwiseNot_Baseline
code-creation,Builtin,2,210623,0x7ff7d765dfe4,460,Decrement_Baseline
code-creation,Builtin,2,210631,0x7ff7d765e1c4,464,Increment_Baseline
code-creation,Builtin,2,210639,0x7ff7d765e3a4,488,Negate_Baseline
code-creation,Builtin,2,210646,0x7ff7d765e5a4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,210654,0x7ff7d765e6e4,440,Decrement_WithFeedback
code-creation,Builtin,2,210662,0x7ff7d765e8a4,444,Increment_WithFeedback
code-creation,Builtin,2,210671,0x7ff7d765ea64,472,Negate_WithFeedback
code-creation,Builtin,2,210679,0x7ff7d765ec44,252,ObjectAssign
code-creation,Builtin,2,210687,0x7ff7d765ed44,864,ObjectCreate
code-creation,Builtin,2,210696,0x7ff7d765f0c4,12,ObjectDefineGetter
code-creation,Builtin,2,210704,0x7ff7d765f0e4,12,ObjectDefineProperties
code-creation,Builtin,2,210711,0x7ff7d765f104,12,ObjectDefineProperty
code-creation,Builtin,2,210720,0x7ff7d765f124,12,ObjectDefineSetter
code-creation,Builtin,2,210728,0x7ff7d765f144,1516,ObjectEntries
code-creation,Builtin,2,210735,0x7ff7d765f744,12,ObjectFreeze
code-creation,Builtin,2,210743,0x7ff7d765f764,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,210752,0x7ff7d7660d64,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,210762,0x7ff7d7660d84,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,210770,0x7ff7d7660fe4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,210779,0x7ff7d7661004,164,ObjectHasOwn
code-creation,Builtin,2,210787,0x7ff7d76610c4,388,ObjectIs
code-creation,Builtin,2,210795,0x7ff7d7661264,12,ObjectIsFrozen
code-creation,Builtin,2,210803,0x7ff7d7661284,12,ObjectIsSealed
code-creation,Builtin,2,210811,0x7ff7d76612a4,536,ObjectKeys
code-creation,Builtin,2,210819,0x7ff7d76614c4,12,ObjectLookupGetter
code-creation,Builtin,2,210827,0x7ff7d76614e4,12,ObjectLookupSetter
code-creation,Builtin,2,210835,0x7ff7d7661504,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,210843,0x7ff7d7661e04,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,210852,0x7ff7d7661ee4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,210861,0x7ff7d7661f04,12,ObjectPrototypeGetProto
code-creation,Builtin,2,210869,0x7ff7d7661f24,12,ObjectPrototypeSetProto
code-creation,Builtin,2,210877,0x7ff7d7661f44,12,ObjectSeal
code-creation,Builtin,2,210884,0x7ff7d7661f64,1108,ObjectToString
code-creation,Builtin,2,210892,0x7ff7d76623c4,1284,ObjectValues
code-creation,Builtin,2,210900,0x7ff7d76628e4,280,OrdinaryHasInstance
code-creation,Builtin,2,210908,0x7ff7d7662a04,344,InstanceOf
code-creation,Builtin,2,210916,0x7ff7d7662b64,632,InstanceOf_WithFeedback
code-creation,Builtin,2,210925,0x7ff7d7662de4,648,InstanceOf_Baseline
code-creation,Builtin,2,210932,0x7ff7d7663084,268,ForInEnumerate
code-creation,Builtin,2,210940,0x7ff7d76631a4,148,ForInPrepare
code-creation,Builtin,2,210948,0x7ff7d7663244,2584,ForInFilter
code-creation,Builtin,2,210956,0x7ff7d7663c64,52,ReflectApply
code-creation,Builtin,2,210964,0x7ff7d7663ca4,60,ReflectConstruct
code-creation,Builtin,2,210972,0x7ff7d7663ce4,12,ReflectDefineProperty
code-creation,Builtin,2,210981,0x7ff7d7663d04,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,210989,0x7ff7d7663d24,12,ReflectOwnKeys
code-creation,Builtin,2,210997,0x7ff7d7663d44,12,ReflectSet
code-creation,Builtin,2,211004,0x7ff7d7663d64,12,RegExpCapture1Getter
code-creation,Builtin,2,211013,0x7ff7d7663d84,12,RegExpCapture2Getter
code-creation,Builtin,2,211020,0x7ff7d7663da4,12,RegExpCapture3Getter
code-creation,Builtin,2,211028,0x7ff7d7663dc4,12,RegExpCapture4Getter
code-creation,Builtin,2,211037,0x7ff7d7663de4,12,RegExpCapture5Getter
code-creation,Builtin,2,211045,0x7ff7d7663e04,12,RegExpCapture6Getter
code-creation,Builtin,2,211053,0x7ff7d7663e24,12,RegExpCapture7Getter
code-creation,Builtin,2,211061,0x7ff7d7663e44,12,RegExpCapture8Getter
code-creation,Builtin,2,211097,0x7ff7d7663e64,12,RegExpCapture9Getter
code-creation,Builtin,2,211107,0x7ff7d7663e84,2212,RegExpConstructor
code-creation,Builtin,2,211116,0x7ff7d7664744,12,RegExpInputGetter
code-creation,Builtin,2,211124,0x7ff7d7664764,12,RegExpInputSetter
code-creation,Builtin,2,211131,0x7ff7d7664784,12,RegExpLastMatchGetter
code-creation,Builtin,2,211140,0x7ff7d76647a4,12,RegExpLastParenGetter
code-creation,Builtin,2,211148,0x7ff7d76647c4,12,RegExpLeftContextGetter
code-creation,Builtin,2,211156,0x7ff7d76647e4,908,RegExpPrototypeCompile
code-creation,Builtin,2,211165,0x7ff7d7664b84,12,RegExpPrototypeToString
code-creation,Builtin,2,211172,0x7ff7d7664ba4,12,RegExpRightContextGetter
code-creation,Builtin,2,211181,0x7ff7d7664bc4,252,RegExpExecAtom
code-creation,Builtin,2,211189,0x7ff7d7664cc4,1040,RegExpExecInternal
code-creation,Builtin,2,211197,0x7ff7d76650e4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,211205,0x7ff7d7665104,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,211213,0x7ff7d7665124,2684,SetConstructor
code-creation,Builtin,2,211221,0x7ff7d7665ba4,1284,SetPrototypeHas
code-creation,Builtin,2,211229,0x7ff7d76660c4,1736,SetPrototypeAdd
code-creation,Builtin,2,211237,0x7ff7d76667a4,1476,SetPrototypeDelete
code-creation,Builtin,2,211245,0x7ff7d7666d84,12,SetPrototypeClear
code-creation,Builtin,2,211253,0x7ff7d7666da4,284,SetPrototypeEntries
code-creation,Builtin,2,211261,0x7ff7d7666ec4,144,SetPrototypeGetSize
code-creation,Builtin,2,211269,0x7ff7d7666f64,444,SetPrototypeForEach
code-creation,Builtin,2,211277,0x7ff7d7667124,284,SetPrototypeValues
code-creation,Builtin,2,211285,0x7ff7d7667244,988,SetIteratorPrototypeNext
code-creation,Builtin,2,211293,0x7ff7d7667624,1112,SetOrSetIteratorToList
code-creation,Builtin,2,211301,0x7ff7d7667a84,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,211311,0x7ff7d7667aa4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,211320,0x7ff7d7667ac4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,211329,0x7ff7d7667ae4,1280,AtomicsLoad
code-creation,Builtin,2,211336,0x7ff7d7668004,1008,AtomicsStore
code-creation,Builtin,2,211344,0x7ff7d7668404,1704,AtomicsExchange
code-creation,Builtin,2,211352,0x7ff7d7668ac4,2092,AtomicsCompareExchange
code-creation,Builtin,2,211362,0x7ff7d7669304,1804,AtomicsAdd
code-creation,Builtin,2,211369,0x7ff7d7669a24,1804,AtomicsSub
code-creation,Builtin,2,211377,0x7ff7d766a144,1804,AtomicsAnd
code-creation,Builtin,2,211385,0x7ff7d766a864,1804,AtomicsOr
code-creation,Builtin,2,211393,0x7ff7d766af84,1804,AtomicsXor
code-creation,Builtin,2,211400,0x7ff7d766b6a4,12,AtomicsNotify
code-creation,Builtin,2,211408,0x7ff7d766b6c4,12,AtomicsIsLockFree
code-creation,Builtin,2,211416,0x7ff7d766b6e4,12,AtomicsWait
code-creation,Builtin,2,211424,0x7ff7d766b704,12,AtomicsWaitAsync
code-creation,Builtin,2,211431,0x7ff7d766b724,12,StringFromCodePoint
code-creation,Builtin,2,211439,0x7ff7d766b744,1428,StringFromCharCode
code-creation,Builtin,2,211447,0x7ff7d766bce4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,211455,0x7ff7d766bd04,4360,StringPrototypeMatchAll
code-creation,Builtin,2,211463,0x7ff7d766ce24,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,211471,0x7ff7d766ce44,1228,StringPrototypeReplace
code-creation,Builtin,2,211479,0x7ff7d766d324,2900,StringPrototypeSplit
code-creation,Builtin,2,211487,0x7ff7d766de84,12,StringRaw
code-creation,Builtin,2,211494,0x7ff7d766dea4,12,SymbolConstructor
code-creation,Builtin,2,211502,0x7ff7d766dec4,12,SymbolFor
code-creation,Builtin,2,211510,0x7ff7d766dee4,12,SymbolKeyFor
code-creation,Builtin,2,211517,0x7ff7d766df04,88,TypedArrayBaseConstructor
code-creation,Builtin,2,211525,0x7ff7d766df64,256,TypedArrayConstructor
code-creation,Builtin,2,211533,0x7ff7d766e084,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,211541,0x7ff7d766e0a4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,211549,0x7ff7d766e424,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,211557,0x7ff7d766e5a4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,211603,0x7ff7d766e804,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,211613,0x7ff7d766e824,12,TypedArrayPrototypeFill
code-creation,Builtin,2,211621,0x7ff7d766e844,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,211629,0x7ff7d766e864,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,211637,0x7ff7d766e884,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,211645,0x7ff7d766e8a4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,211653,0x7ff7d766e8c4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,211662,0x7ff7d766ea04,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,211670,0x7ff7d76713c4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,211677,0x7ff7d76716e4,148,WasmCompileLazy
code-creation,Builtin,2,211685,0x7ff7d7671784,168,WasmDebugBreak
code-creation,Builtin,2,211693,0x7ff7d7671844,16,WasmOnStackReplace
code-creation,Builtin,2,211701,0x7ff7d7671864,140,WasmFloat32ToNumber
code-creation,Builtin,2,211708,0x7ff7d7671904,152,WasmFloat64ToNumber
code-creation,Builtin,2,211716,0x7ff7d76719a4,4,WasmI32AtomicWait32
code-creation,Builtin,2,211724,0x7ff7d76719c4,4,WasmI64AtomicWait32
code-creation,Builtin,2,211732,0x7ff7d76719e4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,211740,0x7ff7d7671a04,4320,WeakMapConstructor
code-creation,Builtin,2,211748,0x7ff7d7672b04,196,WeakMapLookupHashIndex
code-creation,Builtin,2,211756,0x7ff7d7672be4,220,WeakMapGet
code-creation,Builtin,2,211765,0x7ff7d7672cc4,176,WeakMapPrototypeHas
code-creation,Builtin,2,211773,0x7ff7d7672d84,204,WeakMapPrototypeSet
code-creation,Builtin,2,211780,0x7ff7d7672e64,144,WeakMapPrototypeDelete
code-creation,Builtin,2,211788,0x7ff7d7672f04,2876,WeakSetConstructor
code-creation,Builtin,2,211796,0x7ff7d7673a44,176,WeakSetPrototypeHas
code-creation,Builtin,2,211804,0x7ff7d7673b04,204,WeakSetPrototypeAdd
code-creation,Builtin,2,211812,0x7ff7d7673be4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,211820,0x7ff7d7673c84,372,WeakCollectionDelete
code-creation,Builtin,2,211828,0x7ff7d7673e04,764,WeakCollectionSet
code-creation,Builtin,2,211836,0x7ff7d7674104,296,AsyncGeneratorResolve
code-creation,Builtin,2,211844,0x7ff7d7674244,100,AsyncGeneratorReject
code-creation,Builtin,2,211851,0x7ff7d76742c4,2760,AsyncGeneratorYield
code-creation,Builtin,2,211859,0x7ff7d7674da4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,211868,0x7ff7d76758e4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,211875,0x7ff7d7675a24,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,211883,0x7ff7d7675a44,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,211892,0x7ff7d7675e44,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,211900,0x7ff7d7676264,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,211908,0x7ff7d7676684,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,211916,0x7ff7d7677144,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,211924,0x7ff7d7677c04,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,211932,0x7ff7d7677c84,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,211940,0x7ff7d7677d24,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,211949,0x7ff7d7677da4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,211957,0x7ff7d7677e24,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,211965,0x7ff7d7677ea4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,211974,0x7ff7d7677f44,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,211982,0x7ff7d7678584,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,211990,0x7ff7d7678c44,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,211998,0x7ff7d7679304,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,212007,0x7ff7d7679384,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,212015,0x7ff7d7679484,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,212024,0x7ff7d7679584,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,212036,0x7ff7d7679664,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,212045,0x7ff7d7679804,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,212054,0x7ff7d76799a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,212063,0x7ff7d7679aa4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,212072,0x7ff7d7679ba4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,212081,0x7ff7d7679ca4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,212090,0x7ff7d7679e44,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,212099,0x7ff7d7679fe4,4,DirectCEntry
code-creation,Builtin,2,212107,0x7ff7d767a004,1096,StringAdd_CheckNone
code-creation,Builtin,2,212114,0x7ff7d767a464,2484,SubString
code-creation,Builtin,2,212122,0x7ff7d767ae24,16,StackCheck
code-creation,Builtin,2,212130,0x7ff7d767ae44,84,DoubleToI
code-creation,Builtin,2,212138,0x7ff7d767aea4,2236,GetProperty
code-creation,Builtin,2,212145,0x7ff7d767b764,2308,GetPropertyWithReceiver
code-creation,Builtin,2,212154,0x7ff7d767c084,16004,SetProperty
code-creation,Builtin,2,212162,0x7ff7d767ff24,13480,SetPropertyInLiteral
code-creation,Builtin,2,212169,0x7ff7d76833e4,8,MemCopyUint8Uint8
code-creation,Builtin,2,212177,0x7ff7d7683404,8,MemMove
code-creation,Builtin,2,212185,0x7ff7d7683424,12,IsTraceCategoryEnabled
code-creation,Builtin,2,212193,0x7ff7d7683444,12,Trace
code-creation,Builtin,2,212201,0x7ff7d7683464,12,FinalizationRegistryUnregister
code-creation,Builtin,2,212209,0x7ff7d7683484,416,AsyncModuleEvaluate
code-creation,Builtin,2,212217,0x7ff7d7683644,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,212225,0x7ff7d7683664,12,CallAsyncModuleRejected
code-creation,Builtin,2,212233,0x7ff7d7683684,260,AggregateErrorConstructor
code-creation,Builtin,2,212241,0x7ff7d76837a4,856,ArrayPrototypeAt
code-creation,Builtin,2,212249,0x7ff7d7683b04,656,ArrayPrototypeConcat
code-creation,Builtin,2,212257,0x7ff7d7683da4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,212265,0x7ff7d7685484,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,212273,0x7ff7d7685564,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,212282,0x7ff7d76857e4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,212290,0x7ff7d76864e4,1464,ArrayEvery
code-creation,Builtin,2,212298,0x7ff7d7686aa4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,212306,0x7ff7d7686bc4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,212315,0x7ff7d7686fa4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,212323,0x7ff7d7687da4,4260,ArrayFilter
code-creation,Builtin,2,212330,0x7ff7d7688e64,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,212338,0x7ff7d7688f44,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,212347,0x7ff7d7688f84,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,212356,0x7ff7d76890c4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,212364,0x7ff7d76892e4,1460,ArrayPrototypeFind
code-creation,Builtin,2,212372,0x7ff7d76898a4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,212381,0x7ff7d7689984,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,212390,0x7ff7d76899c4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,212398,0x7ff7d7689b04,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,212407,0x7ff7d7689d24,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,212415,0x7ff7d768a2e4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,212423,0x7ff7d768a4c4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,212431,0x7ff7d768ab84,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,212440,0x7ff7d768ad64,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,212448,0x7ff7d768b424,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,212456,0x7ff7d768b504,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,212466,0x7ff7d768b5e4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,212476,0x7ff7d768c244,1328,ArrayForEach
code-creation,Builtin,2,212483,0x7ff7d768c784,3572,ArrayFrom
code-creation,Builtin,2,212491,0x7ff7d768d584,148,ArrayIsArray
code-creation,Builtin,2,212499,0x7ff7d768d624,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,212508,0x7ff7d768d7c4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,212516,0x7ff7d768d804,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,212524,0x7ff7d768d8a4,312,ConvertToLocaleString
code-creation,Builtin,2,212532,0x7ff7d768d9e4,752,JoinStackPush
code-creation,Builtin,2,212540,0x7ff7d768dce4,272,JoinStackPop
code-creation,Builtin,2,212548,0x7ff7d768de04,6628,ArrayPrototypeJoin
code-creation,Builtin,2,212556,0x7ff7d768f804,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,212564,0x7ff7d7690d04,236,ArrayPrototypeToString
code-creation,Builtin,2,212572,0x7ff7d7690e04,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,212580,0x7ff7d7692544,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,212588,0x7ff7d7693764,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,212596,0x7ff7d7694664,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,212605,0x7ff7d7694784,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,212613,0x7ff7d7694884,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,212621,0x7ff7d7694aa4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,212629,0x7ff7d7695724,3912,ArrayMap
code-creation,Builtin,2,212637,0x7ff7d7696684,1000,ArrayOf
code-creation,Builtin,2,212644,0x7ff7d7696a84,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,212653,0x7ff7d7696c44,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,212662,0x7ff7d7696d24,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,212671,0x7ff7d7696e04,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,212680,0x7ff7d7697aa4,2000,ArrayReduceRight
code-creation,Builtin,2,212687,0x7ff7d7698284,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,212696,0x7ff7d7698344,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,212705,0x7ff7d7698424,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,212713,0x7ff7d7698504,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,212722,0x7ff7d76991c4,1604,ArrayReduce
code-creation,Builtin,2,212730,0x7ff7d7699824,3216,ArrayPrototypeReverse
code-creation,Builtin,2,212738,0x7ff7d769a4c4,3592,ArrayPrototypeShift
code-creation,Builtin,2,212746,0x7ff7d769b2e4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,212754,0x7ff7d769c764,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,212765,0x7ff7d769c844,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,212774,0x7ff7d769caa4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,212782,0x7ff7d769d7a4,1448,ArraySome
code-creation,Builtin,2,212790,0x7ff7d769dd64,14216,ArrayPrototypeSplice
code-creation,Builtin,2,212798,0x7ff7d76a1504,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,212807,0x7ff7d76a21e4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,212815,0x7ff7d76a2344,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,212824,0x7ff7d76a24a4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,212832,0x7ff7d76a2584,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,212842,0x7ff7d76a26e4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,212850,0x7ff7d76a27c4,96,ArrayBufferIsView
code-creation,Builtin,2,212858,0x7ff7d76a2844,396,ToInteger
code-creation,Builtin,2,212866,0x7ff7d76a29e4,3084,FastCreateDataProperty
code-creation,Builtin,2,212875,0x7ff7d76a3604,676,CheckNumberInRange
code-creation,Builtin,2,212883,0x7ff7d76a38c4,584,CheckSameObject
code-creation,Builtin,2,212891,0x7ff7d76a3b24,904,BooleanConstructor
code-creation,Builtin,2,212899,0x7ff7d76a3ec4,164,BooleanPrototypeToString
code-creation,Builtin,2,212910,0x7ff7d76a3f84,156,BooleanPrototypeValueOf
code-creation,Builtin,2,212919,0x7ff7d76a4024,1184,BigIntAddNoThrow
code-creation,Builtin,2,212927,0x7ff7d76a44e4,1280,BigIntAdd
code-creation,Builtin,2,212936,0x7ff7d76a4a04,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,212944,0x7ff7d76a4ec4,1280,BigIntSubtract
code-creation,Builtin,2,212952,0x7ff7d76a53e4,284,BigIntUnaryMinus
code-creation,Builtin,2,212960,0x7ff7d76a5504,1360,ToString
code-creation,Builtin,2,212968,0x7ff7d76a5a64,156,StringPrototypeToString
code-creation,Builtin,2,212976,0x7ff7d76a5b04,156,StringPrototypeValueOf
code-creation,Builtin,2,212984,0x7ff7d76a5ba4,2480,StringToList
code-creation,Builtin,2,212992,0x7ff7d76a6564,1012,StringPrototypeCharAt
code-creation,Builtin,2,213000,0x7ff7d76a6964,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,213009,0x7ff7d76a6c24,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,213017,0x7ff7d76a7144,400,StringPrototypeConcat
code-creation,Builtin,2,213025,0x7ff7d76a72e4,992,StringConstructor
code-creation,Builtin,2,213033,0x7ff7d76a76e4,1436,StringAddConvertLeft
code-creation,Builtin,2,213041,0x7ff7d76a7c84,1464,StringAddConvertRight
code-creation,Builtin,2,213049,0x7ff7d76a8244,816,StringCharAt
code-creation,Builtin,2,213057,0x7ff7d76a8584,16,FastNewClosureBaseline
code-creation,Builtin,2,213065,0x7ff7d76a85a4,196,FastNewFunctionContextEval
code-creation,Builtin,2,213073,0x7ff7d76a8684,196,FastNewFunctionContextFunction
code-creation,Builtin,2,213081,0x7ff7d76a8764,248,CreateRegExpLiteral
code-creation,Builtin,2,213090,0x7ff7d76a8864,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,213098,0x7ff7d76a8ca4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,213106,0x7ff7d76a8ea4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,213114,0x7ff7d76a9584,384,ObjectConstructor
code-creation,Builtin,2,213122,0x7ff7d76a9724,176,CreateEmptyLiteralObject
code-creation,Builtin,2,213130,0x7ff7d76a97e4,536,NumberConstructor
code-creation,Builtin,2,213138,0x7ff7d76a9a04,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,213146,0x7ff7d76a9a64,64,StringToNumber
code-creation,Builtin,2,213155,0x7ff7d76a9ac4,184,NonNumberToNumber
code-creation,Builtin,2,213163,0x7ff7d76a9b84,240,NonNumberToNumeric
code-creation,Builtin,2,213171,0x7ff7d76a9c84,36,ToNumeric
code-creation,Builtin,2,213179,0x7ff7d76a9cc4,1184,NumberToString
code-creation,Builtin,2,213186,0x7ff7d76aa184,92,ToBoolean
code-creation,Builtin,2,213194,0x7ff7d76aa1e4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,213203,0x7ff7d76aa264,728,ToLength
code-creation,Builtin,2,213210,0x7ff7d76aa544,1312,ToName
code-creation,Builtin,2,213218,0x7ff7d76aaa84,756,ToObject
code-creation,Builtin,2,213226,0x7ff7d76aad84,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,213235,0x7ff7d76aae64,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,213243,0x7ff7d76aaf44,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,213251,0x7ff7d76ab024,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,213260,0x7ff7d76ab164,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,213268,0x7ff7d76ab2a4,216,FastConsoleAssert
code-creation,Builtin,2,213277,0x7ff7d76ab384,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,213285,0x7ff7d76ab444,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,213293,0x7ff7d76ab5a4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,213302,0x7ff7d76ab704,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,213310,0x7ff7d76ab944,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,213318,0x7ff7d76abb84,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,213327,0x7ff7d76abe24,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,213336,0x7ff7d76ac0c4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,213344,0x7ff7d76ac404,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,213353,0x7ff7d76ac6c4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,213362,0x7ff7d76aca24,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,213370,0x7ff7d76acdc4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,213381,0x7ff7d76ad1a4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,213390,0x7ff7d76ad5a4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,213398,0x7ff7d76ad964,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,213407,0x7ff7d76add24,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,213416,0x7ff7d76ae144,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,213424,0x7ff7d76ae564,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,213432,0x7ff7d76ae9a4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,213441,0x7ff7d76aede4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,213449,0x7ff7d76af204,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,213458,0x7ff7d76af664,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,213467,0x7ff7d76afa24,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,213475,0x7ff7d76afde4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,213484,0x7ff7d76b0124,1152,FinalizationRegistryRegister
code-creation,Builtin,2,213492,0x7ff7d76b05c4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,213501,0x7ff7d76b0864,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,213510,0x7ff7d76b09c4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,213518,0x7ff7d76b0d64,88,IncBlockCounter
code-creation,Builtin,2,213526,0x7ff7d76b0dc4,228,GetTemplateObject
code-creation,Builtin,2,213534,0x7ff7d76b0ec4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,213543,0x7ff7d76b0ee4,92,ForInNext
code-creation,Builtin,2,213551,0x7ff7d76b0f44,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,213559,0x7ff7d76b0fe4,116,GetIteratorWithFeedback
code-creation,Builtin,2,213567,0x7ff7d76b1064,100,GetIteratorBaseline
code-creation,Builtin,2,213575,0x7ff7d76b10e4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,213584,0x7ff7d76b1204,1084,CallIteratorWithFeedback
code-creation,Builtin,2,213592,0x7ff7d76b1644,288,MathAbs
code-creation,Builtin,2,213599,0x7ff7d76b1784,428,MathCeil
code-creation,Builtin,2,213607,0x7ff7d76b1944,432,MathFloor
code-creation,Builtin,2,213614,0x7ff7d76b1b04,488,MathRound
code-creation,Builtin,2,213622,0x7ff7d76b1d04,428,MathTrunc
code-creation,Builtin,2,213630,0x7ff7d76b1ec4,368,MathPow
code-creation,Builtin,2,213637,0x7ff7d76b2044,396,MathMax
code-creation,Builtin,2,213645,0x7ff7d76b21e4,404,MathMin
code-creation,Builtin,2,213653,0x7ff7d76b2384,320,MathAcos
code-creation,Builtin,2,213660,0x7ff7d76b24e4,320,MathAcosh
code-creation,Builtin,2,213668,0x7ff7d76b2644,320,MathAsin
code-creation,Builtin,2,213676,0x7ff7d76b27a4,320,MathAsinh
code-creation,Builtin,2,213684,0x7ff7d76b2904,320,MathAtan
code-creation,Builtin,2,213691,0x7ff7d76b2a64,416,MathAtan2
code-creation,Builtin,2,213699,0x7ff7d76b2c24,320,MathAtanh
code-creation,Builtin,2,213707,0x7ff7d76b2d84,320,MathCbrt
code-creation,Builtin,2,213714,0x7ff7d76b2ee4,168,MathClz32
code-creation,Builtin,2,213722,0x7ff7d76b2fa4,320,MathCos
code-creation,Builtin,2,213729,0x7ff7d76b3104,320,MathCosh
code-creation,Builtin,2,213737,0x7ff7d76b3264,320,MathExp
code-creation,Builtin,2,213744,0x7ff7d76b33c4,320,MathExpm1
code-creation,Builtin,2,213752,0x7ff7d76b3524,272,MathFround
code-creation,Builtin,2,213760,0x7ff7d76b3644,304,MathImul
code-creation,Builtin,2,213769,0x7ff7d76b3784,320,MathLog
code-creation,Builtin,2,213778,0x7ff7d76b38e4,320,MathLog1p
code-creation,Builtin,2,213786,0x7ff7d76b3a44,320,MathLog10
code-creation,Builtin,2,213794,0x7ff7d76b3ba4,320,MathLog2
code-creation,Builtin,2,213801,0x7ff7d76b3d04,320,MathSin
code-creation,Builtin,2,213809,0x7ff7d76b3e64,180,MathSign
code-creation,Builtin,2,213817,0x7ff7d76b3f24,320,MathSinh
code-creation,Builtin,2,213824,0x7ff7d76b4084,268,MathSqrt
code-creation,Builtin,2,213831,0x7ff7d76b41a4,320,MathTan
code-creation,Builtin,2,213839,0x7ff7d76b4304,320,MathTanh
code-creation,Builtin,2,213847,0x7ff7d76b4464,1060,MathHypot
code-creation,Builtin,2,213855,0x7ff7d76b48a4,332,MathRandom
code-creation,Builtin,2,213862,0x7ff7d76b4a04,2956,NumberPrototypeToString
code-creation,Builtin,2,213873,0x7ff7d76b55a4,136,NumberIsFinite
code-creation,Builtin,2,213883,0x7ff7d76b5644,340,NumberIsInteger
code-creation,Builtin,2,213890,0x7ff7d76b57a4,116,NumberIsNaN
code-creation,Builtin,2,213898,0x7ff7d76b5824,372,NumberIsSafeInteger
code-creation,Builtin,2,213907,0x7ff7d76b59a4,156,NumberPrototypeValueOf
code-creation,Builtin,2,213915,0x7ff7d76b5a44,196,NumberParseFloat
code-creation,Builtin,2,213924,0x7ff7d76b5b24,248,ParseInt
code-creation,Builtin,2,213932,0x7ff7d76b5c24,84,NumberParseInt
code-creation,Builtin,2,213940,0x7ff7d76b5c84,860,Add
code-creation,Builtin,2,213948,0x7ff7d76b5fe4,424,Subtract
code-creation,Builtin,2,213955,0x7ff7d76b61a4,608,Multiply
code-creation,Builtin,2,213963,0x7ff7d76b6424,532,Divide
code-creation,Builtin,2,213971,0x7ff7d76b6644,592,Modulus
code-creation,Builtin,2,213979,0x7ff7d76b68a4,524,Exponentiate
code-creation,Builtin,2,213987,0x7ff7d76b6ac4,344,Negate
code-creation,Builtin,2,213994,0x7ff7d76b6c24,112,BitwiseNot
code-creation,Builtin,2,214001,0x7ff7d76b6ca4,112,Decrement
code-creation,Builtin,2,214009,0x7ff7d76b6d24,112,Increment
code-creation,Builtin,2,214017,0x7ff7d76b6da4,392,ShiftLeft
code-creation,Builtin,2,214025,0x7ff7d76b6f44,392,ShiftRight
code-creation,Builtin,2,214032,0x7ff7d76b70e4,508,ShiftRightLogical
code-creation,Builtin,2,214040,0x7ff7d76b72e4,388,BitwiseAnd
code-creation,Builtin,2,214048,0x7ff7d76b7484,388,BitwiseOr
code-creation,Builtin,2,214056,0x7ff7d76b7624,388,BitwiseXor
code-creation,Builtin,2,214063,0x7ff7d76b77c4,796,LessThan
code-creation,Builtin,2,214071,0x7ff7d76b7ae4,796,LessThanOrEqual
code-creation,Builtin,2,214079,0x7ff7d76b7e04,796,GreaterThan
code-creation,Builtin,2,214087,0x7ff7d76b8124,796,GreaterThanOrEqual
code-creation,Builtin,2,214095,0x7ff7d76b8444,860,Equal
code-creation,Builtin,2,214103,0x7ff7d76b87a4,348,StrictEqual
code-creation,Builtin,2,214111,0x7ff7d76b8904,3132,ObjectFromEntries
code-creation,Builtin,2,214119,0x7ff7d76b9544,756,CreateObjectWithoutProperties
code-creation,Builtin,2,214127,0x7ff7d76b9844,144,ObjectIsExtensible
code-creation,Builtin,2,214135,0x7ff7d76b98e4,148,ObjectPreventExtensions
code-creation,Builtin,2,214143,0x7ff7d76b9984,144,ObjectGetPrototypeOf
code-creation,Builtin,2,214151,0x7ff7d76b9a24,300,ObjectSetPrototypeOf
code-creation,Builtin,2,214159,0x7ff7d76b9b64,80,ObjectPrototypeToString
code-creation,Builtin,2,214167,0x7ff7d76b9bc4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,214175,0x7ff7d76b9c44,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,214183,0x7ff7d76b9d04,868,FulfillPromise
code-creation,Builtin,2,214192,0x7ff7d76ba084,988,RejectPromise
code-creation,Builtin,2,214199,0x7ff7d76ba464,2416,NewPromiseCapability
code-creation,Builtin,2,214208,0x7ff7d76bade4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,214216,0x7ff7d76baea4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,214224,0x7ff7d76baf44,1416,PerformPromiseThen
code-creation,Builtin,2,214232,0x7ff7d76bb4e4,648,PromiseReject
code-creation,Builtin,2,214240,0x7ff7d76bb784,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,214248,0x7ff7d76bb8a4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,214257,0x7ff7d76bb924,4560,PromiseAll
code-creation,Builtin,2,214265,0x7ff7d76bcb04,4880,PromiseAllSettled
code-creation,Builtin,2,214273,0x7ff7d76bde24,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,214281,0x7ff7d76be284,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,214289,0x7ff7d76be804,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,214298,0x7ff7d76bed84,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,214306,0x7ff7d76bf224,2368,PromiseAny
code-creation,Builtin,2,214314,0x7ff7d76bfb84,2908,PromiseConstructor
code-creation,Builtin,2,214322,0x7ff7d76c06e4,296,PromisePrototypeCatch
code-creation,Builtin,2,214330,0x7ff7d76c0824,88,PromiseValueThunkFinally
code-creation,Builtin,2,214338,0x7ff7d76c0884,84,PromiseThrowerFinally
code-creation,Builtin,2,214346,0x7ff7d76c08e4,904,PromiseCatchFinally
code-creation,Builtin,2,214357,0x7ff7d76c0c84,904,PromiseThenFinally
code-creation,Builtin,2,214365,0x7ff7d76c1024,1700,PromisePrototypeFinally
code-creation,Builtin,2,214373,0x7ff7d76c16e4,1336,PromiseRace
code-creation,Builtin,2,214381,0x7ff7d76c1c24,268,PromiseFulfillReactionJob
code-creation,Builtin,2,214389,0x7ff7d76c1d44,364,PromiseRejectReactionJob
code-creation,Builtin,2,214397,0x7ff7d76c1ec4,156,PromiseResolveTrampoline
code-creation,Builtin,2,214405,0x7ff7d76c1f64,656,PromiseResolve
code-creation,Builtin,2,214413,0x7ff7d76c2204,712,ResolvePromise
code-creation,Builtin,2,214421,0x7ff7d76c24e4,2224,PromisePrototypeThen
code-creation,Builtin,2,214429,0x7ff7d76c2da4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,214437,0x7ff7d76c3224,448,ProxyConstructor
code-creation,Builtin,2,214445,0x7ff7d76c3404,1760,ProxyDeleteProperty
code-creation,Builtin,2,214453,0x7ff7d76c3b04,2112,ProxyGetProperty
code-creation,Builtin,2,214461,0x7ff7d76c4364,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,214469,0x7ff7d76c47a4,1668,ProxyHasProperty
code-creation,Builtin,2,214477,0x7ff7d76c4e44,760,ProxyIsExtensible
code-creation,Builtin,2,214485,0x7ff7d76c5144,800,ProxyPreventExtensions
code-creation,Builtin,2,214493,0x7ff7d76c5484,1148,ProxyRevocable
code-creation,Builtin,2,214501,0x7ff7d76c5904,120,ProxyRevoke
code-creation,Builtin,2,214509,0x7ff7d76c5984,2216,ProxySetProperty
code-creation,Builtin,2,214517,0x7ff7d76c6244,1292,ProxySetPrototypeOf
code-creation,Builtin,2,214525,0x7ff7d76c6764,208,ReflectIsExtensible
code-creation,Builtin,2,214533,0x7ff7d76c6844,212,ReflectPreventExtensions
code-creation,Builtin,2,214541,0x7ff7d76c6924,188,ReflectGetPrototypeOf
code-creation,Builtin,2,214550,0x7ff7d76c69e4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,214558,0x7ff7d76c6b24,284,ReflectGet
code-creation,Builtin,2,214565,0x7ff7d76c6c44,160,ReflectDeleteProperty
code-creation,Builtin,2,214573,0x7ff7d76c6d04,148,ReflectHas
code-creation,Builtin,2,214582,0x7ff7d76c6da4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,214590,0x7ff7d76c81c4,5104,RegExpPrototypeExec
code-creation,Builtin,2,214597,0x7ff7d76c95c4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,214606,0x7ff7d76c9f04,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,214615,0x7ff7d76cc3e4,8840,RegExpMatchFast
code-creation,Builtin,2,214623,0x7ff7d76ce684,3600,RegExpPrototypeMatch
code-creation,Builtin,2,214630,0x7ff7d76cf4a4,6328,RegExpReplace
code-creation,Builtin,2,214638,0x7ff7d76d0d64,524,RegExpPrototypeReplace
code-creation,Builtin,2,214646,0x7ff7d76d0f84,1424,RegExpSearchFast
code-creation,Builtin,2,214654,0x7ff7d76d1524,1640,RegExpPrototypeSearch
code-creation,Builtin,2,214663,0x7ff7d76d1ba4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,214671,0x7ff7d76d1c84,5872,RegExpSplit
code-creation,Builtin,2,214679,0x7ff7d76d3384,476,RegExpPrototypeSplit
code-creation,Builtin,2,214687,0x7ff7d76d3564,2252,RegExpPrototypeTest
code-creation,Builtin,2,214695,0x7ff7d76d3e44,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,214703,0x7ff7d76d43a4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,214711,0x7ff7d76d44a4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,214719,0x7ff7d76d45a4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,214728,0x7ff7d76d46a4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,214736,0x7ff7d76d47a4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,214744,0x7ff7d76d48a4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,214753,0x7ff7d76d49a4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,214763,0x7ff7d76d4ac4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,214771,0x7ff7d76d4be4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,214780,0x7ff7d76d54c4,1500,StringPrototypeAt
code-creation,Builtin,2,214788,0x7ff7d76d5aa4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,214796,0x7ff7d76d6684,480,CreateHTML
code-creation,Builtin,2,214804,0x7ff7d76d6884,164,StringPrototypeAnchor
code-creation,Builtin,2,214812,0x7ff7d76d6944,128,StringPrototypeBig
code-creation,Builtin,2,214820,0x7ff7d76d69e4,128,StringPrototypeBlink
code-creation,Builtin,2,214830,0x7ff7d76d6a84,128,StringPrototypeBold
code-creation,Builtin,2,214840,0x7ff7d76d6b24,168,StringPrototypeFontcolor
code-creation,Builtin,2,214848,0x7ff7d76d6be4,168,StringPrototypeFontsize
code-creation,Builtin,2,214856,0x7ff7d76d6ca4,128,StringPrototypeFixed
code-creation,Builtin,2,214865,0x7ff7d76d6d44,128,StringPrototypeItalics
code-creation,Builtin,2,214873,0x7ff7d76d6de4,168,StringPrototypeLink
code-creation,Builtin,2,214880,0x7ff7d76d6ea4,128,StringPrototypeSmall
code-creation,Builtin,2,214889,0x7ff7d76d6f44,128,StringPrototypeStrike
code-creation,Builtin,2,214897,0x7ff7d76d6fe4,128,StringPrototypeSub
code-creation,Builtin,2,214905,0x7ff7d76d7084,128,StringPrototypeSup
code-creation,Builtin,2,214913,0x7ff7d76d7124,1028,StringPrototypeIncludes
code-creation,Builtin,2,214921,0x7ff7d76d7544,628,StringPrototypeIndexOf
code-creation,Builtin,2,214928,0x7ff7d76d77c4,344,StringPrototypeIterator
code-creation,Builtin,2,214935,0x7ff7d76d7924,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,214943,0x7ff7d76d8124,1304,StringPrototypeMatch
code-creation,Builtin,2,214951,0x7ff7d76d8644,1304,StringPrototypeSearch
code-creation,Builtin,2,214958,0x7ff7d76d8b64,824,StringPrototypePadStart
code-creation,Builtin,2,214965,0x7ff7d76d8ea4,824,StringPrototypePadEnd
code-creation,Builtin,2,214973,0x7ff7d76d91e4,120,StringRepeat
code-creation,Builtin,2,214981,0x7ff7d76d9264,400,StringPrototypeRepeat
code-creation,Builtin,2,214989,0x7ff7d76d9404,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,214997,0x7ff7d76dbfc4,3388,StringPrototypeSlice
code-creation,Builtin,2,215005,0x7ff7d76dcd04,3028,StringPrototypeStartsWith
code-creation,Builtin,2,215014,0x7ff7d76dd8e4,3328,StringPrototypeSubstr
code-creation,Builtin,2,215022,0x7ff7d76de604,3260,StringPrototypeSubstring
code-creation,Builtin,2,215030,0x7ff7d76df2c4,6916,StringPrototypeTrim
code-creation,Builtin,2,215038,0x7ff7d76e0de4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,215046,0x7ff7d76e26a4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,215054,0x7ff7d76e3d84,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,215063,0x7ff7d76e3e44,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,215072,0x7ff7d76e3ee4,172,SymbolPrototypeToString
code-creation,Builtin,2,215080,0x7ff7d76e3fa4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,215088,0x7ff7d76e4044,832,TypedArrayPrototypeAt
code-creation,Builtin,2,215097,0x7ff7d76e43a4,10064,CreateTypedArray
code-creation,Builtin,2,215105,0x7ff7d76e6b04,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,215113,0x7ff7d76e6f04,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,215121,0x7ff7d76e7084,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,215130,0x7ff7d76e7e44,996,TypedArrayPrototypeFind
code-creation,Builtin,2,215138,0x7ff7d76e8244,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,215147,0x7ff7d76e8644,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,215156,0x7ff7d76e8804,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,215164,0x7ff7d76e8cc4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,215173,0x7ff7d76e8e84,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,215181,0x7ff7d76e9364,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,215189,0x7ff7d76e96e4,2352,TypedArrayFrom
code-creation,Builtin,2,215197,0x7ff7d76ea024,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,215205,0x7ff7d76ea1a4,1028,TypedArrayOf
code-creation,Builtin,2,215213,0x7ff7d76ea5c4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,215221,0x7ff7d76ea984,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,215229,0x7ff7d76ead44,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,215237,0x7ff7d76eb724,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,215246,0x7ff7d76ec324,992,TypedArrayPrototypeSome
code-creation,Builtin,2,215254,0x7ff7d76ec724,1060,TypedArrayMergeSort
code-creation,Builtin,2,215262,0x7ff7d76ecb64,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,215271,0x7ff7d76ed1c4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,215281,0x7ff7d76edc84,372,TypedArrayPrototypeValues
code-creation,Builtin,2,215290,0x7ff7d76ede04,952,WeakRefConstructor
code-creation,Builtin,2,215299,0x7ff7d76ee1c4,184,WeakRefDeref
code-creation,Builtin,2,215307,0x7ff7d76ee284,680,NewSloppyArgumentsElements
code-creation,Builtin,2,215315,0x7ff7d76ee544,296,NewStrictArgumentsElements
code-creation,Builtin,2,215323,0x7ff7d76ee684,320,NewRestArgumentsElements
code-creation,Builtin,2,215333,0x7ff7d76ee7e4,1388,FastNewSloppyArguments
code-creation,Builtin,2,215341,0x7ff7d76eed64,524,FastNewStrictArguments
code-creation,Builtin,2,215349,0x7ff7d76eef84,556,FastNewRestArguments
code-creation,Builtin,2,215357,0x7ff7d76ef1c4,676,StringSlowFlatten
code-creation,Builtin,2,215365,0x7ff7d76ef484,2068,StringIndexOf
code-creation,Builtin,2,215373,0x7ff7d76efca4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,215381,0x7ff7d76efcc4,20,TestHelperPlus1
code-creation,Builtin,2,215389,0x7ff7d76efce4,20,TestHelperPlus2
code-creation,Builtin,2,215397,0x7ff7d76efd04,96,NewSmiBox
code-creation,Builtin,2,215404,0x7ff7d76efd84,24,ReturnTwoValues
code-creation,Builtin,2,215412,0x7ff7d76efda4,32,Load_FastSmiElements_0
code-creation,Builtin,2,215420,0x7ff7d76efde4,32,Load_FastObjectElements_0
code-creation,Builtin,2,215428,0x7ff7d76efe24,144,Load_FastDoubleElements_0
code-creation,Builtin,2,215437,0x7ff7d76efec4,32,Store_FastSmiElements_0
code-creation,Builtin,2,215445,0x7ff7d76eff04,96,Store_FastObjectElements_0
code-creation,Builtin,2,215453,0x7ff7d76eff84,48,Store_FastDoubleElements_0
code-creation,Builtin,2,215461,0x7ff7d76effc4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,215469,0x7ff7d76f0004,36,Delete_FastObjectElements_0
code-creation,Builtin,2,215478,0x7ff7d76f0044,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,215486,0x7ff7d76f0084,308,SortCompareDefault
code-creation,Builtin,2,215494,0x7ff7d76f01c4,92,SortCompareUserFn
code-creation,Builtin,2,215502,0x7ff7d76f0224,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,215510,0x7ff7d76f0244,312,Copy
code-creation,Builtin,2,215517,0x7ff7d76f0384,5776,MergeAt
code-creation,Builtin,2,215525,0x7ff7d76f1a24,792,GallopLeft
code-creation,Builtin,2,215533,0x7ff7d76f1d44,832,GallopRight
code-creation,Builtin,2,215540,0x7ff7d76f20a4,3832,ArrayTimSort
code-creation,Builtin,2,215548,0x7ff7d76f2fa4,2112,ArrayPrototypeSort
code-creation,Builtin,2,215556,0x7ff7d76f3804,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,215564,0x7ff7d76f3884,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,215572,0x7ff7d76f3904,76,WasmTaggedToFloat64
code-creation,Builtin,2,215580,0x7ff7d76f3964,72,WasmMemoryGrow
code-creation,Builtin,2,215588,0x7ff7d76f39c4,100,WasmTableInit
code-creation,Builtin,2,215595,0x7ff7d76f3a44,100,WasmTableCopy
code-creation,Builtin,2,215603,0x7ff7d76f3ac4,84,WasmTableFill
code-creation,Builtin,2,215611,0x7ff7d76f3b24,72,WasmTableGrow
code-creation,Builtin,2,215618,0x7ff7d76f3b84,144,WasmTableGet
code-creation,Builtin,2,215626,0x7ff7d76f3c24,236,WasmTableSet
code-creation,Builtin,2,215633,0x7ff7d76f3d24,88,WasmRefFunc
code-creation,Builtin,2,215641,0x7ff7d76f3d84,144,WasmAllocateFixedArray
code-creation,Builtin,2,215649,0x7ff7d76f3e24,44,WasmThrow
code-creation,Builtin,2,215656,0x7ff7d76f3e64,52,WasmRethrow
code-creation,Builtin,2,215664,0x7ff7d76f3ea4,44,WasmTriggerTierUp
code-creation,Builtin,2,215672,0x7ff7d76f3ee4,32,WasmStackGuard
code-creation,Builtin,2,215680,0x7ff7d76f3f24,32,WasmStackOverflow
code-creation,Builtin,2,215687,0x7ff7d76f3f64,40,WasmTraceMemory
code-creation,Builtin,2,215695,0x7ff7d76f3fa4,32,WasmTraceEnter
code-creation,Builtin,2,215702,0x7ff7d76f3fe4,40,WasmTraceExit
code-creation,Builtin,2,215710,0x7ff7d76f4024,332,WasmAllocateJSArray
code-creation,Builtin,2,215718,0x7ff7d76f4184,104,WasmAllocatePair
code-creation,Builtin,2,215726,0x7ff7d76f4204,64,WasmAllocateRtt
code-creation,Builtin,2,215734,0x7ff7d76f4264,72,WasmAllocateFreshRtt
code-creation,Builtin,2,215741,0x7ff7d76f42c4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,215751,0x7ff7d76f4344,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,215761,0x7ff7d76f43e4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,215770,0x7ff7d76f44a4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,215778,0x7ff7d76f4564,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,215790,0x7ff7d76f45e4,60,WasmArrayCopy
code-creation,Builtin,2,215798,0x7ff7d76f4624,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,215806,0x7ff7d76f4724,52,WasmSubtypeCheck
code-creation,Builtin,2,215814,0x7ff7d76f4764,8,WasmInt32ToNumber
code-creation,Builtin,2,215822,0x7ff7d76f4784,116,WasmUint32ToNumber
code-creation,Builtin,2,215830,0x7ff7d76f4804,144,UintPtr53ToNumber
code-creation,Builtin,2,215838,0x7ff7d76f48a4,96,WasmAtomicNotify
code-creation,Builtin,2,215846,0x7ff7d76f4924,116,WasmI32AtomicWait64
code-creation,Builtin,2,215854,0x7ff7d76f49a4,116,WasmI64AtomicWait64
code-creation,Builtin,2,215863,0x7ff7d76f4a24,580,WasmGetOwnProperty
code-creation,Builtin,2,215870,0x7ff7d76f4c84,40,WasmTrap
code-creation,Builtin,2,215878,0x7ff7d76f4cc4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,215886,0x7ff7d76f4ce4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,215895,0x7ff7d76f4d04,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,215903,0x7ff7d76f4d24,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,215911,0x7ff7d76f4d44,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,215919,0x7ff7d76f4d64,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,215927,0x7ff7d76f4d84,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,215936,0x7ff7d76f4da4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,215945,0x7ff7d76f4dc4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,215953,0x7ff7d76f4de4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,215962,0x7ff7d76f4e04,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,215970,0x7ff7d76f4e24,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,215978,0x7ff7d76f4e44,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,215986,0x7ff7d76f4e64,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,215994,0x7ff7d76f4e84,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,216003,0x7ff7d76f4ea4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,216011,0x7ff7d76f4ec4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,216020,0x7ff7d76f4f84,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,216029,0x7ff7d76f4fa4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,216037,0x7ff7d76f5024,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,216046,0x7ff7d76f50a4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,216055,0x7ff7d76f50c4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,216064,0x7ff7d76f51a4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,216072,0x7ff7d76f52a4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,216081,0x7ff7d76f52c4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,216089,0x7ff7d76f52e4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,216097,0x7ff7d76f5304,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,216106,0x7ff7d76f5324,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,216115,0x7ff7d76f53c4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,216123,0x7ff7d76f53e4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,216132,0x7ff7d76f5424,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,216141,0x7ff7d76f5464,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,216149,0x7ff7d76f54a4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,216157,0x7ff7d76f5f24,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,216166,0x7ff7d76f5f44,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,216175,0x7ff7d76f5f84,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,216184,0x7ff7d76f5fa4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,216195,0x7ff7d76f6064,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,216204,0x7ff7d76f6124,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,216213,0x7ff7d76f61a4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,216222,0x7ff7d76f61e4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,216231,0x7ff7d76f6284,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,216240,0x7ff7d76f6304,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,216249,0x7ff7d76f6324,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,216258,0x7ff7d76f63c4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,216266,0x7ff7d76f63e4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,216275,0x7ff7d76f6404,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,216284,0x7ff7d76f6684,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,216293,0x7ff7d76f6764,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,216302,0x7ff7d76f67a4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,216311,0x7ff7d76f6884,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,216319,0x7ff7d76f6984,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,216328,0x7ff7d76f69c4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,216337,0x7ff7d76f6aa4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,216345,0x7ff7d76f6ac4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,216354,0x7ff7d76f6ae4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,216363,0x7ff7d76f6ba4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,216371,0x7ff7d76f6bc4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,216380,0x7ff7d76f6be4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,216389,0x7ff7d76f6ca4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,216398,0x7ff7d76f6cc4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,216406,0x7ff7d76f6ce4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,216415,0x7ff7d76f6da4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,216425,0x7ff7d76f6dc4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,216433,0x7ff7d76f6de4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,216486,0x7ff7d76f6ea4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,216495,0x7ff7d76f6f44,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,216504,0x7ff7d76f7004,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,216513,0x7ff7d76f70c4,12,CollatorConstructor
code-creation,Builtin,2,216521,0x7ff7d76f70e4,12,CollatorInternalCompare
code-creation,Builtin,2,216529,0x7ff7d76f7104,12,CollatorPrototypeCompare
code-creation,Builtin,2,216537,0x7ff7d76f7124,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,216545,0x7ff7d76f7144,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,216554,0x7ff7d76f7164,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,216562,0x7ff7d76f7184,12,DatePrototypeToLocaleString
code-creation,Builtin,2,216570,0x7ff7d76f71a4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,216579,0x7ff7d76f71c4,12,DateTimeFormatConstructor
code-creation,Builtin,2,216587,0x7ff7d76f71e4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,216595,0x7ff7d76f7204,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,216603,0x7ff7d76f7224,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,216612,0x7ff7d76f7244,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,216620,0x7ff7d76f7264,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,216629,0x7ff7d76f7284,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,216637,0x7ff7d76f72a4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,216646,0x7ff7d76f72c4,12,DisplayNamesConstructor
code-creation,Builtin,2,216656,0x7ff7d76f72e4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,216665,0x7ff7d76f7304,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,216673,0x7ff7d76f7324,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,216681,0x7ff7d76f7344,12,IntlGetCanonicalLocales
code-creation,Builtin,2,216689,0x7ff7d76f7364,12,ListFormatConstructor
code-creation,Builtin,2,216698,0x7ff7d76f7384,224,ListFormatPrototypeFormat
code-creation,Builtin,2,216705,0x7ff7d76f7484,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,216714,0x7ff7d76f7584,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,216722,0x7ff7d76f75a4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,216731,0x7ff7d76f75c4,12,LocaleConstructor
code-creation,Builtin,2,216738,0x7ff7d76f75e4,12,LocalePrototypeBaseName
code-creation,Builtin,2,216746,0x7ff7d76f7604,12,LocalePrototypeCalendar
code-creation,Builtin,2,216754,0x7ff7d76f7624,12,LocalePrototypeCalendars
code-creation,Builtin,2,216762,0x7ff7d76f7644,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,216771,0x7ff7d76f7664,12,LocalePrototypeCollation
code-creation,Builtin,2,216779,0x7ff7d76f7684,12,LocalePrototypeCollations
code-creation,Builtin,2,216787,0x7ff7d76f76a4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,216796,0x7ff7d76f76c4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,216804,0x7ff7d76f76e4,12,LocalePrototypeLanguage
code-creation,Builtin,2,216812,0x7ff7d76f7704,12,LocalePrototypeMaximize
code-creation,Builtin,2,216820,0x7ff7d76f7724,12,LocalePrototypeMinimize
code-creation,Builtin,2,216828,0x7ff7d76f7744,12,LocalePrototypeNumeric
code-creation,Builtin,2,216836,0x7ff7d76f7764,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,216844,0x7ff7d76f7784,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,216852,0x7ff7d76f77a4,12,LocalePrototypeRegion
code-creation,Builtin,2,216860,0x7ff7d76f77c4,12,LocalePrototypeScript
code-creation,Builtin,2,216869,0x7ff7d76f77e4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,216878,0x7ff7d76f7804,12,LocalePrototypeTimeZones
code-creation,Builtin,2,216886,0x7ff7d76f7824,12,LocalePrototypeToString
code-creation,Builtin,2,216895,0x7ff7d76f7844,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,216904,0x7ff7d76f7864,12,NumberFormatConstructor
code-creation,Builtin,2,216912,0x7ff7d76f7884,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,216921,0x7ff7d76f78a4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,216930,0x7ff7d76f78c4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,216939,0x7ff7d76f78e4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,216948,0x7ff7d76f7904,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,216957,0x7ff7d76f7924,12,PluralRulesConstructor
code-creation,Builtin,2,216966,0x7ff7d76f7944,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,216974,0x7ff7d76f7964,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,216983,0x7ff7d76f7984,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,216992,0x7ff7d76f79a4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,217001,0x7ff7d76f79c4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,217009,0x7ff7d76f79e4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,217018,0x7ff7d76f7a04,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,217028,0x7ff7d76f7a24,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,217036,0x7ff7d76f7a44,12,SegmenterConstructor
code-creation,Builtin,2,217045,0x7ff7d76f7a64,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,217054,0x7ff7d76f7a84,12,SegmenterPrototypeSegment
code-creation,Builtin,2,217063,0x7ff7d76f7aa4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,217072,0x7ff7d76f7ac4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,217081,0x7ff7d76f7ae4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,217089,0x7ff7d76f7b04,12,SegmentsPrototypeIterator
code-creation,Builtin,2,217098,0x7ff7d76f7b24,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,217109,0x7ff7d76f7b44,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,217118,0x7ff7d76f7b64,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,217127,0x7ff7d76f7b84,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,217136,0x7ff7d76f7c64,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,217144,0x7ff7d76f7c84,636,StringToLowerCaseIntl
code-creation,Builtin,2,217153,0x7ff7d76f7f04,12,V8BreakIteratorConstructor
code-creation,Builtin,2,217162,0x7ff7d76f7f24,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,217171,0x7ff7d76f7f44,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,217179,0x7ff7d76f7f64,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,217188,0x7ff7d76f7f84,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,217196,0x7ff7d76f7fa4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,217204,0x7ff7d76f7fc4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,217213,0x7ff7d76f7fe4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,217222,0x7ff7d76f8004,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,217230,0x7ff7d76f8024,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,217238,0x7ff7d76f8044,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,217247,0x7ff7d76f8064,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,217256,0x7ff7d76f8084,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,217265,0x7ff7d76f80a4,24,Wide
code-creation,BytecodeHandler,0,217273,0x7ff7d76f80c4,24,ExtraWide
code-creation,BytecodeHandler,0,217281,0x7ff7d76f80e4,104,DebugBreakWide
code-creation,BytecodeHandler,0,217289,0x7ff7d76f8164,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,217298,0x7ff7d76f81e4,164,DebugBreak0
code-creation,BytecodeHandler,0,217306,0x7ff7d76f82a4,104,DebugBreak1
code-creation,BytecodeHandler,0,217314,0x7ff7d76f8324,104,DebugBreak2
code-creation,BytecodeHandler,0,217322,0x7ff7d76f83a4,104,DebugBreak3
code-creation,BytecodeHandler,0,217330,0x7ff7d76f8424,104,DebugBreak4
code-creation,BytecodeHandler,0,217338,0x7ff7d76f84a4,104,DebugBreak5
code-creation,BytecodeHandler,0,217346,0x7ff7d76f8524,104,DebugBreak6
code-creation,BytecodeHandler,0,217355,0x7ff7d76f85a4,32,Ldar
code-creation,BytecodeHandler,0,217362,0x7ff7d76f85e4,68,LdaZero
code-creation,BytecodeHandler,0,217370,0x7ff7d76f8644,76,LdaSmi
code-creation,BytecodeHandler,0,217378,0x7ff7d76f86a4,68,LdaUndefined
code-creation,BytecodeHandler,0,217386,0x7ff7d76f8704,68,LdaNull
code-creation,BytecodeHandler,0,217394,0x7ff7d76f8764,68,LdaTheHole
code-creation,BytecodeHandler,0,217402,0x7ff7d76f87c4,20,LdaTrue
code-creation,BytecodeHandler,0,217410,0x7ff7d76f87e4,20,LdaFalse
code-creation,BytecodeHandler,0,217418,0x7ff7d76f8804,76,LdaConstant
code-creation,BytecodeHandler,0,217426,0x7ff7d76f8864,132,LdaContextSlot
code-creation,BytecodeHandler,0,217434,0x7ff7d76f8904,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,217443,0x7ff7d76f89a4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,217451,0x7ff7d76f8a04,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,217460,0x7ff7d76f8a64,32,Star
code-creation,BytecodeHandler,0,217468,0x7ff7d76f8aa4,40,Mov
code-creation,BytecodeHandler,0,217475,0x7ff7d76f8ae4,40,PushContext
code-creation,BytecodeHandler,0,217483,0x7ff7d76f8b24,36,PopContext
code-creation,BytecodeHandler,0,217492,0x7ff7d76f8b64,48,TestReferenceEqual
code-creation,BytecodeHandler,0,217500,0x7ff7d76f8ba4,52,TestUndetectable
code-creation,BytecodeHandler,0,217508,0x7ff7d76f8be4,36,TestNull
code-creation,BytecodeHandler,0,217516,0x7ff7d76f8c24,36,TestUndefined
code-creation,BytecodeHandler,0,217525,0x7ff7d76f8c64,336,TestTypeOf
code-creation,BytecodeHandler,0,217532,0x7ff7d76f8dc4,6036,LdaGlobal
code-creation,BytecodeHandler,0,217541,0x7ff7d76fa564,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,217550,0x7ff7d76fb724,168,StaGlobal
code-creation,BytecodeHandler,0,217558,0x7ff7d76fb7e4,160,StaContextSlot
code-creation,BytecodeHandler,0,217566,0x7ff7d76fb8a4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,217577,0x7ff7d76fb924,124,LdaLookupSlot
code-creation,BytecodeHandler,0,217587,0x7ff7d76fb9a4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,217595,0x7ff7d76fbaa4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,217604,0x7ff7d76fcd64,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,217614,0x7ff7d76fcde4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,217623,0x7ff7d76fcee4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,217632,0x7ff7d76fe184,220,StaLookupSlot
code-creation,BytecodeHandler,0,217640,0x7ff7d76fe264,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,217648,0x7ff7d76ff6e4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,217657,0x7ff7d76ff7a4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,217665,0x7ff7d76ff884,160,LdaModuleVariable
code-creation,BytecodeHandler,0,217673,0x7ff7d76ff944,292,StaModuleVariable
code-creation,BytecodeHandler,0,217682,0x7ff7d76ffa84,172,StaNamedProperty
code-creation,BytecodeHandler,0,217690,0x7ff7d76ffb44,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,217699,0x7ff7d76ffc04,164,StaKeyedProperty
code-creation,BytecodeHandler,0,217707,0x7ff7d76ffcc4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,217715,0x7ff7d76ffd84,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,217726,0x7ff7d76ffe64,160,CollectTypeProfile
code-creation,BytecodeHandler,0,217734,0x7ff7d76fff24,1028,Add
code-creation,BytecodeHandler,0,217742,0x7ff7d7700344,1064,Sub
code-creation,BytecodeHandler,0,217750,0x7ff7d7700784,1024,Mul
code-creation,BytecodeHandler,0,217758,0x7ff7d7700ba4,988,Div
code-creation,BytecodeHandler,0,217768,0x7ff7d7700f84,912,Mod
code-creation,BytecodeHandler,0,217775,0x7ff7d7701324,964,Exp
code-creation,BytecodeHandler,0,217783,0x7ff7d7701704,876,BitwiseOr
code-creation,BytecodeHandler,0,217792,0x7ff7d7701a84,888,BitwiseXor
code-creation,BytecodeHandler,0,217800,0x7ff7d7701e04,888,BitwiseAnd
code-creation,BytecodeHandler,0,217808,0x7ff7d7702184,900,ShiftLeft
code-creation,BytecodeHandler,0,217817,0x7ff7d7702524,900,ShiftRight
code-creation,BytecodeHandler,0,217825,0x7ff7d77028c4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,217833,0x7ff7d7702cc4,960,AddSmi
code-creation,BytecodeHandler,0,217841,0x7ff7d77030a4,1000,SubSmi
code-creation,BytecodeHandler,0,217849,0x7ff7d77034a4,916,MulSmi
code-creation,BytecodeHandler,0,217857,0x7ff7d7703844,920,DivSmi
code-creation,BytecodeHandler,0,217865,0x7ff7d7703be4,816,ModSmi
code-creation,BytecodeHandler,0,217873,0x7ff7d7703f24,872,ExpSmi
code-creation,BytecodeHandler,0,217881,0x7ff7d77042a4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,217889,0x7ff7d77044a4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,217897,0x7ff7d77046a4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,217905,0x7ff7d77048a4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,217913,0x7ff7d7704aa4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,217921,0x7ff7d7704ca4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,217929,0x7ff7d7704f44,656,Inc
code-creation,BytecodeHandler,0,217937,0x7ff7d77051e4,656,Dec
code-creation,BytecodeHandler,0,217944,0x7ff7d7705484,640,Negate
code-creation,BytecodeHandler,0,217953,0x7ff7d7705724,480,BitwiseNot
code-creation,BytecodeHandler,0,217961,0x7ff7d7705924,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,217969,0x7ff7d77059a4,36,LogicalNot
code-creation,BytecodeHandler,0,217976,0x7ff7d77059e4,208,TypeOf
code-creation,BytecodeHandler,0,217984,0x7ff7d7705ac4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,217993,0x7ff7d7705b44,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,218001,0x7ff7d7705bc4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,218010,0x7ff7d7705c04,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,218018,0x7ff7d7706084,1132,CallProperty
code-creation,BytecodeHandler,0,218026,0x7ff7d7706504,1012,CallProperty0
code-creation,BytecodeHandler,0,218035,0x7ff7d7706904,1028,CallProperty1
code-creation,BytecodeHandler,0,218045,0x7ff7d7706d24,1040,CallProperty2
code-creation,BytecodeHandler,0,218054,0x7ff7d7707144,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,218063,0x7ff7d7707544,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,218071,0x7ff7d7707964,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,218079,0x7ff7d7707d64,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,218088,0x7ff7d7708184,1132,CallWithSpread
code-creation,BytecodeHandler,0,218096,0x7ff7d7708604,124,CallRuntime
code-creation,BytecodeHandler,0,218104,0x7ff7d7708684,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,218113,0x7ff7d7708724,80,CallJSRuntime
code-creation,BytecodeHandler,0,218122,0x7ff7d7708784,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,218130,0x7ff7d7708c64,1020,Construct
code-creation,BytecodeHandler,0,218137,0x7ff7d7709064,536,ConstructWithSpread
code-creation,BytecodeHandler,0,218146,0x7ff7d7709284,1936,TestEqual
code-creation,BytecodeHandler,0,218154,0x7ff7d7709a24,1064,TestEqualStrict
code-creation,BytecodeHandler,0,218162,0x7ff7d7709e64,1624,TestLessThan
code-creation,BytecodeHandler,0,218170,0x7ff7d770a4c4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,218179,0x7ff7d770ab24,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,218187,0x7ff7d770b184,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,218196,0x7ff7d770b7e4,860,TestInstanceOf
code-creation,BytecodeHandler,0,218204,0x7ff7d770bb44,156,TestIn
code-creation,BytecodeHandler,0,218212,0x7ff7d770bbe4,112,ToName
code-creation,BytecodeHandler,0,218220,0x7ff7d770bc64,212,ToNumber
code-creation,BytecodeHandler,0,218228,0x7ff7d770bd44,232,ToNumeric
code-creation,BytecodeHandler,0,218236,0x7ff7d770be44,112,ToObject
code-creation,BytecodeHandler,0,218244,0x7ff7d770bec4,116,ToString
code-creation,BytecodeHandler,0,218252,0x7ff7d770bf44,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,218261,0x7ff7d770c0e4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,218269,0x7ff7d770c6a4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,218278,0x7ff7d770c704,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,218286,0x7ff7d770ca24,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,218295,0x7ff7d770d284,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,218303,0x7ff7d770d384,168,CloneObject
code-creation,BytecodeHandler,0,218312,0x7ff7d770d444,212,GetTemplateObject
code-creation,BytecodeHandler,0,218320,0x7ff7d770d524,328,CreateClosure
code-creation,BytecodeHandler,0,218328,0x7ff7d770d684,120,CreateBlockContext
code-creation,BytecodeHandler,0,218337,0x7ff7d770d704,132,CreateCatchContext
code-creation,BytecodeHandler,0,218344,0x7ff7d770d7a4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,218353,0x7ff7d770d8c4,256,CreateEvalContext
code-creation,BytecodeHandler,0,218362,0x7ff7d770d9e4,132,CreateWithContext
code-creation,BytecodeHandler,0,218370,0x7ff7d770da84,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,218379,0x7ff7d770e0c4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,218387,0x7ff7d770e324,632,CreateRestParameter
code-creation,BytecodeHandler,0,218395,0x7ff7d770e5a4,424,JumpLoop
code-creation,BytecodeHandler,0,218403,0x7ff7d770e764,44,Jump
code-creation,BytecodeHandler,0,218411,0x7ff7d770e7a4,56,JumpConstant
code-creation,BytecodeHandler,0,218419,0x7ff7d770e7e4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,218427,0x7ff7d770e844,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,218436,0x7ff7d770e8a4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,218445,0x7ff7d770e904,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,218453,0x7ff7d770e964,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,218462,0x7ff7d770e9c4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,218470,0x7ff7d770ea24,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,218479,0x7ff7d770ea84,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,218488,0x7ff7d770eae4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,218498,0x7ff7d770eb84,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,218508,0x7ff7d770ec24,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,218516,0x7ff7d770ecc4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,218525,0x7ff7d770ed64,64,JumpIfTrue
code-creation,BytecodeHandler,0,218533,0x7ff7d770edc4,64,JumpIfFalse
code-creation,BytecodeHandler,0,218540,0x7ff7d770ee24,64,JumpIfNull
code-creation,BytecodeHandler,0,218549,0x7ff7d770ee84,64,JumpIfNotNull
code-creation,BytecodeHandler,0,218557,0x7ff7d770eee4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,218565,0x7ff7d770ef44,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,218573,0x7ff7d770efa4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,218581,0x7ff7d770f004,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,218590,0x7ff7d770f064,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,218598,0x7ff7d770f0e4,464,ForInEnumerate
code-creation,BytecodeHandler,0,218606,0x7ff7d770f2c4,252,ForInPrepare
code-creation,BytecodeHandler,0,218615,0x7ff7d770f3c4,60,ForInContinue
code-creation,BytecodeHandler,0,218623,0x7ff7d770f404,256,ForInNext
code-creation,BytecodeHandler,0,218631,0x7ff7d770f524,48,ForInStep
code-creation,BytecodeHandler,0,218640,0x7ff7d770f564,36,SetPendingMessage
code-creation,BytecodeHandler,0,218648,0x7ff7d770f5a4,116,Throw
code-creation,BytecodeHandler,0,218656,0x7ff7d770f624,116,ReThrow
code-creation,BytecodeHandler,0,218664,0x7ff7d770f6a4,112,Return
code-creation,BytecodeHandler,0,218672,0x7ff7d770f724,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,218681,0x7ff7d770f804,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,218690,0x7ff7d770f8a4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,218700,0x7ff7d770f944,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,218708,0x7ff7d770f9e4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,218717,0x7ff7d770fa64,512,SuspendGenerator
code-creation,BytecodeHandler,0,218725,0x7ff7d770fc84,128,ResumeGenerator
code-creation,BytecodeHandler,0,218734,0x7ff7d770fd24,152,GetIterator
code-creation,BytecodeHandler,0,218742,0x7ff7d770fdc4,116,Debugger
code-creation,BytecodeHandler,0,218750,0x7ff7d770fe44,124,IncBlockCounter
code-creation,BytecodeHandler,0,218758,0x7ff7d770fec4,56,Abort
code-creation,BytecodeHandler,0,218767,0x7ff7d770ff04,32,Star0
code-creation,BytecodeHandler,0,218774,0x7ff7d770ff44,60,Illegal
code-creation,BytecodeHandler,0,218782,0x7ff7d770ff84,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,218791,0x7ff7d7710004,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,218798,0x7ff7d7710084,108,DebugBreak3.Wide
tick,0x7ffad1f6ce74,218847,0,0x0,6
code-creation,BytecodeHandler,0,218878,0x7ff7d7710104,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,218898,0x7ff7d7710184,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,218908,0x7ff7d7710204,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,218917,0x7ff7d7710284,32,Ldar.Wide
code-creation,BytecodeHandler,0,218925,0x7ff7d77102c4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,218933,0x7ff7d7710304,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,218942,0x7ff7d7710344,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,218951,0x7ff7d77103a4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,218961,0x7ff7d7710404,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,218970,0x7ff7d7710444,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,218980,0x7ff7d7710484,32,Star.Wide
code-creation,BytecodeHandler,0,218988,0x7ff7d77104c4,40,Mov.Wide
code-creation,BytecodeHandler,0,218997,0x7ff7d7710504,40,PushContext.Wide
code-creation,BytecodeHandler,0,219005,0x7ff7d7710544,36,PopContext.Wide
code-creation,BytecodeHandler,0,219014,0x7ff7d7710584,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,219023,0x7ff7d77105c4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,219031,0x7ff7d7711804,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,219039,0x7ff7d7712a04,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,219053,0x7ff7d7712ac4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,219063,0x7ff7d7712b84,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,219073,0x7ff7d7712c04,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,219082,0x7ff7d7712ca4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,219092,0x7ff7d7712da4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,219102,0x7ff7d77140a4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,219111,0x7ff7d7714144,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,219121,0x7ff7d7714244,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,219131,0x7ff7d7715524,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,219140,0x7ff7d7715604,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,219149,0x7ff7d7716a84,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,219158,0x7ff7d7716b44,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,219167,0x7ff7d7716c04,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,219176,0x7ff7d7716cc4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,219185,0x7ff7d7716e04,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,219194,0x7ff7d7716ec4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,219203,0x7ff7d7716f84,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,219212,0x7ff7d7717044,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,219221,0x7ff7d7717104,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,219230,0x7ff7d77171e4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,219239,0x7ff7d77172a4,984,Add.Wide
code-creation,BytecodeHandler,0,219247,0x7ff7d7717684,1020,Sub.Wide
code-creation,BytecodeHandler,0,219256,0x7ff7d7717a84,972,Mul.Wide
code-creation,BytecodeHandler,0,219264,0x7ff7d7717e64,988,Div.Wide
code-creation,BytecodeHandler,0,219272,0x7ff7d7718244,916,Mod.Wide
code-creation,BytecodeHandler,0,219281,0x7ff7d77185e4,988,Exp.Wide
code-creation,BytecodeHandler,0,219289,0x7ff7d77189c4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,219298,0x7ff7d7718d64,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,219307,0x7ff7d7719104,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,219315,0x7ff7d77194a4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,219324,0x7ff7d7719864,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,219333,0x7ff7d7719c24,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,219342,0x7ff7d771a044,916,AddSmi.Wide
code-creation,BytecodeHandler,0,219350,0x7ff7d771a3e4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,219359,0x7ff7d771a7c4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,219367,0x7ff7d771ab64,920,DivSmi.Wide
code-creation,BytecodeHandler,0,219376,0x7ff7d771af04,816,ModSmi.Wide
code-creation,BytecodeHandler,0,219385,0x7ff7d771b244,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,219393,0x7ff7d771b5c4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,219402,0x7ff7d771b7c4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,219411,0x7ff7d771b9c4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,219420,0x7ff7d771bbc4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,219428,0x7ff7d771bdc4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,219437,0x7ff7d771bfc4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,219446,0x7ff7d771c264,616,Inc.Wide
code-creation,BytecodeHandler,0,219454,0x7ff7d771c4e4,616,Dec.Wide
code-creation,BytecodeHandler,0,219462,0x7ff7d771c764,648,Negate.Wide
code-creation,BytecodeHandler,0,219471,0x7ff7d771ca04,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,219480,0x7ff7d771cc04,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,219489,0x7ff7d771cc84,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,219498,0x7ff7d771cd04,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,219507,0x7ff7d771cd44,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,219516,0x7ff7d771d1c4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,219527,0x7ff7d771d644,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,219537,0x7ff7d771da44,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,219545,0x7ff7d771de64,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,219554,0x7ff7d771e284,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,219563,0x7ff7d771e684,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,219573,0x7ff7d771eaa4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,219581,0x7ff7d771eec4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,219590,0x7ff7d771f2e4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,219599,0x7ff7d771f764,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,219608,0x7ff7d771f804,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,219616,0x7ff7d771f8c4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,219625,0x7ff7d771f924,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,219633,0x7ff7d771fe04,968,Construct.Wide
code-creation,BytecodeHandler,0,219641,0x7ff7d77201e4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,219650,0x7ff7d77203c4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,219658,0x7ff7d7720b84,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,219667,0x7ff7d7720fc4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,219675,0x7ff7d77215c4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,219683,0x7ff7d7721bc4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,219692,0x7ff7d77221c4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,219701,0x7ff7d77227c4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,219709,0x7ff7d7722b44,160,TestIn.Wide
code-creation,BytecodeHandler,0,219717,0x7ff7d7722c04,116,ToName.Wide
code-creation,BytecodeHandler,0,219725,0x7ff7d7722c84,216,ToNumber.Wide
code-creation,BytecodeHandler,0,219733,0x7ff7d7722d64,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,219742,0x7ff7d7722e64,116,ToObject.Wide
code-creation,BytecodeHandler,0,219750,0x7ff7d7722ee4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,219758,0x7ff7d7723084,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,219767,0x7ff7d7723604,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,219789,0x7ff7d7723924,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,219800,0x7ff7d7724124,172,CloneObject.Wide
code-creation,BytecodeHandler,0,219809,0x7ff7d77241e4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,219817,0x7ff7d77242a4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,219826,0x7ff7d7724404,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,219835,0x7ff7d7724484,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,219844,0x7ff7d7724524,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,219853,0x7ff7d7724644,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,219862,0x7ff7d7724764,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,219871,0x7ff7d7724804,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,219880,0x7ff7d77249c4,44,Jump.Wide
code-creation,BytecodeHandler,0,219888,0x7ff7d7724a04,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,219896,0x7ff7d7724a44,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,219905,0x7ff7d7724aa4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,219915,0x7ff7d7724b04,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,219924,0x7ff7d7724b64,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,219933,0x7ff7d7724bc4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,219943,0x7ff7d7724c24,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,219952,0x7ff7d7724c84,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,219960,0x7ff7d7724ce4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,219970,0x7ff7d7724d44,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,219980,0x7ff7d7724de4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,219993,0x7ff7d7724e84,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,220003,0x7ff7d7724f24,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,220013,0x7ff7d7724fc4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,220022,0x7ff7d7725024,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,220030,0x7ff7d7725084,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,220039,0x7ff7d77250e4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,220048,0x7ff7d7725144,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,220056,0x7ff7d77251a4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,220065,0x7ff7d7725204,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,220075,0x7ff7d7725264,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,220083,0x7ff7d77252c4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,220093,0x7ff7d7725344,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,220102,0x7ff7d7725524,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,220110,0x7ff7d7725624,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,220119,0x7ff7d7725664,260,ForInNext.Wide
code-creation,BytecodeHandler,0,220128,0x7ff7d7725784,48,ForInStep.Wide
code-creation,BytecodeHandler,0,220136,0x7ff7d77257c4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,220144,0x7ff7d7725864,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,220153,0x7ff7d7725924,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,220162,0x7ff7d77259a4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,220170,0x7ff7d7725bc4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,220179,0x7ff7d7725c64,156,GetIterator.Wide
code-creation,BytecodeHandler,0,220187,0x7ff7d7725d04,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,220195,0x7ff7d7725da4,56,Abort.Wide
code-creation,BytecodeHandler,0,220203,0x7ff7d7725de4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,220212,0x7ff7d7725e64,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,220220,0x7ff7d7725ee4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,220229,0x7ff7d7725f64,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,220237,0x7ff7d7725fe4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,220246,0x7ff7d7726064,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,220254,0x7ff7d77260e4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,220262,0x7ff7d7726124,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,220271,0x7ff7d7726144,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,220279,0x7ff7d7726184,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220288,0x7ff7d77261e4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220297,0x7ff7d7726244,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220306,0x7ff7d7726284,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220315,0x7ff7d77262c4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,220323,0x7ff7d77262e4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,220331,0x7ff7d7726324,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,220340,0x7ff7d7726364,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,220348,0x7ff7d77263a4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,220358,0x7ff7d77263e4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,220367,0x7ff7d7727624,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,220377,0x7ff7d7728824,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,220387,0x7ff7d77288e4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220396,0x7ff7d7728984,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220406,0x7ff7d7728a04,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,220415,0x7ff7d7728aa4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,220424,0x7ff7d7728ba4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,220433,0x7ff7d7729ea4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,220444,0x7ff7d7729f44,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,220454,0x7ff7d772a044,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,220463,0x7ff7d772b324,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,220472,0x7ff7d772b404,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,220480,0x7ff7d772c864,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,220489,0x7ff7d772c924,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,220498,0x7ff7d772c9c4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,220506,0x7ff7d772ca84,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,220515,0x7ff7d772cbc4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,220523,0x7ff7d772cc84,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,220532,0x7ff7d772cd44,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,220541,0x7ff7d772ce04,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,220549,0x7ff7d772cec4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,220558,0x7ff7d772cfa4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,220567,0x7ff7d772d064,980,Add.ExtraWide
code-creation,BytecodeHandler,0,220574,0x7ff7d772d444,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,220582,0x7ff7d772d844,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,220590,0x7ff7d772dc24,988,Div.ExtraWide
code-creation,BytecodeHandler,0,220598,0x7ff7d772e004,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,220606,0x7ff7d772e3a4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,220615,0x7ff7d772e784,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,220623,0x7ff7d772eb24,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,220631,0x7ff7d772eec4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,220639,0x7ff7d772f264,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,220648,0x7ff7d772f624,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,220656,0x7ff7d772f9e4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,220665,0x7ff7d772fe04,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,220673,0x7ff7d77301a4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,220681,0x7ff7d7730584,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,220690,0x7ff7d7730924,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,220698,0x7ff7d7730cc4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,220705,0x7ff7d7731004,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,220713,0x7ff7d7731384,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,220722,0x7ff7d7731584,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,220730,0x7ff7d7731784,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,220738,0x7ff7d7731984,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,220747,0x7ff7d7731b84,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,220755,0x7ff7d7731d84,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,220764,0x7ff7d7732024,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,220773,0x7ff7d77322a4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,220782,0x7ff7d7732524,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,220790,0x7ff7d77327c4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,220798,0x7ff7d77329c4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,220807,0x7ff7d7732a44,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,220816,0x7ff7d7732ac4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,220824,0x7ff7d7732b04,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,220833,0x7ff7d7732f84,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,220842,0x7ff7d7733404,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,220850,0x7ff7d7733804,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,220859,0x7ff7d7733c24,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,220869,0x7ff7d7734044,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,220880,0x7ff7d7734444,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,220889,0x7ff7d7734864,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,220899,0x7ff7d7734c64,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,220908,0x7ff7d7735084,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,220917,0x7ff7d7735504,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,220925,0x7ff7d77355a4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,220934,0x7ff7d7735664,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,220942,0x7ff7d77356c4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,220951,0x7ff7d7735ba4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,220959,0x7ff7d7735f84,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,220968,0x7ff7d7736164,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,220977,0x7ff7d7736924,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,220985,0x7ff7d7736d64,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,220994,0x7ff7d7737364,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,221003,0x7ff7d7737964,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,221012,0x7ff7d7737f64,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,221020,0x7ff7d7738564,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,221029,0x7ff7d77388e4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,221037,0x7ff7d7738984,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,221046,0x7ff7d7738a04,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,221054,0x7ff7d7738ae4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,221063,0x7ff7d7738be4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,221071,0x7ff7d7738c64,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,221080,0x7ff7d7738e04,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,221089,0x7ff7d7739384,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,221099,0x7ff7d77396a4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,221108,0x7ff7d7739ea4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,221117,0x7ff7d7739f64,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,221126,0x7ff7d773a024,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,221135,0x7ff7d773a184,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,221143,0x7ff7d773a204,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,221152,0x7ff7d773a2a4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,221161,0x7ff7d773a3c4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,221170,0x7ff7d773a4e4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,221179,0x7ff7d773a584,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,221187,0x7ff7d773a744,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,221196,0x7ff7d773a784,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,221204,0x7ff7d773a7c4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,221214,0x7ff7d773a824,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,221223,0x7ff7d773a884,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,221232,0x7ff7d773a8e4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,221242,0x7ff7d773a944,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,221251,0x7ff7d773a9a4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,221260,0x7ff7d773aa04,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,221269,0x7ff7d773aa64,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,221279,0x7ff7d773aac4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,221288,0x7ff7d773ab64,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,221360,0x7ff7d773ac04,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,221371,0x7ff7d773aca4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,221380,0x7ff7d773ad44,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,221389,0x7ff7d773ada4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,221398,0x7ff7d773ae04,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,221406,0x7ff7d773ae64,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,221415,0x7ff7d773aec4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,221423,0x7ff7d773af24,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,221432,0x7ff7d773af84,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,221441,0x7ff7d773afe4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,221450,0x7ff7d773b044,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,221459,0x7ff7d773b0c4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,221469,0x7ff7d773b2a4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,221477,0x7ff7d773b3a4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,221486,0x7ff7d773b3e4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,221495,0x7ff7d773b504,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,221504,0x7ff7d773b544,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,221513,0x7ff7d773b5e4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,221522,0x7ff7d773b6a4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,221531,0x7ff7d773b724,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,221540,0x7ff7d773b944,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,221549,0x7ff7d773b9c4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,221558,0x7ff7d773ba64,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,221567,0x7ff7d773bae4,56,Abort.ExtraWide
new,MemoryChunk,0x1313c080000,262144
new,MemoryChunk,0x25b7de40000,262144
new,MemoryChunk,0x1a1d8fc0000,262144
new,MemoryChunk,0x151cf840000,262144
new,MemoryChunk,0x3e220040000,262144
code-creation,Eval,10,228008,0x3e220041fce,5, node:internal/main/run_main_module:1:1,0x3e220041e88,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x3e220041fce,95,0,649,C0O0C4O649,,
code-creation,Function,10,228087,0x3e220042076,58, node:internal/main/run_main_module:1:1,0x3e220041f48,~
code-source-info,0x3e220042076,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,228410,0x3e2200422b6,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3cd9f30fdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x3e2200422b6,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,229306,0x3e220042fc6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3cd9f30fcf0,~
code-source-info,0x3e220042fc6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,229835,0x3e220043f9e,5, node:internal/bootstrap/pre_execution:1:1,0x3e220043ba8,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x3e220043f9e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,230867,0x3e220044bce,497, node:internal/bootstrap/pre_execution:1:1,0x3e220043f18,~
code-source-info,0x3e220044bce,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,231240,0x3e220046496,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x3e220043fd0,~
code-source-info,0x3e
code-creation,LazyCompile,10,231393,0x3e2200478a6,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x10e5cc8bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x3e2200478a6,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,233421,0x3e22004a0de,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x3e220044020,~
code-source-info,0x3e22004a0de
code-creation,LazyCompile,10,233546,0x3e22004a40e,69,internalBinding node:internal/bootstrap/loaders:164:45,0x3cd9f30f840,~
code-source-info,0x3e22004a40e,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,233705,0x3e22004a6c6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x10e5cc98598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x3e22004a6c6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,234745,0x3e22004b786,832,resolve node:path:158:10,0x8a0fdcd510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x3e22004b
tick,0x7ff7d6ba08f8,237860,0,0x0,3,0x7ff7d71d44c0,0x3e22004a1a0,0x3e2200464ab,0x3e220042085
code-creation,LazyCompile,10,237990,0x3e22004ed9e,30,validateString node:internal/validators:118:24,0x3cd9f33ce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x3e22004ed9e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,238539,0x3e22004f73e,17,isPathSeparator node:path:52:25,0x8a0fdccf90,~
code-source-info,0x3e22004f73e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,238592,0x3e22004f83e,35,isWindowsDeviceRoot node:path:60:29,0x8a0fdcd408,~
code-source-info,0x3e22004f83e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,238660,0x3e22004f95e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3cd9f33eee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x3e22004f95e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,239067,0x3e22004ffc6,442,normalizeString node:path:66:25,0x8a0fdcd458,~
code-source-info,0x3e22004ffc
code-creation,LazyCompile,10,239269,0x3e2200506e6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x3e220044070,~
code-source-info,0x3e2200506e6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,239338,0x3e220050886,82,getOptionValue node:internal/options:39:24,0x5c9bbbdb40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x3e220050886,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,239511,0x3e220050c36,33,getCLIOptionsFromBinding node:internal/options:18:34,0x5c9bbbd848,~
code-source-info,0x3e220050c36,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,240033,0x3e220050db6,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x3e2200443e0,~
code-source-info,0x3e220050db6,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,240109,0x3e220050f4e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x10e5cc98cb8,~
code-source-info,0x3e220050f4e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,240165,0x3e2200510fe,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x3e220044430,~
code-source-info,0x3e2200510fe,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,240228,0x3e22005127e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x1e6c46eb218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3e22005127e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,240582,0x3e2200519a6,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x8a0fde2118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3e2200519a6,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,240696,0x3e220051c16,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x3e220044480,~
code-source-info,0x3e220051c16,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,240903,0x3e220051fc6,5, node:internal/inspector_async_hook:1:1,0x3e220051e10,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x3e220051fc6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,241064,0x3e2200521e6,79, node:internal/inspector_async_hook:1:1,0x3e220051f40,~
code-source-info,0x3e2200521e6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,241221,0x3e22005284e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x3e2200440c0,~
code-source-info,0x3e22005284e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,241375,0x3e2200529ae,20,addListener node:events:618:58,0x34b3cc6ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x3e2200529ae,23,18854,18928,C0O18876C14O18883C19O18925,,
code-creation,LazyCompile,10,243443,0x3e220055076,378,_addListener node:events:555:22,0x34b3cc6b998,~
code-source-info,0x3e
code-creation,LazyCompile,10,243552,0x3e220055386,15,checkListener node:events:258:23,0x34b3cc6b2f8,~
code-source-info,0x3e220055386,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,243597,0x3e220055476,30, node:internal/validators:236:42,0x3cd9f33d308,~
code-source-info,0x3e220055476,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,243749,0x3e2200556f6,380,emit node:events:475:44,0x34b3cc6b8d8,~
code-source-info,0x3e2200556f
code-creation,LazyCompile,10,243915,0x3e220055a9e,172,startListeningIfSignal node:internal/process/signal:22:32,0x3cd9f33dca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x3e220055a9e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,244068,0x3e220055e5e,19,isSignal node:internal/process/signal:17:18,0x3cd9f33daf0,~
code-source-info,0x3e220055e5e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,244141,0x3e220056096,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x3e220044110,~
code-source-info,0x3e220056096,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x22380080000,262144
code-creation,Function,11,244315,0x22380083060,572,getOptionValue node:internal/options:39:24,0x5c9bbbdb40,^
code-source-info,0x22380083060,91,940,1190,,,
code-creation,Function,11,244351,0x22380083300,216,isPathSeparator node:path:52:25,0x8a0fdccf90,^
code-source-info,0x22380083300,41,1794,1876,,,
code-creation,Function,11,244421,0x22380083440,3076,normalizeString node:path:66:25,0x8a0fdcd458,^
code-source-info,0x22380083440,41,2226,4212,,,
code-creation,LazyCompile,10,244532,0x3e2200568a6,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x3e220044160,~
code-source-info,0x3e2200568a6,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,244640,0x3e220056b26,5,get node:internal/bootstrap/node:135:6,0x3cd9f314a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x3e220056b26,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,245630,0x3e220057c96,52,get node:internal/bootstrap/node:112:6,0x3cd9f314988,~
code-source-info,0x3e220057c96,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,245738,0x3e220057ebe,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x3e2200442f0,~
code-source-info,0x3e220057ebe,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,245859,0x3e2200582f6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x34b3cc619f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x3e2200582f6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,246121,0x3e2200588fe,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x3e220044228,~
code-source-info,0x3e2200588fe,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,246185,0x3e220058b16,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x3e220044278,~
code-source-info,0x3e220058b16,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,246414,0x3e2200590c6,5, node:internal/process/report:1:1,0x3e220058ed0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x3e2200590c6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,246613,0x3e220059bd6,306, node:internal/process/report:1:1,0x3e220059040,~
code-source-info,0x3e220059bd6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,246900,0x3e22005ba8e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x3e220044340,~
code-source-info,0x3e22005ba8e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,246966,0x3e22005bb96,57,addSignalHandler node:internal/process/report:98:26,0x3e2200590f8,~
code-source-info,0x3e22005bb96,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,247039,0x3e22005c15e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x3e220044390,~
code-source-info,0x3e22005c15e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,247124,0x3e22005c3ee,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x3e220044560,~
code-source-info,0x3e22005c3ee,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,247214,0x3e22005c57e,21,assert node:internal/assert:11:16,0x34b3cc609c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x3e22005c57e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,247922,0x3e22005d3f6,5, node:child_process:1:1,0x3e22005cf20,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3e22005d3f6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,249728,0x3e22005de56,748, node:child_process:1:1,0x3e22005d370,~
code-source-info,0x3e22005de56,99,0,25421,C0O0C235O1183C241O1200C247O1225C253O1252C259O1275C265O1305C271O1328C277O1352C283O1375C289O1400C295O1426C301O1446C307O1463C312O1488C318O1522C324O1546C330O1558C336O1583C342O1732C345O1732C350O1643C355O1657C361O1682C367O1708C373O1789C376O1789C381O1767C387O1834C390O1834C395O1867C408O1868C414O1834C416O1957C419O1957C424O1946C430O2020C433O2020C438O1985C444O2002C450O2124C453O2124C458O2064C464O2086C469O2101C475O2164C481O2190C487O2225C493O2263C499O2288C505O2361C508O2361C513O2332C519O2346C525O2410C528O2410C533O2389C539O2548C542O2548C547O2452C553O2464C559O2488C565O2508C571O2527C577O2603C580O2603C584O2603C586O2726C589O2650C595O2668C601O2685C607O2702C613O2763C619O2763C621O6803C626O7225C636O7267C647O7188C652O13216C662O13258C673O13175C678O25281C688O25303C694O25318C700O25335C706O25344C712O25357C718O25374C724O25387C730O25396C736O25406C742O25296C747O25420,,
tick,0x7ffad1eff25f,249895,1,0x7ff7d6c5df80,3,0x7ff7d75a5da0,0x3e22004300c,0x3e2200422fd,0x3e22005c45a,0x3e220046522,0x3e220042085
code-creation,LazyCompile,10,250201,0x3e220060426,82,debuglog node:internal/util/debuglog:71:18,0x34b3cc61d40,~
code-source-info,0x3e220060426,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,251447,0x3e22006340e,5, node:internal/child_process:1:1,0x3e220062d10,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3e22006340e,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,253521,0x3e220064a2e,1265, node:internal/child_process:1:1,0x3e220063388,~
code-source-info,0x3e220064a2e,100,0,32650,C0O0C296O28C302O45C308O68C314O93C320O117C325O139C331O165C337O190C342O215C348O232C354O257C359O268C365O594C371O594C376O312C387O345C393O372C399O400C405O430C411O464C417O493C423O520C429O543C435O567C441O710C447O710C452O634C458O652C464O671C470O689C476O764C482O764C486O764C488O796C494O796C498O796C500O827C506O827C510O827C512O862C518O862C523O894C527O862C529O920C535O920C539O920C541O971C544O971C549O959C555O1119C558O1119C563O1016C569O1030C575O1052C581O1075C587O1098C593O1195C596O1195C601O1160C607O1177C613O1242C616O1242C621O1234C627O1288C630O1288C635O1280C641O1334C644O1334C649O1326C655O1383C661O1383C666O1442C672O1442C677O1473C682O1425C688O1528C694O1528C699O1492C705O1514C711O1585C717O1585C722O1563C728O1637C731O1637C735O1637C737O1694C743O1694C748O1677C754O1847C757O1847C762O1735C768O1749C774O1763C780O1777C786O1791C792O1805C798O1819C804O1833C810O1881C816O1897C822O2057C823O2057C825O2074C826O2074C828O2124C830O2124C832O2151C835O2151C839O2151C841O2201C844O2201C848O2201C850O2253C853O2253C857O2253C859O2410C864O2429C869O2470C877O2540C891O2622C896O2663C904O2741C918O2913C923O2920C931O4529C939O5300C953O5801C958O5843C966O5913C980O5997C985O6039C993O6172C1009O2410C1011O8250C1019O8274C1024O8216C1029O8287C1032O8287C1037O9335C1046O9351C1050O13291C1059O13306C1063O14018C1072O14032C1076O14110C1085O14126C1137O14213C1193O14191C1195O15263C1200O15290C1203O15263C1205O15367C1206O15367C1208O27894C1210O27894C1212O28237C1214O28237C1216O32519C1223O32541C1229O32558C1235O32577C1241O32594C1247O32612C1253O32635C1259O32534C1264O32649,,
code-creation,Function,10,253704,0x3e2200651a6,35,<instance_members_initializer> node:internal/child_process:525:3,0x3e2200640f0,~
code-source-info,0x3e2200651a6,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,255462,0x3e220069496,5, node:net:1:1,0x3e220068c98,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x3e220069496,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,258538,0x3e22006c376,2547, node:net:1:1,0x3e220069410,~
code-source-info,0x3e22006c376,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
code-creation,Eval,10,259438,0x3e220071d16,5, node:internal/net:1:1,0x3e220071b50,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x3e220071d16,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,259700,0x3e220072106,617, node:internal/net:1:1,0x3e220071c90,~
code-source-info,0x3e220072106,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,260147,0x3e220073b0e,5, node:internal/dtrace:1:1,0x3e2200739c8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x3e220073b0e,103,0,589,C0O0C4O589,,
code-creation,Function,10,260218,0x3e220073fe6,140, node:internal/dtrace:1:1,0x3e220073a88,~
code-source-info,0x3e220073fe6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,260526,0x3e220074fae,34,protoGetter node:net:740:21,0x3e2200698d8,~
code-source-info,0x3e220074fae,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,261481,0x3e22007a33e,5, node:dgram:1:1,0x3e220079dd8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x3e22007a33e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,263204,0x3e22007c24e,1501, node:dgram:1:1,0x3e22007a2b8,~
code-source-info,0x3e22007c24e
code-creation,Eval,10,263817,0x3e22007f656,5, node:internal/dgram:1:1,0x3e22007f450,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x3e22007f656,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,263979,0x3e22007f91e,196, node:internal/dgram:1:1,0x3e22007f5d0,~
code-source-info,0x3e22007f91e,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0xefeca40000,262144
code-creation,LazyCompile,10,264430,0xefeca43446,152,deprecate node:internal/util:96:19,0x34b3cc45aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0xefeca43446,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,265603,0x223800840c0,1344,deprecate node:internal/util:96:19,0x34b3cc45aa8,^
code-source-info,0x223800840c0,16,2503,3720,,,
code-creation,Function,11,265648,0x22380084660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3cd9f30fdc0,^
code-source-info,0x22380084660,9,10647,11000,,,
code-creation,Function,11,265682,0x22380084960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x3cd9f30f840,^
code-source-info,0x22380084960,9,5278,5523,,,
code-creation,Function,11,265726,0x22380084c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3cd9f30fcf0,^
code-source-info,0x22380084c00,9,9827,10410,,,
tick,0x7ff7d733ef48,265904,0,0x0,0,0x7ff7d7409900,0x22380084a92,0x3e220064c4e,0x3e22004302d,0x3e2200422fd,0x3e22005e09a,0x3e22004302d,0x3e2200422fd,0x3e22005c45a,0x3e220046522,0x3e220042085
code-creation,Eval,10,266198,0xefeca45b16,5, node:internal/socket_list:1:1,0xefeca459c0,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0xefeca45b16,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,266512,0xefeca46156,126, node:internal/socket_list:1:1,0xefeca45a90,~
code-source-info,0xefeca46156,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,266880,0xefeca46cf6,14,customPromiseExecFunction node:child_process:230:35,0x3e22005d9d8,~
code-source-info,0xefeca46cf6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,267025,0xefeca48d16,129,_forkChild node:child_process:169:20,0x3e22005d478,~
code-source-info,0xefeca48d16,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
code-creation,LazyCompile,10,276862,0xefeca49716,396,setupChannel node:internal/child_process:571:22,0x3e2200636c0,~
code-source-info,0xefeca
code-creation,LazyCompile,10,277041,0xefeca4beee,72,Control node:internal/child_process:529:14,0x3e220063ef8,~
code-source-info,0xefeca4beee,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,277101,0xefeca4c026,21,EventEmitter node:events:208:22,0x34b3cc6b1b0,~
code-source-info,0xefeca4c026,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,277195,0xefeca4c16e,149,EventEmitter.init node:events:327:29,0x34b3cc6b5a8,~
code-source-info,0xefeca4c16e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,277607,0xefeca4ccb6,5, node:internal/child_process/serialization:1:1,0xefeca4c9d0,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0xefeca4ccb6,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,277969,0xefeca4d51e,369, node:internal/child_process/serialization:1:1,0xefeca4cc30,~
code-source-info,0xefeca4d51e,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,278290,0xefeca4e1be,23,initMessageChannel node:internal/child_process/serialization:100:21,0xefeca4cf18,~
code-source-info,0xefeca4e1be,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,278400,0xefeca4e816,19,_getMaxListeners node:events:404:26,0x34b3cc6b778,~
code-source-info,0xefeca4e816,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,278445,0xefeca4e90e,5,get node:events:264:16,0x34b3cc6b398,~
code-source-info,0xefeca4e90e,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,278533,0xefeca4ec6e,322,arrayClone node:events:879:20,0x34b3cc6c040,~
code-source-info,0xefeca4ec6e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,278633,0xefeca4ef3e,22, node:internal/child_process:706:36,0xefeca49230,~
code-source-info,0xefeca4ef3e,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,278752,0xefeca4f1de,368,nextTick node:internal/process/task_queues:104:18,0x10e5cc9aa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0xefeca4f1de
code-creation,LazyCompile,10,279111,0xefeca4fa4e,21, node:internal/validators:222:42,0x3cd9f33d268,~
code-source-info,0xefeca4fa4e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,279162,0xefeca4fb4e,15,isEmpty node:internal/fixed_queue:95:10,0x10e5cc9fc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xefeca4fb4e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,279431,0xefeca50006,13,isEmpty node:internal/fixed_queue:67:10,0x10e5cc9fa10,~
code-source-info,0xefeca50006,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,279475,0xefeca500f6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x10e5cc9a960,~
code-source-info,0xefeca500f6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,279557,0xefeca501ee,23,newAsyncId node:internal/async_hooks:417:20,0x3cd9f338838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xefeca501ee,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,280764,0xefeca516ce,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x3cd9f3388d8,~
code-source-info,0xefeca516ce,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,280844,0xefeca517de,13,initHooksExist node:internal/async_hooks:479:24,0x3cd9f338ac8,~
code-source-info,0xefeca517de,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
tick,0x7ff7d75c3e08,280928,0,0x0,2,0x7ff7d71d44c0,0xefeca517e6,0xefeca4f322,0xefeca4ef4d,0x3e220055847,0x3e2200550c3,0x3e2200529bc,0xefeca48d77,0x3e22005c464,0x3e220046522,0x3e220042085
code-creation,LazyCompile,10,280969,0xefeca518c6,16,hasHooks node:internal/async_hooks:471:18,0x3cd9f338a28,~
code-source-info,0xefeca518c6,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,281061,0xefeca519d6,59,push node:internal/fixed_queue:99:7,0x10e5cc9fcd0,~
code-source-info,0xefeca519d6,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,281120,0xefeca51b1e,24,isFull node:internal/fixed_queue:71:9,0x10e5cc9fa60,~
code-source-info,0xefeca51b1e,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,281171,0xefeca51c2e,37,push node:internal/fixed_queue:75:7,0x10e5cc9fac8,~
code-source-info,0xefeca51c2e,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,281279,0xefeca51d4e,30,onNewListener node:child_process:175:51,0xefeca48bd0,~
code-source-info,0xefeca51d4e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,281464,0xefeca5209e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x3e220044600,~
code-source-info,0xefeca5209e
code-creation,LazyCompile,10,281602,0xefeca5246e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x3e2200445b0,~
code-source-info,0xefeca5246e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,281687,0xefeca525de,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x3e220044740,~
code-source-info,0xefeca525de,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,282082,0xefeca52f16,5, node:internal/source_map/source_map_cache:1:1,0xefeca52bb0,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xefeca52f16,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,282571,0xefeca5358e,435, node:internal/source_map/source_map_cache:1:1,0xefeca52e90,~
code-source-info,0xefeca5358e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
code-creation,Eval,10,282925,0xefeca545ce,5, node:internal/util/iterable_weak_map:1:1,0xefeca54380,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0xefeca545ce,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,283079,0xefeca54d2e,196, node:internal/util/iterable_weak_map:1:1,0xefeca54548,~
code-source-info,0xefeca54d2e,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,283109,0xefeca54eae,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0xefeca54858,~
code-source-info,0xefeca54eae,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,283505,0xefeca55ae6,5, node:internal/modules/cjs/helpers:1:1,0xefeca55830,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xefeca55ae6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,283946,0xefeca56066,536, node:internal/modules/cjs/helpers:1:1,0xefeca55a60,~
code-source-info,0xefeca56066,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,284189,0xefeca56cce,27,SafeSet node:internal/per_context/primordials:373:16,0x3cd9f30a230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0xefeca56cce,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
code-creation,LazyCompile,10,284990,0xefeca57b56,27,SafeMap node:internal/per_context/primordials:360:16,0x3cd9f30a0a8,~
code-source-info,0xefeca57b56,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,285068,0xefeca57c4e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xefeca54650,~
code-source-info,0xefeca57c4e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,285113,0xefeca57fd6,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x3cd9f30a168,~
code-source-info,0xefeca57fd6,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,285159,0xefeca580de,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x3cd9f30a3b8,~
code-source-info,0xefeca580de,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,285358,0xefeca5895e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x3e2200444d0,~
code-source-info,0xefeca5895e
code-creation,LazyCompile,10,285520,0xefeca58f06,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x3e220044650,~
code-source-info,0xefeca58f06,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,285594,0xefeca59106,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x3e2200446a0,~
code-source-info,0xefeca59106,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,286876,0xefeca5b056,5, node:internal/modules/cjs/loader:1:1,0xefeca5a770,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xefeca5b056,111,0,41761,C0O0C4O41761,,
code-creation,Function,10,289346,0xefeca5cdf6,2547, node:internal/modules/cjs/loader:1:1,0xefeca5afd0,~
code-source-info,0xefeca5cdf6,111,0,41761,C0O0C446O1183C452O1200C458O1225C464O1250C470O1277C476O1303C482O1326C488O1349C494O1373C500O1398C506O1424C512O1455C518O1467C524O1477C530O1491C535O1508C541O1533C546O1550C552O1585C558O1610C564O1625C570O1645C576O1679C582O1704C587O1714C593O1731C599O1746C605O1770C611O1794C617O1806C622O1822C628O1833C634O1859C640O1889C646O1917C652O1948C658O1975C664O2000C670O2026C676O2051C682O2076C688O2186C690O2186C695O2186C697O2262C709O2284C715O2294C721O2302C727O2314C733O2332C763O2277C767O2452C771O2452C777O2435C783O2529C787O2529C793O2503C799O2635C803O2635C809O2587C815O2602C821O2617C827O2683C831O2683C837O2669C842O2721C846O2721C850O2721C852O2752C856O2752C860O2752C862O2792C866O2792C870O2792C872O2827C876O2827C880O2827C882O2871C886O2871C890O2871C892O2905C896O2897C902O2943C910O2943C916O2920C922O2993C926O2993C930O2993C932O3066C940O3066C946O3051C952O3230C956O3230C962O3110C968O3128C974O3145C980O3166C986O3190C992O3215C998O3299C1002O3299C1008O3280C1014O3354C1022O3354C1026O3354C1028O3423C1036O3423C1040O3423C1042O3535C1050O3535C1060O3580C1067O3535C1069O3765C1070O3765C1072O3944C1076O3944C1082O3944C1088O3800C1094O3828C1100O3863C1106O3885C1112O3922C1118O4000C1122O4000C1128O3981C1134O4060C1142O4060C1147O4178C1151O4178C1157O4115C1163O4138C1169O4162C1175O4236C1179O4236C1185O4223C1191O4288C1195O4288C1199O4288C1201O4356C1205O4356C1211O4337C1217O4425C1225O4425C1231O4410C1237O4542C1241O4542C1247O4469C1253O4489C1259O4515C1265O4604C1269O4612C1277O4621C1280O4604C1282O4666C1285O4666C1289O4666C1291O4708C1292O4708C1294O4728C1295O4728C1297O4754C1298O4754C1300O5420C1302O5420C1307O5420C1309O5728C1312O5778C1316O5778C1350O5760C1381O5749C1388O5756C1397O5796C1403O5825C1407O5825C1412O5733C1483O5876C1487O5907C1493O5929C1497O5950C1504O5966C1508O5964C1512O5987C1519O6007C1527O6005C1535O6028C1542O6049C1550O6047C1558O6088C1562O6088C1564O6093C1572O6112C1580O6135C1581O6135C1583O6196C1587O6196C1589O6296C1597O6415C1606O6429C1618O6561C1635O6405C1645O6405C1647O6706C1659O6727C1668O6748C1680O6785C1692O6706C1702O6851C1714O6872C1723O6896C1735O6941C1747O6851C1757O7040C1766O7042C1781O7077C1789O7105C1806O7077C1816O7152C1824O7186C1841O7152C1851O7388C1859O7416C1884O7447C1892O7572C1907O7468C1921O7656C1931O7681C1939O7806C1954O7702C1968O7890C1976O7388C1986O7927C1990O7927C2000O7960C2020O7961C2032O7927C2034O8011C2050O8027C2060O8025C2068O8353C2072O8353C2082O8353C2084O11246C2088O11246C2098O11246C2100O13968C2107O13968C2109O14774C2116O14774C2118O14793C2126O14810C2134O17571C2141O17571C2143O17649C2147O17657C2155O17649C2157O17666C2161O17731C2169O17755C2179O19385C2187O19409C2195O20593C2203O20620C2211O22216C2223O22235C2235O22621C2249O22216C2259O22216C2261O23941C2269O23954C2277O26976C2285O27000C2293O31201C2297O31208C2311O31223C2319O32165C2323O32172C2337O32190C2345O32645C2346O32645C2348O32681C2349O32681C2351O34014C2355O34021C2369O34040C2377O35977C2381O35984C2395O36003C2403O37849C2407O37856C2421O37877C2429O38295C2433O38302C2447O38323C2455O39163C2461O39213C2467O39163C2469O39819C2475O39840C2483O39860C2491O39878C2499O40877C2507O40900C2515O41510C2523O41539C2531O41736C2537O41750C2546O41760,,
code-creation,Eval,10,290198,0xefeca60db6,5, node:internal/modules/package_json_reader:1:1,0xefeca60c10,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xefeca60db6,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,290303,0xefeca60f06,113, node:internal/modules/package_json_reader:1:1,0xefeca60d30,~
code-source-info,0xefeca60f06,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,290557,0xefeca6174e,5, node:internal/process/esm_loader:1:1,0xefeca61558,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xefeca6174e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,290795,0xefeca619ee,182, node:internal/process/esm_loader:1:1,0xefeca616c8,~
code-source-info,0xefeca619ee,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,291345,0xefeca62cfe,5, node:internal/modules/esm/loader:1:1,0xefeca62870,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0xefeca62cfe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,292553,0xefeca635ce,659, node:internal/modules/esm/loader:1:1,0xefeca62c78,~
code-source-info,0xefeca635ce,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,292644,0xefeca63a76,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0xefeca630f0,~
code-source-info,0xefeca63a76,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,292963,0xefeca6544e,5, node:internal/modules/esm/module_map:1:1,0xefeca65260,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0xefeca6544e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,293079,0xefeca65886,175, node:internal/modules/esm/module_map:1:1,0xefeca653c8,~
code-source-info,0xefeca65886,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,293419,0xefeca6632e,5, node:internal/modules/esm/module_job:1:1,0xefeca66038,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0xefeca6632e,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,293915,0xefeca66826,343, node:internal/modules/esm/module_job:1:1,0xefeca662a8,~
code-source-info,0xefeca66826,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,294294,0xefeca6847e,5, node:internal/modules/esm/assert:1:1,0xefeca68288,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0xefeca6847e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,294536,0xefeca68756,201, node:internal/modules/esm/assert:1:1,0xefeca683f8,~
code-source-info,0xefeca68756,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,294684,0xefeca68d66,9, node:internal/modules/esm/assert:43:3,0xefeca68550,~
code-source-info,0xefeca68d66,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,295784,0xefeca6a9a6,5, node:internal/modules/esm/resolve:1:1,0xefeca6a1e8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0xefeca6a9a6,118,0,42310,C0O0C4O42310,,
tick,0x7ff7d7b8274d,298333,1,0x7ff7d6c5df80,3,0x7ff7d75a5da0,0x22380084e3b,0x223800848e5,0xefeca63742,0x22380084f03,0x223800848e5,0xefeca61a3c,0x22380084f03,0x223800848e5,0xefeca5d2a1,0x22380084f03,0x223800848e5,0xefeca5910c,0x3e220046546,0x3e220042085
code-creation,Function,10,298367,0xefeca6bad6,1191, node:internal/modules/esm/resolve:1:1,0xefeca6a920,~
code-source-info,0xefeca6bad6,118,0,42310,C0O0C415O28C421O45C427O70C433O93C439O117C445O131C451O149C456O166C462O196C468O230C474O241C480O265C486O298C492O322C497O334C503O346C509O357C515O385C521O413C527O440C533O471C539O496C545O521C551O586C554O586C558O586C560O642C563O642C568O625C574O735C577O735C582O693C588O710C594O723C600O778C603O778C608O759C614O875C620O875C629O920C636O875C638O1002C641O1002C646O975C652O980C658O990C664O1045C670O1045C674O1045C676O1114C682O1114C686O1114C688O1197C694O1197C698O1197C700O1265C706O1265C710O1265C712O1325C718O1325C722O1325C724O1413C727O1413C732O1375C738O1380C744O1395C750O1834C753O1834C758O1860C763O1450C769O1481C775O1507C781O1540C787O1571C793O1602C799O1638C805O1663C811O1698C817O1732C823O1763C829O1797C835O1899C838O1899C843O1885C849O1968C852O1968C856O1968C858O2041C864O2041C869O2091C875O2091C880O2147C891O2210C898O2255C899O2255C953O2278C1004O2210C1008O2210C1010O2333C1018O2333C1023O2333C1025O2688C1028O2688C1033O2688C1035O5911C1037O5911C1042O5911C1044O5952C1046O5952C1051O5952C1053O6098C1057O6098C1059O11574C1063O11574C1065O12583C1069O12583C1071O12640C1072O12640C1074O16335C1078O16335C1080O16539C1084O16539C1086O16573C1090O16573C1092O41492C1099O41514C1105O41537C1111O41556C1117O41576C1123O41602C1129O41621C1135O41647C1141O41507C1145O41734C1148O41734C1153O41698C1159O41781C1170O41822C1172O41822C1174O41848C1183O41871C1190O42309,,
code-creation,Eval,10,299145,0xefeca6f596,5, node:internal/modules/esm/get_format:1:1,0xefeca6f310,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0xefeca6f596,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,299420,0xefeca6fa16,368, node:internal/modules/esm/get_format:1:1,0xefeca6f510,~
code-source-info,0xefeca6fa16,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,299835,0xefeca70886,5, node:internal/modules/esm/fetch_module:1:1,0xefeca705c0,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0xefeca70886,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,300327,0xefeca70d1e,318, node:internal/modules/esm/fetch_module:1:1,0xefeca70800,~
code-source-info,0xefeca70d1e,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,300502,0xefeca719fe,37,get BlockList node:net:1826:16,0x3e22006b808,~
code-source-info,0xefeca719fe,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,300755,0xefeca71ede,5, node:internal/blocklist:1:1,0xefeca71cf8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0xefeca71ede,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,301051,0xefeca728e6,359, node:internal/blocklist:1:1,0xefeca71e58,~
code-source-info,0xefeca728e6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,301450,0xefeca741b6,5, node:internal/socketaddress:1:1,0xefeca73fc0,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0xefeca741b6,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,301759,0xefeca74cde,366, node:internal/socketaddress:1:1,0xefeca74130,~
code-source-info,0xefeca74cde,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,302025,0xefeca7578e,72,BlockList node:internal/blocklist:40:14,0xefeca71f10,~
code-source-info,0xefeca7578e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,302133,0xefeca75f36,115,addAddress node:internal/blocklist:60:13,0xefeca71fb0,~
code-source-info,0xefeca75f36,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,302205,0xefeca760b6,20,isSocketAddress node:internal/socketaddress:43:25,0xefeca74238,~
code-source-info,0xefeca760b6,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,302342,0xefeca7684e,323,SocketAddress node:internal/socketaddress:47:14,0xefeca741e8,~
code-source-info,0xefeca7684e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,302464,0xefeca76b9e,99, node:internal/validators:154:3,0x3cd9f33d020,~
code-source-info,0xefeca76b9e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,302549,0xefeca76d4e,129,validatePort node:internal/validators:211:22,0x3cd9f33d1f8,~
code-source-info,0xefeca76d4e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,302635,0xefeca76f9e,149, node:internal/validators:101:40,0x3cd9f33ce20,~
code-source-info,0xefeca76f9e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,302691,0xefeca7712e,9,isUint32 node:internal/validators:40:18,0x3cd9f33ccc0,~
code-source-info,0xefeca7712e,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,302874,0xefeca77366,229,addRange node:internal/blocklist:72:11,0xefeca72000,~
code-source-info,0xefeca77366,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,303081,0xefeca777e6,5, node:internal/modules/esm/formats:1:1,0xefeca77670,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0xefeca777e6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,303198,0xefeca77a9e,120, node:internal/modules/esm/formats:1:1,0xefeca77760,~
code-source-info,0xefeca77a9e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,303433,0xefeca78126,5, node:internal/modules/esm/initialize_import_meta:1:1,0xefeca77f90,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0xefeca78126,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,303600,0xefeca782ee,90, node:internal/modules/esm/initialize_import_meta:1:1,0xefeca780a0,~
code-source-info,0xefeca782ee,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,303759,0xefeca78806,5, node:internal/modules/esm/load:1:1,0xefeca78690,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0xefeca78806,125,0,903,C0O0C4O903,,
code-creation,Function,10,303876,0xefeca7894e,80, node:internal/modules/esm/load:1:1,0xefeca78780,~
code-source-info,0xefeca7894e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,304098,0xefeca78f46,5, node:internal/modules/esm/get_source:1:1,0xefeca78d40,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0xefeca78f46,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,304240,0xefeca790de,212, node:internal/modules/esm/get_source:1:1,0xefeca78ec0,~
code-source-info,0xefeca790de,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,305217,0xefeca7a4a6,5, node:internal/fs/promises:1:1,0xefeca79cf8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0xefeca7a4a6,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,306655,0xefeca7cbe6,1672, node:internal/fs/promises:1:1,0xefeca7a420,~
code-source-info,0xefeca7cbe
code-creation,Function,10,306861,0xefeca7d59e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0xefeca7ba80,~
code-source-info,0xefeca7d59e,127,4407,5236,C0O4407C12O4415C26O5236,,
new,MemoryChunk,0x265cb8c0000,262144
code-creation,Eval,10,307549,0x265cb8c114e,5, node:internal/fs/rimraf:1:1,0xefeca7fce8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x265cb8c114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,308031,0x265cb8c174e,409, node:internal/fs/rimraf:1:1,0xefeca7ffc8,~
code-source-info,0x265cb8c174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,308363,0x265cb8c25e6,188,from node:buffer:296:28,0x34b3cc76f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x265cb8c25e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
code-creation,LazyCompile,10,310751,0x265cb8c5016,110,fromString node:buffer:432:20,0x34b3cc77378,~
code-source-info,0x265cb8c5016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,310876,0x265cb8c51ce,177,fromStringFast node:buffer:413:24,0x34b3cc772d8,~
code-source-info,0x265cb8c51ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,310966,0x265cb8c53be,36,FastBuffer node:internal/buffer:958:14,0x10e5cc8bb00,~
code-source-info,0x265cb8c53be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,311016,0x265cb8c54be,23,write node:buffer:593:12,0x34b3cc776e8,~
code-source-info,0x265cb8c54be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,311074,0x265cb8c55ae,42,alignPool node:buffer:159:19,0x34b3cc76d10,~
code-source-info,0x265cb8c55ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,311272,0x265cb8c596e,251,promisify node:internal/util:324:19,0x34b3cc461f8,~
code-source-info,0x265cb8c596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,311513,0x265cb8c5f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x8a0fdde378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x265cb8c5f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
tick,0x7ff7d6b2203f,312834,0,0x0,3,0x7ff7d71d44c0,0xefeca7d0b0,0x22380084f03,0x223800848e5,0xefeca7916d,0x22380084f03,0x223800848e5,0xefeca78972,0x22380084f03,0x223800848e5,0xefeca6376a,0x22380084f03,0x223800848e5,0xefeca61a3c,0x22380084f03,0x223800848e5,0xefeca5d2a1,0x22380084f03,0x223800848e5,0xefeca5910c,0x3e220046546,0x3e220042085
code-creation,Eval,10,313405,0x265cb8c89de,5, node:internal/modules/esm/translators:1:1,0x265cb8c8578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x265cb8c89de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,314092,0x265cb8c917e,715, node:internal/modules/esm/translators:1:1,0x265cb8c8958,~
code-source-info,0x265cb8c917e
code-creation,Eval,10,314381,0x265cb8ca686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x265cb8ca4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x265cb8ca686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,314472,0x265cb8ca8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x265cb8ca600,~
code-source-info,0x265cb8ca8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,314900,0x265cb8cbb56,5, node:internal/vm/module:1:1,0x265cb8cb610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x265cb8cbb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,315442,0x265cb8ccdb6,872, node:internal/vm/module:1:1,0x265cb8cbad0,~
code-source-info,0x265cb8ccdb
code-creation,Function,10,315512,0x265cb8cd2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x265cb8cc140,~
code-source-info,0x265cb8cd2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,315696,0x265cb8ce6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0xefeca62d80,~
code-source-info,0x265cb8ce6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,315752,0x265cb8cfba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0xefeca654d0,~
code-source-info,0x265cb8cfba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,315805,0x265cb8cfe4e,13,desc.value node:internal/per_context/primordials:334:32,0x3cd9f30a000,~
code-source-info,0x265cb8cfe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,315839,0x265cb8cff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x3cd9f309a50,~
code-source-info,0x265cb8cff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,315895,0x265cb8d008e,13,next node:internal/per_context/primordials:282:9,0x3cd9f309b18,~
code-source-info,0x265cb8d008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,316090,0x265cb8d0706,28,getEmbedderOptions node:internal/options:32:28,0x5c9bbbdac8,~
code-source-info,0x265cb8d0706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,316224,0x265cb8d09ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0xefeca5c2d8,~
code-source-info,0x265cb8d09ae,111,39888,40872,C0O39912C9O39932C14O39936C22O39950C28O39950C33O39990C42O40010C47O40014C55O40026C61O40026C66O40225C74O40242C77O40247C85O40263C93O40247C103O40286C106O40291C114O40307C125O40291C131O40349C140O40350C143O40355C157O40355C169O40396C173O40416C180O40445C183O40450C191O40450C198O40416C203O40493C210O40522C213O40527C221O40527C228O40493C233O40573C237O40594C244O40628C249O40657C254O40688C257O40693C262O40657C270O40712C273O40628C279O40594C284O40739C286O40751C292O40815C297O40836C302O40856C305O40836C309O40834C314O40871,,
code-creation,Eval,10,316433,0x265cb8d3906,5, node:internal/modules/run_main:1:1,0x265cb8d36e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x265cb8d3906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,316545,0x265cb8d3bee,178, node:internal/modules/run_main:1:1,0x265cb8d3880,~
code-source-info,0x265cb8d3bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,316658,0x265cb8d441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x3e2200446f0,~
code-source-info,0x265cb8d441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,316723,0x265cb8d4636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xefeca5b7c8,~
code-source-info,0x265cb8d4636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,316760,0x265cb8d471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x3e2200447e0,~
code-source-info,0x265cb8d471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,316821,0x265cb8d4916,166,Module._preloadModules node:internal/modules/cjs/loader:1263:34,0xefeca5c368,~
code-source-info,0x265cb8d4916,111,40910,41505,C0O40926C5O40931C11O40960C12O40967C13O40973C17O40986C23O41186C33O41186C42O41238C45O41260C53O41285C58O41285C63O41260C68O41251C85O41315C88O41321C95O41326C100O41349C106O41362C114O41378C116O41378C119O41415C121O41431C125O41420C130O41456C137O41472C141O41456C146O41440C151O41402C154O41481C158O41494C165O41504,,
code-creation,LazyCompile,10,316907,0x265cb8d4b36,94,Module node:internal/modules/cjs/loader:172:16,0xefeca5b128,~
code-source-info,0x265cb8d4b36,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,317026,0x265cb8d4d2e,449,dirname node:path:653:10,0x8a0fdcd768,~
code-source-info,0x265cb8d4d2e
code-creation,LazyCompile,10,317131,0x265cb8d5136,45,updateChildren node:internal/modules/cjs/loader:165:24,0xefeca5b0d8,~
code-source-info,0x265cb8d5136,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,317211,0x265cb8d5326,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0xefeca5bb78,~
code-source-info,0x265cb8d
code-creation,Function,11,317349,0x22380085160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0xefeca5bb78,^
code-source-info,0x22380085160,111,17765,19316,,,
code-creation,Function,11,317374,0x223800859e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0x5c9bbbd848,^
code-source-info,0x223800859e0,91,514,620,,,
code-creation,Function,11,317391,0x22380085c00,104,next node:internal/per_context/primordials:282:9,0x3cd9f309b18,^
code-source-info,0x22380085c00,6,8270,8317,,,
code-creation,Function,11,317408,0x22380085ce0,252,SafeMap node:internal/per_context/primordials:360:16,0x3cd9f30a0a8,^
code-source-info,0x22380085ce0,6,10694,10711,,,
code-creation,Function,11,317425,0x22380085e40,272,validateString node:internal/validators:118:24,0x3cd9f33ce70,^
code-source-info,0x22380085e40,15,3534,3646,,,
code-creation,Function,11,317446,0x22380085fc0,412,isWindowsDeviceRoot node:path:60:29,0x8a0fdcd408,^
code-source-info,0x22380085fc0,41,1991,2136,,,
code-creation,LazyCompile,10,317514,0x265cb8d5aa6,127,Module.require node:internal/modules/cjs/loader:997:36,0xefeca5bf68,~
code-source-info,0x265cb8d5aa6,111,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,317647,0x265cb8d5d8e,619,Module._load node:internal/modules/cjs/loader:757:24,0xefeca5bdc8,~
code-source-info,0x265cb8d5d8e,111,23964,26971,C0O23999C2O24029C6O24048C14O24108C23O24048C28O24342C42O24353C47O24386C54O24406C58O24440C60O24498C63O24505C70O24511C74O24530C76O24573C88O24573C93O24644C99O24663C102O24670C106O24713C107O24743C111O24751C112O24768C119O24796C121O24858C124O24865C138O24865C144O24911C152O24915C159O25008C167O25008C173O25065C178O25065C184O25101C189O25112C198O25145C205O25151C210O25145C211O25221C215O25229C216O25261C219O25268C226O25274C230O25289C232O25328C244O25328C249O25395C255O25438C260O25452C265O25452C271O25478C273O25522C279O25539C282O25546C286O25589C287O25597C288O25622C294O25671C298O25679C299O25709C304O25709C310O25749C315O25756C324O25791C328O25799C329O25888C344O25904C350O25939C354O25958C359O25977C363O25992C365O26002C369O26019C372O26026C379O26043C383O26056C387O26089C394O26137C398O26171C403O26198C409O26198C414O26219C426O26225C427O26254C432O26274C436O26288C444O26295C446O26313C450O26350C458O26378C460O26432C467O26438C475O26459C481O26463C487O26514C493O26514C499O26566C501O26576C506O26599C522O26599C529O26697C537O26725C541O26740C547O26725C555O26768C559O26796C565O26768C573O26827C575O26805C580O26874C586O26902C594O26911C598O26874C614O26960C618O26968,,
code-creation,LazyCompile,10,317750,0x265cb8d6226,89,logger node:internal/util/debuglog:95:18,0x34b3cc61f90,~
code-source-info,0x265cb8d6226,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,317789,0x265cb8d6366,3, node:internal/per_context/primordials:285:21,0x3cd9f309bc0,~
code-source-info,0x265cb8d6366,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,317836,0x265cb8d643e,140,debug node:internal/util/debuglog:76:15,0x34b3cc61ef0,~
code-source-info,0x265cb8d643e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,317894,0x265cb8d65ee,41,init node:internal/util/debuglog:72:16,0x34b3cc61ea0,~
code-source-info,0x265cb8d65ee,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,317922,0x265cb8d66de,2,testEnabled node:internal/util/debuglog:32:19,0x3e2200581d0,~
code-source-info,0x265cb8d66de,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,317974,0x265cb8d6876,116,debuglogImpl node:internal/util/debuglog:49:22,0x34b3cc61cf0,~
code-source-info,0x265cb8d6876,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,318015,0x265cb8d6a2e,10, node:internal/modules/cjs/loader:272:66,0xefeca5ba98,~
code-source-info,0x265cb8d6a2e,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,318039,0x265cb8d6ade,2,noop node:internal/util/debuglog:47:14,0x34b3cc61ca0,~
code-source-info,0x265cb8d6ade,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,318185,0x265cb8d6ede,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0xefeca5be50,~
code-source-info,0x265cb8d6ede
code-creation,LazyCompile,10,318300,0x265cb8d749e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3cd9f30fb20,~
code-source-info,0x265cb8d749e,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,318371,0x265cb8d7756,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0xefeca5bc98,~
code-source-info,0x265cb8d
code-creation,LazyCompile,10,318446,0x265cb8d7a76,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0xefeca5b448,~
code-source-info,0x265cb8d7a76,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,318517,0x265cb8d7cb6,235,trySelf node:internal/modules/cjs/loader:441:17,0xefeca5b498,~
code-source-info,0x265cb8d7cb6,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,318596,0x265cb8d7f6e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0xefeca5b268,~
code-source-info,0x265cb8d7f6e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,318679,0x265cb8d82ce,234,readPackage node:internal/modules/cjs/loader:290:21,0xefeca5b218,~
code-source-info,0x265cb8d82ce,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,318779,0x265cb8d85d6,199,read node:internal/modules/package_json_reader:16:14,0xefeca60de8,~
code-source-info,0x265cb8d85d6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,318864,0x265cb8d89f6,232,toNamespacedPath node:path:618:19,0x8a0fdcd6f8,~
code-source-info,0x265cb8d89f6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,319201,0x265cb8d90be,436,Module._findPath node:internal/modules/cjs/loader:494:28,0xefeca5bae8,~
code-source-info,0x265cb8d90be
code-creation,LazyCompile,10,319301,0x265cb8d946e,109,isAbsolute node:path:402:13,0x8a0fdcd5d0,~
code-source-info,0x265cb8d946e,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,319428,0x265cb8d96fe,85,stat node:internal/modules/cjs/loader:151:14,0xefeca5b088,~
code-source-info,0x265cb8d96fe,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,319551,0x265cb8d9856,44,tryExtensions node:internal/modules/cjs/loader:400:23,0xefeca5b3a8,~
code-source-info,0x265cb8d9856,111,11900,12093,C0O11936C2O11948C6O11941C11O11985C16O12001C19O11995C23O11985C29O12022C31O12045C33O12061C34O11957C39O11923C42O12077C43O12090,,
code-creation,LazyCompile,10,319596,0x265cb8d9986,50,tryFile node:internal/modules/cjs/loader:384:17,0xefeca5b308,~
code-source-info,0x265cb8d9986,111,11460,11661,C0O11498C3O11498C8O11520C9O11527C14O11534C15O11541C16O11545C24O11570C26O11585C31O11597C36O11597C41O11618C42O11627C45O11634C49O11658,,
code-creation,LazyCompile,10,319703,0x265cb8d9ace,42,toRealPath node:internal/modules/cjs/loader:393:20,0xefeca5b358,~
code-source-info,0x265cb8d9ace,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,319998,0x265cb8d9ee6,1042,realpathSync node:fs:2425:22,0x5c9bb993f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x265cb8d9ee
code-creation,LazyCompile,10,323307,0x265cb8e060e,123,getOptions node:internal/fs/utils:315:20,0x5c9bba1c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x265cb8e060e,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
code-creation,LazyCompile,10,324276,0x265cb8e2596,48,assertEncoding node:internal/fs/utils:152:24,0x5c9bba16a0,~
code-source-info,0x265cb8e2596,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,324364,0x265cb8e26ae,20,toPathIfFileURL node:internal/url:1499:25,0x10e5ccb9258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x265cb8e26ae,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,325882,0x265cb8e57f6,17,isURLInstance node:internal/url:1495:23,0x10e5ccb9208,~
code-source-info,0x265cb8e57f6,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
code-creation,LazyCompile,10,325939,0x265cb8e5956,81, node:internal/fs/utils:669:38,0x5c9bba26c0,~
code-source-info,0x265cb8e5956,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,325992,0x265cb8e5b66,110, node:internal/fs/utils:358:35,0x5c9bba1d38,~
code-source-info,0x265cb8e5b66,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,326035,0x265cb8e5cde,16,isUint8Array node:internal/util/types:13:22,0x34b3cc47418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x265cb8e5cde,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,326191,0x265cb8e6146,23,splitRoot node:fs:2375:33,0x5c9bb992a8,~
code-source-info,0x265cb8e6146,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,326409,0x265cb8e624e,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x5c9bba1ce8,~
code-source-info,0x265cb8e624e,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,326466,0x265cb8e63c6,53,nextPart node:fs:2401:31,0x5c9bb993a0,~
code-source-info,0x265cb8e63c6,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,326570,0x265cb8e6526,34,isFileType node:fs:205:20,0x5c9bb97010,~
code-source-info,0x265cb8e6526,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,326810,0x223800861c0,6232,resolve node:path:158:10,0x8a0fdcd510,^
code-source-info,0x223800861c0,41,4875,9786,,,
code-creation,Function,11,326837,0x22380087a80,544,nextPart node:fs:2401:31,0x5c9bb993a0,^
code-source-info,0x22380087a80,80,66157,66408,,,
tick,0x7ff7d71dae13,327142,0,0x0,0,0x7ff7d71c73c0,0x265cb8da0ee,0x265cb8d9af1,0x265cb8d99b3,0x265cb8d986d,0x265cb8d9214,0x265cb8d716f,0x265cb8d5e18,0x265cb8d5af2,0x265cb8d49a3,0x265cb8d474d,0x3e22004656c,0x3e220042085
code-creation,LazyCompile,10,327748,0x265cb8e7106,72,encodeRealpathResult node:fs:2388:30,0x5c9bb99350,~
code-source-info,0x265cb8e7106,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,327861,0x265cb8e7296,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0xefeca55b18,~
code-source-info,0x265cb8e7296,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,328001,0x265cb8e7c0e,246,Module.load node:internal/modules/cjs/loader:969:33,0xefeca5bee0,~
code-source-info,0x265cb8e7c0e,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,328164,0x265cb8e7ebe,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0xefeca5b3f8,~
code-source-info,0x265cb8e7ebe,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,328340,0x265cb8e809e,415,basename node:path:749:11,0x8a0fdcd7d0,~
code-source-info,0x265cb8e809e
code-creation,LazyCompile,10,328653,0x265cb8e85be,485,Module._extensions..js node:internal/modules/cjs/loader:1114:37,0xefeca5c080,~
code-source-info,0x265cb8e85be
code-creation,LazyCompile,10,328869,0x265cb8e8a06,376,readFileSync node:fs:450:22,0x5c9bb974c8,~
code-source-info,0x265cb8e8a
code-creation,LazyCompile,10,329016,0x265cb8e8d26,30,isEncoding node:buffer:530:40,0x34b3cc775c0,~
code-source-info,0x265cb8e8d26,24,15337,15472,C0O15353C6O15401C12O15408C20O15427C23O15427C28O15455C29O15469,,
code-creation,LazyCompile,10,329070,0x265cb8e8e2e,30,normalizeEncoding node:internal/util:160:27,0x34b3cc45d58,~
code-source-info,0x265cb8e8e2e,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,329144,0x265cb8e8fa6,113,openSync node:fs:576:18,0x5c9bb976b0,~
code-source-info,0x265cb8e8fa6,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,329211,0x265cb8e9126,37, node:internal/fs/utils:681:42,0x5c9bba2710,~
code-source-info,0x265cb8e9126,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,329326,0x265cb8e94fe,515,stringToFlags node:internal/fs/utils:556:23,0x5c9bba2530,~
code-source-info,0x265cb8e94fe
code-creation,LazyCompile,10,329475,0x265cb8e98ee,97,parseFileMode node:internal/validators:59:23,0x3cd9f33cd10,~
code-source-info,0x265cb8e98ee,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,329557,0x265cb8e9a86,206, node:internal/validators:84:3,0x3cd9f33cdd0,~
code-source-info,0x265cb8e9a86,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,329618,0x265cb8e9c4e,9,isInt32 node:internal/validators:36:17,0x3cd9f33c7b0,~
code-source-info,0x265cb8e9c4e,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,329826,0x265cb8e9d56,66,tryStatSync node:fs:404:21,0x5c9bb973d8,~
code-source-info,0x265cb8e9d56,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,329947,0x265cb8e9ece,96,tryCreateBuffer node:fs:414:25,0x5c9bb97428,~
code-source-info,0x265cb8e9ece,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,330013,0x265cb8ea026,17,allocUnsafe node:buffer:373:42,0x34b3cc77138,~
code-source-info,0x265cb8ea026,24,11277,11335,C0O11289C5O11289C9O11310C12O11317C16O11332,,
code-creation,LazyCompile,10,330065,0x265cb8ea12e,54, node:buffer:349:36,0x34b3cc77080,~
code-source-info,0x265cb8ea12e,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,330115,0x265cb8ea256,30,validateNumber node:internal/validators:123:24,0x3cd9f33cf10,~
code-source-info,0x265cb8ea256,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,330181,0x265cb8ea36e,119,allocate node:buffer:398:18,0x34b3cc77288,~
code-source-info,0x265cb8ea36e,24,12004,12332,C0O12016C1O12025C6O12038C11O12045C16O12062C17O12071C20O12090C24O12099C27O12080C32O12114C34O12126C39O12137C41O12135C44O12123C49O12157C52O12157C55O12186C62O12201C67O12212C75O12186C81O12236C88O12250C94O12247C100O12261C103O12261C106O12279C108O12288C109O12297C114O12304C118O12329,,
code-creation,LazyCompile,10,330275,0x265cb8ea52e,86,tryReadSync node:fs:429:21,0x5c9bb97478,~
code-source-info,0x265cb8ea52e,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,330381,0x265cb8ea71e,258,readSync node:fs:684:18,0x5c9bb97780,~
code-source-info,0x265cb8ea71e,80,17835,18869,C0O17835C2O17879C7O17884C13O17909C18O17909C22O17952C29O17959C34O18036C40O18046C45O18046C50O18083C62O18102C68O18118C75O18129C80O18146C89O18191C94O18218C99O18247C112O18247C117O18295C124O18313C125O18324C130O18338C131O18347C132O18369C138O18380C143O18394C159O18400C164O18394C165O18526C170O18574C181O18526C186O18592C191O18619C195O18639C203O18639C208O18696C210O18718C215O18726C240O18726C246O18820C251O18820C255O18852C257O18866,,
code-creation,LazyCompile,10,330473,0x265cb8ea98e,52, node:internal/fs/utils:687:40,0x5c9bba2760,~
code-source-info,0x265cb8ea98e,81,19376,19505,C14O19406C22O19410C29O19435C30O19444C31O19455C44O19455C49O19492C51O19502,,
code-creation,LazyCompile,10,330533,0x265cb8eaafe,51, node:internal/validators:191:40,0x3cd9f33d138,~
code-source-info,0x265cb8eaafe,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,330600,0x265cb8eac56,151, node:internal/validators:73:3,0x3cd9f33cd80,~
code-source-info,0x265cb8eac56,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,330685,0x265cb8eae5e,103, node:internal/fs/utils:637:3,0x5c9bba2620,~
code-source-info,0x265cb8eae5e,81,17950,18340,C0O17991C1O18002C6O18016C22O18022C27O18016C28O18082C29O18093C34O18107C50O18113C55O18107C56O18173C58O18184C64O18193C69O18218C82O18308C95O18224C100O18218C102O18339,,
code-creation,LazyCompile,10,330770,0x265cb8eb166,151, node:internal/fs/utils:892:42,0x5c9bba2a80,~
code-source-info,0x265cb8eb166,81,25170,25742,C0O25195C6O25236C14O25236C21O25285C27O25326C32O25349C35O25344C37O25341C47O25375C53O25382C56O25369C61O25398C77O25482C80O25477C98O25502C104O25509C117O25404C122O25398C125O25586C143O25592C148O25586C150O25741,,
code-creation,LazyCompile,10,330897,0x265cb8eb31e,47,closeSync node:fs:526:19,0x5c9bb975d8,~
code-source-info,0x265cb8eb31e,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,331019,0x265cb8eb456,162,toString node:buffer:783:46,0x34b3cc78fc0,~
code-source-info,0x265cb8eb456,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,331175,0x265cb8eb716,499,getEncodingOps node:buffer:679:24,0x34b3cc78e18,~
code-source-info,0x265cb8eb
code-creation,LazyCompile,10,331414,0x265cb8ebafe,12,slice node:buffer:594:12,0x34b3cc777e0,~
code-source-info,0x265cb8ebafe,24,17229,17275,C0O17254C5O17254C11O17275,,
code-creation,LazyCompile,10,332071,0x265cb8ec61e,499,Module._compile node:internal/modules/cjs/loader:1059:37,0xefeca5bff0,~
code-source-info,0x265cb8ec61e
code-creation,LazyCompile,10,332272,0x265cb8ecb86,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0xefeca53038,~
code-source-info,0x265cb8ecb86,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,332362,0x265cb8ed5de,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0xefeca52f98,~
code-source-info,0x265cb8ed5de,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,332433,0x265cb8ed756,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0xefeca52fe8,~
code-source-info,0x265cb8ed756,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,332493,0x265cb8ed8ce,30,validateBoolean node:internal/validators:139:25,0x3cd9f33cfb0,~
code-source-info,0x265cb8ed8ce,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,332611,0x265cb8edcc6,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0xefeca5b678,~
code-source-info,0x265cb8edcc6,111,32708,33836,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33229C74O33249C81O33259C86O33275C98O33397C102O33414C113O33259C118O33705C130O33730C135O33742C142O33753C147O33783C157O33783C162O33818C164O33818,,
code-creation,LazyCompile,10,332838,0x265cb8ee49e,472,compileFunction node:vm:308:25,0x5c9bbb4570,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x265cb8ee49e
code-creation,LazyCompile,10,333854,0x265cb8ef666,95, node:internal/validators:168:39,0x3cd9f33d070,~
code-source-info,0x265cb8ef666,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,333916,0x265cb8ef7c6,27, node:vm:313:27,0x265cb8ee170,~
code-source-info,0x265cb8ef7c6,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,Eval,10,334000,0x265cb8efa3e,5, C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x265cb8ef8f8,~
script-source,133,C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x265cb8efa3e,133,0,119,C0O0C4O119,,
code-creation,Function,10,334046,0x265cb8efb26,29, C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x265cb8ef9b8,~
code-source-info,0x265cb8efb26,133,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,334184,0x265cb8efd9e,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x265cb8cbb88,~
code-source-info,0x265cb8efd9e,131,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,334307,0x265cb8f0f76,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0xefeca55b68,~
code-source-info,0x265cb8f0f76,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,334404,0x265cb8f11c6,14,require node:internal/modules/cjs/helpers:101:31,0x265cb8f0e48,~
code-source-info,0x265cb8f11c6,110,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,334471,0x265cb8f1306,10, node:internal/modules/cjs/helpers:29:66,0xefeca55d38,~
code-source-info,0x265cb8f1306,110,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,334542,0x265cb8f147e,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x3cd9f30fb98,~
code-source-info,0x265cb8f147e,9,7789,8477,C0O7809C6O7956C16O7999C33O7962C38O7956C39O8038C44O8038C48O8081C54O8273C61O8304C69O8273C75O8329C80O8347C90O8363C93O8379C98O8363C102O8345C106O8406C111O8406C115O8432C120O8432C124O8464C128O8472,,
code-creation,Eval,10,334642,0x265cb8f17de,5, node:cluster:1:1,0x265cb8f1698,~
script-source,134,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x265cb8f17de,134,0,1316,C0O0C4O1316,,
code-creation,Function,10,334737,0x265cb8f1886,39, node:cluster:1:1,0x265cb8f1758,~
code-source-info,0x265cb8f1886,134,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,335209,0x265cb8f2446,5, node:internal/cluster/primary:1:1,0x265cb8f20c0,~
script-source,135,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x265cb8f2446,135,0,11181,C0O0C4O11181,,
code-creation,Function,10,335869,0x265cb8f2e0e,640, node:internal/cluster/primary:1:1,0x265cb8f23c0,~
code-source-info,0x265cb8f2e0e
code-creation,Eval,10,336301,0x265cb8f4456,5, node:internal/cluster/round_robin_handle:1:1,0x265cb8f4240,~
script-source,136,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address\x2C backlog);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x265cb8f4456,136,0,3423,C0O0C4O3423,,
code-creation,Function,10,336586,0x265cb8f481e,217, node:internal/cluster/round_robin_handle:1:1,0x265cb8f43d0,~
code-source-info,0x265cb8f481e,136,0,3423,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1307C172O1321C176O1999C185O2016C189O2419C198O2440C202O2807C211O2825C216O3422,,
code-creation,Eval,10,336777,0x265cb8f513e,5, node:internal/cluster/utils:1:1,0x265cb8f4fc8,~
script-source,137,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x265cb8f513e,137,0,1104,C0O0C4O1104,,
code-creation,Function,10,336884,0x265cb8f52fe,72, node:internal/cluster/utils:1:1,0x265cb8f50b8,~
code-source-info,0x265cb8f52fe,137,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,337094,0x265cb8f590e,5, node:internal/cluster/shared_handle:1:1,0x265cb8f5788,~
script-source,138,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x265cb8f590e,138,0,1147,C0O0C4O1147,,
code-creation,Function,10,337193,0x265cb8f5b46,89, node:internal/cluster/shared_handle:1:1,0x265cb8f5888,~
code-source-info,0x265cb8f5b46,138,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,337367,0x265cb8f612e,5, node:internal/cluster/worker:1:1,0x265cb8f5fb8,~
script-source,139,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x265cb8f612e,139,0,1370,C0O0C4O1370,,
code-creation,Function,10,337485,0x265cb8f6496,141, node:internal/cluster/worker:1:1,0x265cb8f60a8,~
code-source-info,0x265cb8f6496,139,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,337734,0x265cb8f6c2e,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x3cd9f30fc10,~
code-source-info,0x265cb8f6c2e,9,8495,9141,C0O8495C8O8514C14O8534C18O8541C19O8570C29O8570C34O8555C39O8619C42O8632C51O8664C53O8664C55O8695C62O8720C67O8695C72O8738C82O8738C87O8787C89O8840C102O8801C107O8799C111O9052C116O9059C121O9059C125O9084C130O9091C140O9091C146O9129C150O9136,,
code-creation,LazyCompile,10,337861,0x265cb8f7016,40, node:internal/bootstrap/loaders:273:15,0x265cb8f6b28,~
code-source-info,0x265cb8f7016,9,8868,8976,C0O8882C5O8895C10O8895C14O8924C24O8945C27O8958C32O8924C39O8975,,
code-creation,LazyCompile,10,337941,0x265cb8f716e,89,syncExports node:internal/bootstrap/loaders:287:14,0x3cd9f30fc80,~
code-source-info,0x265cb8f716e,9,9454,9797,C0O9483C5O9509C11O9539C13O9552C17O9544C22O9595C24O9600C28O9614C30O9629C35O9644C37O9668C42O9675C51O9728C54O9740C59O9766C67O9728C73O9675C79O9561C84O9526C88O9796,,
code-creation,LazyCompile,10,338007,0x265cb8f72d6,35,getOwn node:internal/bootstrap/loaders:180:16,0x3cd9f30f918,~
code-source-info,0x265cb8f72d6,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
code-creation,RegExp,3,338284,0x22380087d00,1532,(?:^|\\/)\\.?\\.$
code-creation,RegExp,3,338646,0x22380088360,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,338974,0x22380088a00,3380,dirname node:path:653:10,0x8a0fdcd768,^
code-source-info,0x22380088a00,41,21280,23908,,,
code-creation,Function,11,339027,0x223800897a0,1936,toNamespacedPath node:path:618:19,0x8a0fdcd6f8,^
code-source-info,0x223800897a0,41,20086,21201,,,
code-creation,Function,11,339060,0x22380089fa0,320,isFileType node:fs:205:20,0x5c9bb97010,^
code-source-info,0x22380089fa0,80,5489,5737,,,
code-creation,Function,11,339086,0x2238008a140,304,getOwn node:internal/bootstrap/loaders:180:16,0x3cd9f30f918,^
code-source-info,0x2238008a140,9,5677,5835,,,
code-creation,Function,11,339115,0x2238008a2e0,672,syncExports node:internal/bootstrap/loaders:287:14,0x3cd9f30fc80,^
code-source-info,0x2238008a2e0,9,9454,9797,,,
code-creation,Eval,10,339594,0x265cb8f7fa6,5, C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x265cb8f7e00,~
script-source,140,C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x265cb8f7fa6,140,0,494,C0O0C4O494,,
code-creation,Function,10,339661,0x265cb8f824e,157, C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x265cb8f7f20,~
code-source-info,0x265cb8f824e,140,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,339835,0x265cb8f871e,37,get SocketAddress node:net:1830:20,0x3e22006b880,~
code-source-info,0x265cb8f871e,101,50750,50858,C0O50760C14O50778C19O50811C26O50774C32O50832C36O50853,,
code-creation,Eval,10,339973,0x265cb8f8ade,5, node:worker_threads:1:1,0x265cb8f8998,~
script-source,141,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x265cb8f8ade,141,0,727,C0O0C4O727,,
code-creation,Function,10,340068,0x265cb8f8cee,180, node:worker_threads:1:1,0x265cb8f8a58,~
code-source-info,0x265cb8f8cee,141,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,340759,0x265cb8f9c76,5, node:internal/worker:1:1,0x265cb8f9698,~
script-source,142,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = {}) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x265cb8f9c76,142,0,15857,C0O0C4O15857,,
code-creation,Function,10,341724,0x265cb8fafc6,1185, node:internal/worker:1:1,0x265cb8f9bf0,~
code-source-info,0x265cb8fafc
code-creation,Eval,10,342264,0x265cb8fcf0e,5, node:internal/error_serdes:1:1,0x265cb8fcc48,~
script-source,143,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x265cb8fcf0e,143,0,4324,C0O0C4O4324,,
code-creation,Function,10,342536,0x265cb8fd32e,335, node:internal/error_serdes:1:1,0x265cb8fce88,~
code-source-info,0x265cb8fd32e,143,0,4324,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2171C302O2171C304O2376C305O2376C307O3408C308O3408C310O4268C317O4287C323O4303C329O4283C334O4323,,
tick,0x7ff7d717cd34,342971,0,0x0,2,0x7ff7d71c2b60,0x265cb8f828f,0x265cb8ec7e9,0x265cb8e879b,0x265cb8e7c9e,0x265cb8d5f27,0x265cb8d5af2,0x265cb8d49a3,0x265cb8d474d,0x3e22004656c,0x3e220042085
code-creation,LazyCompile,10,343237,0x265cb8fe7be,914,Socket node:net:285:16,0x3e220069748,~
code-source-info,0x265cb8fe7be
code-creation,LazyCompile,10,343533,0x265cb8fee8e,109,Duplex node:internal/streams/duplex:52:16,0x8a0fdf7fb0,~
script-source,55,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x265cb8fee8e,55,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
new,MemoryChunk,0x687c40000,262144
code-creation,LazyCompile,10,343999,0x265cb8ff536,220,Readable node:internal/streams/readable:181:18,0x1e6c46cc230,~
script-source,56,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x265cb8ff536,56,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
code-creation,LazyCompile,10,346590,0x687c43d6e,18,Stream node:internal/streams/legacy:10:16,0x1e6c46cea90,~
script-source,57,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x687c43d6e,57,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,347077,0x687c44636,354,ReadableState node:internal/streams/readable:78:23,0x1e6c46cc1e0,~
code-source-info,0x687c
code-creation,LazyCompile,10,347258,0x687c44a46,98,getHighWaterMark node:internal/streams/state:19:26,0x1e6c46d1578,~
script-source,60,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x687c44a46,60,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,347424,0x687c44cde,26,highWaterMarkFrom node:internal/streams/state:10:27,0x1e6c46d1418,~
code-source-info,0x687c44cde,60,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,347470,0x687c44db6,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x1e6c46d1528,~
code-source-info,0x687c44db6,60,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,347526,0x687c44e96,17,BufferList node:internal/streams/buffer_list:14:14,0x1e6c46d08d0,~
script-source,59,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x687c44e96,59,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,347977,0x687c455e6,98,construct node:internal/streams/destroy:225:19,0x8a0fdf6c70,~
script-source,54,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x687c455e6,54,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,348642,0x687c462be,266,Writable node:internal/streams/writable:219:18,0x1e6c46daec8,~
script-source,63,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x687c462be,63,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
code-creation,LazyCompile,10,350355,0x687c4832e,341,WritableState node:internal/streams/writable:77:23,0x1e6c46dad68,~
code-source-info,0x687c4832e
code-creation,LazyCompile,10,350558,0x687c4873e,23,resetBuffer node:internal/streams/writable:202:21,0x1e6c46dadb8,~
code-source-info,0x687c4873e,63,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,350657,0x687c48846,21,set node:internal/streams/readable:1174:8,0x1e6c46cd1d8,~
code-source-info,0x687c48846,56,36985,37117,C0O37037C6O37069C13O37097C15O37093C20O37116,,
code-creation,LazyCompile,10,350742,0x687c4899e,131,createHandle node:net:137:22,0x3e220069518,~
code-source-info,0x687c4899e,101,3745,4121,C0O3766C13O3766C18O3810C23O3810C28O3834C30O3843C35O3862C42O3886C46O3898C49O3912C57O3921C60O3935C67O3869C72O3949C73O3960C75O3969C80O3987C87O4010C91O4022C94O4035C102O4044C105O4057C112O3994C117O4071C118O4082C125O4088C130O4082,,
code-creation,LazyCompile,10,350830,0x687c48b3e,14,set node:net:1754:6,0x3e22006b558,~
code-source-info,0x687c48b3e,101,48768,48801,C0O48774C2O48786C7O48795C13O48799,,
code-creation,LazyCompile,10,350875,0x687c48c2e,8,get node:net:1753:6,0x3e22006b508,~
code-source-info,0x687c48c2e,101,48732,48760,C0O48737C2O48749C4O48748C7O48758,,
code-creation,LazyCompile,10,351023,0x687c48dde,196,Readable.on node:internal/streams/readable:874:33,0x1e6c46ccb10,~
code-source-info,0x687c48dde,56,28621,29547,C0O28647C5O28654C10O28664C15O28667C29O28667C35O28709C40O28730C42O28737C47O28922C55O28922C62O28948C65O28915C69O29044C75O29052C80O29075C85O29075C91O29095C93O29102C98O29136C104O29157C110O29185C112O29230C118O29209C122O29245C123O29259C127O29275C128O29297C132O29313C140O29340C145O29354C150O29313C155O29381C161O29400C164O29400C170O29445C176O29465C179O29473C187O29473C193O29533C195O29544,,
code-creation,LazyCompile,10,351158,0x687c49056,135,initSocketHandle node:net:254:26,0x3e2200696f8,~
code-source-info,0x687c49056,101,6586,7186,C0O6603C5O6603C9O6620C10O6635C14O6724C20O6745C27O6753C32O6767C36O6785C43O6802C45O6800C49O6821C51O6826C57O6864C62O6845C66O6843C70O6895C72O6900C74O6899C78O6915C80O6952C82O6957C84O6956C88O6977C90O7019C94O7038C99O7043C105O7077C106O7084C107O7094C109O7099C114O7108C118O7140C123O7148C128O7148C134O7185,,
code-creation,LazyCompile,10,351259,0x687c49286,120,undestroy node:internal/streams/destroy:160:19,0x8a0fdf6bb0,~
code-source-info,0x687c49286,54,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,351370,0x687c49486,32,getNewAsyncId node:net:156:23,0x3e220069568,~
code-source-info,0x687c49486,101,4149,4268,C0O4163C4O4196C14O4230C17O4230C22O4252C27O4252C31O4265,,
code-creation,LazyCompile,10,351439,0x687c49586,5,get node:internal/bootstrap/pre_execution:370:8,0xefeca584b8,~
code-source-info,0x687c49586,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,351502,0x687c4965e,5,get C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x265cb8f7fd8,~
code-source-info,0x687c4965e,140,392,404,C0O398C4O404,,
code-creation,Function,11,352441,0x2238008a5e0,1148,readPackageScope node:internal/modules/cjs/loader:321:26,0xefeca5b268,^
code-source-info,0x2238008a5e0,111,9239,9772,,,
code-creation,Function,11,352545,0x2238008aac0,216, node:vm:313:27,0x265cb8ee170,^
code-source-info,0x2238008aac0,88,10064,10115,,,
code-creation,Function,11,352574,0x2238008ac00,72,isUint32 node:internal/validators:40:18,0x3cd9f33ccc0,^
code-source-info,0x2238008ac00,15,835,882,,,
code-creation,Function,11,352601,0x2238008acc0,40,noop node:internal/util/debuglog:47:14,0x34b3cc61ca0,^
code-source-info,0x2238008acc0,22,1465,1473,,,
code-creation,Function,11,352642,0x2238008ad60,1020,debuglog node:internal/util/debuglog:71:18,0x34b3cc61d40,^
code-source-info,0x2238008ad60,22,2302,3328,,,
code-creation,Function,11,352671,0x2238008b1c0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3cd9f30fb20,^
code-source-info,0x2238008b1c0,9,7593,7692,,,
code-creation,Function,11,352698,0x2238008b320,72,isInt32 node:internal/validators:36:17,0x3cd9f33c7b0,^
code-source-info,0x2238008b320,15,769,814,,,
code-creation,Eval,10,352874,0x687c49e2e,5, C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x687c49ce8,~
script-source,144,C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x687c49e2e,144,0,85,C0O0C4O85,,
code-creation,Function,10,352926,0x687c49ece,56, C:\\Users\\Gonzalo\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x687c49da8,~
code-source-info,0x687c49ece,144,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,353187,0x687c4a5ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x3e220044790,~
code-source-info,0x687c4a5ae,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,353281,0x687c4a6d6,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x265cb8d3a78,~
code-source-info,0x687c4a6d6,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,353352,0x687c4ab06,68,resolveMainPath node:internal/modules/run_main:15:25,0x265cb8d3938,~
code-source-info,0x687c4ab06,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,353946,0x2238008b3e0,7720,realpathSync node:fs:2425:22,0x5c9bb993f0,^
code-source-info,0x2238008b3e0,80,66755,70785,,,
code-creation,Function,11,353983,0x2238008d280,160,checkListener node:events:258:23,0x34b3cc6b2f8,^
code-source-info,0x2238008d280,23,7884,7942,,,
code-creation,Function,11,354008,0x2238008d380,128,addListener node:events:618:58,0x34b3cc6ba38,^
code-source-info,0x2238008d380,23,18854,18928,,,
code-creation,LazyCompile,10,354382,0x687c4b796,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x265cb8d3988,~
code-source-info,0x687c4b796,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,354660,0x687c4ba0e,70,runMainESM node:internal/modules/run_main:47:20,0x265cb8d39d8,~
code-source-info,0x687c4ba0e,132,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,354763,0x687c4bc4e,222,loadESM node:internal/process/esm_loader:85:41,0xefeca618b0,~
code-source-info,0x687c4bc4e,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,354884,0x687c4c26e,284,initializeLoader node:internal/process/esm_loader:50:32,0xefeca61780,~
code-source-info,0x687c4c26e,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,354996,0x687c4c55e,175,handleMainPromise node:internal/modules/run_main:58:33,0x265cb8d3a28,~
code-source-info,0x687c4c55e,132,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,355150,0x687c4c79e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x10e5cc9aa00,~
code-source-info,0x687c4c79e
code-creation,LazyCompile,10,355263,0x687c4ca76,43,shift node:internal/fixed_queue:108:8,0x10e5cc9fd20,~
code-source-info,0x687c4ca76,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,355323,0x687c4cbbe,54,shift node:internal/fixed_queue:80:8,0x10e5cc9fb30,~
code-source-info,0x687c4cbbe,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,355393,0x687c4ccf6,42,emitBeforeScript node:internal/async_hooks:510:26,0x3cd9f338c78,~
code-source-info,0x687c4ccf6,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,355464,0x687c4ce46,180,pushAsyncContext node:internal/async_hooks:540:26,0x3cd9f338e20,~
code-source-info,0x687c4ce46,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,355583,0x687c4d05e,125, node:internal/child_process:708:22,0xefeca4ee98,~
code-source-info,0x687c4d05e,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,355665,0x687c4d21e,31,listenerCount node:events:854:23,0x34b3cc6bf80,~
code-source-info,0x687c4d21e,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,355714,0x687c4d326,13,destroyHooksExist node:internal/async_hooks:487:27,0x3cd9f338b88,~
code-source-info,0x687c4d326,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,355757,0x687c4d416,32,emitAfterScript node:internal/async_hooks:518:25,0x3cd9f338cc8,~
code-source-info,0x687c4d416,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,355827,0x687c4d57e,167,popAsyncContext node:internal/async_hooks:554:25,0x3cd9f338e70,~
code-source-info,0x687c4d57e,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,355915,0x687c4d75e,13,enabledHooksExist node:internal/async_hooks:475:27,0x3cd9f338a78,~
code-source-info,0x687c4d75e,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,356021,0x687c4d90e,77, node:internal/modules/run_main:51:29,0x687c4b948,~
code-source-info,0x687c4d90e,132,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,356142,0x687c4db8e,283,pathToFileURL node:internal/url:1458:23,0x10e5ccb9198,~
code-source-info,0x687c4db8e
code-creation,LazyCompile,10,356267,0x687c4de5e,136,URL node:internal/url:621:14,0x10e5ccb7fb0,~
code-source-info,0x687c4de5e,39,17620,18024,C13O17688C17O17717C19O17736C23O17769C30O17784C40O17798C42O17797C46O17820C50O17825C57O17840C60O17836C65O17834C69O17859C85O17912C93O17912C103O17969C117O17969C129O17859C135O18023,,
code-creation,LazyCompile,10,356340,0x687c4e03e,51,URLContext node:internal/url:161:14,0x10e5ccb7750,~
code-source-info,0x687c4e03e,39,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,356479,0x687c4e286,190,onParseComplete node:internal/url:533:25,0x10e5ccb7ce0,~
code-source-info,0x687c4e286,39,14738,15424,C0O14854C2O14859C4O14858C8O14872C10O14882C14O14894C16O14905C20O14920C22O14944C24O14942C29O14968C43O14933C47O14994C49O15018C51O15016C56O15042C70O15007C74O15068C76O15077C80O15088C82O15108C84O15106C89O15128C101O15136C103O15097C107O15150C109O15160C113O15172C115O15185C119O15200C121O15209C125O15220C127O15230C129O15229C134O15284C136O15289C141O15309C144O15305C149O15303C153O15333C155O15338C157O15337C163O15352C168O15361C172O15377C177O15399C179O15398C183O15377C189O15423,,
code-creation,LazyCompile,10,356719,0x687c4e70e,889,URLSearchParams node:internal/url:183:14,0x10e5ccb77f0,~
code-source-info,0x687c4e70e
code-creation,LazyCompile,10,356881,0x687c4ecee,35,initSearchParams node:internal/url:1019:26,0x10e5ccb8cf8,~
code-source-info,0x687c4ecee,39,28156,28277,C0O28173C4O28191C6O28195C11O28209C15O28220C16O28227C17O28236C19O28240C25O28256C29O28254C34O28276,,
code-creation,LazyCompile,10,357000,0x687c4ee9e,199,encodePathChars node:internal/url:1443:25,0x10e5ccb9148,~
code-source-info,0x687c4ee9e,39,40900,41605,C0O40916C8O40920C15O40965C22O41009C31O40976C38O41091C46O41109C52O41109C59O41155C66O41199C75O41166C82O41226C90O41230C97O41276C104O41320C113O41287C120O41345C128O41349C135O41395C142O41439C151O41406C158O41471C166O41475C173O41521C180O41565C189O41532C196O41586C198O41602,,
code-creation,LazyCompile,10,357101,0x687c4f0ce,70,set pathname node:internal/url:887:15,0x10e5ccb88e8,~
code-source-info,0x687c4f0ce,39,24614,24823,C0O24663C5O24686C9O24695C11O24694C16O24717C17O24724C18O24730C29O24742C38O24765C40O24764C49O24806C54O24806C63O24730C69O24822,,
code-creation,LazyCompile,10,357158,0x687c4f21e,31, node:internal/url:638:21,0x10e5ccb8088,~
code-source-info,0x687c4f21e,39,18137,18214,C0O18147C4O18160C6O18159C10O18169C19O18177C21O18175C26O18203C30O18209,,
code-creation,LazyCompile,10,357249,0x687c4f34e,108,onParsePathComplete node:internal/url:592:29,0x10e5ccb7ec0,~
code-source-info,0x687c4f34e,39,16756,17238,C0O16876C2O16881C4O16880C8O16894C10O16907C12O16905C17O16927C22O16941C24O16950C28O16963C35O16976C40O16973C46O17013C48O17022C52O17033C59O17047C61O17046C66O17043C70O17129C72O17142C74O17140C79O17162C84O17176C86O17185C90O17198C97O17211C102O17208C107O17237,,
code-creation,LazyCompile,10,357320,0x687c4f4ee,18,get href node:internal/url:736:11,0x10e5ccb8218,~
code-source-info,0x687c4f4ee,39,20900,20940,C0O20910C4O20922C6O20921C12O20930C17O20935,,
code-creation,LazyCompile,10,357443,0x687c4f7a6,393, node:internal/url:684:12,0x10e5ccb8178,~
code-source-info,0x687c4f7a
code-creation,LazyCompile,10,357633,0x687c4fc36,308,import node:internal/modules/esm/loader:372:15,0xefeca62f60,~
code-source-info,0x687c4fc36,114,11547,12117,C10O11547C18O11611C25O11611C30O11642C32O11655C41O11669C50O11714C55O11740C64O11740C70O11778C81O11973C90O11793C98O11783C100O11783C116O11821C123O11844C137O11821C143O11887C154O11888C160O11922C170O11923C175O11814C186O11765C201O12001C212O12022C217O12018C223O12007C235O12001C261O12055C270O12108C283O12112,,
code-creation,LazyCompile,10,357766,0x687c4ff9e,251,getModuleJob node:internal/modules/esm/loader:285:21,0xefeca62f10,~
code-source-info,0x687c4ff9e,114,8519,9368,C10O8519C18O8571C20O8604C22O8613C26O8622C33O8629C38O8796C49O8847C54O8847C59O8834C65O8940C82O8940C95O8929C118O8906C123O8914C128O9021C133O9031C138O9057C143O9031C150O9132C154O9177C159O9187C166O9213C176O9187C181O9235C185O9267C187O9278C208O9294C214O9352C226O9363,,
code-creation,LazyCompile,10,357914,0x687c503f6,425,resolve node:internal/modules/esm/loader:556:16,0xefeca630a0,~
code-source-info,0x687c503f6,114,17002,18544,C10O17002C32O17068C37O17068C75O17114C79O17146C91O17217C94O17217C100O17249C120O17255C125O17249C126O17379C133O17430C135O17435C140O17445C144O17474C146O17479C150O17490C157O17497C168O17542C174O17552C178O17604C185O17641C191O17662C197O17689C207O17587C220O17581C246O17749C252O17794C270O17800C275O17794C276O17929C281O17937C286O17964C297O18044C318O18050C323O18044C324O18195C330O18279C351O18285C356O18279C357O18424C366O18424C371O18496C378O18512C384O18527C400O18539,,
code-creation,LazyCompile,10,358277,0x687c50c4e,939,defaultResolve node:internal/modules/esm/resolve:1128:30,0xefeca6b478,~
code-source-info,0x687c50c4e
code-creation,LazyCompile,10,358460,0x687c53a8e,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:975:49,0xefeca6b298,~
code-source-info,0x687c53a8e,118,32653,32792,C0O32670C2O32684C7O32692C8O32705C9O32709C10O32722C16O32726C21O32735C22O32747C23O32751C26O32758C30O32789,,
code-creation,LazyCompile,10,358525,0x687c53ba6,81,isRelativeSpecifier node:internal/modules/esm/resolve:965:29,0xefeca6b248,~
code-source-info,0x687c53ba6,118,32350,32601,C0O32367C1O32380C7O32384C12O32414C19O32421C26O32439C32O32443C37O32452C38O32464C39O32470C41O32483C47O32487C52O32519C59O32526C66O32544C72O32548C77O32557C78O32569C79O32585C80O32598,,
code-creation,LazyCompile,10,358608,0x687c53d36,15,get protocol node:internal/url:772:15,0x10e5ccb8358,~
code-source-info,0x687c53d36,39,21820,21863,C0O21830C4O21842C6O21841C10O21851C14O21858,,
code-creation,LazyCompile,10,358692,0x687c53f2e,191,checkIfDisallowedImport node:internal/modules/esm/resolve:1059:33,0xefeca6b388,~
code-source-info,0x687c53f2e,118,35531,36707,C0O35573C4O35619C16O35648C24O35619C29O35692C36O35701C41O35739C48O35748C53O35777C56O35781C62O35940C66O35972C73O35981C78O36015C85O36024C90O36060C106O36066C111O36060C112O36252C117O36273C127O36280C128O36297C133O36314C138O36314C145O36358C161O36364C166O36358C167O36538C183O36544C188O36538C190O36706,,
code-creation,LazyCompile,10,358784,0x687c54196,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1107:37,0xefeca6b428,~
code-source-info,0x687c54196,118,36954,37425,C0O36996C4O37028C11O37037C16O37064C23O37073C30O37103C32O37158C39O37167C44O37199C51O37208C56O37248C63O37297C77O37356C88O37297C96O37254C101O37248C103O37424,,
code-creation,LazyCompile,10,358919,0x687c5434e,64,getConditionsSet node:internal/modules/esm/resolve:170:26,0xefeca6aac8,~
tick,0x7ffad1f6ce74,358976,0,0x0,3,0x7ff7d71d44c0,0x687c50e92,0x687c504c5,0x687c4fff0,0x687c4fcbf,0x687c4d955,0x687c4bc8d,0x7ff7d763b643,0x7ff7d6c24550,0x687c4c8a3
code-source-info,0x687c5434e,118,5549,5885,C0O5567C6O5614C8O5610C13O5641C18O5646C24O5681C40O5687C45O5681C46O5812C53O5819C58O5843C59O5852C63O5882,,
code-creation,LazyCompile,10,359101,0x687c544ce,171,moduleResolve node:internal/modules/esm/resolve:988:23,0xefeca6b2e8,~
code-source-info,0x687c544ce,118,32994,33785,C0O33069C7O33078C12O33103C19O33112C23O33235C25O33248C28O33252C34O33311C47O33322C55O33358C60O33384C66O33388C71O33404C83O33420C89O33407C99O33503C106O33514C115O33512C116O33556C120O33582C132O33593C138O33675C145O33684C150O33702C152O33718C153O33722C165O33729C170O33782,,
code-creation,LazyCompile,10,359304,0x687c5485e,490,finalizeResolution node:internal/modules/esm/resolve:397:28,0xefeca6ad48,~
code-source-info,0x687c5485e
code-creation,LazyCompile,10,359460,0x687c54c7e,78,get pathname node:internal/url:878:15,0x10e5ccb8878,~
code-source-info,0x687c54c7e,39,24396,24596,C0O24418C4O24423C6O24422C10O24438C14O24447C16O24446C21O24480C27O24484C30O24488C31O24502C36O24507C42O24514C47O24528C49O24538C50O24544C57O24555C60O24578C68O24555C77O24591,,
code-creation,LazyCompile,10,359621,0x687c54ed6,106,fileURLToPath node:internal/url:1416:23,0x10e5ccb90f8,~
code-source-info,0x687c54ed6,39,39764,40097,C0O39776C6O39811C13O39818C22O39841C25O39846C31O39872C49O39878C54O39872C55O39949C62O39958C67O39976C77O39982C82O39976C83O40021C92O40040C101O40068C105O40094,,
code-creation,LazyCompile,10,359728,0x687c5510e,150,get origin node:internal/url:749:13,0x10e5ccb82e8,~
code-source-info,0x687c5510e,39,21222,21802,C0O21306C4O21311C6O21310C10O21338C59O21386C64O21391C70O21398C78O21435C83O21455C89O21459C95O21443C101O21465C105O21472C110O21570C116O21591C117O21703C122O21735C127O21747C132O21757C137O21710C142O21763C143O21776C149O21797,,
code-creation,LazyCompile,10,359859,0x687c553de,261,getPathFromURLWin32 node:internal/url:1363:29,0x10e5ccb9058,~
code-source-info,0x687c553de
code-creation,LazyCompile,10,359957,0x687c55686,19,get hostname node:internal/url:844:15,0x10e5ccb86c8,~
code-source-info,0x687c55686,39,23572,23619,C0O23582C4O23594C6O23593C10O23603C18O23614,,
code-creation,LazyCompile,10,360073,0x687c559fe,30,tryStatSync node:internal/modules/esm/resolve:189:3,0xefeca6b4c8,~
code-source-info,0x687c559fe,118,6098,6164,C0O6153C5O6117C10O6108C21O6157C24O6153C29O6164,,
code-creation,LazyCompile,10,360157,0x687c55bb6,123,statSync node:fs:1543:18,0x5c9bb984e8,~
code-source-info,0x687c55bb6,80,40711,41125,C7O40711C16O40774C21O40781C26O40820C33O40822C40O40847C45O40855C52O40860C55O40871C60O40871C66O40933C76O40855C82O40973C88O40988C96O41001C102O41030C103O41047C104O41056C109O41056C113O41088C118O41095C122O41122,,
code-creation,LazyCompile,10,360432,0x687c55dc6,64,hasNoEntryError node:fs:1480:25,0x5c9bb983b8,~
code-source-info,0x687c55dc6,80,39085,39287,C0O39104C6O39132C11O39148C16O39132C21O39161C27O39175C36O39179C39O39192C40O39211C46O39236C51O39242C58O39247C61O39260C62O39271C63O39284,,
code-creation,LazyCompile,10,360606,0x687c55efe,576,getStatsFromBinding node:internal/fs/utils:531:29,0x5c9bba24e0,~
code-source-info,0x687c55efe
code-creation,LazyCompile,10,360738,0x687c5632e,16,isBigUint64Array node:internal/util/types:53:26,0x34b3cc47880,~
code-source-info,0x687c5632e,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,360787,0x687c5644e,19,msFromTimeSpec node:internal/fs/utils:447:24,0x5c9bba2208,~
code-source-info,0x687c5644e,81,11486,11547,C0O11503C2O11516C4O11514C10O11535C12O11533C15O11526C18O11544,,
code-creation,LazyCompile,10,360860,0x687c5668e,116,Stats node:internal/fs/utils:496:15,0x5c9bba2400,~
code-source-info,0x687c5668e,81,13278,13819,C0O13418C41O13418C46O13548C48O13561C52O13575C54O13588C58O13602C60O13615C64O13629C66O13646C70O13664C73O13677C77O13675C81O13701C84O13714C88O13712C92O13738C95O13751C99O13749C103O13775C106O13792C110O13790C115O13818,,
code-creation,LazyCompile,10,360934,0x687c56866,62,StatsBase node:internal/fs/utils:401:19,0x5c9bba1dd8,~
code-source-info,0x687c56866,81,10347,10648,C0O10435C2O10444C6O10454C8O10464C12O10475C14O10486C18O10498C20O10507C24O10517C26O10526C30O10536C32O10546C36O10557C38O10570C42O10584C44O10593C48O10603C50O10613C54O10624C56O10636C61O10647,,
code-creation,LazyCompile,10,361034,0x687c56a5e,29,dateFromMs node:internal/fs/utils:461:20,0x5c9bba22a8,~
code-source-info,0x687c56a5e,81,12012,12059,C0O12022C7O12038C10O12038C17O12049C23O12029C28O12056,,
code-creation,LazyCompile,10,361095,0x687c56b66,16,StatsBase.isDirectory node:internal/fs/utils:415:43,0x5c9bba1e28,~
code-source-info,0x687c56b66,81,10694,10745,C0O10714C7O10733C10O10714C15O10742,,
code-creation,LazyCompile,10,361149,0x687c56c7e,54,Stats._checkModeProperty node:internal/fs/utils:518:46,0x5c9bba2450,~
code-source-info,0x687c56c7e,81,14177,14405,C0O14193C8O14224C10O14220C17O14248C19O14244C26O14277C28O14273C33O14295C34O14308C35O14374C42O14381C44O14379C50O14389C53O14402,,
code-creation,LazyCompile,10,361202,0x687c56db6,16,StatsBase.isFile node:internal/fs/utils:419:38,0x5c9bba1eb8,~
code-source-info,0x687c56db6,81,10787,10838,C0O10807C7O10826C10O10807C15O10835,,
code-creation,Function,11,361726,0x2238008d460,568,handleErrorFromBinding node:internal/fs/utils:341:32,0x5c9bba1ce8,^
code-source-info,0x2238008d460,81,8304,8815,,,
code-creation,Function,11,361764,0x2238008d700,152,hasHooks node:internal/async_hooks:471:18,0x3cd9f338a28,^
code-source-info,0x2238008d700,13,16531,16579,,,
code-creation,Function,11,361796,0x2238008d800,108,isEmpty node:internal/fixed_queue:67:10,0x10e5cc9fa10,^
code-source-info,0x2238008d800,34,3150,3197,,,
code-creation,Function,11,361853,0x2238008d8e0,1916,getPathFromURLWin32 node:internal/url:1363:29,0x10e5ccb9058,^
code-source-info,0x2238008d8e0,39,37816,39214,,,
code-creation,Function,11,361879,0x2238008e0c0,164,isUint8Array node:internal/util/types:13:22,0x34b3cc47418,^
code-source-info,0x2238008e0c0,17,269,356,,,
code-creation,Function,11,361910,0x2238008e1e0,188,isURLInstance node:internal/url:1495:23,0x10e5ccb9208,^
code-source-info,0x2238008e1e0,39,42921,43020,,,
code-creation,LazyCompile,10,362161,0x687c57326,37,get search node:internal/url:896:13,0x10e5ccb8958,~
code-source-info,0x687c57326,39,24839,24970,C0O24867C4O24872C6O24871C10O24857C15O24887C19O24915C24O24930C26O24940C27O24946C32O24957C36O24965,,
code-creation,LazyCompile,10,362226,0x687c5746e,37,get hash node:internal/url:926:11,0x10e5ccb8aa8,~
code-source-info,0x687c5746e,39,25601,25744,C0O25632C4O25637C6O25636C10O25619C15O25652C19O25686C24O25701C26O25711C27O25717C32O25728C36O25739,,
code-creation,LazyCompile,10,362381,0x687c575fe,181,set search node:internal/url:903:13,0x10e5ccb89c8,~
code-source-info,0x687c575fe,39,24986,25509,C0O25014C4O25019C6O25018C10O25034C17O25043C23O25069C25O25080C30O25097C31O25107C35O25122C44O25136C46O25135C51O25132C57O25178C58O25188C64O25192C69O25201C79O25210C86O25250C88O25260C92O25273C101O25286C106O25283C110O25314C114O25337C125O25351C134O25385C142O25385C154O25337C159O25459C168O25481C170O25480C174O25459C180O25508,,
code-creation,LazyCompile,10,362472,0x687c577f6,41,toUSVString node:internal/util:59:21,0x34b3cc45110,~
code-source-info,0x687c577f6,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,362590,0x687c5796e,144,set hash node:internal/url:933:11,0x10e5ccb8b10,~
code-source-info,0x687c5796e,39,25758,26205,C0O25784C4O25789C6O25788C10O25839C15O25862C17O25882C18O25895C22O25910C31O25924C33O25923C38O25920C42O25955C43O25962C44O25975C45O25983C51O25987C56O25996C66O26003C73O26039C75O26052C79O26063C88O26076C93O26073C97O26105C108O26117C117O26150C125O26150C137O26105C143O26204,,
code-creation,LazyCompile,10,362673,0x687c57b36,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1100:39,0xefeca6b3d8,~
code-source-info,0x687c57b36,118,36749,36914,C0O36768C7O36777C12O36796C19O36805C24O36831C31O36840C36O36860C43O36866C48O36860C50O36913,,
code-creation,LazyCompile,10,362774,0x687c57cce,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:103:39,0xefeca6f6b8,~
code-source-info,0x687c57cce,119,3548,3759,C0O3583C7O3583C13O3600C20O3635C23O3660C28O3605C35O3676C36O3688C37O3692C42O3723C46O3715C58O3732C63O3756,,
code-creation,LazyCompile,10,362830,0x687c5820e,18,toString node:internal/url:732:11,0x10e5ccb81c8,~
code-source-info,0x687c5820e,39,20846,20886,C0O20856C4O20868C6O20867C12O20876C17O20881,,
code-creation,LazyCompile,10,362977,0x687c585b6,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:51:37,0xefeca6f618,~
code-source-info,0x687c585b6,119,1588,2922,C0O1639C5O1639C10O1674C15O1674C20O1696C22O1704C27O1722C32O1729C39O1749C50O1786C51O1812C58O1830C62O1840C64O1852C66O1866C67O1872C74O1908C79O2007C83O2025C84O2042C85O2065C88O2074C93O2078C100O2098C107O2118C112O2150C117O2150C122O2206C127O2206C132O2254C139O2275C142O2291C147O2275C156O2254C162O2324C167O2395C171O2491C182O2470C191O2568C201O2545C207O2621C216O2747C229O2765C239O2708C243O2799C259O2805C264O2799C265O2874C270O2881C279O2919,,
code-creation,LazyCompile,10,363191,0x687c589b6,275,extname node:path:836:10,0x8a0fdcd838,~
code-source-info,0x687c589b
code-creation,LazyCompile,10,363305,0x687c58c46,13,getPackageType node:internal/modules/esm/resolve:848:24,0xefeca6b108,~
code-source-info,0x687c58c46,118,28538,28631,C0O28571C3O28571C8O28623C12O28628,,
code-creation,LazyCompile,10,363393,0x687c58e9e,173,getPackageScopeConfig node:internal/modules/esm/resolve:253:31,0xefeca6ab68,~
code-source-info,0x687c58e9e,118,7802,8901,C0O7839C13O7839C19O7938C24O7953C32O7957C39O8035C41O8069C46O8086C49O8086C54O8069C60O8195C66O8203C68O8224C69O8259C72O8280C85O8297C91O8506C96O8538C100O8515C105O8548C107O7879C110O8587C115O8587C120O8643C127O8661C132O8709C137O8731C142O8775C147O8800C154O8820C159O8837C164O8837C170O8877C172O8898,,
code-creation,LazyCompile,10,363621,0x687c592be,331,getPackageConfig node:internal/modules/esm/resolve:197:26,0xefeca6ab18,~
code-source-info,0x687c592be,118,6331,7694,C0O6377C5O6394C10O6394C16O6408C18O6443C20O6459C21O6483C26O6501C31O6501C37O6511C42O6523C44O6578C51O6598C56O6639C61O6663C66O6711C71O6738C78O6762C83O6779C88O6779C94O6810C96O6831C97O6846C102O6873C107O6887C115O6885C125O6932C137O6991C144O7002C163O7029C168O7043C174O7029C178O7027C185O7076C192O6938C197O6932C198O7108C203O7117C208O7123C213O7129C218O7162C223O7190C233O7243C235O7267C241O7297C243O7318C249O7348C251O7423C253O7432C260O7453C265O7469C268O7511C275O7529C281O7559C287O7570C293O7581C299O7592C305O7606C312O7624C317O7641C322O7641C328O7670C330O7691,,
code-creation,Function,11,363874,0x2238008e300,956,URL node:internal/url:621:14,0x10e5ccb7fb0,^
code-source-info,0x2238008e300,39,17620,18024,,,
code-creation,Function,11,363914,0x2238008e720,280, node:internal/url:638:21,0x10e5ccb8088,^
code-source-info,0x2238008e720,39,18137,18214,,,
code-creation,Function,11,363941,0x2238008e8a0,156,get protocol node:internal/url:772:15,0x10e5ccb8358,^
code-source-info,0x2238008e8a0,39,21820,21863,,,
code-creation,Function,11,363969,0x2238008e9a0,340,URLContext node:internal/url:161:14,0x10e5ccb7750,^
code-source-info,0x2238008e9a0,39,3883,4105,,,
code-creation,Function,11,364014,0x2238008eb60,1468,onParseComplete node:internal/url:533:25,0x10e5ccb7ce0,^
code-source-info,0x2238008eb60,39,14738,15424,,,
code-creation,LazyCompile,10,364259,0x687c59cf6,78,get node:internal/modules/esm/module_map:18:6,0xefeca65520,~
code-source-info,0x687c59cf6,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,364361,0x687c59eee,111,#createModuleJob node:internal/modules/esm/loader:321:19,0xefeca62d30,~
code-source-info,0x687c59eee,114,10035,10886,C0O10035C17O10108C22O10555C31O10598C37O10598C42O10657C70O10657C76O10810C79O10815C84O10825C92O10851C103O10825C108O10870C110O10881,,
code-creation,LazyCompile,10,364501,0x687c5a216,196,ModuleJob node:internal/modules/esm/module_job:56:14,0xefeca663b0,~
code-source-info,0x687c5a216,116,1367,3272,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2948C152O2962C155O2960C159O3072C169O3099C178O3107C181O3072C186O3237C190O3255C195O3271,,
code-creation,LazyCompile,10,364632,0x687c5ac8e,193,moduleProvider node:internal/modules/esm/loader:322:28,0x687c59e18,~
code-source-info,0x687c5ac8e,114,10108,10527,C10O10108C18O10206C21O10217C26O10222C33O10238C39O10255C43O10217C57O10206C80O10165C85O10187C90O10312C97O10324C102O10324C108O10351C110O10379C125O10385C130O10379C131O10452C153O10459C168O10520,,
code-creation,LazyCompile,10,364777,0x687c5b09e,397,load node:internal/modules/esm/loader:401:13,0xefeca62fb0,~
code-source-info,0x687c5b09e,114,12495,13760,C10O12495C60O12544C62O12549C67O12557C71O12584C73O12589C77O12598C84O12605C95O12648C101O12656C105O12681C114O12687C127O12681C153O12731C159O12772C177O12778C182O12772C183O12907C188O12922C193O12954C198O12999C210O12999C216O13108C225O13154C229O13171C242O13114C247O13108C248O13214C254O13255C275O13261C280O13255C281O13406C296O13481C299O13481C309O13517C312O13517C318O13550C337O13556C342O13550C343O13709C350O13725C356O13740C372O13755,,
code-creation,LazyCompile,10,364904,0x687c5b466,226,defaultLoad node:internal/modules/esm/load:13:27,0xefeca78838,~
code-source-info,0x687c5b466,125,380,859,C10O380C18O408C23O452C28O465C33O494C38O521C43O536C56O530C84O578C98O578C103O634C105O651C112O680C117O707C121O732C126O759C131O774C144O768C172O816C179O830C185O843C201O856,,
code-creation,LazyCompile,10,365001,0x687c5b7e6,150,validateAssertions node:internal/modules/esm/assert:55:28,0xefeca684b0,~
code-source-info,0x687c5b7e6,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,365149,0x687c5bb56,430,defaultGetSource node:internal/modules/esm/get_source:30:32,0xefeca78f78,~
code-source-info,0x687c5bb56,126,903,1881,C10O903C18O956C25O956C31O977C33O999C40O1008C45O1028C50O1043C62O1037C92O1087C99O1096C104O1130C111O1150C114O1175C119O1130C125O1191C127O1212C134O1218C139O1212C140O1267C147O1278C154O1299C161O1319C164O1319C171O1345C180O1308C188O1384C194O1432C201O1441C206O1469C213O1478C218O1515C223O1521C236O1515C262O1575C274O1565C304O1598C311O1647C324O1707C343O1647C350O1604C355O1598C356O1778C363O1788C372O1807C377O1814C382O1823C387O1823C393O1864C405O1878,,
code-creation,LazyCompile,10,365342,0x687c5c126,196,readFile node:internal/fs/promises:788:24,0xefeca7b298,~
code-source-info,0x687c5c126,127,22848,23194,C10O22848C18O22869C23O22890C28O22879C35O22939C44O22957C46O22977C48O22966C53O22994C56O23001C71O23031C72O23037C75O23058C80O23037C84O23083C98O23089C111O23083C137O23117C145O23152C151O23184C156O23124C171O23191,,
code-creation,LazyCompile,10,365424,0x687c5dd3e,29,checkAborted node:internal/fs/promises:320:22,0xefeca7a5c8,~
code-source-info,0x687c5dd3e,127,7483,7549,C0O7497C7O7507C16O7523C21O7529C26O7523C28O7548,,
code-creation,LazyCompile,10,365493,0x687c5dee6,182,open node:internal/fs/promises:450:20,0xefeca7a7a8,~
code-source-info,0x687c5dee6,127,11766,12079,C10O11766C18O11791C23O11798C29O11845C34O11845C39O11870C55O11877C62O11916C69O11950C72O11958C79O11973C82O11984C87O11984C95O12061C104O11958C117O11944C142O11923C157O12076,,
code-creation,LazyCompile,10,366054,0x687c5e2de,263,link node:internal/modules/esm/module_job:69:18,0x687c5a098,~
code-source-info,0x687c5e2de,116,1937,2889,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2728C140O2765C151O2786C156O2782C162O2771C174O2765C199O2825C210O2847C218O2843C224O2832C238O2882,,
code-creation,LazyCompile,10,366144,0x687c5e566,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:406:37,0x3cd9f30a548,~
code-source-info,0x687c5e566,6,11986,12074,C0O12018C13O12018C18O12074,,
code-creation,LazyCompile,10,366245,0x687c5e73e,216,set node:internal/modules/esm/module_map:23:6,0xefeca65570,~
code-source-info,0x687c5e73e,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,366332,0x687c5e946,10, node:internal/modules/esm/module_map:9:63,0xefeca65480,~
code-source-info,0x687c5e946,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,366382,0x687c5ea0e,10, node:internal/modules/esm/loader:381:15,0x687c4faa0,~
code-source-info,0x687c5ea0e,114,11893,11911,C0O11906C5O11906C9O11911,,
code-creation,LazyCompile,10,366510,0x687c5ee66,433,run node:internal/modules/esm/module_job:193:12,0xefeca664a0,~
code-source-info,0x687c5ee66,116,7177,8381,C10O7177C18O7198C23O7198C35O7187C58O7234C61O7265C66O7301C71O7308C76O7308C90O7290C128O7368C133O7373C143O7380C152O7415C158O7453C163O7415C169O7474C182O7484C186O7521C196O7553C204O7525C211O7588C224O7598C228O7688C235O7719C240O7726C248O7688C259O7758C267O7808C272O7815C277O7758C292O7836C297O7891C302O7919C307O7926C312O7892C318O7959C325O7964C330O7991C344O8140C358O8082C364O8163C370O8243C376O8001C380O8324C382O8324C383O8345C388O8367C408O8376,,
code-creation,LazyCompile,10,366608,0x687c5f196,24,instantiate node:internal/modules/esm/module_job:102:14,0xefeca66400,~
code-source-info,0x687c5f196,116,3289,3428,C0O3308C6O3370C11O3370C15O3363C19O3410C23O3423,,
code-creation,LazyCompile,10,366826,0x687c5f89e,935,_instantiate node:internal/modules/esm/module_job:109:21,0xefeca66450,~
code-source-info,0x687c5f89e,116,3452,7162,C4O3452C29O3482C37O3482C42O3482C44O3535C48O3535C50O3847C54O3853C67O3847C97O3905C105O3933C111O3956C118O3971C126O4008C136O4008C142O4036C147O4084C153O4091C159O4109C165O4067C172O4148C178O4155C184O4155C203O4205C215O4205C219O4550C227O4555C236O4592C244O4618C254O4592C261O4730C273O4753C283O4730C289O4798C298O4843C313O4798C319O4942C331O4977C343O4942C350O4914C358O4933C366O5105C372O5112C378O5112C393O5094C418O5077C423O5188C428O5498C434O5505C440O5505C454O5487C479O5463C490O5611C492O5622C497O5675C499O5685C503O6010C511O6031C517O6010C523O6100C529O6136C533O6159C546O6136C552O6211C562O6240C581O6300C592O6280C599O6362C606O6440C617O6558C632O6595C640O6647C659O6519C662O6221C666O6718C678O6741C688O6718C694O6766C706O6798C714O6778C718O6820C726O6830C734O6830C739O6828C743O6893C745O6893C746O6944C778O6927C809O6927C812O7105C816O7134C818O7132C822O6916C906O7161,,
code-creation,LazyCompile,10,367032,0x687c5ff16,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:111:38,0x687c5f5e0,~
code-source-info,0x687c5ff16,116,3535,3840,C10O3535C18O3565C23O3581C28O3581C35O3608C46O3615C47O3632C52O3644C57O3644C62O3706C74O3690C100O3721C111O3743C118O3771C123O3805C126O3771C134O3739C140O3728C154O3833,,
code-creation,LazyCompile,10,367278,0x687c602ae,627,processPromiseRejections node:internal/process/promises:211:34,0x10e5cc9e438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x687c602ae
code-creation,LazyCompile,10,368057,0x687c61206,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x10e5cc9d9a8,~
code-source-info,0x687c61206,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,368177,0x687c61326,112,FileHandle node:internal/fs/promises:117:14,0xefeca7b2e8,~
code-source-info,0x687c61326,127,2979,3152,C3O2999C11O2999C40O3013C45O3018C50O3027C54O3046C59O3051C67O3058C69O3082C77O3056C81O3098C86O3103C91O3110C95O3120C100O3125C104O3140C111O3151,,
code-creation,LazyCompile,10,368247,0x687c614a6,63,MixedEventEmitter node:internal/event_target:964:16,0x265cb8c5d18,~
code-source-info,0x687c614a6,44,26760,26894,C0O26760C8O26779C15O26786C21O26822C25O26831C29O26822C41O26845C48O26867C54O26845C62O26893,,
code-creation,LazyCompile,10,368494,0x687c6178e,601,readFileHandle node:internal/fs/promises:360:30,0xefeca7a668,~
code-source-info,0x687c6178e
code-creation,LazyCompile,10,368635,0x687c61bd6,8,get fd node:internal/fs/promises:130:9,0xefeca7b3a0,~
code-source-info,0x687c61bd6,127,3229,3261,C0O3239C2O3251C4O3250C7O3256,,
code-creation,LazyCompile,10,368717,0x687c61d56,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:418:43,0x3cd9f30a600,~
code-source-info,0x687c61d56,6,12582,12862,C0O12582C13O12718C27O12718C32O12862,,
code-creation,LazyCompile,10,368776,0x687c61ee6,46, node:internal/per_context/primordials:421:15,0x687c61ca8,~
code-source-info,0x687c61ee6,6,12730,12857,C0O12847C14O12745C20O12820C28O12827C34O12846C39O12847C45O12857,,
code-creation,LazyCompile,10,368828,0x687c6202e,27,SafePromise node:internal/per_context/primordials:402:16,0x3cd9f30a4f8,~
code-source-info,0x687c6202e,6,11906,11937,C3O11919C7O11925C11O11919C26O11936,,
code-creation,LazyCompile,10,368875,0x687c62126,22, node:internal/per_context/primordials:422:21,0x687c61e30,~
code-source-info,0x687c62126,6,12761,12810,C0O12771C16O12771C21O12810,,
code-creation,LazyCompile,10,368956,0x687c6221e,19,allocUnsafeSlow node:buffer:383:50,0x34b3cc771a8,~
code-source-info,0x687c6221e,24,11607,11675,C0O11619C5O11619C9O11640C14O11647C18O11672,,
code-creation,LazyCompile,10,369013,0x687c62346,71,createUnsafeBuffer node:internal/buffer:1059:28,0x10e5cc8bd18,~
code-source-info,0x687c62346,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,369192,0x687c62636,248,close node:internal/fs/promises:190:11,0xefeca7d4f0,~
code-source-info,0x687c62636,127,4415,5236,C0O4428C7O4437C9O4436C15O4442C20O4459C27O4466C30O4483C31O4498C38O4507C40O4506C45O4532C52O4544C54O4543C57O4559C58O4574C65O4579C73O4585C77O4594C84O4603C86O4602C91O4610C96O4626C103O4631C108O4636C112O4649C119O4654C126O4671C136O4714C138O4713C142O4723C147O4723C157O4671C162O4669C168O4815C175O4820C182O4837C189O4879C199O4875C210O4837C215O4835C219O5179C222O5184C230O5184C235O5204C242O5216C244O5215C247O5231,,
code-creation,LazyCompile,10,369350,0x687c6299e,17, node:internal/fs/promises:204:9,0x687c62420,~
code-source-info,0x687c6299e,127,4741,4783,C0O4749C7O4754C11O4769C16O4782,,
code-creation,LazyCompile,10,369504,0x687c62d36,193,moduleStrategy node:internal/modules/esm/translators:112:56,0x265cb8c8ce0,~
code-source-info,0x687c62d36,129,3253,3705,C0O3253C23O3280C36O3280C41O3325C46O3334C52O3356C59O3356C64O3393C76O3429C81O3393C85O3455C106O3455C112O3504C119O3515C124O3527C129O3531C134O3568C146O3653C150O3527C156O3688C168O3702,,
code-creation,LazyCompile,10,369594,0x687c63aae,83,assertBufferSource node:internal/modules/esm/translators:74:28,0x265cb8c8ab0,~
code-source-info,0x687c63aae,129,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,369652,0x687c63c06,31,lazyTypes node:internal/modules/esm/translators:22:19,0x265cb8c8a10,~
code-source-info,0x687c63c06,129,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,369713,0x687c63d1e,72,stringify node:internal/modules/esm/translators:90:19,0x265cb8c8b00,~
code-source-info,0x687c63d1e,129,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,369851,0x687c63f0e,206,TextDecoder node:internal/encoding:380:16,0x10e5cc93fe8,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x687c63f0e,27,10699,11509,C15O10699C21O10743C25O10776C35O10791C43O10776C48O10927C53O10927C58O10966C60O10998C69O11004C74O10998C75O11067C77O11077C81O11127C94O11135C103O11188C116O11200C125O11265C130O11265C136O11298C138O11333C147O11339C152O11333C153O11390C157O11395C161O11405C165O11420C169O11425C174O11434C178O11451C182O11456C187O11464C191O11480C195O11485C200O11496C205O11508,,
code-creation,LazyCompile,10,371085,0x687c65396,55,getEncodingFromLabel node:internal/encoding:314:30,0x10e5cc93d20,~
code-source-info,0x687c65396,27,8982,9136,C0O9007C5O9017C10O9017C16O9032C18O9055C20O9066C21O9070C26O9087C34O9117C39O9117C44O9091C49O9087C54O9133,,
code-creation,LazyCompile,10,371249,0x687c656a6,227,decode node:internal/encoding:409:11,0x10e5cc94108,~
code-source-info,0x687c656a6,27,11525,12371,C8O11534C25O11564C30O11564C34O11594C41O11598C47O11634C52O11642C56O11654C61O11655C69O11682C76O11687C82O11724C102O11730C107O11724C108O11904C118O11919C126O11904C131O12055C133O12065C137O12113C153O12126C159O12170C168O12183C170O12182C180O12170C186O12215C190O12255C197O12304C207O12261C212O12255C213O12347C221O12347C226O12364,,
code-creation,LazyCompile,10,371334,0x687c658ce,37,validateDecoder node:internal/encoding:65:25,0x10e5cc93c80,~
code-source-info,0x687c658ce,27,1357,1461,C0O1368C7O1391C9O1390C14O1401C19O1416C29O1422C34O1416C36O1460,,
code-creation,LazyCompile,10,371437,0x687c65a1e,12,slice node:buffer:603:12,0x34b3cc77ac8,~
code-source-info,0x687c65a1e,24,17607,17653,C0O17632C5O17632C11O17653,,
code-creation,LazyCompile,10,371510,0x687c65b06,10, node:internal/modules/esm/translators:42:63,0x265cb8c8c90,~
code-source-info,0x687c65b06,129,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,371621,0x687c65e46,72, file:///C:/Users/Gonzalo/Desktop/Loggers%20y%20Gzip/src/functions/randomNumbersGenerator.js:1:1,0x687c65c50,~
script-source,145,file:///C:/Users/Gonzalo/Desktop/Loggers%20y%20Gzip/src/functions/randomNumbersGenerator.js,function generateRandomNumbers(n) {\n    const randomNumbers = [];\n    \n    for (let i = 0; i < n; i++) {\n        randomNumbers.push(\n            Math.floor(Math.random() * 1000)\n        )\n    }\n    return randomNumbers;\n}\n\nprocess.on('message'\x2C (num) => {\n    const numbers = generateRandomNumbers(num);\n    process.send(numbers);\n})\n\n\n
code-source-info,0x687c65e46,145,0,336,C10O0C23O0C43O0C47O223C51O231C64O231C71O336,,
code-creation,LazyCompile,10,371870,0x687c66256,44,refCounted node:internal/child_process:539:13,0x3e220063f48,~
code-source-info,0x687c66256,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,371952,0x687c66376,15, node:internal/modules/esm/loader:382:15,0x687c4faf0,~
code-source-info,0x687c66376,114,11928,11965,C0O11931C5O11951C10O11951C14O11965,,
code-creation,LazyCompile,10,372091,0x687c664e6,307,removeListener node:events:689:28,0x34b3cc6bcd8,~
code-source-info,0x687c664e
code-creation,LazyCompile,10,372218,0x687c667ce,64,stopListeningIfSignal node:internal/process/signal:43:31,0x3cd9f33dd70,~
code-source-info,0x687c667ce,93,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,372274,0x687c66916,30,onRemoveListener node:child_process:178:57,0xefeca48c20,~
code-source-info,0x687c66916,99,5444,5535,C0O5458C2O5467C9O5489C14O5507C19O5515C24O5515C29O5534,,
tick,0x7ffad1f6fb64,374984,0,0x0,8
tick,0x7ffad1f6fb64,390000,0,0x0,8
tick,0x7ffad1f6fb64,405993,0,0x0,8
tick,0x7ffad1f6fb64,421021,0,0x0,8
tick,0x7ffad1f6fb64,437060,0,0x0,8
tick,0x7ffad1f6fb64,453048,0,0x0,8
tick,0x7ffad1f6fb64,469077,0,0x0,8
tick,0x7ffad1f6fb64,484077,0,0x0,8
tick,0x7ffad1f6fb64,499102,0,0x0,8
tick,0x7ffad1f6fb64,514106,0,0x0,8
tick,0x7ffad1f6fb64,530149,0,0x0,8
tick,0x7ffad1f6fb64,545149,0,0x0,8
tick,0x7ffad1f6fb64,560155,0,0x0,8
tick,0x7ffad1f6fb64,576172,0,0x0,8
tick,0x7ffad1f6fb64,592215,0,0x0,8
tick,0x7ffad1f6fb64,607257,0,0x0,8
tick,0x7ffad1f6fb64,622224,0,0x0,8
tick,0x7ffad1f6fb64,638249,0,0x0,8
tick,0x7ffad1f6fb64,654256,0,0x0,8
tick,0x7ffad1f6fb64,669255,0,0x0,8
tick,0x7ffad1f6fb64,685264,0,0x0,8
tick,0x7ffad1f6fb64,701268,0,0x0,8
tick,0x7ffad1f6fb64,716301,0,0x0,8
tick,0x7ffad1f6fb64,732301,0,0x0,8
tick,0x7ffad1f6fb64,748313,0,0x0,8
tick,0x7ffad1f6fb64,763373,0,0x0,8
tick,0x7ffad1f6fb64,778335,0,0x0,8
tick,0x7ffad1f6fb64,793375,0,0x0,8
tick,0x7ffad1f6fb64,808399,0,0x0,8
tick,0x7ffad1f6fb64,823406,0,0x0,8
tick,0x7ffad1f6fb64,839415,0,0x0,8
tick,0x7ffad1f6fb64,855430,0,0x0,8
tick,0x7ffad1f6fb64,871437,0,0x0,8
tick,0x7ffad1f6fb64,887462,0,0x0,8
tick,0x7ffad1f6fb64,902501,0,0x0,8
tick,0x7ffad1f6fb64,917482,0,0x0,8
tick,0x7ffad1f6fb64,933511,0,0x0,8
tick,0x7ffad1f6fb64,949552,0,0x0,8
tick,0x7ffad1f6fb64,965532,0,0x0,8
tick,0x7ffad1f6fb64,981534,0,0x0,8
tick,0x7ffad1f6fb64,996563,0,0x0,8
tick,0x7ffad1f6fb64,1012563,0,0x0,8
tick,0x7ffad1f6fb64,1027570,0,0x0,8
tick,0x7ffad1f6fb64,1043597,0,0x0,8
tick,0x7ffad1f6fb64,1059605,0,0x0,8
tick,0x7ffad1f6fb64,1075644,0,0x0,8
tick,0x7ffad1f6fb64,1091649,0,0x0,8
tick,0x7ffad1f6fb64,1107669,0,0x0,8
tick,0x7ffad1f6fb64,1122672,0,0x0,8
tick,0x7ffad1f6fb64,1137703,0,0x0,8
tick,0x7ffad1f6fb64,1152721,0,0x0,8
tick,0x7ffad1f6fb64,1167722,0,0x0,8
tick,0x7ffad1f6fb64,1183746,0,0x0,8
tick,0x7ffad1f6fb64,1198763,0,0x0,8
tick,0x7ffad1f6fb64,1213753,0,0x0,8
tick,0x7ffad1f6fb64,1229755,0,0x0,8
tick,0x7ffad1f6fb64,1245785,0,0x0,8
tick,0x7ffad1f6fb64,1261801,0,0x0,8
tick,0x7ffad1f6fb64,1277821,0,0x0,8
tick,0x7ffad1f6fb64,1293830,0,0x0,8
tick,0x7ffad1f6fb64,1308848,0,0x0,8
tick,0x7ffad1f6fb64,1324852,0,0x0,8
tick,0x7ffad1f6fb64,1339856,0,0x0,8
tick,0x7ffad1f6fb64,1355865,0,0x0,8
tick,0x7ffad1f6fb64,1371892,0,0x0,8
tick,0x7ffad1f6fb64,1386940,0,0x0,8
tick,0x7ffad1f6fb64,1402934,0,0x0,8
tick,0x7ffad1f6fb64,1418962,0,0x0,8
tick,0x7ffad1f6fb64,1434991,0,0x0,8
tick,0x7ffad1f6fb64,1450001,0,0x0,8
tick,0x7ffad1f6fb64,1464999,0,0x0,8
tick,0x7ffad1f6fb64,1480086,0,0x0,8
tick,0x7ffad1f6fb64,1496015,0,0x0,8
tick,0x7ffad1f6fb64,1512022,0,0x0,8
tick,0x7ffad1f6fb64,1527041,0,0x0,8
tick,0x7ffad1f6fb64,1542112,0,0x0,8
tick,0x7ffad1f6fb64,1557092,0,0x0,8
tick,0x7ffad1f6fb64,1572110,0,0x0,8
tick,0x7ffad1f6fb64,1587113,0,0x0,8
tick,0x7ffad1f6fb64,1603096,0,0x0,8
tick,0x7ffad1f6fb64,1619172,0,0x0,8
tick,0x7ffad1f6fb64,1634168,0,0x0,8
tick,0x7ffad1f6fb64,1649176,0,0x0,8
tick,0x7ffad1f6fb64,1664187,0,0x0,8
tick,0x7ffad1f6fb64,1680180,0,0x0,8
tick,0x7ffad1f6fb64,1695225,0,0x0,8
tick,0x7ffad1f6fb64,1710220,0,0x0,8
tick,0x7ffad1f6fb64,1726224,0,0x0,8
tick,0x7ffad1f6fb64,1741409,0,0x0,8
tick,0x7ffad1f6fb64,1757289,0,0x0,8
tick,0x7ffad1f6fb64,1773272,0,0x0,8
tick,0x7ffad1f6fb64,1788259,0,0x0,8
tick,0x7ffad1f6fb64,1804297,0,0x0,8
tick,0x7ffad1f6fb64,1820288,0,0x0,8
tick,0x7ffad1f6fb64,1836365,0,0x0,8
tick,0x7ffad1f6fb64,1852325,0,0x0,8
tick,0x7ffad1f6fb64,1867362,0,0x0,8
tick,0x7ffad1f6fb64,1882359,0,0x0,8
tick,0x7ffad1f6fb64,1898359,0,0x0,8
tick,0x7ffad1f6fb64,1913391,0,0x0,8
tick,0x7ffad1f6fb64,1928408,0,0x0,8
tick,0x7ffad1f6fb64,1944428,0,0x0,8
tick,0x7ffad1f6fb64,1960445,0,0x0,8
tick,0x7ffad1f6fb64,1975674,0,0x0,8
tick,0x7ffad1f6fb64,1991467,0,0x0,8
tick,0x7ffad1f6fb64,2007480,0,0x0,8
tick,0x7ffad1f6fb64,2022558,0,0x0,8
tick,0x7ffad1f6fb64,2037525,0,0x0,8
tick,0x7ffad1f6fb64,2053499,0,0x0,8
tick,0x7ffad1f6fb64,2068553,0,0x0,8
tick,0x7ffad1f6fb64,2083523,0,0x0,8
tick,0x7ffad1f6fb64,2098562,0,0x0,8
tick,0x7ffad1f6fb64,2113575,0,0x0,8
tick,0x7ffad1f6fb64,2128618,0,0x0,8
tick,0x7ffad1f6fb64,2143614,0,0x0,8
tick,0x7ffad1f6fb64,2158635,0,0x0,8
tick,0x7ffad1f6fb64,2174664,0,0x0,8
tick,0x7ffad1f6fb64,2189641,0,0x0,8
tick,0x7ffad1f6fb64,2205655,0,0x0,8
tick,0x7ffad1f6fb64,2221683,0,0x0,8
tick,0x7ffad1f6fb64,2236680,0,0x0,8
tick,0x7ffad1f6fb64,2252686,0,0x0,8
tick,0x7ffad1f6fb64,2268718,0,0x0,8
tick,0x7ffad1f6fb64,2284764,0,0x0,8
tick,0x7ffad1f6fb64,2299734,0,0x0,8
tick,0x7ffad1f6fb64,2315758,0,0x0,8
tick,0x7ffad1f6fb64,2331767,0,0x0,8
tick,0x7ffad1f6fb64,2347789,0,0x0,8
tick,0x7ffad1f6fb64,2362827,0,0x0,8
tick,0x7ffad1f6fb64,2378821,0,0x0,8
tick,0x7ffad1f6fb64,2394977,0,0x0,8
tick,0x7ffad1f6fb64,2410863,0,0x0,8
tick,0x7ffad1f6fb64,2425874,0,0x0,8
tick,0x7ffad1f6fb64,2440889,0,0x0,8
tick,0x7ffad1f6fb64,2455916,0,0x0,8
tick,0x7ffad1f6fb64,2471940,0,0x0,8
tick,0x7ffad1f6fb64,2487946,0,0x0,8
tick,0x7ffad1f6fb64,2502975,0,0x0,8
tick,0x7ffad1f6fb64,2517960,0,0x0,8
tick,0x7ffad1f6fb64,2533006,0,0x0,8
tick,0x7ffad1f6fb64,2548965,0,0x0,8
tick,0x7ffad1f6fb64,2565002,0,0x0,8
tick,0x7ffad1f6fb64,2580024,0,0x0,8
tick,0x7ffad1f6fb64,2595055,0,0x0,8
tick,0x7ffad1f6fb64,2611052,0,0x0,8
tick,0x7ffad1f6fb64,2627046,0,0x0,8
tick,0x7ffad1f6fb64,2642082,0,0x0,8
tick,0x7ffad1f6fb64,2657097,0,0x0,8
tick,0x7ffad1f6fb64,2672117,0,0x0,8
tick,0x7ffad1f6fb64,2687097,0,0x0,8
tick,0x7ffad1f6fb64,2702151,0,0x0,8
tick,0x7ffad1f6fb64,2717163,0,0x0,8
tick,0x7ffad1f6fb64,2733162,0,0x0,8
tick,0x7ffad1f6fb64,2749159,0,0x0,8
tick,0x7ffad1f6fb64,2765189,0,0x0,8
tick,0x7ffad1f6fb64,2780204,0,0x0,8
tick,0x7ffad1f6fb64,2795212,0,0x0,8
tick,0x7ffad1f6fb64,2811228,0,0x0,8
tick,0x7ffad1f6fb64,2827251,0,0x0,8
tick,0x7ffad1f6fb64,2842220,0,0x0,8
tick,0x7ffad1f6fb64,2858252,0,0x0,8
tick,0x7ffad1f6fb64,2873265,0,0x0,8
tick,0x7ffad1f6fb64,2889284,0,0x0,8
tick,0x7ffad1f6fb64,2904289,0,0x0,8
tick,0x7ffad1f6fb64,2920315,0,0x0,8
tick,0x7ffad1f6fb64,2936346,0,0x0,8
tick,0x7ffad1f6fb64,2951356,0,0x0,8
tick,0x7ffad1f6fb64,2966371,0,0x0,8
tick,0x7ffad1f6fb64,2981391,0,0x0,8
tick,0x7ffad1f6fb64,2996417,0,0x0,8
tick,0x7ffad1f6fb64,3012422,0,0x0,8
tick,0x7ffad1f6fb64,3027422,0,0x0,8
tick,0x7ffad1f6fb64,3042463,0,0x0,8
tick,0x7ffad1f6fb64,3058454,0,0x0,8
tick,0x7ffad1f6fb64,3073475,0,0x0,8
tick,0x7ffad1f6fb64,3089499,0,0x0,8
tick,0x7ffad1f6fb64,3104496,0,0x0,8
tick,0x7ffad1f6fb64,3120533,0,0x0,8
tick,0x7ffad1f6fb64,3136544,0,0x0,8
tick,0x7ffad1f6fb64,3152599,0,0x0,8
tick,0x7ffad1f6fb64,3167542,0,0x0,8
tick,0x7ffad1f6fb64,3183607,0,0x0,8
tick,0x7ffad1f6fb64,3199602,0,0x0,8
tick,0x7ffad1f6fb64,3215603,0,0x0,8
tick,0x7ffad1f6fb64,3230662,0,0x0,8
tick,0x7ffad1f6fb64,3245674,0,0x0,8
tick,0x7ffad1f6fb64,3260644,0,0x0,8
tick,0x7ffad1f6fb64,3275670,0,0x0,8
tick,0x7ffad1f6fb64,3291659,0,0x0,8
tick,0x7ffad1f6fb64,3307662,0,0x0,8
tick,0x7ffad1f6fb64,3322678,0,0x0,8
tick,0x7ffad1f6fb64,3337686,0,0x0,8
tick,0x7ffad1f6fb64,3353696,0,0x0,8
tick,0x7ffad1f6fb64,3369746,0,0x0,8
tick,0x7ffad1f6fb64,3384744,0,0x0,8
tick,0x7ffad1f6fb64,3399752,0,0x0,8
tick,0x7ffad1f6fb64,3415765,0,0x0,8
tick,0x7ffad1f6fb64,3431798,0,0x0,8
tick,0x7ffad1f6fb64,3447788,0,0x0,8
tick,0x7ffad1f6fb64,3463819,0,0x0,8
tick,0x7ffad1f6fb64,3478821,0,0x0,8
tick,0x7ffad1f6fb64,3494898,0,0x0,8
tick,0x7ffad1f6fb64,3511359,0,0x0,8
tick,0x7ffad1f6fb64,3525990,0,0x0,8
tick,0x7ffad1f6fb64,3542056,0,0x0,8
tick,0x7ffad1f6fb64,3557887,0,0x0,8
tick,0x7ffad1f6fb64,3573907,0,0x0,8
tick,0x7ffad1f6fb64,3589925,0,0x0,8
tick,0x7ffad1f6fb64,3604937,0,0x0,8
tick,0x7ffad1f6fb64,3619994,0,0x0,8
tick,0x7ffad1f6fb64,3634947,0,0x0,8
tick,0x7ffad1f6fb64,3650319,0,0x0,8
tick,0x7ffad1f6fb64,3666034,0,0x0,8
tick,0x7ffad1f6fb64,3681013,0,0x0,8
tick,0x7ffad1f6fb64,3696022,0,0x0,8
tick,0x7ffad1f6fb64,3711030,0,0x0,8
tick,0x7ffad1f6fb64,3727045,0,0x0,8
tick,0x7ffad1f6fb64,3743046,0,0x0,8
tick,0x7ffad1f6fb64,3758084,0,0x0,8
tick,0x7ffad1f6fb64,3774089,0,0x0,8
tick,0x7ffad1f6fb64,3790101,0,0x0,8
tick,0x7ffad1f6fb64,3806099,0,0x0,8
tick,0x7ffad1f6fb64,3821122,0,0x0,8
tick,0x7ffad1f6fb64,3836168,0,0x0,8
tick,0x7ffad1f6fb64,3851169,0,0x0,8
tick,0x7ffad1f6fb64,3866204,0,0x0,8
tick,0x7ffad1f6fb64,3881199,0,0x0,8
tick,0x7ffad1f6fb64,3896215,0,0x0,8
tick,0x7ffad1f6fb64,3911220,0,0x0,8
tick,0x7ffad1f6fb64,3927233,0,0x0,8
tick,0x7ffad1f6fb64,3943241,0,0x0,8
tick,0x7ffad1f6fb64,3959252,0,0x0,8
tick,0x7ffad1f6fb64,3975279,0,0x0,8
tick,0x7ffad1f6fb64,3991282,0,0x0,8
tick,0x7ffad1f6fb64,4007290,0,0x0,8
tick,0x7ffad1f6fb64,4022395,0,0x0,8
tick,0x7ffad1f6fb64,4038340,0,0x0,8
tick,0x7ffad1f6fb64,4054334,0,0x0,8
tick,0x7ffad1f6fb64,4069351,0,0x0,8
tick,0x7ffad1f6fb64,4085385,0,0x0,8
tick,0x7ffad1f6fb64,4101366,0,0x0,8
tick,0x7ffad1f6fb64,4117406,0,0x0,8
tick,0x7ffad1f6fb64,4133405,0,0x0,8
tick,0x7ffad1f6fb64,4148407,0,0x0,8
tick,0x7ffad1f6fb64,4164421,0,0x0,8
tick,0x7ffad1f6fb64,4180461,0,0x0,8
tick,0x7ffad1f6fb64,4195477,0,0x0,8
tick,0x7ffad1f6fb64,4211474,0,0x0,8
tick,0x7ffad1f6fb64,4227490,0,0x0,8
tick,0x7ffad1f6fb64,4243524,0,0x0,8
tick,0x7ffad1f6fb64,4259538,0,0x0,8
tick,0x7ffad1f6fb64,4274529,0,0x0,8
tick,0x7ffad1f6fb64,4290545,0,0x0,8
tick,0x7ffad1f6fb64,4306569,0,0x0,8
tick,0x7ffad1f6fb64,4322568,0,0x0,8
tick,0x7ffad1f6fb64,4337638,0,0x0,8
tick,0x7ffad1f6fb64,4352633,0,0x0,8
tick,0x7ffad1f6fb64,4367632,0,0x0,8
tick,0x7ffad1f6fb64,4382644,0,0x0,8
tick,0x7ffad1f6fb64,4397712,0,0x0,8
tick,0x7ffad1f6fb64,4412667,0,0x0,8
tick,0x7ffad1f6fb64,4428665,0,0x0,8
tick,0x7ffad1f6fb64,4444696,0,0x0,8
tick,0x7ffad1f6fb64,4460702,0,0x0,8
tick,0x7ffad1f6fb64,4475731,0,0x0,8
tick,0x7ffad1f6fb64,4490735,0,0x0,8
tick,0x7ffad1f6fb64,4506749,0,0x0,8
tick,0x7ffad1f6fb64,4521739,0,0x0,8
tick,0x7ffad1f6fb64,4536794,0,0x0,8
tick,0x7ffad1f6fb64,4551792,0,0x0,8
tick,0x7ffad1f6fb64,4566834,0,0x0,8
tick,0x7ffad1f6fb64,4581861,0,0x0,8
tick,0x7ffad1f6fb64,4596848,0,0x0,8
tick,0x7ffad1f6fb64,4612844,0,0x0,8
tick,0x7ffad1f6fb64,4628858,0,0x0,8
tick,0x7ffad1f6fb64,4644872,0,0x0,8
tick,0x7ffad1f6fb64,4660894,0,0x0,8
tick,0x7ffad1f6fb64,4676918,0,0x0,8
tick,0x7ffad1f6fb64,4692937,0,0x0,8
tick,0x7ffad1f6fb64,4707945,0,0x0,8
tick,0x7ffad1f6fb64,4723935,0,0x0,8
tick,0x7ffad1f6fb64,4739967,0,0x0,8
tick,0x7ffad1f6fb64,4754994,0,0x0,8
tick,0x7ffad1f6fb64,4771022,0,0x0,8
tick,0x7ffad1f6fb64,4786047,0,0x0,8
tick,0x7ffad1f6fb64,4802037,0,0x0,8
tick,0x7ffad1f6fb64,4818042,0,0x0,8
tick,0x7ffad1f6fb64,4834059,0,0x0,8
tick,0x7ffad1f6fb64,4850065,0,0x0,8
tick,0x7ffad1f6fb64,4866098,0,0x0,8
tick,0x7ffad1f6fb64,4881110,0,0x0,8
tick,0x7ffad1f6fb64,4896127,0,0x0,8
tick,0x7ffad1f6fb64,4911145,0,0x0,8
tick,0x7ffad1f6fb64,4927150,0,0x0,8
tick,0x7ffad1f6fb64,4942130,0,0x0,8
tick,0x7ffad1f6fb64,4958145,0,0x0,8
tick,0x7ffad1f6fb64,4974173,0,0x0,8
tick,0x7ffad1f6fb64,4989172,0,0x0,8
tick,0x7ffad1f6fb64,5005199,0,0x0,8
tick,0x7ffad1f6fb64,5020205,0,0x0,8
tick,0x7ffad1f6fb64,5036230,0,0x0,8
tick,0x7ffad1f6fb64,5052227,0,0x0,8
tick,0x7ffad1f6fb64,5068273,0,0x0,8
tick,0x7ffad1f6fb64,5083268,0,0x0,8
tick,0x7ffad1f6fb64,5098294,0,0x0,8
tick,0x7ffad1f6fb64,5114295,0,0x0,8
tick,0x7ffad1f6fb64,5130300,0,0x0,8
tick,0x7ffad1f6fb64,5146316,0,0x0,8
tick,0x7ffad1f6fb64,5161333,0,0x0,8
tick,0x7ffad1f6fb64,5177389,0,0x0,8
tick,0x7ffad1f6fb64,5193369,0,0x0,8
tick,0x7ffad1f6fb64,5208411,0,0x0,8
tick,0x7ffad1f6fb64,5224390,0,0x0,8
tick,0x7ffad1f6fb64,5239425,0,0x0,8
tick,0x7ffad1f6fb64,5254425,0,0x0,8
tick,0x7ffad1f6fb64,5269456,0,0x0,8
tick,0x7ffad1f6fb64,5284495,0,0x0,8
tick,0x7ffad1f6fb64,5299463,0,0x0,8
tick,0x7ffad1f6fb64,5315463,0,0x0,8
tick,0x7ffad1f6fb64,5330490,0,0x0,8
tick,0x7ffad1f6fb64,5345502,0,0x0,8
tick,0x7ffad1f6fb64,5360521,0,0x0,8
tick,0x7ffad1f6fb64,5375555,0,0x0,8
tick,0x7ffad1f6fb64,5391554,0,0x0,8
tick,0x7ffad1f6fb64,5407553,0,0x0,8
tick,0x7ffad1f6fb64,5422575,0,0x0,8
tick,0x7ffad1f6fb64,5437572,0,0x0,8
tick,0x7ffad1f6fb64,5453587,0,0x0,8
tick,0x7ffad1f6fb64,5469613,0,0x0,8
tick,0x7ffad1f6fb64,5485640,0,0x0,8
tick,0x7ffad1f6fb64,5500647,0,0x0,8
tick,0x7ffad1f6fb64,5515656,0,0x0,8
tick,0x7ffad1f6fb64,5530676,0,0x0,8
tick,0x7ffad1f6fb64,5545691,0,0x0,8
tick,0x7ffad1f6fb64,5561708,0,0x0,8
tick,0x7ffad1f6fb64,5577711,0,0x0,8
tick,0x7ffad1f6fb64,5593727,0,0x0,8
tick,0x7ffad1f6fb64,5608753,0,0x0,8
tick,0x7ffad1f6fb64,5624762,0,0x0,8
tick,0x7ffad1f6fb64,5639759,0,0x0,8
tick,0x7ffad1f6fb64,5655792,0,0x0,8
tick,0x7ffad1f6fb64,5671815,0,0x0,8
tick,0x7ffad1f6fb64,5687827,0,0x0,8
tick,0x7ffad1f6fb64,5702853,0,0x0,8
tick,0x7ffad1f6fb64,5717874,0,0x0,8
tick,0x7ffad1f6fb64,5733849,0,0x0,8
tick,0x7ffad1f6fb64,5749925,0,0x0,8
tick,0x7ffad1f6fb64,5765888,0,0x0,8
tick,0x7ffad1f6fb64,5781923,0,0x0,8
tick,0x7ffad1f6fb64,5797370,0,0x0,8
tick,0x7ffad1f6fb64,5812939,0,0x0,8
tick,0x7ffad1f6fb64,5828944,0,0x0,8
tick,0x7ffad1f6fb64,5843956,0,0x0,8
tick,0x7ffad1f6fb64,5858979,0,0x0,8
tick,0x7ffad1f6fb64,5874977,0,0x0,8
tick,0x7ffad1f6fb64,5890002,0,0x0,8
tick,0x7ffad1f6fb64,5906007,0,0x0,8
tick,0x7ffad1f6fb64,5921027,0,0x0,8
tick,0x7ffad1f6fb64,5936077,0,0x0,8
tick,0x7ffad1f6fb64,5952049,0,0x0,8
tick,0x7ffad1f6fb64,5968073,0,0x0,8
tick,0x7ffad1f6fb64,5983090,0,0x0,8
tick,0x7ffad1f6fb64,5998092,0,0x0,8
tick,0x7ffad1f6fb64,6014098,0,0x0,8
tick,0x7ffad1f6fb64,6030124,0,0x0,8
tick,0x7ffad1f6fb64,6046175,0,0x0,8
tick,0x7ffad1f6fb64,6061148,0,0x0,8
tick,0x7ffad1f6fb64,6076170,0,0x0,8
tick,0x7ffad1f6fb64,6092192,0,0x0,8
tick,0x7ffad1f6fb64,6108208,0,0x0,8
tick,0x7ffad1f6fb64,6123222,0,0x0,8
tick,0x7ffad1f6fb64,6139225,0,0x0,8
tick,0x7ffad1f6fb64,6155236,0,0x0,8
tick,0x7ffad1f6fb64,6170255,0,0x0,8
tick,0x7ffad1f6fb64,6186275,0,0x0,8
tick,0x7ffad1f6fb64,6202293,0,0x0,8
tick,0x7ffad1f6fb64,6218308,0,0x0,8
tick,0x7ffad1f6fb64,6233333,0,0x0,8
tick,0x7ffad1f6fb64,6249323,0,0x0,8
tick,0x7ffad1f6fb64,6265348,0,0x0,8
tick,0x7ffad1f6fb64,6280363,0,0x0,8
tick,0x7ffad1f6fb64,6295390,0,0x0,8
tick,0x7ffad1f6fb64,6310411,0,0x0,8
tick,0x7ffad1f6fb64,6325385,0,0x0,8
tick,0x7ffad1f6fb64,6340443,0,0x0,8
tick,0x7ffad1f6fb64,6355440,0,0x0,8
tick,0x7ffad1f6fb64,6371486,0,0x0,8
tick,0x7ffad1f6fb64,6387477,0,0x0,8
tick,0x7ffad1f6fb64,6402463,0,0x0,8
tick,0x7ffad1f6fb64,6417494,0,0x0,8
tick,0x7ffad1f6fb64,6433508,0,0x0,8
tick,0x7ffad1f6fb64,6449497,0,0x0,8
tick,0x7ffad1f6fb64,6465521,0,0x0,8
tick,0x7ffad1f6fb64,6480552,0,0x0,8
tick,0x7ffad1f6fb64,6495563,0,0x0,8
tick,0x7ffad1f6fb64,6511569,0,0x0,8
tick,0x7ffad1f6fb64,6527576,0,0x0,8
tick,0x7ffad1f6fb64,6543604,0,0x0,8
tick,0x7ffad1f6fb64,6559612,0,0x0,8
tick,0x7ffad1f6fb64,6574618,0,0x0,8
tick,0x7ffad1f6fb64,6589714,0,0x0,8
tick,0x7ffad1f6fb64,6604687,0,0x0,8
tick,0x7ffad1f6fb64,6620678,0,0x0,8
tick,0x7ffad1f6fb64,6636708,0,0x0,8
tick,0x7ffad1f6fb64,6651687,0,0x0,8
tick,0x7ffad1f6fb64,6666720,0,0x0,8
tick,0x7ffad1f6fb64,6681750,0,0x0,8
tick,0x7ffad1f6fb64,6697751,0,0x0,8
tick,0x7ffad1f6fb64,6713762,0,0x0,8
tick,0x7ffad1f6fb64,6729783,0,0x0,8
tick,0x7ffad1f6fb64,6745819,0,0x0,8
tick,0x7ffad1f6fb64,6761815,0,0x0,8
tick,0x7ffad1f6fb64,6776833,0,0x0,8
tick,0x7ffad1f6fb64,6792830,0,0x0,8
tick,0x7ffad1f6fb64,6808858,0,0x0,8
tick,0x7ffad1f6fb64,6823848,0,0x0,8
tick,0x7ffad1f6fb64,6838856,0,0x0,8
tick,0x7ffad1f6fb64,6854883,0,0x0,8
tick,0x7ffad1f6fb64,6870895,0,0x0,8
tick,0x7ffad1f6fb64,6886914,0,0x0,8
tick,0x7ffad1f6fb64,6902920,0,0x0,8
tick,0x7ffad1f6fb64,6917957,0,0x0,8
tick,0x7ffad1f6fb64,6933963,0,0x0,8
tick,0x7ffad1f6fb64,6948961,0,0x0,8
tick,0x7ffad1f6fb64,6964983,0,0x0,8
tick,0x7ffad1f6fb64,6979997,0,0x0,8
tick,0x7ffad1f6fb64,6996008,0,0x0,8
tick,0x7ffad1f6fb64,7011017,0,0x0,8
tick,0x7ffad1f6fb64,7026036,0,0x0,8
tick,0x7ffad1f6fb64,7042058,0,0x0,8
tick,0x7ffad1f6fb64,7058072,0,0x0,8
tick,0x7ffad1f6fb64,7074073,0,0x0,8
tick,0x7ffad1f6fb64,7090098,0,0x0,8
tick,0x7ffad1f6fb64,7105128,0,0x0,8
tick,0x7ffad1f6fb64,7120122,0,0x0,8
tick,0x7ffad1f6fb64,7136156,0,0x0,8
tick,0x7ffad1f6fb64,7152142,0,0x0,8
tick,0x7ffad1f6fb64,7167173,0,0x0,8
tick,0x7ffad1f6fb64,7182184,0,0x0,8
tick,0x7ffad1f6fb64,7198192,0,0x0,8
tick,0x7ffad1f6fb64,7214200,0,0x0,8
tick,0x7ffad1f6fb64,7230232,0,0x0,8
tick,0x7ffad1f6fb64,7245252,0,0x0,8
tick,0x7ffad1f6fb64,7261267,0,0x0,8
tick,0x7ffad1f6fb64,7277287,0,0x0,8
tick,0x7ffad1f6fb64,7292290,0,0x0,8
tick,0x7ffad1f6fb64,7308306,0,0x0,8
tick,0x7ffad1f6fb64,7323312,0,0x0,8
tick,0x7ffad1f6fb64,7338317,0,0x0,8
tick,0x7ffad1f6fb64,7354350,0,0x0,8
tick,0x7ffad1f6fb64,7369393,0,0x0,8
tick,0x7ffad1f6fb64,7385362,0,0x0,8
tick,0x7ffad1f6fb64,7401381,0,0x0,8
tick,0x7ffad1f6fb64,7417405,0,0x0,8
tick,0x7ffad1f6fb64,7432411,0,0x0,8
tick,0x7ffad1f6fb64,7447430,0,0x0,8
tick,0x7ffad1f6fb64,7462439,0,0x0,8
tick,0x7ffad1f6fb64,7477449,0,0x0,8
tick,0x7ffad1f6fb64,7493463,0,0x0,8
tick,0x7ffad1f6fb64,7509461,0,0x0,8
tick,0x7ffad1f6fb64,7525490,0,0x0,8
tick,0x7ffad1f6fb64,7540555,0,0x0,8
tick,0x7ffad1f6fb64,7556528,0,0x0,8
tick,0x7ffad1f6fb64,7572535,0,0x0,8
tick,0x7ffad1f6fb64,7587551,0,0x0,8
tick,0x7ffad1f6fb64,7603561,0,0x0,8
tick,0x7ffad1f6fb64,7618593,0,0x0,8
tick,0x7ffad1f6fb64,7633623,0,0x0,8
tick,0x7ffad1f6fb64,7649605,0,0x0,8
tick,0x7ffad1f6fb64,7665645,0,0x0,8
tick,0x7ffad1f6fb64,7681658,0,0x0,8
tick,0x7ffad1f6fb64,7697649,0,0x0,8
tick,0x7ffad1f6fb64,7712656,0,0x0,8
tick,0x7ffad1f6fb64,7728684,0,0x0,8
tick,0x7ffad1f6fb64,7743700,0,0x0,8
tick,0x7ffad1f6fb64,7759699,0,0x0,8
tick,0x7ffad1f6fb64,7774748,0,0x0,8
tick,0x7ffad1f6fb64,7789754,0,0x0,8
tick,0x7ffad1f6fb64,7805761,0,0x0,8
tick,0x7ffad1f6fb64,7820776,0,0x0,8
tick,0x7ffad1f6fb64,7835794,0,0x0,8
tick,0x7ffad1f6fb64,7850790,0,0x0,8
tick,0x7ffad1f6fb64,7865794,0,0x0,8
tick,0x7ffad1f6fb64,7880827,0,0x0,8
tick,0x7ffad1f6fb64,7895858,0,0x0,8
tick,0x7ffad1f6fb64,7910863,0,0x0,8
tick,0x7ffad1f6fb64,7926876,0,0x0,8
tick,0x7ffad1f6fb64,7942908,0,0x0,8
tick,0x7ffad1f6fb64,7957891,0,0x0,8
tick,0x7ffad1f6fb64,7973923,0,0x0,8
tick,0x7ffad1f6fb64,7989918,0,0x0,8
tick,0x7ffad1f6fb64,8005929,0,0x0,8
tick,0x7ffad1f6fb64,8020939,0,0x0,8
tick,0x7ffad1f6fb64,8036976,0,0x0,8
tick,0x7ffad1f6fb64,8052959,0,0x0,8
tick,0x7ffad1f6fb64,8069000,0,0x0,8
tick,0x7ffad1f6fb64,8085009,0,0x0,8
tick,0x7ffad1f6fb64,8100010,0,0x0,8
tick,0x7ffad1f6fb64,8115059,0,0x0,8
tick,0x7ffad1f6fb64,8131055,0,0x0,8
tick,0x7ffad1f6fb64,8146077,0,0x0,8
tick,0x7ffad1f6fb64,8161081,0,0x0,8
tick,0x7ffad1f6fb64,8177096,0,0x0,8
tick,0x7ffad1f6fb64,8193095,0,0x0,8
tick,0x7ffad1f6fb64,8209103,0,0x0,8
tick,0x7ffad1f6fb64,8224140,0,0x0,8
tick,0x7ffad1f6fb64,8240137,0,0x0,8
tick,0x7ffad1f6fb64,8255165,0,0x0,8
tick,0x7ffad1f6fb64,8270174,0,0x0,8
tick,0x7ffad1f6fb64,8285239,0,0x0,8
tick,0x7ffad1f6fb64,8301204,0,0x0,8
tick,0x7ffad1f6fb64,8317209,0,0x0,8
tick,0x7ffad1f6fb64,8333236,0,0x0,8
tick,0x7ffad1f6fb64,8348253,0,0x0,8
tick,0x7ffad1f6fb64,8364258,0,0x0,8
tick,0x7ffad1f6fb64,8380271,0,0x0,8
tick,0x7ffad1f6fb64,8395288,0,0x0,8
tick,0x7ffad1f6fb64,8410380,0,0x0,8
tick,0x7ffad1f6fb64,8426309,0,0x0,8
tick,0x7ffad1f6fb64,8441350,0,0x0,8
tick,0x7ffad1f6fb64,8457363,0,0x0,8
tick,0x7ffad1f6fb64,8472362,0,0x0,8
tick,0x7ffad1f6fb64,8488371,0,0x0,8
tick,0x7ffad1f6fb64,8504378,0,0x0,8
tick,0x7ffad1f6fb64,8520409,0,0x0,8
tick,0x7ffad1f6fb64,8535409,0,0x0,8
tick,0x7ffad1f6fb64,8551416,0,0x0,8
tick,0x7ffad1f6fb64,8566434,0,0x0,8
tick,0x7ffad1f6fb64,8581450,0,0x0,8
tick,0x7ffad1f6fb64,8596488,0,0x0,8
tick,0x7ffad1f6fb64,8612493,0,0x0,8
tick,0x7ffad1f6fb64,8627501,0,0x0,8
tick,0x7ffad1f6fb64,8643576,0,0x0,8
tick,0x7ffad1f6fb64,8659545,0,0x0,8
tick,0x7ffad1f6fb64,8674557,0,0x0,8
tick,0x7ffad1f6fb64,8690583,0,0x0,8
tick,0x7ffad1f6fb64,8705558,0,0x0,8
tick,0x7ffad1f6fb64,8721586,0,0x0,8
tick,0x7ffad1f6fb64,8736601,0,0x0,8
tick,0x7ffad1f6fb64,8751601,0,0x0,8
tick,0x7ffad1f6fb64,8766657,0,0x0,8
tick,0x7ffad1f6fb64,8781641,0,0x0,8
tick,0x7ffad1f6fb64,8797799,0,0x0,8
tick,0x7ffad1f6fb64,8813662,0,0x0,8
tick,0x7ffad1f6fb64,8828693,0,0x0,8
tick,0x7ffad1f6fb64,8843717,0,0x0,8
tick,0x7ffad1f6fb64,8859697,0,0x0,8
tick,0x7ffad1f6fb64,8875727,0,0x0,8
tick,0x7ffad1f6fb64,8890734,0,0x0,8
tick,0x7ffad1f6fb64,8906779,0,0x0,8
tick,0x7ffad1f6fb64,8922779,0,0x0,8
tick,0x7ffad1f6fb64,8937794,0,0x0,8
tick,0x7ffad1f6fb64,8953803,0,0x0,8
tick,0x7ffad1f6fb64,8969819,0,0x0,8
tick,0x7ffad1f6fb64,8985842,0,0x0,8
tick,0x7ffad1f6fb64,9000838,0,0x0,8
tick,0x7ffad1f6fb64,9016860,0,0x0,8
tick,0x7ffad1f6fb64,9032880,0,0x0,8
tick,0x7ffad1f6fb64,9048870,0,0x0,8
tick,0x7ffad1f6fb64,9064888,0,0x0,8
tick,0x7ffad1f6fb64,9079911,0,0x0,8
tick,0x7ffad1f6fb64,9094934,0,0x0,8
tick,0x7ffad1f6fb64,9110938,0,0x0,8
tick,0x7ffad1f6fb64,9126944,0,0x0,8
tick,0x7ffad1f6fb64,9141954,0,0x0,8
tick,0x7ffad1f6fb64,9157021,0,0x0,8
tick,0x7ffad1f6fb64,9172985,0,0x0,8
tick,0x7ffad1f6fb64,9189008,0,0x0,8
tick,0x7ffad1f6fb64,9204026,0,0x0,8
tick,0x7ffad1f6fb64,9220024,0,0x0,8
tick,0x7ffad1f6fb64,9236055,0,0x0,8
tick,0x7ffad1f6fb64,9251070,0,0x0,8
tick,0x7ffad1f6fb64,9266127,0,0x0,8
tick,0x7ffad1f6fb64,9281090,0,0x0,8
tick,0x7ffad1f6fb64,9296106,0,0x0,8
tick,0x7ffad1f6fb64,9312126,0,0x0,8
tick,0x7ffad1f6fb64,9328143,0,0x0,8
tick,0x7ffad1f6fb64,9343141,0,0x0,8
tick,0x7ffad1f6fb64,9358166,0,0x0,8
tick,0x7ffad1f6fb64,9374181,0,0x0,8
tick,0x7ffad1f6fb64,9390195,0,0x0,8
tick,0x7ffad1f6fb64,9406204,0,0x0,8
tick,0x7ffad1f6fb64,9421219,0,0x0,8
tick,0x7ffad1f6fb64,9437458,0,0x0,8
tick,0x7ffad1f6fb64,9453233,0,0x0,8
tick,0x7ffad1f6fb64,9468277,0,0x0,8
tick,0x7ffad1f6fb64,9484266,0,0x0,8
tick,0x7ffad1f6fb64,9499270,0,0x0,8
tick,0x7ffad1f6fb64,9514290,0,0x0,8
tick,0x7ffad1f6fb64,9530326,0,0x0,8
tick,0x7ffad1f6fb64,9546328,0,0x0,8
tick,0x7ffad1f6fb64,9562341,0,0x0,8
tick,0x7ffad1f6fb64,9577368,0,0x0,8
tick,0x7ffad1f6fb64,9593375,0,0x0,8
tick,0x7ffad1f6fb64,9609372,0,0x0,8
tick,0x7ffad1f6fb64,9625401,0,0x0,8
tick,0x7ffad1f6fb64,9640434,0,0x0,8
tick,0x7ffad1f6fb64,9656449,0,0x0,8
tick,0x7ffad1f6fb64,9672466,0,0x0,8
tick,0x7ffad1f6fb64,9688482,0,0x0,8
tick,0x7ffad1f6fb64,9704488,0,0x0,8
tick,0x7ffad1f6fb64,9719526,0,0x0,8
tick,0x7ffad1f6fb64,9734518,0,0x0,8
tick,0x7ffad1f6fb64,9749518,0,0x0,8
tick,0x7ffad1f6fb64,9765521,0,0x0,8
tick,0x7ffad1f6fb64,9780559,0,0x0,8
tick,0x7ffad1f6fb64,9795559,0,0x0,8
tick,0x7ffad1f6fb64,9810572,0,0x0,8
tick,0x7ffad1f6fb64,9825598,0,0x0,8
tick,0x7ffad1f6fb64,9840626,0,0x0,8
tick,0x7ffad1f6fb64,9856636,0,0x0,8
tick,0x7ffad1f6fb64,9872622,0,0x0,8
tick,0x7ffad1f6fb64,9888674,0,0x0,8
tick,0x7ffad1f6fb64,9903672,0,0x0,8
tick,0x7ffad1f6fb64,9919662,0,0x0,8
tick,0x7ffad1f6fb64,9935690,0,0x0,8
tick,0x7ffad1f6fb64,9950698,0,0x0,8
tick,0x7ffad1f6fb64,9966767,0,0x0,8
tick,0x7ffad1f6fb64,9981720,0,0x0,8
tick,0x7ffad1f6fb64,9997739,0,0x0,8
tick,0x7ffad1f6fb64,10012750,0,0x0,8
tick,0x7ffad1f6fb64,10028860,0,0x0,8
tick,0x7ffad1f6fb64,10044799,0,0x0,8
tick,0x7ffad1f6fb64,10060800,0,0x0,8
tick,0x7ffad1f6fb64,10075907,0,0x0,8
tick,0x7ffad1f6fb64,10090889,0,0x0,8
tick,0x7ffad1f6fb64,10106868,0,0x0,8
tick,0x7ffad1f6fb64,10122901,0,0x0,8
tick,0x7ffad1f6fb64,10137920,0,0x0,8
tick,0x7ffad1f6fb64,10153916,0,0x0,8
tick,0x7ffad1f6fb64,10169910,0,0x0,8
tick,0x7ffad1f6fb64,10185019,0,0x0,8
tick,0x7ffad1f6fb64,10200932,0,0x0,8
tick,0x7ffad1f6fb64,10216965,0,0x0,8
tick,0x7ffad1f6fb64,10231963,0,0x0,8
tick,0x7ffad1f6fb64,10247958,0,0x0,8
tick,0x7ffad1f6fb64,10263991,0,0x0,8
tick,0x7ffad1f6fb64,10279038,0,0x0,8
tick,0x7ffad1f6fb64,10294101,0,0x0,8
tick,0x7ffad1f6fb64,10310016,0,0x0,8
tick,0x7ffad1f6fb64,10325050,0,0x0,8
tick,0x7ffad1f6fb64,10341101,0,0x0,8
tick,0x7ffad1f6fb64,10357070,0,0x0,8
tick,0x7ffad1f6fb64,10372099,0,0x0,8
tick,0x7ffad1f6fb64,10388100,0,0x0,8
tick,0x7ffad1f6fb64,10403126,0,0x0,8
tick,0x7ffad1f6fb64,10418128,0,0x0,8
tick,0x7ffad1f6fb64,10433152,0,0x0,8
tick,0x7ffad1f6fb64,10448141,0,0x0,8
tick,0x7ffad1f6fb64,10464170,0,0x0,8
tick,0x7ffad1f6fb64,10480187,0,0x0,8
tick,0x7ffad1f6fb64,10495201,0,0x0,8
tick,0x7ffad1f6fb64,10511212,0,0x0,8
tick,0x7ffad1f6fb64,10527221,0,0x0,8
tick,0x7ffad1f6fb64,10543223,0,0x0,8
tick,0x7ffad1f6fb64,10558288,0,0x0,8
tick,0x7ffad1f6fb64,10574265,0,0x0,8
tick,0x7ffad1f6fb64,10589286,0,0x0,8
tick,0x7ffad1f6fb64,10605298,0,0x0,8
tick,0x7ffad1f6fb64,10620325,0,0x0,8
tick,0x7ffad1f6fb64,10635333,0,0x0,8
tick,0x7ffad1f6fb64,10650365,0,0x0,8
tick,0x7ffad1f6fb64,10666390,0,0x0,8
tick,0x7ffad1f6fb64,10681375,0,0x0,8
tick,0x7ffad1f6fb64,10696391,0,0x0,8
tick,0x7ffad1f6fb64,10712398,0,0x0,8
tick,0x7ffad1f6fb64,10727423,0,0x0,8
tick,0x7ffad1f6fb64,10743433,0,0x0,8
tick,0x7ffad1f6fb64,10759494,0,0x0,8
tick,0x7ffad1f6fb64,10775453,0,0x0,8
tick,0x7ffad1f6fb64,10790481,0,0x0,8
tick,0x7ffad1f6fb64,10806492,0,0x0,8
tick,0x7ffad1f6fb64,10822507,0,0x0,8
tick,0x7ffad1f6fb64,10837522,0,0x0,8
tick,0x7ffad1f6fb64,10853539,0,0x0,8
tick,0x7ffad1f6fb64,10869528,0,0x0,8
tick,0x7ffad1f6fb64,10884546,0,0x0,8
tick,0x7ffad1f6fb64,10899551,0,0x0,8
tick,0x7ffad1f6fb64,10914582,0,0x0,8
tick,0x7ffad1f6fb64,10930579,0,0x0,8
tick,0x7ffad1f6fb64,10945635,0,0x0,8
tick,0x7ffad1f6fb64,10960638,0,0x0,8
tick,0x7ffad1f6fb64,10975654,0,0x0,8
tick,0x7ffad1f6fb64,10990666,0,0x0,8
tick,0x7ffad1f6fb64,11006653,0,0x0,8
tick,0x7ffad1f6fb64,11022682,0,0x0,8
tick,0x7ffad1f6fb64,11037698,0,0x0,8
tick,0x7ffad1f6fb64,11053707,0,0x0,8
tick,0x7ffad1f6fb64,11069710,0,0x0,8
tick,0x7ffad1f6fb64,11085772,0,0x0,8
tick,0x7ffad1f6fb64,11100762,0,0x0,8
tick,0x7ffad1f6fb64,11116757,0,0x0,8
tick,0x7ffad1f6fb64,11132770,0,0x0,8
tick,0x7ffad1f6fb64,11148803,0,0x0,8
tick,0x7ffad1f6fb64,11164818,0,0x0,8
tick,0x7ffad1f6fb64,11179812,0,0x0,8
tick,0x7ffad1f6fb64,11194849,0,0x0,8
tick,0x7ffad1f6fb64,11209871,0,0x0,8
tick,0x7ffad1f6fb64,11225867,0,0x0,8
tick,0x7ffad1f6fb64,11240875,0,0x0,8
tick,0x7ffad1f6fb64,11256886,0,0x0,8
tick,0x7ffad1f6fb64,11272911,0,0x0,8
tick,0x7ffad1f6fb64,11288925,0,0x0,8
tick,0x7ffad1f6fb64,11304934,0,0x0,8
tick,0x7ffad1f6fb64,11319948,0,0x0,8
tick,0x7ffad1f6fb64,11335974,0,0x0,8
tick,0x7ffad1f6fb64,11351976,0,0x0,8
tick,0x7ffad1f6fb64,11366995,0,0x0,8
tick,0x7ffad1f6fb64,11382013,0,0x0,8
tick,0x7ffad1f6fb64,11398018,0,0x0,8
tick,0x7ffad1f6fb64,11414041,0,0x0,8
tick,0x7ffad1f6fb64,11429111,0,0x0,8
tick,0x7ffad1f6fb64,11445057,0,0x0,8
tick,0x7ffad1f6fb64,11461079,0,0x0,8
tick,0x7ffad1f6fb64,11477098,0,0x0,8
tick,0x7ffad1f6fb64,11493135,0,0x0,8
tick,0x7ffad1f6fb64,11508116,0,0x0,8
tick,0x7ffad1f6fb64,11523151,0,0x0,8
tick,0x7ffad1f6fb64,11539160,0,0x0,8
tick,0x7ffad1f6fb64,11555150,0,0x0,8
tick,0x7ffad1f6fb64,11571205,0,0x0,8
tick,0x7ffad1f6fb64,11587203,0,0x0,8
tick,0x7ffad1f6fb64,11603211,0,0x0,8
tick,0x7ffad1f6fb64,11619220,0,0x0,8
tick,0x7ffad1f6fb64,11634275,0,0x0,8
tick,0x7ffad1f6fb64,11650339,0,0x0,8
tick,0x7ffad1f6fb64,11665269,0,0x0,8
tick,0x7ffad1f6fb64,11680291,0,0x0,8
tick,0x7ffad1f6fb64,11695314,0,0x0,8
tick,0x7ffad1f6fb64,11711323,0,0x0,8
tick,0x7ffad1f6fb64,11726325,0,0x0,8
tick,0x7ffad1f6fb64,11741352,0,0x0,8
tick,0x7ffad1f6fb64,11757363,0,0x0,8
tick,0x7ffad1f6fb64,11772404,0,0x0,8
tick,0x7ffad1f6fb64,11787398,0,0x0,8
tick,0x7ffad1f6fb64,11803388,0,0x0,8
tick,0x7ffad1f6fb64,11819435,0,0x0,8
tick,0x7ffad1f6fb64,11834431,0,0x0,8
tick,0x7ffad1f6fb64,11849451,0,0x0,8
tick,0x7ffad1f6fb64,11865455,0,0x0,8
tick,0x7ffad1f6fb64,11880473,0,0x0,8
tick,0x7ffad1f6fb64,11895488,0,0x0,8
tick,0x7ffad1f6fb64,11911485,0,0x0,8
tick,0x7ffad1f6fb64,11927517,0,0x0,8
tick,0x7ffad1f6fb64,11942537,0,0x0,8
tick,0x7ffad1f6fb64,11958554,0,0x0,8
tick,0x7ffad1f6fb64,11974571,0,0x0,8
tick,0x7ffad1f6fb64,11989565,0,0x0,8
tick,0x7ffad1f6fb64,12005573,0,0x0,8
tick,0x7ffad1f6fb64,12021593,0,0x0,8
tick,0x7ffad1f6fb64,12036656,0,0x0,8
tick,0x7ffad1f6fb64,12052611,0,0x0,8
tick,0x7ffad1f6fb64,12067639,0,0x0,8
tick,0x7ffad1f6fb64,12083658,0,0x0,8
tick,0x7ffad1f6fb64,12099666,0,0x0,8
tick,0x7ffad1f6fb64,12114691,0,0x0,8
tick,0x7ffad1f6fb64,12130687,0,0x0,8
tick,0x7ffad1f6fb64,12145711,0,0x0,8
tick,0x7ffad1f6fb64,12160716,0,0x0,8
tick,0x7ffad1f6fb64,12175742,0,0x0,8
tick,0x7ffad1f6fb64,12190745,0,0x0,8
tick,0x7ffad1f6fb64,12206759,0,0x0,8
tick,0x7ffad1f6fb64,12222881,0,0x0,8
tick,0x7ffad1f6fb64,12237782,0,0x0,8
tick,0x7ffad1f6fb64,12252782,0,0x0,8
tick,0x7ffad1f6fb64,12268810,0,0x0,8
tick,0x7ffad1f6fb64,12284847,0,0x0,8
tick,0x7ffad1f6fb64,12300837,0,0x0,8
tick,0x7ffad1f6fb64,12315853,0,0x0,8
tick,0x7ffad1f6fb64,12331878,0,0x0,8
tick,0x7ffad1f6fb64,12346887,0,0x0,8
tick,0x7ffad1f6fb64,12361926,0,0x0,8
tick,0x7ffad1f6fb64,12377924,0,0x0,8
tick,0x7ffad1f6fb64,12393974,0,0x0,8
tick,0x7ffad1f6fb64,12408948,0,0x0,8
tick,0x7ffad1f6fb64,12423946,0,0x0,8
tick,0x7ffad1f6fb64,12439972,0,0x0,8
tick,0x7ffad1f6fb64,12455999,0,0x0,8
tick,0x7ffad1f6fb64,12472019,0,0x0,8
tick,0x7ffad1f6fb64,12488014,0,0x0,8
tick,0x7ffad1f6fb64,12503025,0,0x0,8
tick,0x7ffad1f6fb64,12518053,0,0x0,8
tick,0x7ffad1f6fb64,12534055,0,0x0,8
tick,0x7ffad1f6fb64,12549051,0,0x0,8
tick,0x7ffad1f6fb64,12565100,0,0x0,8
tick,0x7ffad1f6fb64,12580106,0,0x0,8
tick,0x7ffad1f6fb64,12595124,0,0x0,8
tick,0x7ffad1f6fb64,12611134,0,0x0,8
tick,0x7ffad1f6fb64,12627162,0,0x0,8
tick,0x7ffad1f6fb64,12642206,0,0x0,8
tick,0x7ffad1f6fb64,12657187,0,0x0,8
tick,0x7ffad1f6fb64,12672187,0,0x0,8
tick,0x7ffad1f6fb64,12688270,0,0x0,8
tick,0x7ffad1f6fb64,12704210,0,0x0,8
tick,0x7ffad1f6fb64,12720225,0,0x0,8
tick,0x7ffad1f6fb64,12736268,0,0x0,8
tick,0x7ffad1f6fb64,12751244,0,0x0,8
tick,0x7ffad1f6fb64,12766254,0,0x0,8
tick,0x7ffad1f6fb64,12781274,0,0x0,8
tick,0x7ffad1f6fb64,12796303,0,0x0,8
tick,0x7ffad1f6fb64,12812321,0,0x0,8
tick,0x7ffad1f6fb64,12827328,0,0x0,8
tick,0x7ffad1f6fb64,12843377,0,0x0,8
tick,0x7ffad1f6fb64,12859350,0,0x0,8
tick,0x7ffad1f6fb64,12875395,0,0x0,8
tick,0x7ffad1f6fb64,12890382,0,0x0,8
tick,0x7ffad1f6fb64,12906402,0,0x0,8
tick,0x7ffad1f6fb64,12921401,0,0x0,8
tick,0x7ffad1f6fb64,12936441,0,0x0,8
tick,0x7ffad1f6fb64,12952450,0,0x0,8
tick,0x7ffad1f6fb64,12968464,0,0x0,8
tick,0x7ffad1f6fb64,12983460,0,0x0,8
tick,0x7ffad1f6fb64,12999477,0,0x0,8
tick,0x7ffad1f6fb64,13015505,0,0x0,8
tick,0x7ffad1f6fb64,13030509,0,0x0,8
tick,0x7ffad1f6fb64,13045532,0,0x0,8
tick,0x7ffad1f6fb64,13061531,0,0x0,8
tick,0x7ffad1f6fb64,13076556,0,0x0,8
tick,0x7ffad1f6fb64,13091581,0,0x0,8
tick,0x7ffad1f6fb64,13107579,0,0x0,8
tick,0x7ffad1f6fb64,13123586,0,0x0,8
tick,0x7ffad1f6fb64,13139595,0,0x0,8
tick,0x7ffad1f6fb64,13155619,0,0x0,8
tick,0x7ffad1f6fb64,13170634,0,0x0,8
tick,0x7ffad1f6fb64,13185658,0,0x0,8
tick,0x7ffad1f6fb64,13201662,0,0x0,8
tick,0x7ffad1f6fb64,13216720,0,0x0,8
tick,0x7ffad1f6fb64,13232715,0,0x0,8
tick,0x7ffad1f6fb64,13248723,0,0x0,8
tick,0x7ffad1f6fb64,13263733,0,0x0,8
tick,0x7ffad1f6fb64,13278796,0,0x0,8
tick,0x7ffad1f6fb64,13294747,0,0x0,8
tick,0x7ffad1f6fb64,13310772,0,0x0,8
tick,0x7ffad1f6fb64,13326783,0,0x0,8
tick,0x7ffad1f6fb64,13342817,0,0x0,8
tick,0x7ffad1f6fb64,13358803,0,0x0,8
tick,0x7ffad1f6fb64,13373832,0,0x0,8
tick,0x7ffad1f6fb64,13388841,0,0x0,8
tick,0x7ffad1f6fb64,13404882,0,0x0,8
tick,0x7ffad1f6fb64,13420933,0,0x0,8
tick,0x7ffad1f6fb64,13436877,0,0x0,8
tick,0x7ffad1f6fb64,13451898,0,0x0,8
tick,0x7ffad1f6fb64,13466904,0,0x0,8
tick,0x7ffad1f6fb64,13481958,0,0x0,8
tick,0x7ffad1f6fb64,13497932,0,0x0,8
tick,0x7ffad1f6fb64,13513945,0,0x0,8
tick,0x7ffad1f6fb64,13529956,0,0x0,8
tick,0x7ffad1f6fb64,13544970,0,0x0,8
tick,0x7ffad1f6fb64,13560000,0,0x0,8
tick,0x7ffad1f6fb64,13576014,0,0x0,8
tick,0x7ffad1f6fb64,13591022,0,0x0,8
tick,0x7ffad1f6fb64,13606019,0,0x0,8
tick,0x7ffad1f6fb64,13621056,0,0x0,8
tick,0x7ffad1f6fb64,13637075,0,0x0,8
tick,0x7ffad1f6fb64,13653095,0,0x0,8
tick,0x7ffad1f6fb64,13669090,0,0x0,8
tick,0x7ffad1f6fb64,13684096,0,0x0,8
tick,0x7ffad1f6fb64,13699132,0,0x0,8
tick,0x7ffad1f6fb64,13715129,0,0x0,8
tick,0x7ffad1f6fb64,13731143,0,0x0,8
tick,0x7ffad1f6fb64,13747165,0,0x0,8
tick,0x7ffad1f6fb64,13763181,0,0x0,8
tick,0x7ffad1f6fb64,13778206,0,0x0,8
tick,0x7ffad1f6fb64,13794201,0,0x0,8
tick,0x7ffad1f6fb64,13810211,0,0x0,8
tick,0x7ffad1f6fb64,13825240,0,0x0,8
tick,0x7ffad1f6fb64,13840240,0,0x0,8
tick,0x7ffad1f6fb64,13855262,0,0x0,8
tick,0x7ffad1f6fb64,13870287,0,0x0,8
tick,0x7ffad1f6fb64,13886318,0,0x0,8
tick,0x7ffad1f6fb64,13902318,0,0x0,8
tick,0x7ffad1f6fb64,13917310,0,0x0,8
tick,0x7ffad1f6fb64,13933345,0,0x0,8
tick,0x7ffad1f6fb64,13948338,0,0x0,8
tick,0x7ffad1f6fb64,13963349,0,0x0,8
tick,0x7ffad1f6fb64,13978371,0,0x0,8
tick,0x7ffad1f6fb64,13993411,0,0x0,8
tick,0x7ffad1f6fb64,14009387,0,0x0,8
tick,0x7ffad1f6fb64,14024415,0,0x0,8
tick,0x7ffad1f6fb64,14039428,0,0x0,8
tick,0x7ffad1f6fb64,14055419,0,0x0,8
tick,0x7ffad1f6fb64,14071459,0,0x0,8
tick,0x7ffad1f6fb64,14087453,0,0x0,8
tick,0x7ffad1f6fb64,14102478,0,0x0,8
tick,0x7ffad1f6fb64,14117490,0,0x0,8
tick,0x7ffad1f6fb64,14132516,0,0x0,8
tick,0x7ffad1f6fb64,14148523,0,0x0,8
tick,0x7ffad1f6fb64,14163521,0,0x0,8
tick,0x7ffad1f6fb64,14179553,0,0x0,8
tick,0x7ffad1f6fb64,14195567,0,0x0,8
tick,0x7ffad1f6fb64,14211619,0,0x0,8
tick,0x7ffad1f6fb64,14227592,0,0x0,8
tick,0x7ffad1f6fb64,14242614,0,0x0,8
tick,0x7ffad1f6fb64,14258618,0,0x0,8
tick,0x7ffad1f6fb64,14273647,0,0x0,8
tick,0x7ffad1f6fb64,14289656,0,0x0,8
tick,0x7ffad1f6fb64,14305651,0,0x0,8
tick,0x7ffad1f6fb64,14321699,0,0x0,8
tick,0x7ffad1f6fb64,14337694,0,0x0,8
tick,0x7ffad1f6fb64,14353707,0,0x0,8
tick,0x7ffad1f6fb64,14368739,0,0x0,8
tick,0x7ffad1f6fb64,14384742,0,0x0,8
tick,0x7ffad1f6fb64,14399753,0,0x0,8
tick,0x7ffad1f6fb64,14415752,0,0x0,8
tick,0x7ffad1f6fb64,14431786,0,0x0,8
tick,0x7ffad1f6fb64,14447804,0,0x0,8
tick,0x7ffad1f6fb64,14463811,0,0x0,8
tick,0x7ffad1f6fb64,14478809,0,0x0,8
tick,0x7ffad1f6fb64,14494847,0,0x0,8
tick,0x7ffad1f6fb64,14510845,0,0x0,8
tick,0x7ffad1f6fb64,14525863,0,0x0,8
tick,0x7ffad1f6fb64,14541881,0,0x0,8
tick,0x7ffad1f6fb64,14556890,0,0x0,8
tick,0x7ffad1f6fb64,14572914,0,0x0,8
tick,0x7ffad1f6fb64,14588932,0,0x0,8
tick,0x7ffad1f6fb64,14604920,0,0x0,8
tick,0x7ffad1f6fb64,14619945,0,0x0,8
tick,0x7ffad1f6fb64,14635980,0,0x0,8
tick,0x7ffad1f6fb64,14651986,0,0x0,8
tick,0x7ffad1f6fb64,14666996,0,0x0,8
tick,0x7ffad1f6fb64,14682028,0,0x0,8
tick,0x7ffad1f6fb64,14698046,0,0x0,8
tick,0x7ffad1f6fb64,14713055,0,0x0,8
tick,0x7ffad1f6fb64,14728046,0,0x0,8
tick,0x7ffad1f6fb64,14743067,0,0x0,8
tick,0x7ffad1f6fb64,14758087,0,0x0,8
tick,0x7ffad1f6fb64,14773098,0,0x0,8
tick,0x7ffad1f6fb64,14789116,0,0x0,8
tick,0x7ffad1f6fb64,14805104,0,0x0,8
tick,0x7ffad1f6fb64,14820132,0,0x0,8
tick,0x7ffad1f6fb64,14836150,0,0x0,8
tick,0x7ffad1f6fb64,14851168,0,0x0,8
tick,0x7ffad1f6fb64,14866201,0,0x0,8
tick,0x7ffad1f6fb64,14881191,0,0x0,8
tick,0x7ffad1f6fb64,14897193,0,0x0,8
tick,0x7ffad1f6fb64,14913227,0,0x0,8
tick,0x7ffad1f6fb64,14929258,0,0x0,8
tick,0x7ffad1f6fb64,14944277,0,0x0,8
tick,0x7ffad1f6fb64,14960283,0,0x0,8
tick,0x7ffad1f6fb64,14976296,0,0x0,8
tick,0x7ffad1f6fb64,14991290,0,0x0,8
tick,0x7ffad1f6fb64,15006328,0,0x0,8
tick,0x7ffad1f6fb64,15021309,0,0x0,8
tick,0x7ffad1f6fb64,15037343,0,0x0,8
tick,0x7ffad1f6fb64,15053330,0,0x0,8
tick,0x7ffad1f6fb64,15069354,0,0x0,8
tick,0x7ffad1f6fb64,15084394,0,0x0,8
tick,0x7ffad1f6fb64,15099376,0,0x0,8
tick,0x7ffad1f6fb64,15114392,0,0x0,8
tick,0x7ffad1f6fb64,15129418,0,0x0,8
tick,0x7ffad1f6fb64,15145436,0,0x0,8
tick,0x7ffad1f6fb64,15161443,0,0x0,8
tick,0x7ffad1f6fb64,15177464,0,0x0,8
tick,0x7ffad1f6fb64,15193489,0,0x0,8
tick,0x7ffad1f6fb64,15209482,0,0x0,8
tick,0x7ffad1f6fb64,15224504,0,0x0,8
tick,0x7ffad1f6fb64,15239530,0,0x0,8
tick,0x7ffad1f6fb64,15254527,0,0x0,8
tick,0x7ffad1f6fb64,15269546,0,0x0,8
tick,0x7ffad1f6fb64,15285554,0,0x0,8
tick,0x7ffad1f6fb64,15301591,0,0x0,8
tick,0x7ffad1f6fb64,15317593,0,0x0,8
tick,0x7ffad1f6fb64,15333604,0,0x0,8
tick,0x7ffad1f6fb64,15348616,0,0x0,8
tick,0x7ffad1f6fb64,15364618,0,0x0,8
tick,0x7ffad1f6fb64,15379638,0,0x0,8
tick,0x7ffad1f6fb64,15395659,0,0x0,8
tick,0x7ffad1f6fb64,15411696,0,0x0,8
tick,0x7ffad1f6fb64,15427688,0,0x0,8
tick,0x7ffad1f6fb64,15442701,0,0x0,8
tick,0x7ffad1f6fb64,15457720,0,0x0,8
tick,0x7ffad1f6fb64,15473746,0,0x0,8
tick,0x7ffad1f6fb64,15489744,0,0x0,8
tick,0x7ffad1f6fb64,15504781,0,0x0,8
tick,0x7ffad1f6fb64,15519822,0,0x0,8
tick,0x7ffad1f6fb64,15534789,0,0x0,8
tick,0x7ffad1f6fb64,15549781,0,0x0,8
tick,0x7ffad1f6fb64,15564812,0,0x0,8
tick,0x7ffad1f6fb64,15579834,0,0x0,8
tick,0x7ffad1f6fb64,15594860,0,0x0,8
tick,0x7ffad1f6fb64,15609853,0,0x0,8
tick,0x7ffad1f6fb64,15625952,0,0x0,8
tick,0x7ffad1f6fb64,15640876,0,0x0,8
tick,0x7ffad1f6fb64,15656917,0,0x0,8
tick,0x7ffad1f6fb64,15672909,0,0x0,8
tick,0x7ffad1f6fb64,15687926,0,0x0,8
tick,0x7ffad1f6fb64,15702931,0,0x0,8
tick,0x7ffad1f6fb64,15718951,0,0x0,8
tick,0x7ffad1f6fb64,15733962,0,0x0,8
tick,0x7ffad1f6fb64,15748977,0,0x0,8
tick,0x7ffad1f6fb64,15765004,0,0x0,8
tick,0x7ffad1f6fb64,15780014,0,0x0,8
tick,0x7ffad1f6fb64,15796023,0,0x0,8
tick,0x7ffad1f6fb64,15812052,0,0x0,8
tick,0x7ffad1f6fb64,15827051,0,0x0,8
tick,0x7ffad1f6fb64,15842066,0,0x0,8
tick,0x7ffad1f6fb64,15858068,0,0x0,8
tick,0x7ffad1f6fb64,15874103,0,0x0,8
tick,0x7ffad1f6fb64,15890118,0,0x0,8
tick,0x7ffad1f6fb64,15905132,0,0x0,8
tick,0x7ffad1f6fb64,15920141,0,0x0,8
tick,0x7ffad1f6fb64,15936170,0,0x0,8
tick,0x7ffad1f6fb64,15952187,0,0x0,8
tick,0x7ffad1f6fb64,15968203,0,0x0,8
tick,0x7ffad1f6fb64,15983236,0,0x0,8
tick,0x7ffad1f6fb64,15998227,0,0x0,8
tick,0x7ffad1f6fb64,16014250,0,0x0,8
tick,0x7ffad1f6fb64,16029249,0,0x0,8
tick,0x7ffad1f6fb64,16044250,0,0x0,8
tick,0x7ffad1f6fb64,16060294,0,0x0,8
tick,0x7ffad1f6fb64,16075279,0,0x0,8
tick,0x7ffad1f6fb64,16090317,0,0x0,8
tick,0x7ffad1f6fb64,16106326,0,0x0,8
tick,0x7ffad1f6fb64,16121396,0,0x0,8
tick,0x7ffad1f6fb64,16137334,0,0x0,8
tick,0x7ffad1f6fb64,16153367,0,0x0,8
tick,0x7ffad1f6fb64,16169369,0,0x0,8
tick,0x7ffad1f6fb64,16185370,0,0x0,8
tick,0x7ffad1f6fb64,16200410,0,0x0,8
tick,0x7ffad1f6fb64,16216414,0,0x0,8
tick,0x7ffad1f6fb64,16232411,0,0x0,8
tick,0x7ffad1f6fb64,16247442,0,0x0,8
tick,0x7ffad1f6fb64,16263447,0,0x0,8
tick,0x7ffad1f6fb64,16278470,0,0x0,8
tick,0x7ffad1f6fb64,16293496,0,0x0,8
tick,0x7ffad1f6fb64,16308503,0,0x0,8
tick,0x7ffad1f6fb64,16324529,0,0x0,8
tick,0x7ffad1f6fb64,16339514,0,0x0,8
tick,0x7ffad1f6fb64,16355534,0,0x0,8
tick,0x7ffad1f6fb64,16370556,0,0x0,8
tick,0x7ffad1f6fb64,16385584,0,0x0,8
tick,0x7ffad1f6fb64,16401585,0,0x0,8
tick,0x7ffad1f6fb64,16417606,0,0x0,8
tick,0x7ffad1f6fb64,16432619,0,0x0,8
tick,0x7ffad1f6fb64,16447605,0,0x0,8
tick,0x7ffad1f6fb64,16463623,0,0x0,8
tick,0x7ffad1f6fb64,16479681,0,0x0,8
tick,0x7ffad1f6fb64,16495744,0,0x0,8
tick,0x7ffad1f6fb64,16511691,0,0x0,8
tick,0x7ffad1f6fb64,16526717,0,0x0,8
tick,0x7ffad1f6fb64,16542722,0,0x0,8
tick,0x7ffad1f6fb64,16557717,0,0x0,8
tick,0x7ffad1f6fb64,16572744,0,0x0,8
tick,0x7ffad1f6fb64,16587763,0,0x0,8
tick,0x7ffad1f6fb64,16602762,0,0x0,8
tick,0x7ffad1f6fb64,16617805,0,0x0,8
tick,0x7ffad1f6fb64,16633795,0,0x0,8
tick,0x7ffad1f6fb64,16648838,0,0x0,8
tick,0x7ffad1f6fb64,16664823,0,0x0,8
tick,0x7ffad1f6fb64,16680040,0,0x0,8
tick,0x7ffad1f6fb64,16694863,0,0x0,8
tick,0x7ffad1f6fb64,16709868,0,0x0,8
tick,0x7ffad1f6fb64,16725861,0,0x0,8
tick,0x7ffad1f6fb64,16740904,0,0x0,8
tick,0x7ffad1f6fb64,16755907,0,0x0,8
tick,0x7ffad1f6fb64,16770913,0,0x0,8
tick,0x7ffad1f6fb64,16785911,0,0x0,8
tick,0x7ffad1f6fb64,16800963,0,0x0,8
tick,0x7ffad1f6fb64,16816980,0,0x0,8
tick,0x7ffad1f6fb64,16831997,0,0x0,8
tick,0x7ffad1f6fb64,16847976,0,0x0,8
tick,0x7ffad1f6fb64,16863976,0,0x0,8
tick,0x7ffad1f6fb64,16879014,0,0x0,8
tick,0x7ffad1f6fb64,16895021,0,0x0,8
tick,0x7ffad1f6fb64,16911044,0,0x0,8
tick,0x7ffad1f6fb64,16927082,0,0x0,8
tick,0x7ffad1f6fb64,16943063,0,0x0,8
tick,0x7ffad1f6fb64,16958110,0,0x0,8
tick,0x7ffad1f6fb64,16974115,0,0x0,8
tick,0x7ffad1f6fb64,16990125,0,0x0,8
tick,0x7ffad1f6fb64,17006160,0,0x0,8
tick,0x7ffad1f6fb64,17021130,0,0x0,8
tick,0x7ffad1f6fb64,17036157,0,0x0,8
tick,0x7ffad1f6fb64,17052172,0,0x0,8
tick,0x7ffad1f6fb64,17068208,0,0x0,8
tick,0x7ffad1f6fb64,17084207,0,0x0,8
tick,0x7ffad1f6fb64,17099213,0,0x0,8
tick,0x7ffad1f6fb64,17114224,0,0x0,8
tick,0x7ffad1f6fb64,17129234,0,0x0,8
tick,0x7ffad1f6fb64,17145262,0,0x0,8
tick,0x7ffad1f6fb64,17160308,0,0x0,8
tick,0x7ffad1f6fb64,17176290,0,0x0,8
tick,0x7ffad1f6fb64,17191283,0,0x0,8
tick,0x7ffad1f6fb64,17207308,0,0x0,8
tick,0x7ffad1f6fb64,17222324,0,0x0,8
tick,0x7ffad1f6fb64,17237339,0,0x0,8
tick,0x7ffad1f6fb64,17253345,0,0x0,8
tick,0x7ffad1f6fb64,17269376,0,0x0,8
tick,0x7ffad1f6fb64,17284379,0,0x0,8
tick,0x7ffad1f6fb64,17299389,0,0x0,8
tick,0x7ffad1f6fb64,17314396,0,0x0,8
tick,0x7ffad1f6fb64,17329428,0,0x0,8
tick,0x7ffad1f6fb64,17345456,0,0x0,8
tick,0x7ffad1f6fb64,17360599,0,0x0,8
tick,0x7ffad1f6fb64,17375485,0,0x0,8
tick,0x7ffad1f6fb64,17390481,0,0x0,8
tick,0x7ffad1f6fb64,17406502,0,0x0,8
tick,0x7ffad1f6fb64,17422500,0,0x0,8
tick,0x7ffad1f6fb64,17437517,0,0x0,8
tick,0x7ffad1f6fb64,17453639,0,0x0,8
tick,0x7ffad1f6fb64,17469550,0,0x0,8
tick,0x7ffad1f6fb64,17485574,0,0x0,8
tick,0x7ffad1f6fb64,17500565,0,0x0,8
tick,0x7ffad1f6fb64,17516609,0,0x0,8
tick,0x7ffad1f6fb64,17532600,0,0x0,8
tick,0x7ffad1f6fb64,17547612,0,0x0,8
tick,0x7ffad1f6fb64,17563639,0,0x0,8
tick,0x7ffad1f6fb64,17579654,0,0x0,8
tick,0x7ffad1f6fb64,17594668,0,0x0,8
tick,0x7ffad1f6fb64,17609680,0,0x0,8
tick,0x7ffad1f6fb64,17625695,0,0x0,8
tick,0x7ffad1f6fb64,17640717,0,0x0,8
tick,0x7ffad1f6fb64,17655728,0,0x0,8
tick,0x7ffad1f6fb64,17671737,0,0x0,8
tick,0x7ffad1f6fb64,17687754,0,0x0,8
tick,0x7ffad1f6fb64,17702763,0,0x0,8
tick,0x7ffad1f6fb64,17718772,0,0x0,8
tick,0x7ffad1f6fb64,17733835,0,0x0,8
tick,0x7ffad1f6fb64,17749800,0,0x0,8
tick,0x7ffad1f6fb64,17765823,0,0x0,8
tick,0x7ffad1f6fb64,17780843,0,0x0,8
tick,0x7ffad1f6fb64,17795865,0,0x0,8
tick,0x7ffad1f6fb64,17810868,0,0x0,8
tick,0x7ffad1f6fb64,17825892,0,0x0,8
tick,0x7ffad1f6fb64,17841973,0,0x0,8
tick,0x7ffad1f6fb64,17857917,0,0x0,8
tick,0x7ffad1f6fb64,17872927,0,0x0,8
tick,0x7ffad1f6fb64,17888935,0,0x0,8
tick,0x7ffad1f6fb64,17904960,0,0x0,8
tick,0x7ffad1f6fb64,17920998,0,0x0,8
tick,0x7ffad1f6fb64,17937015,0,0x0,8
tick,0x7ffad1f6fb64,17951987,0,0x0,8
tick,0x7ffad1f6fb64,17967012,0,0x0,8
tick,0x7ffad1f6fb64,17983025,0,0x0,8
tick,0x7ffad1f6fb64,17998048,0,0x0,8
tick,0x7ffad1f6fb64,18014079,0,0x0,8
tick,0x7ffad1f6fb64,18030075,0,0x0,8
tick,0x7ffad1f6fb64,18045093,0,0x0,8
tick,0x7ffad1f6fb64,18061091,0,0x0,8
tick,0x7ffad1f6fb64,18077112,0,0x0,8
tick,0x7ffad1f6fb64,18093137,0,0x0,8
tick,0x7ffad1f6fb64,18109130,0,0x0,8
tick,0x7ffad1f6fb64,18125168,0,0x0,8
tick,0x7ffad1f6fb64,18140153,0,0x0,8
tick,0x7ffad1f6fb64,18155166,0,0x0,8
tick,0x7ffad1f6fb64,18171209,0,0x0,8
tick,0x7ffad1f6fb64,18187210,0,0x0,8
tick,0x7ffad1f6fb64,18202207,0,0x0,8
tick,0x7ffad1f6fb64,18218219,0,0x0,8
tick,0x7ffad1f6fb64,18234249,0,0x0,8
tick,0x7ffad1f6fb64,18249255,0,0x0,8
tick,0x7ffad1f6fb64,18265285,0,0x0,8
tick,0x7ffad1f6fb64,18280320,0,0x0,8
tick,0x7ffad1f6fb64,18295341,0,0x0,8
tick,0x7ffad1f6fb64,18311320,0,0x0,8
tick,0x7ffad1f6fb64,18327321,0,0x0,8
tick,0x7ffad1f6fb64,18343360,0,0x0,8
tick,0x7ffad1f6fb64,18359374,0,0x0,8
tick,0x7ffad1f6fb64,18375379,0,0x0,8
tick,0x7ffad1f6fb64,18390404,0,0x0,8
tick,0x7ffad1f6fb64,18405398,0,0x0,8
tick,0x7ffad1f6fb64,18420425,0,0x0,8
tick,0x7ffad1f6fb64,18436478,0,0x0,8
tick,0x7ffad1f6fb64,18452459,0,0x0,8
tick,0x7ffad1f6fb64,18468483,0,0x0,8
tick,0x7ffad1f6fb64,18483495,0,0x0,8
tick,0x7ffad1f6fb64,18499486,0,0x0,8
tick,0x7ffad1f6fb64,18515516,0,0x0,8
tick,0x7ffad1f6fb64,18530517,0,0x0,8
tick,0x7ffad1f6fb64,18545636,0,0x0,8
tick,0x7ffad1f6fb64,18561584,0,0x0,8
tick,0x7ffad1f6fb64,18577574,0,0x0,8
tick,0x7ffad1f6fb64,18593586,0,0x0,8
tick,0x7ffad1f6fb64,18609604,0,0x0,8
tick,0x7ffad1f6fb64,18625613,0,0x0,8
tick,0x7ffad1f6fb64,18640771,0,0x0,8
tick,0x7ffad1f6fb64,18655712,0,0x0,8
tick,0x7ffad1f6fb64,18670744,0,0x0,8
tick,0x7ffad1f6fb64,18686650,0,0x0,8
tick,0x7ffad1f6fb64,18701687,0,0x0,8
tick,0x7ffad1f6fb64,18717688,0,0x0,8
tick,0x7ffad1f6fb64,18733717,0,0x0,8
tick,0x7ffad1f6fb64,18749714,0,0x0,8
tick,0x7ffad1f6fb64,18764744,0,0x0,8
tick,0x7ffad1f6fb64,18779762,0,0x0,8
tick,0x7ffad1f6fb64,18795762,0,0x0,8
tick,0x7ffad1f6fb64,18811789,0,0x0,8
tick,0x7ffad1f6fb64,18827814,0,0x0,8
tick,0x7ffad1f6fb64,18842797,0,0x0,8
tick,0x7ffad1f6fb64,18857829,0,0x0,8
tick,0x7ffad1f6fb64,18873849,0,0x0,8
tick,0x7ffad1f6fb64,18889860,0,0x0,8
tick,0x7ffad1f6fb64,18904843,0,0x0,8
tick,0x7ffad1f6fb64,18920935,0,0x0,8
tick,0x7ffad1f6fb64,18935902,0,0x0,8
tick,0x7ffad1f6fb64,18951890,0,0x0,8
tick,0x7ffad1f6fb64,18966916,0,0x0,8
tick,0x7ffad1f6fb64,18981923,0,0x0,8
tick,0x7ffad1f6fb64,18996961,0,0x0,8
tick,0x7ffad1f6fb64,19012970,0,0x0,8
tick,0x7ffad1f6fb64,19027980,0,0x0,8
tick,0x7ffad1f6fb64,19042977,0,0x0,8
tick,0x7ffad1f6fb64,19058988,0,0x0,8
tick,0x7ffad1f6fb64,19075005,0,0x0,8
tick,0x7ffad1f6fb64,19090026,0,0x0,8
tick,0x7ffad1f6fb64,19106046,0,0x0,8
tick,0x7ffad1f6fb64,19121053,0,0x0,8
tick,0x7ffad1f6fb64,19137083,0,0x0,8
tick,0x7ffad1f6fb64,19153078,0,0x0,8
tick,0x7ffad1f6fb64,19168103,0,0x0,8
tick,0x7ffad1f6fb64,19184130,0,0x0,8
tick,0x7ffad1f6fb64,19199116,0,0x0,8
tick,0x7ffad1f6fb64,19215140,0,0x0,8
tick,0x7ffad1f6fb64,19231153,0,0x0,8
tick,0x7ffad1f6fb64,19246167,0,0x0,8
tick,0x7ffad1f6fb64,19262172,0,0x0,8
tick,0x7ffad1f6fb64,19277191,0,0x0,8
tick,0x7ffad1f6fb64,19293211,0,0x0,8
tick,0x7ffad1f6fb64,19308213,0,0x0,8
tick,0x7ffad1f6fb64,19323253,0,0x0,8
tick,0x7ffad1f6fb64,19339240,0,0x0,8
tick,0x7ffad1f6fb64,19355307,0,0x0,8
tick,0x7ffad1f6fb64,19370288,0,0x0,8
tick,0x7ffad1f6fb64,19385359,0,0x0,8
tick,0x7ffad1f6fb64,19401319,0,0x0,8
tick,0x7ffad1f6fb64,19417347,0,0x0,8
tick,0x7ffad1f6fb64,19433335,0,0x0,8
tick,0x7ffad1f6fb64,19448354,0,0x0,8
tick,0x7ffad1f6fb64,19463376,0,0x0,8
tick,0x7ffad1f6fb64,19478414,0,0x0,8
tick,0x7ffad1f6fb64,19494414,0,0x0,8
tick,0x7ffad1f6fb64,19510444,0,0x0,8
tick,0x7ffad1f6fb64,19525416,0,0x0,8
tick,0x7ffad1f6fb64,19540454,0,0x0,8
tick,0x7ffad1f6fb64,19556436,0,0x0,8
tick,0x7ffad1f6fb64,19572481,0,0x0,8
tick,0x7ffad1f6fb64,19587748,0,0x0,8
tick,0x7ffad1f6fb64,19602517,0,0x0,8
tick,0x7ffad1f6fb64,19617525,0,0x0,8
tick,0x7ffad1f6fb64,19632515,0,0x0,8
tick,0x7ffad1f6fb64,19648545,0,0x0,8
tick,0x7ffad1f6fb64,19663571,0,0x0,8
tick,0x7ffad1f6fb64,19679576,0,0x0,8
tick,0x7ffad1f6fb64,19695623,0,0x0,8
tick,0x7ffad1f6fb64,19710598,0,0x0,8
tick,0x7ffad1f6fb64,19725598,0,0x0,8
tick,0x7ffad1f6fb64,19740632,0,0x0,8
tick,0x7ffad1f6fb64,19756654,0,0x0,8
tick,0x7ffad1f6fb64,19772636,0,0x0,8
tick,0x7ffad1f6fb64,19787853,0,0x0,8
tick,0x7ffad1f6fb64,19802692,0,0x0,8
tick,0x7ffad1f6fb64,19817705,0,0x0,8
tick,0x7ffad1f6fb64,19833712,0,0x0,8
tick,0x7ffad1f6fb64,19849730,0,0x0,8
tick,0x7ffad1f6fb64,19865751,0,0x0,8
tick,0x7ffad1f6fb64,19880763,0,0x0,8
tick,0x7ffad1f6fb64,19895871,0,0x0,8
tick,0x7ffad1f6fb64,19910825,0,0x0,8
tick,0x7ffad1f6fb64,19926790,0,0x0,8
tick,0x7ffad1f6fb64,19942809,0,0x0,8
tick,0x7ffad1f6fb64,19958825,0,0x0,8
tick,0x7ffad1f6fb64,19974869,0,0x0,8
tick,0x7ffad1f6fb64,19990875,0,0x0,8
tick,0x7ffad1f6fb64,20005866,0,0x0,8
tick,0x7ffad1f6fb64,20020910,0,0x0,8
tick,0x7ffad1f6fb64,20036909,0,0x0,8
tick,0x7ffad1f6fb64,20052894,0,0x0,8
tick,0x7ffad1f6fb64,20068940,0,0x0,8
tick,0x7ffad1f6fb64,20084965,0,0x0,8
tick,0x7ffad1f6fb64,20100946,0,0x0,8
tick,0x7ffad1f6fb64,20115980,0,0x0,8
tick,0x7ffad1f6fb64,20131972,0,0x0,8
tick,0x7ffad1f6fb64,20147979,0,0x0,8
tick,0x7ffad1f6fb64,20164004,0,0x0,8
tick,0x7ffad1f6fb64,20180018,0,0x0,8
tick,0x7ffad1f6fb64,20195046,0,0x0,8
tick,0x7ffad1f6fb64,20210035,0,0x0,8
tick,0x7ffad1f6fb64,20226080,0,0x0,8
tick,0x7ffad1f6fb64,20241085,0,0x0,8
tick,0x7ffad1f6fb64,20257085,0,0x0,8
tick,0x7ffad1f6fb64,20273096,0,0x0,8
tick,0x7ffad1f6fb64,20289133,0,0x0,8
tick,0x7ffad1f6fb64,20304133,0,0x0,8
tick,0x7ffad1f6fb64,20319143,0,0x0,8
tick,0x7ffad1f6fb64,20334191,0,0x0,8
tick,0x7ffad1f6fb64,20350197,0,0x0,8
tick,0x7ffad1f6fb64,20365245,0,0x0,8
tick,0x7ffad1f6fb64,20380819,0,0x0,8
tick,0x7ffad1f6fb64,20397290,0,0x0,8
tick,0x7ffad1f6fb64,20410281,0,0x0,8
tick,0x7ffad1f6fb64,20426269,0,0x0,8
tick,0x7ffad1f6fb64,20442301,0,0x0,8
tick,0x7ffad1f6fb64,20458321,0,0x0,8
tick,0x7ffad1f6fb64,20473305,0,0x0,8
tick,0x7ffad1f6fb64,20488357,0,0x0,8
tick,0x7ffad1f6fb64,20504301,0,0x0,8
tick,0x7ffad1f6fb64,20520340,0,0x0,8
tick,0x7ffad1f6fb64,20535370,0,0x0,8
tick,0x7ffad1f6fb64,20550359,0,0x0,8
tick,0x7ffad1f6fb64,20566364,0,0x0,8
tick,0x7ffad1f6fb64,20581368,0,0x0,8
tick,0x7ffad1f6fb64,20597408,0,0x0,8
tick,0x7ffad1f6fb64,20613403,0,0x0,8
tick,0x7ffad1f6fb64,20628438,0,0x0,8
tick,0x7ffad1f6fb64,20643433,0,0x0,8
tick,0x7ffad1f6fb64,20658469,0,0x0,8
tick,0x7ffad1f6fb64,20673481,0,0x0,8
tick,0x7ffad1f6fb64,20688476,0,0x0,8
tick,0x7ffad1f6fb64,20704487,0,0x0,8
tick,0x7ffad1f6fb64,20720518,0,0x0,8
tick,0x7ffad1f6fb64,20736537,0,0x0,8
tick,0x7ffad1f6fb64,20752534,0,0x0,8
tick,0x7ffad1f6fb64,20768636,0,0x0,8
tick,0x7ffad1f6fb64,20784578,0,0x0,8
tick,0x7ffad1f6fb64,20799580,0,0x0,8
tick,0x7ffad1f6fb64,20815591,0,0x0,8
tick,0x7ffad1f6fb64,20831604,0,0x0,8
tick,0x7ffad1f6fb64,20847661,0,0x0,8
tick,0x7ffad1f6fb64,20862661,0,0x0,8
tick,0x7ffad1f6fb64,20877670,0,0x0,8
tick,0x7ffad1f6fb64,20892697,0,0x0,8
tick,0x7ffad1f6fb64,20907744,0,0x0,8
tick,0x7ffad1f6fb64,20923722,0,0x0,8
tick,0x7ffad1f6fb64,20938733,0,0x0,8
tick,0x7ffad1f6fb64,20953742,0,0x0,8
tick,0x7ffad1f6fb64,20969753,0,0x0,8
tick,0x7ffad1f6fb64,20984768,0,0x0,8
tick,0x7ffad1f6fb64,20999797,0,0x0,8
tick,0x7ffad1f6fb64,21015819,0,0x0,8
tick,0x7ffad1f6fb64,21031899,0,0x0,8
tick,0x7ffad1f6fb64,21046854,0,0x0,8
tick,0x7ffad1f6fb64,21062868,0,0x0,8
tick,0x7ffad1f6fb64,21078842,0,0x0,8
tick,0x7ffad1f6fb64,21093875,0,0x0,8
tick,0x7ffad1f6fb64,21109897,0,0x0,8
tick,0x7ffad1f6fb64,21124890,0,0x0,8
tick,0x7ffad1f6fb64,21139894,0,0x0,8
tick,0x7ffad1f6fb64,21155900,0,0x0,8
tick,0x7ffad1f6fb64,21170978,0,0x0,8
tick,0x7ffad1f6fb64,21186957,0,0x0,8
tick,0x7ffad1f6fb64,21202998,0,0x0,8
tick,0x7ffad1f6fb64,21219001,0,0x0,8
tick,0x7ffad1f6fb64,21234002,0,0x0,8
tick,0x7ffad1f6fb64,21249007,0,0x0,8
tick,0x7ffad1f6fb64,21264148,0,0x0,8
tick,0x7ffad1f6fb64,21280081,0,0x0,8
tick,0x7ffad1f6fb64,21295123,0,0x0,8
tick,0x7ffad1f6fb64,21311105,0,0x0,8
tick,0x7ffad1f6fb64,21327079,0,0x0,8
tick,0x7ffad1f6fb64,21343109,0,0x0,8
tick,0x7ffad1f6fb64,21358136,0,0x0,8
tick,0x7ffad1f6fb64,21374138,0,0x0,8
tick,0x7ffad1f6fb64,21390163,0,0x0,8
tick,0x7ffad1f6fb64,21405156,0,0x0,8
tick,0x7ffad1f6fb64,21420325,0,0x0,8
tick,0x7ffad1f6fb64,21435188,0,0x0,8
tick,0x7ffad1f6fb64,21450173,0,0x0,8
tick,0x7ffad1f6fb64,21466206,0,0x0,8
tick,0x7ffad1f6fb64,21481249,0,0x0,8
tick,0x7ffad1f6fb64,21497252,0,0x0,8
tick,0x7ffad1f6fb64,21513242,0,0x0,8
tick,0x7ffad1f6fb64,21529258,0,0x0,8
tick,0x7ffad1f6fb64,21544270,0,0x0,8
tick,0x7ffad1f6fb64,21559273,0,0x0,8
tick,0x7ffad1f6fb64,21575315,0,0x0,8
tick,0x7ffad1f6fb64,21591315,0,0x0,8
tick,0x7ffad1f6fb64,21607359,0,0x0,8
tick,0x7ffad1f6fb64,21622385,0,0x0,8
tick,0x7ffad1f6fb64,21637351,0,0x0,8
tick,0x7ffad1f6fb64,21653374,0,0x0,8
tick,0x7ffad1f6fb64,21669375,0,0x0,8
tick,0x7ffad1f6fb64,21684403,0,0x0,8
tick,0x7ffad1f6fb64,21699405,0,0x0,8
tick,0x7ffad1f6fb64,21715446,0,0x0,8
tick,0x7ffad1f6fb64,21731442,0,0x0,8
tick,0x7ffad1f6fb64,21747449,0,0x0,8
tick,0x7ffad1f6fb64,21762507,0,0x0,8
tick,0x7ffad1f6fb64,21777476,0,0x0,8
tick,0x7ffad1f6fb64,21793506,0,0x0,8
tick,0x7ffad1f6fb64,21809505,0,0x0,8
tick,0x7ffad1f6fb64,21825512,0,0x0,8
tick,0x7ffad1f6fb64,21840537,0,0x0,8
tick,0x7ffad1f6fb64,21855549,0,0x0,8
tick,0x7ffad1f6fb64,21870552,0,0x0,8
tick,0x7ffad1f6fb64,21886571,0,0x0,8
tick,0x7ffad1f6fb64,21901581,0,0x0,8
tick,0x7ffad1f6fb64,21917626,0,0x0,8
tick,0x7ffad1f6fb64,21933635,0,0x0,8
tick,0x7ffad1f6fb64,21948694,0,0x0,8
tick,0x7ffad1f6fb64,21963657,0,0x0,8
tick,0x7ffad1f6fb64,21978685,0,0x0,8
tick,0x7ffad1f6fb64,21994688,0,0x0,8
tick,0x7ffad1f6fb64,22010698,0,0x0,8
tick,0x7ffad1f6fb64,22025767,0,0x0,8
tick,0x7ffad1f6fb64,22040805,0,0x0,8
tick,0x7ffad1f6fb64,22055765,0,0x0,8
tick,0x7ffad1f6fb64,22070794,0,0x0,8
tick,0x7ffad1f6fb64,22085803,0,0x0,8
tick,0x7ffad1f6fb64,22100792,0,0x0,8
tick,0x7ffad1f6fb64,22115799,0,0x0,8
tick,0x7ffad1f6fb64,22130799,0,0x0,8
tick,0x7ffad1f6fb64,22145843,0,0x0,8
tick,0x7ffad1f6fb64,22160829,0,0x0,8
tick,0x7ffad1f6fb64,22176888,0,0x0,8
tick,0x7ffad1f6fb64,22192874,0,0x0,8
tick,0x7ffad1f6fb64,22208880,0,0x0,8
tick,0x7ffad1f6fb64,22223888,0,0x0,8
tick,0x7ffad1f6fb64,22239924,0,0x0,8
tick,0x7ffad1f6fb64,22254932,0,0x0,8
tick,0x7ffad1f6fb64,22269987,0,0x0,8
tick,0x7ffad1f6fb64,22285974,0,0x0,8
tick,0x7ffad1f6fb64,22301981,0,0x0,8
tick,0x7ffad1f6fb64,22317973,0,0x0,8
tick,0x7ffad1f6fb64,22332972,0,0x0,8
tick,0x7ffad1f6fb64,22349034,0,0x0,8
tick,0x7ffad1f6fb64,22365053,0,0x0,8
tick,0x7ffad1f6fb64,22380041,0,0x0,8
tick,0x7ffad1f6fb64,22395042,0,0x0,8
tick,0x7ffad1f6fb64,22410070,0,0x0,8
tick,0x7ffad1f6fb64,22426063,0,0x0,8
tick,0x7ffad1f6fb64,22441066,0,0x0,8
tick,0x7ffad1f6fb64,22457282,0,0x0,8
tick,0x7ffad1f6fb64,22473190,0,0x0,8
tick,0x7ffad1f6fb64,22488133,0,0x0,8
tick,0x7ffad1f6fb64,22503130,0,0x0,8
tick,0x7ffad1f6fb64,22519156,0,0x0,8
tick,0x7ffad1f6fb64,22535173,0,0x0,8
tick,0x7ffad1f6fb64,22550209,0,0x0,8
tick,0x7ffad1f6fb64,22566203,0,0x0,8
tick,0x7ffad1f6fb64,22581233,0,0x0,8
tick,0x7ffad1f6fb64,22597231,0,0x0,8
tick,0x7ffad1f6fb64,22613255,0,0x0,8
tick,0x7ffad1f6fb64,22628243,0,0x0,8
tick,0x7ffad1f6fb64,22643302,0,0x0,8
tick,0x7ffad1f6fb64,22659311,0,0x0,8
tick,0x7ffad1f6fb64,22675303,0,0x0,8
tick,0x7ffad1f6fb64,22691328,0,0x0,8
tick,0x7ffad1f6fb64,22707338,0,0x0,8
tick,0x7ffad1f6fb64,22722382,0,0x0,8
tick,0x7ffad1f6fb64,22737457,0,0x0,8
tick,0x7ffad1f6fb64,22752391,0,0x0,8
tick,0x7ffad1f6fb64,22767408,0,0x0,8
tick,0x7ffad1f6fb64,22782385,0,0x0,8
tick,0x7ffad1f6fb64,22798400,0,0x0,8
tick,0x7ffad1f6fb64,22814423,0,0x0,8
tick,0x7ffad1f6fb64,22830637,0,0x0,8
tick,0x7ffad1f6fb64,22845444,0,0x0,8
tick,0x7ffad1f6fb64,22861457,0,0x0,8
tick,0x7ffad1f6fb64,22876453,0,0x0,8
tick,0x7ffad1f6fb64,22892502,0,0x0,8
tick,0x7ffad1f6fb64,22908505,0,0x0,8
tick,0x7ffad1f6fb64,22924534,0,0x0,8
tick,0x7ffad1f6fb64,22939520,0,0x0,8
tick,0x7ffad1f6fb64,22954559,0,0x0,8
tick,0x7ffad1f6fb64,22969569,0,0x0,8
tick,0x7ffad1f6fb64,22984565,0,0x0,8
tick,0x7ffad1f6fb64,22999570,0,0x0,8
tick,0x7ffad1f6fb64,23015703,0,0x0,8
tick,0x7ffad1f6fb64,23030630,0,0x0,8
tick,0x7ffad1f6fb64,23046628,0,0x0,8
tick,0x7ffad1f6fb64,23062645,0,0x0,8
tick,0x7ffad1f6fb64,23078654,0,0x0,8
tick,0x7ffad1f6fb64,23093675,0,0x0,8
tick,0x7ffad1f6fb64,23109708,0,0x0,8
tick,0x7ffad1f6fb64,23125710,0,0x0,8
tick,0x7ffad1f6fb64,23140712,0,0x0,8
tick,0x7ffad1f6fb64,23156753,0,0x0,8
tick,0x7ffad1f6fb64,23172742,0,0x0,8
tick,0x7ffad1f6fb64,23187785,0,0x0,8
tick,0x7ffad1f6fb64,23202779,0,0x0,8
tick,0x7ffad1f6fb64,23218804,0,0x0,8
tick,0x7ffad1f6fb64,23234803,0,0x0,8
tick,0x7ffad1f6fb64,23249812,0,0x0,8
tick,0x7ffad1f6fb64,23265852,0,0x0,8
tick,0x7ffad1f6fb64,23281851,0,0x0,8
tick,0x7ffad1f6fb64,23297847,0,0x0,8
tick,0x7ffad1f6fb64,23313897,0,0x0,8
tick,0x7ffad1f6fb64,23328926,0,0x0,8
tick,0x7ffad1f6fb64,23343945,0,0x0,8
tick,0x7ffad1f6fb64,23359949,0,0x0,8
tick,0x7ffad1f6fb64,23374969,0,0x0,8
tick,0x7ffad1f6fb64,23390987,0,0x0,8
tick,0x7ffad1f6fb64,23405981,0,0x0,8
tick,0x7ffad1f6fb64,23420973,0,0x0,8
tick,0x7ffad1f6fb64,23435978,0,0x0,8
tick,0x7ffad1f6fb64,23452087,0,0x0,8
tick,0x7ffad1f6fb64,23468010,0,0x0,8
tick,0x7ffad1f6fb64,23484017,0,0x0,8
tick,0x7ffad1f6fb64,23499040,0,0x0,8
tick,0x7ffad1f6fb64,23514112,0,0x0,8
tick,0x7ffad1f6fb64,23530064,0,0x0,8
tick,0x7ffad1f6fb64,23546073,0,0x0,8
tick,0x7ffad1f6fb64,23561114,0,0x0,8
tick,0x7ffad1f6fb64,23576114,0,0x0,8
tick,0x7ffad1f6fb64,23592158,0,0x0,8
tick,0x7ffad1f6fb64,23608151,0,0x0,8
tick,0x7ffad1f6fb64,23624152,0,0x0,8
tick,0x7ffad1f6fb64,23640169,0,0x0,8
tick,0x7ffad1f6fb64,23655174,0,0x0,8
tick,0x7ffad1f6fb64,23671218,0,0x0,8
tick,0x7ffad1f6fb64,23687200,0,0x0,8
tick,0x7ffad1f6fb64,23702259,0,0x0,8
tick,0x7ffad1f6fb64,23717243,0,0x0,8
tick,0x7ffad1f6fb64,23733228,0,0x0,8
tick,0x7ffad1f6fb64,23749255,0,0x0,8
tick,0x7ffad1f6fb64,23764275,0,0x0,8
tick,0x7ffad1f6fb64,23780317,0,0x0,8
tick,0x7ffad1f6fb64,23795313,0,0x0,8
tick,0x7ffad1f6fb64,23811330,0,0x0,8
tick,0x7ffad1f6fb64,23826360,0,0x0,8
tick,0x7ffad1f6fb64,23842348,0,0x0,8
tick,0x7ffad1f6fb64,23858377,0,0x0,8
tick,0x7ffad1f6fb64,23874414,0,0x0,8
tick,0x7ffad1f6fb64,23890454,0,0x0,8
tick,0x7ffad1f6fb64,23905434,0,0x0,8
tick,0x7ffad1f6fb64,23920453,0,0x0,8
tick,0x7ffad1f6fb64,23935465,0,0x0,8
tick,0x7ffad1f6fb64,23951461,0,0x0,8
tick,0x7ffad1f6fb64,23966516,0,0x0,8
tick,0x7ffad1f6fb64,23981657,0,0x0,8
tick,0x7ffad1f6fb64,23996519,0,0x0,8
tick,0x7ffad1f6fb64,24012513,0,0x0,8
tick,0x7ffad1f6fb64,24027528,0,0x0,8
tick,0x7ffad1f6fb64,24042745,0,0x0,8
tick,0x7ffad1f6fb64,24058539,0,0x0,8
tick,0x7ffad1f6fb64,24074573,0,0x0,8
tick,0x7ffad1f6fb64,24089575,0,0x0,8
tick,0x7ffad1f6fb64,24105583,0,0x0,8
tick,0x7ffad1f6fb64,24120605,0,0x0,8
tick,0x7ffad1f6fb64,24136631,0,0x0,8
tick,0x7ffad1f6fb64,24152635,0,0x0,8
tick,0x7ffad1f6fb64,24167645,0,0x0,8
tick,0x7ffad1f6fb64,24183661,0,0x0,8
tick,0x7ffad1f6fb64,24199675,0,0x0,8
tick,0x7ffad1f6fb64,24214713,0,0x0,8
tick,0x7ffad1f6fb64,24230719,0,0x0,8
tick,0x7ffad1f6fb64,24246710,0,0x0,8
tick,0x7ffad1f6fb64,24262734,0,0x0,8
tick,0x7ffad1f6fb64,24277771,0,0x0,8
tick,0x7ffad1f6fb64,24292779,0,0x0,8
tick,0x7ffad1f6fb64,24308822,0,0x0,8
tick,0x7ffad1f6fb64,24324840,0,0x0,8
tick,0x7ffad1f6fb64,24339895,0,0x0,8
tick,0x7ffad1f6fb64,24354832,0,0x0,8
tick,0x7ffad1f6fb64,24370824,0,0x0,8
tick,0x7ffad1f6fb64,24386850,0,0x0,8
tick,0x7ffad1f6fb64,24401867,0,0x0,8
tick,0x7ffad1f6fb64,24416899,0,0x0,8
tick,0x7ffad1f6fb64,24431903,0,0x0,8
tick,0x7ffad1f6fb64,24447913,0,0x0,8
tick,0x7ffad1f6fb64,24462952,0,0x0,8
tick,0x7ffad1f6fb64,24478920,0,0x0,8
tick,0x7ffad1f6fb64,24494964,0,0x0,8
tick,0x7ffad1f6fb64,24510991,0,0x0,8
tick,0x7ffad1f6fb64,24526021,0,0x0,8
tick,0x7ffad1f6fb64,24541990,0,0x0,8
tick,0x7ffad1f6fb64,24556995,0,0x0,8
tick,0x7ffad1f6fb64,24573022,0,0x0,8
tick,0x7ffad1f6fb64,24589037,0,0x0,8
tick,0x7ffad1f6fb64,24605041,0,0x0,8
tick,0x7ffad1f6fb64,24620067,0,0x0,8
tick,0x7ffad1f6fb64,24635078,0,0x0,8
tick,0x7ffad1f6fb64,24650118,0,0x0,8
tick,0x7ffad1f6fb64,24665095,0,0x0,8
tick,0x7ffad1f6fb64,24680182,0,0x0,8
tick,0x7ffad1f6fb64,24695178,0,0x0,8
tick,0x7ffad1f6fb64,24711172,0,0x0,8
tick,0x7ffad1f6fb64,24727169,0,0x0,8
tick,0x7ffad1f6fb64,24742174,0,0x0,8
tick,0x7ffad1f6fb64,24757190,0,0x0,8
tick,0x7ffad1f6fb64,24773197,0,0x0,8
tick,0x7ffad1f6fb64,24788269,0,0x0,8
tick,0x7ffad1f6fb64,24803246,0,0x0,8
tick,0x7ffad1f6fb64,24819243,0,0x0,8
tick,0x7ffad1f6fb64,24834265,0,0x0,8
tick,0x7ffad1f6fb64,24849268,0,0x0,8
tick,0x7ffad1f6fb64,24865323,0,0x0,8
tick,0x7ffad1f6fb64,24880292,0,0x0,8
tick,0x7ffad1f6fb64,24895311,0,0x0,8
tick,0x7ffad1f6fb64,24911348,0,0x0,8
tick,0x7ffad1f6fb64,24927323,0,0x0,8
tick,0x7ffad1f6fb64,24943340,0,0x0,8
tick,0x7ffad1f6fb64,24958380,0,0x0,8
tick,0x7ffad1f6fb64,24974403,0,0x0,8
tick,0x7ffad1f6fb64,24989412,0,0x0,8
tick,0x7ffad1f6fb64,25004550,0,0x0,8
tick,0x7ffad1f6fb64,25019457,0,0x0,8
tick,0x7ffad1f6fb64,25035438,0,0x0,8
tick,0x7ffad1f6fb64,25050433,0,0x0,8
tick,0x7ffad1f6fb64,25066490,0,0x0,8
tick,0x7ffad1f6fb64,25081490,0,0x0,8
tick,0x7ffad1f6fb64,25097492,0,0x0,8
tick,0x7ffad1f6fb64,25113524,0,0x0,8
tick,0x7ffad1f6fb64,25129532,0,0x0,8
tick,0x7ffad1f6fb64,25144529,0,0x0,8
tick,0x7ffad1f6fb64,25159551,0,0x0,8
tick,0x7ffad1f6fb64,25175557,0,0x0,8
tick,0x7ffad1f6fb64,25190599,0,0x0,8
tick,0x7ffad1f6fb64,25206610,0,0x0,8
tick,0x7ffad1f6fb64,25222597,0,0x0,8
tick,0x7ffad1f6fb64,25237638,0,0x0,8
tick,0x7ffad1f6fb64,25252634,0,0x0,8
tick,0x7ffad1f6fb64,25268645,0,0x0,8
tick,0x7ffad1f6fb64,25284664,0,0x0,8
tick,0x7ffad1f6fb64,25299699,0,0x0,8
tick,0x7ffad1f6fb64,25315686,0,0x0,8
tick,0x7ffad1f6fb64,25330742,0,0x0,8
tick,0x7ffad1f6fb64,25345717,0,0x0,8
tick,0x7ffad1f6fb64,25360728,0,0x0,8
tick,0x7ffad1f6fb64,25375755,0,0x0,8
tick,0x7ffad1f6fb64,25391788,0,0x0,8
tick,0x7ffad1f6fb64,25407791,0,0x0,8
tick,0x7ffad1f6fb64,25422786,0,0x0,8
tick,0x7ffad1f6fb64,25438818,0,0x0,8
tick,0x7ffad1f6fb64,25454817,0,0x0,8
tick,0x7ffad1f6fb64,25469844,0,0x0,8
tick,0x7ffad1f6fb64,25485846,0,0x0,8
tick,0x7ffad1f6fb64,25501887,0,0x0,8
tick,0x7ffad1f6fb64,25517899,0,0x0,8
tick,0x7ffad1f6fb64,25533904,0,0x0,8
tick,0x7ffad1f6fb64,25550009,0,0x0,8
tick,0x7ffad1f6fb64,25564925,0,0x0,8
tick,0x7ffad1f6fb64,25579923,0,0x0,8
tick,0x7ffad1f6fb64,25594960,0,0x0,8
tick,0x7ffad1f6fb64,25609954,0,0x0,8
tick,0x7ffad1f6fb64,25624975,0,0x0,8
tick,0x7ffad1f6fb64,25640017,0,0x0,8
tick,0x7ffad1f6fb64,25655994,0,0x0,8
tick,0x7ffad1f6fb64,25671031,0,0x0,8
tick,0x7ffad1f6fb64,25686064,0,0x0,8
tick,0x7ffad1f6fb64,25701044,0,0x0,8
tick,0x7ffad1f6fb64,25717173,0,0x0,8
tick,0x7ffad1f6fb64,25732069,0,0x0,8
tick,0x7ffad1f6fb64,25748103,0,0x0,8
tick,0x7ffad1f6fb64,25763110,0,0x0,8
tick,0x7ffad1f6fb64,25778107,0,0x0,8
tick,0x7ffad1f6fb64,25794138,0,0x0,8
tick,0x7ffad1f6fb64,25810161,0,0x0,8
tick,0x7ffad1f6fb64,25826168,0,0x0,8
tick,0x7ffad1f6fb64,25841186,0,0x0,8
tick,0x7ffad1f6fb64,25857205,0,0x0,8
tick,0x7ffad1f6fb64,25873233,0,0x0,8
tick,0x7ffad1f6fb64,25888265,0,0x0,8
tick,0x7ffad1f6fb64,25903224,0,0x0,8
tick,0x7ffad1f6fb64,25919263,0,0x0,8
tick,0x7ffad1f6fb64,25935277,0,0x0,8
tick,0x7ffad1f6fb64,25950331,0,0x0,8
tick,0x7ffad1f6fb64,25966298,0,0x0,8
tick,0x7ffad1f6fb64,25981315,0,0x0,8
tick,0x7ffad1f6fb64,25997340,0,0x0,8
tick,0x7ffad1f6fb64,26012327,0,0x0,8
tick,0x7ffad1f6fb64,26027336,0,0x0,8
tick,0x7ffad1f6fb64,26042446,0,0x0,8
tick,0x7ffad1f6fb64,26058391,0,0x0,8
tick,0x7ffad1f6fb64,26074393,0,0x0,8
tick,0x7ffad1f6fb64,26089395,0,0x0,8
tick,0x7ffad1f6fb64,26105401,0,0x0,8
tick,0x7ffad1f6fb64,26120458,0,0x0,8
tick,0x7ffad1f6fb64,26136446,0,0x0,8
tick,0x7ffad1f6fb64,26152444,0,0x0,8
tick,0x7ffad1f6fb64,26167485,0,0x0,8
tick,0x7ffad1f6fb64,26183489,0,0x0,8
tick,0x7ffad1f6fb64,26199502,0,0x0,8
tick,0x7ffad1f6fb64,26214499,0,0x0,8
tick,0x7ffad1f6fb64,26230614,0,0x0,8
tick,0x7ffad1f6fb64,26246551,0,0x0,8
tick,0x7ffad1f6fb64,26261567,0,0x0,8
tick,0x7ffad1f6fb64,26277571,0,0x0,8
tick,0x7ffad1f6fb64,26293590,0,0x0,8
tick,0x7ffad1f6fb64,26308612,0,0x0,8
tick,0x7ffad1f6fb64,26324630,0,0x0,8
tick,0x7ffad1f6fb64,26339646,0,0x0,8
tick,0x7ffad1f6fb64,26355671,0,0x0,8
tick,0x7ffad1f6fb64,26370678,0,0x0,8
tick,0x7ffad1f6fb64,26386714,0,0x0,8
tick,0x7ffad1f6fb64,26402689,0,0x0,8
tick,0x7ffad1f6fb64,26417761,0,0x0,8
tick,0x7ffad1f6fb64,26433718,0,0x0,8
tick,0x7ffad1f6fb64,26448739,0,0x0,8
tick,0x7ffad1f6fb64,26463741,0,0x0,8
tick,0x7ffad1f6fb64,26478750,0,0x0,8
tick,0x7ffad1f6fb64,26494785,0,0x0,8
tick,0x7ffad1f6fb64,26510821,0,0x0,8
tick,0x7ffad1f6fb64,26525803,0,0x0,8
tick,0x7ffad1f6fb64,26540825,0,0x0,8
tick,0x7ffad1f6fb64,26555847,0,0x0,8
tick,0x7ffad1f6fb64,26570859,0,0x0,8
tick,0x7ffad1f6fb64,26585838,0,0x0,8
tick,0x7ffad1f6fb64,26601875,0,0x0,8
tick,0x7ffad1f6fb64,26616912,0,0x0,8
tick,0x7ffad1f6fb64,26632883,0,0x0,8
tick,0x7ffad1f6fb64,26648913,0,0x0,8
tick,0x7ffad1f6fb64,26663916,0,0x0,8
tick,0x7ffad1f6fb64,26679953,0,0x0,8
tick,0x7ffad1f6fb64,26694963,0,0x0,8
tick,0x7ffad1f6fb64,26711005,0,0x0,8
tick,0x7ffad1f6fb64,26725999,0,0x0,8
tick,0x7ffad1f6fb64,26741060,0,0x0,8
tick,0x7ffad1f6fb64,26756029,0,0x0,8
tick,0x7ffad1f6fb64,26771042,0,0x0,8
tick,0x7ffad1f6fb64,26786036,0,0x0,8
tick,0x7ffad1f6fb64,26801077,0,0x0,8
tick,0x7ffad1f6fb64,26817174,0,0x0,8
tick,0x7ffad1f6fb64,26833087,0,0x0,8
tick,0x7ffad1f6fb64,26849141,0,0x0,8
tick,0x7ffad1f6fb64,26864142,0,0x0,8
tick,0x7ffad1f6fb64,26880119,0,0x0,8
tick,0x7ffad1f6fb64,26895126,0,0x0,8
tick,0x7ffad1f6fb64,26911164,0,0x0,8
tick,0x7ffad1f6fb64,26927170,0,0x0,8
tick,0x7ffad1f6fb64,26942168,0,0x0,8
tick,0x7ffad1f6fb64,26957191,0,0x0,8
tick,0x7ffad1f6fb64,26972200,0,0x0,8
tick,0x7ffad1f6fb64,26988220,0,0x0,8
tick,0x7ffad1f6fb64,27004242,0,0x0,8
tick,0x7ffad1f6fb64,27020247,0,0x0,8
tick,0x7ffad1f6fb64,27036275,0,0x0,8
tick,0x7ffad1f6fb64,27051269,0,0x0,8
tick,0x7ffad1f6fb64,27066367,0,0x0,8
tick,0x7ffad1f6fb64,27081297,0,0x0,8
tick,0x7ffad1f6fb64,27097310,0,0x0,8
tick,0x7ffad1f6fb64,27112353,0,0x0,8
tick,0x7ffad1f6fb64,27127344,0,0x0,8
tick,0x7ffad1f6fb64,27143370,0,0x0,8
tick,0x7ffad1f6fb64,27159353,0,0x0,8
tick,0x7ffad1f6fb64,27175403,0,0x0,8
tick,0x7ffad1f6fb64,27190530,0,0x0,8
tick,0x7ffad1f6fb64,27206431,0,0x0,8
tick,0x7ffad1f6fb64,27221413,0,0x0,8
tick,0x7ffad1f6fb64,27236446,0,0x0,8
tick,0x7ffad1f6fb64,27252482,0,0x0,8
tick,0x7ffad1f6fb64,27268486,0,0x0,8
tick,0x7ffad1f6fb64,27283493,0,0x0,8
tick,0x7ffad1f6fb64,27298497,0,0x0,8
tick,0x7ffad1f6fb64,27313515,0,0x0,8
tick,0x7ffad1f6fb64,27329533,0,0x0,8
tick,0x7ffad1f6fb64,27345533,0,0x0,8
tick,0x7ffad1f6fb64,27361578,0,0x0,8
tick,0x7ffad1f6fb64,27376567,0,0x0,8
tick,0x7ffad1f6fb64,27392580,0,0x0,8
tick,0x7ffad1f6fb64,27407576,0,0x0,8
tick,0x7ffad1f6fb64,27423631,0,0x0,8
tick,0x7ffad1f6fb64,27439629,0,0x0,8
tick,0x7ffad1f6fb64,27455642,0,0x0,8
tick,0x7ffad1f6fb64,27470670,0,0x0,8
tick,0x7ffad1f6fb64,27485670,0,0x0,8
tick,0x7ffad1f6fb64,27500693,0,0x0,8
tick,0x7ffad1f6fb64,27516697,0,0x0,8
tick,0x7ffad1f6fb64,27532700,0,0x0,8
tick,0x7ffad1f6fb64,27548715,0,0x0,8
tick,0x7ffad1f6fb64,27563749,0,0x0,8
tick,0x7ffad1f6fb64,27579778,0,0x0,8
tick,0x7ffad1f6fb64,27595766,0,0x0,8
tick,0x7ffad1f6fb64,27610792,0,0x0,8
tick,0x7ffad1f6fb64,27625792,0,0x0,8
tick,0x7ffad1f6fb64,27640807,0,0x0,8
tick,0x7ffad1f6fb64,27656839,0,0x0,8
tick,0x7ffad1f6fb64,27671845,0,0x0,8
tick,0x7ffad1f6fb64,27687838,0,0x0,8
tick,0x7ffad1f6fb64,27702855,0,0x0,8
tick,0x7ffad1f6fb64,27718875,0,0x0,8
tick,0x7ffad1f6fb64,27733891,0,0x0,8
tick,0x7ffad1f6fb64,27749904,0,0x0,8
tick,0x7ffad1f6fb64,27764932,0,0x0,8
tick,0x7ffad1f6fb64,27779931,0,0x0,8
tick,0x7ffad1f6fb64,27795993,0,0x0,8
tick,0x7ffad1f6fb64,27811982,0,0x0,8
tick,0x7ffad1f6fb64,27827983,0,0x0,8
tick,0x7ffad1f6fb64,27842984,0,0x0,8
tick,0x7ffad1f6fb64,27859012,0,0x0,8
tick,0x7ffad1f6fb64,27875025,0,0x0,8
tick,0x7ffad1f6fb64,27890025,0,0x0,8
tick,0x7ffad1f6fb64,27906080,0,0x0,8
tick,0x7ffad1f6fb64,27921067,0,0x0,8
tick,0x7ffad1f6fb64,27937097,0,0x0,8
tick,0x7ffad1f6fb64,27952142,0,0x0,8
tick,0x7ffad1f6fb64,27967130,0,0x0,8
tick,0x7ffad1f6fb64,27982139,0,0x0,8
tick,0x7ffad1f6fb64,27998143,0,0x0,8
tick,0x7ffad1f6fb64,28014168,0,0x0,8
tick,0x7ffad1f6fb64,28029159,0,0x0,8
tick,0x7ffad1f6fb64,28045172,0,0x0,8
tick,0x7ffad1f6fb64,28060196,0,0x0,8
tick,0x7ffad1f6fb64,28076206,0,0x0,8
tick,0x7ffad1f6fb64,28092261,0,0x0,8
tick,0x7ffad1f6fb64,28108234,0,0x0,8
tick,0x7ffad1f6fb64,28123258,0,0x0,8
tick,0x7ffad1f6fb64,28139269,0,0x0,8
tick,0x7ffad1f6fb64,28155274,0,0x0,8
tick,0x7ffad1f6fb64,28170307,0,0x0,8
tick,0x7ffad1f6fb64,28186295,0,0x0,8
tick,0x7ffad1f6fb64,28202318,0,0x0,8
tick,0x7ffad1f6fb64,28217326,0,0x0,8
tick,0x7ffad1f6fb64,28232358,0,0x0,8
tick,0x7ffad1f6fb64,28248347,0,0x0,8
tick,0x7ffad1f6fb64,28264384,0,0x0,8
tick,0x7ffad1f6fb64,28280442,0,0x0,8
tick,0x7ffad1f6fb64,28295425,0,0x0,8
tick,0x7ffad1f6fb64,28310427,0,0x0,8
tick,0x7ffad1f6fb64,28325466,0,0x0,8
tick,0x7ffad1f6fb64,28340447,0,0x0,8
tick,0x7ffad1f6fb64,28356471,0,0x0,8
tick,0x7ffad1f6fb64,28372500,0,0x0,8
tick,0x7ffad1f6fb64,28388497,0,0x0,8
tick,0x7ffad1f6fb64,28403501,0,0x0,8
tick,0x7ffad1f6fb64,28419518,0,0x0,8
tick,0x7ffad1f6fb64,28435543,0,0x0,8
tick,0x7ffad1f6fb64,28450548,0,0x0,8
tick,0x7ffad1f6fb64,28466562,0,0x0,8
tick,0x7ffad1f6fb64,28481589,0,0x0,8
tick,0x7ffad1f6fb64,28497780,0,0x0,8
tick,0x7ffad1f6fb64,28513630,0,0x0,8
tick,0x7ffad1f6fb64,28528612,0,0x0,8
tick,0x7ffad1f6fb64,28543659,0,0x0,8
tick,0x7ffad1f6fb64,28559674,0,0x0,8
tick,0x7ffad1f6fb64,28574677,0,0x0,8
tick,0x7ffad1f6fb64,28589707,0,0x0,8
tick,0x7ffad1f6fb64,28604710,0,0x0,8
tick,0x7ffad1f6fb64,28619699,0,0x0,8
tick,0x7ffad1f6fb64,28634712,0,0x0,8
tick,0x7ffad1f6fb64,28649731,0,0x0,8
tick,0x7ffad1f6fb64,28665756,0,0x0,8
tick,0x7ffad1f6fb64,28680754,0,0x0,8
tick,0x7ffad1f6fb64,28695780,0,0x0,8
tick,0x7ffad1f6fb64,28710794,0,0x0,8
tick,0x7ffad1f6fb64,28727028,0,0x0,8
tick,0x7ffad1f6fb64,28741842,0,0x0,8
tick,0x7ffad1f6fb64,28756832,0,0x0,8
tick,0x7ffad1f6fb64,28772830,0,0x0,8
tick,0x7ffad1f6fb64,28787867,0,0x0,8
tick,0x7ffad1f6fb64,28802851,0,0x0,8
tick,0x7ffad1f6fb64,28818913,0,0x0,8
tick,0x7ffad1f6fb64,28834899,0,0x0,8
tick,0x7ffad1f6fb64,28849913,0,0x0,8
tick,0x7ffad1f6fb64,28865915,0,0x0,8
tick,0x7ffad1f6fb64,28880979,0,0x0,8
tick,0x7ffad1f6fb64,28895967,0,0x0,8
tick,0x7ffad1f6fb64,28912019,0,0x0,8
tick,0x7ffad1f6fb64,28927987,0,0x0,8
tick,0x7ffad1f6fb64,28943989,0,0x0,8
tick,0x7ffad1f6fb64,28958995,0,0x0,8
tick,0x7ffad1f6fb64,28975018,0,0x0,8
tick,0x7ffad1f6fb64,28990041,0,0x0,8
tick,0x7ffad1f6fb64,29006080,0,0x0,8
tick,0x7ffad1f6fb64,29021068,0,0x0,8
tick,0x7ffad1f6fb64,29037092,0,0x0,8
tick,0x7ffad1f6fb64,29053080,0,0x0,8
tick,0x7ffad1f6fb64,29069097,0,0x0,8
tick,0x7ffad1f6fb64,29085118,0,0x0,8
tick,0x7ffad1f6fb64,29101145,0,0x0,8
tick,0x7ffad1f6fb64,29116153,0,0x0,8
tick,0x7ffad1f6fb64,29131171,0,0x0,8
tick,0x7ffad1f6fb64,29147168,0,0x0,8
tick,0x7ffad1f6fb64,29163192,0,0x0,8
tick,0x7ffad1f6fb64,29178205,0,0x0,8
tick,0x7ffad1f6fb64,29194233,0,0x0,8
tick,0x7ffad1f6fb64,29209277,0,0x0,8
tick,0x7ffad1f6fb64,29225286,0,0x0,8
tick,0x7ffad1f6fb64,29240309,0,0x0,8
tick,0x7ffad1f6fb64,29256292,0,0x0,8
tick,0x7ffad1f6fb64,29271338,0,0x0,8
tick,0x7ffad1f6fb64,29287331,0,0x0,8
tick,0x7ffad1f6fb64,29303552,0,0x0,8
tick,0x7ffad1f6fb64,29318338,0,0x0,8
tick,0x7ffad1f6fb64,29333340,0,0x0,8
tick,0x7ffad1f6fb64,29349368,0,0x0,8
tick,0x7ffad1f6fb64,29365353,0,0x0,8
tick,0x7ffad1f6fb64,29380382,0,0x0,8
tick,0x7ffad1f6fb64,29395402,0,0x0,8
tick,0x7ffad1f6fb64,29411434,0,0x0,8
tick,0x7ffad1f6fb64,29427471,0,0x0,8
tick,0x7ffad1f6fb64,29443461,0,0x0,8
tick,0x7ffad1f6fb64,29459481,0,0x0,8
tick,0x7ffad1f6fb64,29475533,0,0x0,8
tick,0x7ffad1f6fb64,29490507,0,0x0,8
tick,0x7ffad1f6fb64,29505534,0,0x0,8
tick,0x7ffad1f6fb64,29520531,0,0x0,8
tick,0x7ffad1f6fb64,29536552,0,0x0,8
tick,0x7ffad1f6fb64,29552550,0,0x0,8
tick,0x7ffad1f6fb64,29567567,0,0x0,8
tick,0x7ffad1f6fb64,29582577,0,0x0,8
tick,0x7ffad1f6fb64,29598592,0,0x0,8
tick,0x7ffad1f6fb64,29613635,0,0x0,8
tick,0x7ffad1f6fb64,29629701,0,0x0,8
tick,0x7ffad1f6fb64,29645652,0,0x0,8
tick,0x7ffad1f6fb64,29660696,0,0x0,8
tick,0x7ffad1f6fb64,29675684,0,0x0,8
tick,0x7ffad1f6fb64,29690706,0,0x0,8
tick,0x7ffad1f6fb64,29706703,0,0x0,8
tick,0x7ffad1f6fb64,29722709,0,0x0,8
tick,0x7ffad1f6fb64,29737731,0,0x0,8
tick,0x7ffad1f6fb64,29753722,0,0x0,8
tick,0x7ffad1f6fb64,29769755,0,0x0,8
tick,0x7ffad1f6fb64,29784768,0,0x0,8
tick,0x7ffad1f6fb64,29799786,0,0x0,8
tick,0x7ffad1f6fb64,29815798,0,0x0,8
tick,0x7ffad1f6fb64,29831825,0,0x0,8
tick,0x7ffad1f6fb64,29846842,0,0x0,8
tick,0x7ffad1f6fb64,29862850,0,0x0,8
tick,0x7ffad1f6fb64,29877838,0,0x0,8
tick,0x7ffad1f6fb64,29893844,0,0x0,8
tick,0x7ffad1f6fb64,29909884,0,0x0,8
tick,0x7ffad1f6fb64,29925917,0,0x0,8
tick,0x7ffad1f6fb64,29940910,0,0x0,8
tick,0x7ffad1f6fb64,29955908,0,0x0,8
tick,0x7ffad1f6fb64,29971996,0,0x0,8
tick,0x7ffad1f6fb64,29987951,0,0x0,8
tick,0x7ffad1f6fb64,30002976,0,0x0,8
tick,0x7ffad1f6fb64,30018194,0,0x0,8
tick,0x7ffad1f6fb64,30033013,0,0x0,8
tick,0x7ffad1f6fb64,30049007,0,0x0,8
tick,0x7ffad1f6fb64,30065016,0,0x0,8
tick,0x7ffad1f6fb64,30080037,0,0x0,8
tick,0x7ffad1f6fb64,30095067,0,0x0,8
tick,0x7ffad1f6fb64,30111112,0,0x0,8
tick,0x7ffad1f6fb64,30127123,0,0x0,8
tick,0x7ffad1f6fb64,30142119,0,0x0,8
tick,0x7ffad1f6fb64,30157106,0,0x0,8
tick,0x7ffad1f6fb64,30173126,0,0x0,8
tick,0x7ffad1f6fb64,30189163,0,0x0,8
tick,0x7ffad1f6fb64,30205160,0,0x0,8
tick,0x7ffad1f6fb64,30220176,0,0x0,8
tick,0x7ffad1f6fb64,30235193,0,0x0,8
tick,0x7ffad1f6fb64,30250181,0,0x0,8
tick,0x7ffad1f6fb64,30266203,0,0x0,8
tick,0x7ffad1f6fb64,30281230,0,0x0,8
tick,0x7ffad1f6fb64,30297265,0,0x0,8
tick,0x7ffad1f6fb64,30313244,0,0x0,8
tick,0x7ffad1f6fb64,30329269,0,0x0,8
tick,0x7ffad1f6fb64,30344266,0,0x0,8
tick,0x7ffad1f6fb64,30360315,0,0x0,8
tick,0x7ffad1f6fb64,30376305,0,0x0,8
tick,0x7ffad1f6fb64,30392336,0,0x0,8
tick,0x7ffad1f6fb64,30407360,0,0x0,8
tick,0x7ffad1f6fb64,30422351,0,0x0,8
tick,0x7ffad1f6fb64,30437434,0,0x0,8
tick,0x7ffad1f6fb64,30453378,0,0x0,8
tick,0x7ffad1f6fb64,30469388,0,0x0,8
tick,0x7ffad1f6fb64,30485434,0,0x0,8
tick,0x7ffad1f6fb64,30500406,0,0x0,8
tick,0x7ffad1f6fb64,30515447,0,0x0,8
tick,0x7ffad1f6fb64,30531442,0,0x0,8
tick,0x7ffad1f6fb64,30547471,0,0x0,8
tick,0x7ffad1f6fb64,30563454,0,0x0,8
tick,0x7ffad1f6fb64,30579469,0,0x0,8
tick,0x7ffad1f6fb64,30594503,0,0x0,8
tick,0x7ffad1f6fb64,30610518,0,0x0,8
tick,0x7ffad1f6fb64,30625521,0,0x0,8
tick,0x7ffad1f6fb64,30640533,0,0x0,8
tick,0x7ffad1f6fb64,30655578,0,0x0,8
tick,0x7ffad1f6fb64,30671736,0,0x0,8
tick,0x7ffad1f6fb64,30687587,0,0x0,8
tick,0x7ffad1f6fb64,30703596,0,0x0,8
tick,0x7ffad1f6fb64,30719610,0,0x0,8
tick,0x7ffad1f6fb64,30734650,0,0x0,8
tick,0x7ffad1f6fb64,30749647,0,0x0,8
tick,0x7ffad1f6fb64,30765694,0,0x0,8
tick,0x7ffad1f6fb64,30780680,0,0x0,8
tick,0x7ffad1f6fb64,30795709,0,0x0,8
tick,0x7ffad1f6fb64,30811685,0,0x0,8
tick,0x7ffad1f6fb64,30827726,0,0x0,8
tick,0x7ffad1f6fb64,30843834,0,0x0,8
tick,0x7ffad1f6fb64,30858770,0,0x0,8
tick,0x7ffad1f6fb64,30874811,0,0x0,8
tick,0x7ffad1f6fb64,30889775,0,0x0,8
tick,0x7ffad1f6fb64,30905785,0,0x0,8
tick,0x7ffad1f6fb64,30920824,0,0x0,8
tick,0x7ffad1f6fb64,30935834,0,0x0,8
tick,0x7ffad1f6fb64,30951925,0,0x0,8
tick,0x7ffad1f6fb64,30966884,0,0x0,8
tick,0x7ffad1f6fb64,30981990,0,0x0,8
tick,0x7ffad1f6fb64,30997898,0,0x0,8
tick,0x7ffad1f6fb64,31013913,0,0x0,8
tick,0x7ffad1f6fb64,31029917,0,0x0,8
tick,0x7ffad1f6fb64,31044915,0,0x0,8
tick,0x7ffad1f6fb64,31059959,0,0x0,8
tick,0x7ffad1f6fb64,31074940,0,0x0,8
tick,0x7ffad1f6fb64,31090969,0,0x0,8
tick,0x7ffad1f6fb64,31105977,0,0x0,8
tick,0x7ffad1f6fb64,31120987,0,0x0,8
tick,0x7ffad1f6fb64,31136988,0,0x0,8
tick,0x7ffad1f6fb64,31153027,0,0x0,8
tick,0x7ffad1f6fb64,31169062,0,0x0,8
tick,0x7ffad1f6fb64,31185033,0,0x0,8
tick,0x7ffad1f6fb64,31200049,0,0x0,8
tick,0x7ffad1f6fb64,31216057,0,0x0,8
tick,0x7ffad1f6fb64,31231073,0,0x0,8
tick,0x7ffad1f6fb64,31247095,0,0x0,8
tick,0x7ffad1f6fb64,31263098,0,0x0,8
tick,0x7ffad1f6fb64,31278137,0,0x0,8
tick,0x7ffad1f6fb64,31293181,0,0x0,8
tick,0x7ffad1f6fb64,31309167,0,0x0,8
tick,0x7ffad1f6fb64,31324248,0,0x0,8
tick,0x7ffad1f6fb64,31340205,0,0x0,8
tick,0x7ffad1f6fb64,31355243,0,0x0,8
tick,0x7ffad1f6fb64,31371221,0,0x0,8
tick,0x7ffad1f6fb64,31387242,0,0x0,8
tick,0x7ffad1f6fb64,31402238,0,0x0,8
tick,0x7ffad1f6fb64,31418250,0,0x0,8
tick,0x7ffad1f6fb64,31433266,0,0x0,8
tick,0x7ffad1f6fb64,31449293,0,0x0,8
tick,0x7ffad1f6fb64,31464299,0,0x0,8
tick,0x7ffad1f6fb64,31480319,0,0x0,8
tick,0x7ffad1f6fb64,31495330,0,0x0,8
tick,0x7ffad1f6fb64,31511324,0,0x0,8
tick,0x7ffad1f6fb64,31527372,0,0x0,8
tick,0x7ffad1f6fb64,31542361,0,0x0,8
tick,0x7ffad1f6fb64,31558364,0,0x0,8
tick,0x7ffad1f6fb64,31573383,0,0x0,8
tick,0x7ffad1f6fb64,31588413,0,0x0,8
tick,0x7ffad1f6fb64,31603418,0,0x0,8
tick,0x7ffad1f6fb64,31618451,0,0x0,8
tick,0x7ffad1f6fb64,31634472,0,0x0,8
tick,0x7ffad1f6fb64,31649478,0,0x0,8
tick,0x7ffad1f6fb64,31665500,0,0x0,8
tick,0x7ffad1f6fb64,31681678,0,0x0,8
tick,0x7ffad1f6fb64,31696523,0,0x0,8
tick,0x7ffad1f6fb64,31712560,0,0x0,8
tick,0x7ffad1f6fb64,31727527,0,0x0,8
tick,0x7ffad1f6fb64,31743549,0,0x0,8
tick,0x7ffad1f6fb64,31759559,0,0x0,8
tick,0x7ffad1f6fb64,31774565,0,0x0,8
tick,0x7ffad1f6fb64,31790594,0,0x0,8
tick,0x7ffad1f6fb64,31805629,0,0x0,8
tick,0x7ffad1f6fb64,31821626,0,0x0,8
tick,0x7ffad1f6fb64,31836637,0,0x0,8
tick,0x7ffad1f6fb64,31851658,0,0x0,8
tick,0x7ffad1f6fb64,31866769,0,0x0,8
tick,0x7ffad1f6fb64,31881693,0,0x0,8
tick,0x7ffad1f6fb64,31897765,0,0x0,8
tick,0x7ffad1f6fb64,31912782,0,0x0,8
tick,0x7ffad1f6fb64,31935289,0,0x0,8
tick,0x7ffad1f6fb64,31943729,0,0x0,8
tick,0x7ffad1f6fb64,31958777,0,0x0,8
tick,0x7ffad1f6fb64,31973763,0,0x0,8
tick,0x7ffad1f6fb64,31988809,0,0x0,8
tick,0x7ffad1f6fb64,32003788,0,0x0,8
tick,0x7ffad1f6fb64,32019795,0,0x0,8
tick,0x7ffad1f6fb64,32035831,0,0x0,8
tick,0x7ffad1f6fb64,32050818,0,0x0,8
tick,0x7ffad1f6fb64,32066842,0,0x0,8
tick,0x7ffad1f6fb64,32081860,0,0x0,8
tick,0x7ffad1f6fb64,32097891,0,0x0,8
tick,0x7ffad1f6fb64,32113906,0,0x0,8
tick,0x7ffad1f6fb64,32128906,0,0x0,8
tick,0x7ffad1f6fb64,32143970,0,0x0,8
tick,0x7ffad1f6fb64,32158937,0,0x0,8
tick,0x7ffad1f6fb64,32173960,0,0x0,8
tick,0x7ffad1f6fb64,32189972,0,0x0,8
tick,0x7ffad1f6fb64,32205973,0,0x0,8
tick,0x7ffad1f6fb64,32221008,0,0x0,8
tick,0x7ffad1f6fb64,32235997,0,0x0,8
tick,0x7ffad1f6fb64,32252004,0,0x0,8
tick,0x7ffad1f6fb64,32268055,0,0x0,8
tick,0x7ffad1f6fb64,32284048,0,0x0,8
tick,0x7ffad1f6fb64,32299068,0,0x0,8
tick,0x7ffad1f6fb64,32315085,0,0x0,8
tick,0x7ffad1f6fb64,32331100,0,0x0,8
tick,0x7ffad1f6fb64,32347103,0,0x0,8
tick,0x7ffad1f6fb64,32363146,0,0x0,8
tick,0x7ffad1f6fb64,32378208,0,0x0,8
tick,0x7ffad1f6fb64,32394187,0,0x0,8
tick,0x7ffad1f6fb64,32410175,0,0x0,8
tick,0x7ffad1f6fb64,32426174,0,0x0,8
tick,0x7ffad1f6fb64,32441185,0,0x0,8
tick,0x7ffad1f6fb64,32456200,0,0x0,8
tick,0x7ffad1f6fb64,32472421,0,0x0,8
tick,0x7ffad1f6fb64,32488222,0,0x0,8
tick,0x7ffad1f6fb64,32504244,0,0x0,8
tick,0x7ffad1f6fb64,32519250,0,0x0,8
tick,0x7ffad1f6fb64,32535261,0,0x0,8
tick,0x7ffad1f6fb64,32550348,0,0x0,8
tick,0x7ffad1f6fb64,32566321,0,0x0,8
tick,0x7ffad1f6fb64,32581308,0,0x0,8
tick,0x7ffad1f6fb64,32596358,0,0x0,8
tick,0x7ffad1f6fb64,32612336,0,0x0,8
tick,0x7ffad1f6fb64,32627357,0,0x0,8
tick,0x7ffad1f6fb64,32642414,0,0x0,8
tick,0x7ffad1f6fb64,32657397,0,0x0,8
tick,0x7ffad1f6fb64,32673404,0,0x0,8
tick,0x7ffad1f6fb64,32688426,0,0x0,8
tick,0x7ffad1f6fb64,32703471,0,0x0,8
tick,0x7ffad1f6fb64,32718432,0,0x0,8
tick,0x7ffad1f6fb64,32733441,0,0x0,8
tick,0x7ffad1f6fb64,32749457,0,0x0,8
tick,0x7ffad1f6fb64,32765491,0,0x0,8
tick,0x7ffad1f6fb64,32780543,0,0x0,8
tick,0x7ffad1f6fb64,32795579,0,0x0,8
tick,0x7ffad1f6fb64,32811523,0,0x0,8
tick,0x7ffad1f6fb64,32827551,0,0x0,8
tick,0x7ffad1f6fb64,32843574,0,0x0,8
tick,0x7ffad1f6fb64,32859570,0,0x0,8
tick,0x7ffad1f6fb64,32875579,0,0x0,8
tick,0x7ffad1f6fb64,32890667,0,0x0,8
tick,0x7ffad1f6fb64,32906621,0,0x0,8
tick,0x7ffad1f6fb64,32921628,0,0x0,8
tick,0x7ffad1f6fb64,32936674,0,0x0,8
tick,0x7ffad1f6fb64,32951659,0,0x0,8
tick,0x7ffad1f6fb64,32966709,0,0x0,8
tick,0x7ffad1f6fb64,32981704,0,0x0,8
tick,0x7ffad1f6fb64,32996702,0,0x0,8
tick,0x7ffad1f6fb64,33012736,0,0x0,8
tick,0x7ffad1f6fb64,33027714,0,0x0,8
tick,0x7ffad1f6fb64,33043734,0,0x0,8
tick,0x7ffad1f6fb64,33059754,0,0x0,8
tick,0x7ffad1f6fb64,33075757,0,0x0,8
tick,0x7ffad1f6fb64,33091771,0,0x0,8
tick,0x7ffad1f6fb64,33107792,0,0x0,8
tick,0x7ffad1f6fb64,33123820,0,0x0,8
tick,0x7ffad1f6fb64,33138845,0,0x0,8
tick,0x7ffad1f6fb64,33154863,0,0x0,8
tick,0x7ffad1f6fb64,33169860,0,0x0,8
tick,0x7ffad1f6fb64,33185905,0,0x0,8
tick,0x7ffad1f6fb64,33201909,0,0x0,8
tick,0x7ffad1f6fb64,33217899,0,0x0,8
tick,0x7ffad1f6fb64,33233926,0,0x0,8
tick,0x7ffad1f6fb64,33248919,0,0x0,8
tick,0x7ffad1f6fb64,33264943,0,0x0,8
tick,0x7ffad1f6fb64,33279947,0,0x0,8
tick,0x7ffad1f6fb64,33295959,0,0x0,8
tick,0x7ffad1f6fb64,33311974,0,0x0,8
tick,0x7ffad1f6fb64,33327990,0,0x0,8
tick,0x7ffad1f6fb64,33343010,0,0x0,8
tick,0x7ffad1f6fb64,33359016,0,0x0,8
tick,0x7ffad1f6fb64,33375063,0,0x0,8
tick,0x7ffad1f6fb64,33390047,0,0x0,8
tick,0x7ffad1f6fb64,33406139,0,0x0,8
tick,0x7ffad1f6fb64,33421084,0,0x0,8
tick,0x7ffad1f6fb64,33436107,0,0x0,8
tick,0x7ffad1f6fb64,33451171,0,0x0,8
tick,0x7ffad1f6fb64,33466123,0,0x0,8
tick,0x7ffad1f6fb64,33481154,0,0x0,8
tick,0x7ffad1f6fb64,33496152,0,0x0,8
tick,0x7ffad1f6fb64,33512175,0,0x0,8
tick,0x7ffad1f6fb64,33528161,0,0x0,8
tick,0x7ffad1f6fb64,33544187,0,0x0,8
tick,0x7ffad1f6fb64,33560187,0,0x0,8
tick,0x7ffad1f6fb64,33575225,0,0x0,8
tick,0x7ffad1f6fb64,33591238,0,0x0,8
tick,0x7ffad1f6fb64,33606322,0,0x0,8
tick,0x7ffad1f6fb64,33621252,0,0x0,8
tick,0x7ffad1f6fb64,33637274,0,0x0,8
tick,0x7ffad1f6fb64,33653296,0,0x0,8
tick,0x7ffad1f6fb64,33668312,0,0x0,8
tick,0x7ffad1f6fb64,33684315,0,0x0,8
tick,0x7ffad1f6fb64,33699471,0,0x0,8
tick,0x7ffad1f6fb64,33715353,0,0x0,8
tick,0x7ffad1f6fb64,33731365,0,0x0,8
tick,0x7ffad1f6fb64,33747366,0,0x0,8
tick,0x7ffad1f6fb64,33762405,0,0x0,8
tick,0x7ffad1f6fb64,33777417,0,0x0,8
tick,0x7ffad1f6fb64,33793439,0,0x0,8
tick,0x7ffad1f6fb64,33809448,0,0x0,8
tick,0x7ffad1f6fb64,33825460,0,0x0,8
tick,0x7ffad1f6fb64,33840468,0,0x0,8
tick,0x7ffad1f6fb64,33856472,0,0x0,8
tick,0x7ffad1f6fb64,33872529,0,0x0,8
tick,0x7ffad1f6fb64,33888514,0,0x0,8
tick,0x7ffad1f6fb64,33903520,0,0x0,8
tick,0x7ffad1f6fb64,33919578,0,0x0,8
tick,0x7ffad1f6fb64,33935574,0,0x0,8
tick,0x7ffad1f6fb64,33950595,0,0x0,8
tick,0x7ffad1f6fb64,33966584,0,0x0,8
tick,0x7ffad1f6fb64,33981582,0,0x0,8
tick,0x7ffad1f6fb64,33996680,0,0x0,8
tick,0x7ffad1f6fb64,34011631,0,0x0,8
tick,0x7ffad1f6fb64,34026636,0,0x0,8
tick,0x7ffad1f6fb64,34042647,0,0x0,8
tick,0x7ffad1f6fb64,34057644,0,0x0,8
tick,0x7ffad1f6fb64,34073690,0,0x0,8
tick,0x7ffad1f6fb64,34089723,0,0x0,8
tick,0x7ffad1f6fb64,34105778,0,0x0,8
tick,0x7ffad1f6fb64,34121851,0,0x0,8
tick,0x7ffad1f6fb64,34136779,0,0x0,8
tick,0x7ffad1f6fb64,34152747,0,0x0,8
tick,0x7ffad1f6fb64,34168774,0,0x0,8
tick,0x7ffad1f6fb64,34183760,0,0x0,8
tick,0x7ffad1f6fb64,34199780,0,0x0,8
tick,0x7ffad1f6fb64,34214809,0,0x0,8
tick,0x7ffad1f6fb64,34230797,0,0x0,8
tick,0x7ffad1f6fb64,34246839,0,0x0,8
tick,0x7ffad1f6fb64,34261847,0,0x0,8
tick,0x7ffad1f6fb64,34277859,0,0x0,8
tick,0x7ffad1f6fb64,34292869,0,0x0,8
tick,0x7ffad1f6fb64,34307877,0,0x0,8
tick,0x7ffad1f6fb64,34322919,0,0x0,8
tick,0x7ffad1f6fb64,34338904,0,0x0,8
tick,0x7ffad1f6fb64,34354930,0,0x0,8
tick,0x7ffad1f6fb64,34369952,0,0x0,8
tick,0x7ffad1f6fb64,34385994,0,0x0,8
tick,0x7ffad1f6fb64,34401974,0,0x0,8
tick,0x7ffad1f6fb64,34416982,0,0x0,8
tick,0x7ffad1f6fb64,34433123,0,0x0,8
tick,0x7ffad1f6fb64,34449016,0,0x0,8
tick,0x7ffad1f6fb64,34464058,0,0x0,8
tick,0x7ffad1f6fb64,34479071,0,0x0,8
tick,0x7ffad1f6fb64,34495064,0,0x0,8
tick,0x7ffad1f6fb64,34510066,0,0x0,8
tick,0x7ffad1f6fb64,34526093,0,0x0,8
tick,0x7ffad1f6fb64,34542112,0,0x0,8
tick,0x7ffad1f6fb64,34557101,0,0x0,8
tick,0x7ffad1f6fb64,34573113,0,0x0,8
tick,0x7ffad1f6fb64,34588128,0,0x0,8
tick,0x7ffad1f6fb64,34604151,0,0x0,8
tick,0x7ffad1f6fb64,34619161,0,0x0,8
tick,0x7ffad1f6fb64,34634204,0,0x0,8
tick,0x7ffad1f6fb64,34650215,0,0x0,8
tick,0x7ffad1f6fb64,34666205,0,0x0,8
tick,0x7ffad1f6fb64,34681209,0,0x0,8
tick,0x7ffad1f6fb64,34697264,0,0x0,8
tick,0x7ffad1f6fb64,34713244,0,0x0,8
tick,0x7ffad1f6fb64,34728278,0,0x0,8
tick,0x7ffad1f6fb64,34743271,0,0x0,8
tick,0x7ffad1f6fb64,34758312,0,0x0,8
tick,0x7ffad1f6fb64,34773288,0,0x0,8
tick,0x7ffad1f6fb64,34789321,0,0x0,8
tick,0x7ffad1f6fb64,34805352,0,0x0,8
tick,0x7ffad1f6fb64,34820363,0,0x0,8
tick,0x7ffad1f6fb64,34836365,0,0x0,8
tick,0x7ffad1f6fb64,34851384,0,0x0,8
tick,0x7ffad1f6fb64,34866399,0,0x0,8
tick,0x7ffad1f6fb64,34881409,0,0x0,8
tick,0x7ffad1f6fb64,34896417,0,0x0,8
tick,0x7ffad1f6fb64,34911427,0,0x0,8
tick,0x7ffad1f6fb64,34927443,0,0x0,8
tick,0x7ffad1f6fb64,34943469,0,0x0,8
tick,0x7ffad1f6fb64,34959476,0,0x0,8
tick,0x7ffad1f6fb64,34974506,0,0x0,8
tick,0x7ffad1f6fb64,34990538,0,0x0,8
tick,0x7ffad1f6fb64,35006527,0,0x0,8
tick,0x7ffad1f6fb64,35022564,0,0x0,8
tick,0x7ffad1f6fb64,35037584,0,0x0,8
tick,0x7ffad1f6fb64,35052569,0,0x0,8
tick,0x7ffad1f6fb64,35067602,0,0x0,8
tick,0x7ffad1f6fb64,35083621,0,0x0,8
tick,0x7ffad1f6fb64,35099600,0,0x0,8
tick,0x7ffad1f6fb64,35114655,0,0x0,8
tick,0x7ffad1f6fb64,35130643,0,0x0,8
tick,0x7ffad1f6fb64,35146663,0,0x0,8
tick,0x7ffad1f6fb64,35161659,0,0x0,8
tick,0x7ffad1f6fb64,35177679,0,0x0,8
tick,0x7ffad1f6fb64,35193759,0,0x0,8
tick,0x7ffad1f6fb64,35209697,0,0x0,8
tick,0x7ffad1f6fb64,35225747,0,0x0,8
tick,0x7ffad1f6fb64,35240749,0,0x0,8
tick,0x7ffad1f6fb64,35255779,0,0x0,8
tick,0x7ffad1f6fb64,35270822,0,0x0,8
tick,0x7ffad1f6fb64,35286814,0,0x0,8
tick,0x7ffad1f6fb64,35301800,0,0x0,8
tick,0x7ffad1f6fb64,35316819,0,0x0,8
tick,0x7ffad1f6fb64,35331834,0,0x0,8
tick,0x7ffad1f6fb64,35347843,0,0x0,8
tick,0x7ffad1f6fb64,35363832,0,0x0,8
tick,0x7ffad1f6fb64,35380102,0,0x0,8
tick,0x7ffad1f6fb64,35395890,0,0x0,8
tick,0x7ffad1f6fb64,35410916,0,0x0,8
tick,0x7ffad1f6fb64,35425895,0,0x0,8
tick,0x7ffad1f6fb64,35440911,0,0x0,8
tick,0x7ffad1f6fb64,35455940,0,0x0,8
tick,0x7ffad1f6fb64,35471935,0,0x0,8
tick,0x7ffad1f6fb64,35487976,0,0x0,8
tick,0x7ffad1f6fb64,35502980,0,0x0,8
tick,0x7ffad1f6fb64,35518997,0,0x0,8
tick,0x7ffad1f6fb64,35535004,0,0x0,8
tick,0x7ffad1f6fb64,35549996,0,0x0,8
tick,0x7ffad1f6fb64,35566036,0,0x0,8
tick,0x7ffad1f6fb64,35581030,0,0x0,8
tick,0x7ffad1f6fb64,35596044,0,0x0,8
tick,0x7ffad1f6fb64,35612068,0,0x0,8
tick,0x7ffad1f6fb64,35627097,0,0x0,8
tick,0x7ffad1f6fb64,35643088,0,0x0,8
tick,0x7ffad1f6fb64,35659110,0,0x0,8
tick,0x7ffad1f6fb64,35674135,0,0x0,8
tick,0x7ffad1f6fb64,35689130,0,0x0,8
tick,0x7ffad1f6fb64,35705156,0,0x0,8
tick,0x7ffad1f6fb64,35720171,0,0x0,8
tick,0x7ffad1f6fb64,35736298,0,0x0,8
tick,0x7ffad1f6fb64,35752308,0,0x0,8
tick,0x7ffad1f6fb64,35767296,0,0x0,8
tick,0x7ffad1f6fb64,35782247,0,0x0,8
tick,0x7ffad1f6fb64,35798236,0,0x0,8
tick,0x7ffad1f6fb64,35814254,0,0x0,8
tick,0x7ffad1f6fb64,35829292,0,0x0,8
tick,0x7ffad1f6fb64,35845271,0,0x0,8
tick,0x7ffad1f6fb64,35860319,0,0x0,8
tick,0x7ffad1f6fb64,35876318,0,0x0,8
tick,0x7ffad1f6fb64,35892335,0,0x0,8
tick,0x7ffad1f6fb64,35907331,0,0x0,8
tick,0x7ffad1f6fb64,35922343,0,0x0,8
tick,0x7ffad1f6fb64,35937384,0,0x0,8
tick,0x7ffad1f6fb64,35953633,0,0x0,8
tick,0x7ffad1f6fb64,35969398,0,0x0,8
tick,0x7ffad1f6fb64,35985406,0,0x0,8
tick,0x7ffad1f6fb64,36000458,0,0x0,8
tick,0x7ffad1f6fb64,36016435,0,0x0,8
tick,0x7ffad1f6fb64,36031473,0,0x0,8
tick,0x7ffad1f6fb64,36047481,0,0x0,8
tick,0x7ffad1f6fb64,36062510,0,0x0,8
tick,0x7ffad1f6fb64,36077515,0,0x0,8
tick,0x7ffad1f6fb64,36093524,0,0x0,8
tick,0x7ffad1f6fb64,36109529,0,0x0,8
tick,0x7ffad1f6fb64,36124533,0,0x0,8
tick,0x7ffad1f6fb64,36139544,0,0x0,8
tick,0x7ffad1f6fb64,36155574,0,0x0,8
tick,0x7ffad1f6fb64,36171607,0,0x0,8
tick,0x7ffad1f6fb64,36186597,0,0x0,8
tick,0x7ffad1f6fb64,36202612,0,0x0,8
tick,0x7ffad1f6fb64,36217610,0,0x0,8
tick,0x7ffad1f6fb64,36233626,0,0x0,8
tick,0x7ffad1f6fb64,36249648,0,0x0,8
tick,0x7ffad1f6fb64,36265676,0,0x0,8
tick,0x7ffad1f6fb64,36281692,0,0x0,8
tick,0x7ffad1f6fb64,36296707,0,0x0,8
tick,0x7ffad1f6fb64,36312723,0,0x0,8
tick,0x7ffad1f6fb64,36328718,0,0x0,8
tick,0x7ffad1f6fb64,36344743,0,0x0,8
tick,0x7ffad1f6fb64,36360738,0,0x0,8
tick,0x7ffad1f6fb64,36375772,0,0x0,8
tick,0x7ffad1f6fb64,36391786,0,0x0,8
tick,0x7ffad1f6fb64,36406787,0,0x0,8
tick,0x7ffad1f6fb64,36422849,0,0x0,8
tick,0x7ffad1f6fb64,36438848,0,0x0,8
tick,0x7ffad1f6fb64,36454849,0,0x0,8
tick,0x7ffad1f6fb64,36470927,0,0x0,8
tick,0x7ffad1f6fb64,36486854,0,0x0,8
tick,0x7ffad1f6fb64,36501920,0,0x0,8
tick,0x7ffad1f6fb64,36516900,0,0x0,8
tick,0x7ffad1f6fb64,36532937,0,0x0,8
tick,0x7ffad1f6fb64,36548913,0,0x0,8
tick,0x7ffad1f6fb64,36563944,0,0x0,8
tick,0x7ffad1f6fb64,36579951,0,0x0,8
tick,0x7ffad1f6fb64,36594961,0,0x0,8
tick,0x7ffad1f6fb64,36610980,0,0x0,8
tick,0x7ffad1f6fb64,36627002,0,0x0,8
tick,0x7ffad1f6fb64,36643015,0,0x0,8
tick,0x7ffad1f6fb64,36659018,0,0x0,8
tick,0x7ffad1f6fb64,36674035,0,0x0,8
tick,0x7ffad1f6fb64,36689051,0,0x0,8
tick,0x7ffad1f6fb64,36705077,0,0x0,8
tick,0x7ffad1f6fb64,36720081,0,0x0,8
tick,0x7ffad1f6fb64,36736085,0,0x0,8
tick,0x7ffad1f6fb64,36751122,0,0x0,8
tick,0x7ffad1f6fb64,36766103,0,0x0,8
tick,0x7ffad1f6fb64,36781127,0,0x0,8
tick,0x7ffad1f6fb64,36796175,0,0x0,8
tick,0x7ffad1f6fb64,36811194,0,0x0,8
tick,0x7ffad1f6fb64,36827191,0,0x0,8
tick,0x7ffad1f6fb64,36842178,0,0x0,8
tick,0x7ffad1f6fb64,36857199,0,0x0,8
tick,0x7ffad1f6fb64,36873215,0,0x0,8
tick,0x7ffad1f6fb64,36888234,0,0x0,8
tick,0x7ffad1f6fb64,36903250,0,0x0,8
tick,0x7ffad1f6fb64,36919245,0,0x0,8
tick,0x7ffad1f6fb64,36935288,0,0x0,8
tick,0x7ffad1f6fb64,36950281,0,0x0,8
tick,0x7ffad1f6fb64,36965288,0,0x0,8
tick,0x7ffad1f6fb64,36980321,0,0x0,8
tick,0x7ffad1f6fb64,36995338,0,0x0,8
tick,0x7ffad1f6fb64,37010361,0,0x0,8
tick,0x7ffad1f6fb64,37025366,0,0x0,8
tick,0x7ffad1f6fb64,37040379,0,0x0,8
tick,0x7ffad1f6fb64,37056371,0,0x0,8
tick,0x7ffad1f6fb64,37071404,0,0x0,8
tick,0x7ffad1f6fb64,37087395,0,0x0,8
tick,0x7ffad1f6fb64,37102412,0,0x0,8
tick,0x7ffad1f6fb64,37117453,0,0x0,8
tick,0x7ffad1f6fb64,37132438,0,0x0,8
tick,0x7ffad1f6fb64,37148541,0,0x0,8
tick,0x7ffad1f6fb64,37164532,0,0x0,8
tick,0x7ffad1f6fb64,37179568,0,0x0,8
tick,0x7ffad1f6fb64,37195542,0,0x0,8
tick,0x7ffad1f6fb64,37210556,0,0x0,8
tick,0x7ffad1f6fb64,37225561,0,0x0,8
tick,0x7ffad1f6fb64,37240564,0,0x0,8
tick,0x7ffad1f6fb64,37256554,0,0x0,8
tick,0x7ffad1f6fb64,37272396,0,0x0,8
tick,0x7ffad1f6fb64,37288454,0,0x0,8
tick,0x7ffad1f6fb64,37304454,0,0x0,8
tick,0x7ffad1f6fb64,37320466,0,0x0,8
tick,0x7ffad1f6fb64,37336460,0,0x0,8
tick,0x7ffad1f6fb64,37351490,0,0x0,8
tick,0x7ffad1f6fb64,37366531,0,0x0,8
tick,0x7ffad1f6fb64,37381525,0,0x0,8
tick,0x7ffad1f6fb64,37396511,0,0x0,8
tick,0x7ffad1f6fb64,37412541,0,0x0,8
tick,0x7ffad1f6fb64,37427558,0,0x0,8
tick,0x7ffad1f6fb64,37442577,0,0x0,8
tick,0x7ffad1f6fb64,37457569,0,0x0,8
tick,0x7ffad1f6fb64,37473602,0,0x0,8
tick,0x7ffad1f6fb64,37489623,0,0x0,8
tick,0x7ffad1f6fb64,37504620,0,0x0,8
tick,0x7ffad1f6fb64,37519644,0,0x0,8
tick,0x7ffad1f6fb64,37535656,0,0x0,8
tick,0x7ffad1f6fb64,37550645,0,0x0,8
tick,0x7ffad1f6fb64,37566676,0,0x0,8
tick,0x7ffad1f6fb64,37581730,0,0x0,8
tick,0x7ffad1f6fb64,37597702,0,0x0,8
tick,0x7ffad1f6fb64,37612725,0,0x0,8
tick,0x7ffad1f6fb64,37628751,0,0x0,8
tick,0x7ffad1f6fb64,37644742,0,0x0,8
tick,0x7ffad1f6fb64,37659765,0,0x0,8
tick,0x7ffad1f6fb64,37675822,0,0x0,8
tick,0x7ffad1f6fb64,37690813,0,0x0,8
tick,0x7ffad1f6fb64,37705814,0,0x0,8
tick,0x7ffad1f6fb64,37721824,0,0x0,8
tick,0x7ffad1f6fb64,37737835,0,0x0,8
tick,0x7ffad1f6fb64,37753836,0,0x0,8
tick,0x7ffad1f6fb64,37769871,0,0x0,8
tick,0x7ffad1f6fb64,37784881,0,0x0,8
tick,0x7ffad1f6fb64,37799909,0,0x0,8
tick,0x7ffad1f6fb64,37815921,0,0x0,8
tick,0x7ffad1f6fb64,37832051,0,0x0,8
tick,0x7ffad1f6fb64,37847947,0,0x0,8
tick,0x7ffad1f6fb64,37863001,0,0x0,8
tick,0x7ffad1f6fb64,37878970,0,0x0,8
tick,0x7ffad1f6fb64,37894972,0,0x0,8
tick,0x7ffad1f6fb64,37911032,0,0x0,8
tick,0x7ffad1f6fb64,37927011,0,0x0,8
tick,0x7ffad1f6fb64,37942023,0,0x0,8
tick,0x7ffad1f6fb64,37957031,0,0x0,8
tick,0x7ffad1f6fb64,37973043,0,0x0,8
tick,0x7ffad1f6fb64,37989058,0,0x0,8
tick,0x7ffad1f6fb64,38004094,0,0x0,8
tick,0x7ffad1f6fb64,38020108,0,0x0,8
tick,0x7ffad1f6fb64,38036105,0,0x0,8
tick,0x7ffad1f6fb64,38051116,0,0x0,8
tick,0x7ffad1f6fb64,38066160,0,0x0,8
tick,0x7ffad1f6fb64,38081157,0,0x0,8
tick,0x7ffad1f6fb64,38096196,0,0x0,8
tick,0x7ffad1f6fb64,38112184,0,0x0,8
tick,0x7ffad1f6fb64,38127199,0,0x0,8
tick,0x7ffad1f6fb64,38143205,0,0x0,8
tick,0x7ffad1f6fb64,38159201,0,0x0,8
tick,0x7ffad1f6fb64,38175237,0,0x0,8
tick,0x7ffad1f6fb64,38191247,0,0x0,8
tick,0x7ffad1f6fb64,38207250,0,0x0,8
tick,0x7ffad1f6fb64,38222284,0,0x0,8
tick,0x7ffad1f6fb64,38238295,0,0x0,8
tick,0x7ffad1f6fb64,38254305,0,0x0,8
tick,0x7ffad1f6fb64,38270317,0,0x0,8
tick,0x7ffad1f6fb64,38285337,0,0x0,8
tick,0x7ffad1f6fb64,38301372,0,0x0,8
tick,0x7ffad1f6fb64,38316346,0,0x0,8
tick,0x7ffad1f6fb64,38331379,0,0x0,8
tick,0x7ffad1f6fb64,38347451,0,0x0,8
tick,0x7ffad1f6fb64,38362438,0,0x0,8
tick,0x7ffad1f6fb64,38377425,0,0x0,8
tick,0x7ffad1f6fb64,38393435,0,0x0,8
tick,0x7ffad1f6fb64,38409455,0,0x0,8
tick,0x7ffad1f6fb64,38425460,0,0x0,8
tick,0x7ffad1f6fb64,38440466,0,0x0,8
tick,0x7ffad1f6fb64,38455495,0,0x0,8
tick,0x7ffad1f6fb64,38470518,0,0x0,8
tick,0x7ffad1f6fb64,38486526,0,0x0,8
tick,0x7ffad1f6fb64,38502524,0,0x0,8
tick,0x7ffad1f6fb64,38517563,0,0x0,8
tick,0x7ffad1f6fb64,38532581,0,0x0,8
tick,0x7ffad1f6fb64,38548572,0,0x0,8
tick,0x7ffad1f6fb64,38564606,0,0x0,8
tick,0x7ffad1f6fb64,38579596,0,0x0,8
tick,0x7ffad1f6fb64,38595632,0,0x0,8
tick,0x7ffad1f6fb64,38611627,0,0x0,8
tick,0x7ffad1f6fb64,38627654,0,0x0,8
tick,0x7ffad1f6fb64,38643647,0,0x0,8
tick,0x7ffad1f6fb64,38658674,0,0x0,8
tick,0x7ffad1f6fb64,38673694,0,0x0,8
tick,0x7ffad1f6fb64,38689695,0,0x0,8
tick,0x7ffad1f6fb64,38704717,0,0x0,8
tick,0x7ffad1f6fb64,38719723,0,0x0,8
tick,0x7ffad1f6fb64,38735744,0,0x0,8
tick,0x7ffad1f6fb64,38751769,0,0x0,8
tick,0x7ffad1f6fb64,38766777,0,0x0,8
tick,0x7ffad1f6fb64,38781806,0,0x0,8
tick,0x7ffad1f6fb64,38796807,0,0x0,8
tick,0x7ffad1f6fb64,38811813,0,0x0,8
tick,0x7ffad1f6fb64,38826839,0,0x0,8
tick,0x7ffad1f6fb64,38841854,0,0x0,8
tick,0x7ffad1f6fb64,38857861,0,0x0,8
tick,0x7ffad1f6fb64,38873868,0,0x0,8
tick,0x7ffad1f6fb64,38888905,0,0x0,8
tick,0x7ffad1f6fb64,38903892,0,0x0,8
tick,0x7ffad1f6fb64,38919933,0,0x0,8
tick,0x7ffad1f6fb64,38934925,0,0x0,8
tick,0x7ffad1f6fb64,38950935,0,0x0,8
tick,0x7ffad1f6fb64,38966950,0,0x0,8
tick,0x7ffad1f6fb64,38981958,0,0x0,8
tick,0x7ffad1f6fb64,38997981,0,0x0,8
tick,0x7ffad1f6fb64,39013983,0,0x0,8
tick,0x7ffad1f6fb64,39030032,0,0x0,8
tick,0x7ffad1f6fb64,39046046,0,0x0,8
tick,0x7ffad1f6fb64,39061048,0,0x0,8
tick,0x7ffad1f6fb64,39077051,0,0x0,8
tick,0x7ffad1f6fb64,39092058,0,0x0,8
tick,0x7ffad1f6fb64,39107105,0,0x0,8
tick,0x7ffad1f6fb64,39123084,0,0x0,8
tick,0x7ffad1f6fb64,39139119,0,0x0,8
tick,0x7ffad1f6fb64,39154118,0,0x0,8
tick,0x7ffad1f6fb64,39170160,0,0x0,8
tick,0x7ffad1f6fb64,39186146,0,0x0,8
tick,0x7ffad1f6fb64,39201144,0,0x0,8
tick,0x7ffad1f6fb64,39217193,0,0x0,8
tick,0x7ffad1f6fb64,39233195,0,0x0,8
tick,0x7ffad1f6fb64,39248205,0,0x0,8
tick,0x7ffad1f6fb64,39264216,0,0x0,8
tick,0x7ffad1f6fb64,39280224,0,0x0,8
tick,0x7ffad1f6fb64,39295248,0,0x0,8
tick,0x7ffad1f6fb64,39310267,0,0x0,8
tick,0x7ffad1f6fb64,39326286,0,0x0,8
tick,0x7ffad1f6fb64,39342276,0,0x0,8
tick,0x7ffad1f6fb64,39357319,0,0x0,8
tick,0x7ffad1f6fb64,39372346,0,0x0,8
tick,0x7ffad1f6fb64,39388313,0,0x0,8
tick,0x7ffad1f6fb64,39404360,0,0x0,8
tick,0x7ffad1f6fb64,39419348,0,0x0,8
tick,0x7ffad1f6fb64,39435376,0,0x0,8
tick,0x7ffad1f6fb64,39450385,0,0x0,8
tick,0x7ffad1f6fb64,39466408,0,0x0,8
tick,0x7ffad1f6fb64,39482429,0,0x0,8
tick,0x7ffad1f6fb64,39498426,0,0x0,8
tick,0x7ffad1f6fb64,39514456,0,0x0,8
tick,0x7ffad1f6fb64,39529444,0,0x0,8
tick,0x7ffad1f6fb64,39545517,0,0x0,8
tick,0x7ffad1f6fb64,39561500,0,0x0,8
tick,0x7ffad1f6fb64,39577498,0,0x0,8
tick,0x7ffad1f6fb64,39592533,0,0x0,8
tick,0x7ffad1f6fb64,39607542,0,0x0,8
tick,0x7ffad1f6fb64,39623533,0,0x0,8
tick,0x7ffad1f6fb64,39639564,0,0x0,8
tick,0x7ffad1f6fb64,39654593,0,0x0,8
tick,0x7ffad1f6fb64,39669590,0,0x0,8
tick,0x7ffad1f6fb64,39685598,0,0x0,8
tick,0x7ffad1f6fb64,39701621,0,0x0,8
tick,0x7ffad1f6fb64,39717634,0,0x0,8
tick,0x7ffad1f6fb64,39733648,0,0x0,8
tick,0x7ffad1f6fb64,39749655,0,0x0,8
tick,0x7ffad1f6fb64,39765679,0,0x0,8
tick,0x7ffad1f6fb64,39780694,0,0x0,8
tick,0x7ffad1f6fb64,39795717,0,0x0,8
tick,0x7ffad1f6fb64,39810720,0,0x0,8
tick,0x7ffad1f6fb64,39825734,0,0x0,8
tick,0x7ffad1f6fb64,39840735,0,0x0,8
tick,0x7ffad1f6fb64,39856757,0,0x0,8
tick,0x7ffad1f6fb64,39872779,0,0x0,8
tick,0x7ffad1f6fb64,39888890,0,0x0,8
tick,0x7ffad1f6fb64,39904814,0,0x0,8
tick,0x7ffad1f6fb64,39919828,0,0x0,8
tick,0x7ffad1f6fb64,39934829,0,0x0,8
tick,0x7ffad1f6fb64,39949856,0,0x0,8
tick,0x7ffad1f6fb64,39965866,0,0x0,8
tick,0x7ffad1f6fb64,39981896,0,0x0,8
tick,0x7ffad1f6fb64,39997892,0,0x0,8
tick,0x7ffad1f6fb64,40012925,0,0x0,8
tick,0x7ffad1f6fb64,40027929,0,0x0,8
tick,0x7ffad1f6fb64,40043925,0,0x0,8
tick,0x7ffad1f6fb64,40059972,0,0x0,8
tick,0x7ffad1f6fb64,40075969,0,0x0,8
tick,0x7ffad1f6fb64,40090981,0,0x0,8
tick,0x7ffad1f6fb64,40105984,0,0x0,8
tick,0x7ffad1f6fb64,40121010,0,0x0,8
tick,0x7ffad1f6fb64,40136004,0,0x0,8
tick,0x7ffad1f6fb64,40152026,0,0x0,8
tick,0x7ffad1f6fb64,40168058,0,0x0,8
tick,0x7ffad1f6fb64,40184048,0,0x0,8
tick,0x7ffad1f6fb64,40199072,0,0x0,8
tick,0x7ffad1f6fb64,40215071,0,0x0,8
tick,0x7ffad1f6fb64,40230103,0,0x0,8
tick,0x7ffad1f6fb64,40246162,0,0x0,8
tick,0x7ffad1f6fb64,40261145,0,0x0,8
tick,0x7ffad1f6fb64,40276158,0,0x0,8
tick,0x7ffad1f6fb64,40292176,0,0x0,8
tick,0x7ffad1f6fb64,40307198,0,0x0,8
tick,0x7ffad1f6fb64,40322197,0,0x0,8
tick,0x7ffad1f6fb64,40338211,0,0x0,8
tick,0x7ffad1f6fb64,40354231,0,0x0,8
tick,0x7ffad1f6fb64,40370240,0,0x0,8
tick,0x7ffad1f6fb64,40386252,0,0x0,8
tick,0x7ffad1f6fb64,40401278,0,0x0,8
tick,0x7ffad1f6fb64,40417281,0,0x0,8
tick,0x7ffad1f6fb64,40433318,0,0x0,8
tick,0x7ffad1f6fb64,40448296,0,0x0,8
tick,0x7ffad1f6fb64,40464309,0,0x0,8
tick,0x7ffad1f6fb64,40480340,0,0x0,8
tick,0x7ffad1f6fb64,40495347,0,0x0,8
tick,0x7ffad1f6fb64,40510337,0,0x0,8
tick,0x7ffad1f6fb64,40525372,0,0x0,8
tick,0x7ffad1f6fb64,40540381,0,0x0,8
tick,0x7ffad1f6fb64,40556380,0,0x0,8
tick,0x7ffad1f6fb64,40572431,0,0x0,8
tick,0x7ffad1f6fb64,40587447,0,0x0,8
tick,0x7ffad1f6fb64,40602428,0,0x0,8
tick,0x7ffad1f6fb64,40617458,0,0x0,8
tick,0x7ffad1f6fb64,40633494,0,0x0,8
tick,0x7ffad1f6fb64,40648498,0,0x0,8
tick,0x7ffad1f6fb64,40664522,0,0x0,8
tick,0x7ffad1f6fb64,40679504,0,0x0,8
tick,0x7ffad1f6fb64,40695532,0,0x0,8
tick,0x7ffad1f6fb64,40711533,0,0x0,8
tick,0x7ffad1f6fb64,40727547,0,0x0,8
tick,0x7ffad1f6fb64,40743578,0,0x0,8
tick,0x7ffad1f6fb64,40759572,0,0x0,8
tick,0x7ffad1f6fb64,40775622,0,0x0,8
tick,0x7ffad1f6fb64,40790623,0,0x0,8
tick,0x7ffad1f6fb64,40805622,0,0x0,8
tick,0x7ffad1f6fb64,40820652,0,0x0,8
tick,0x7ffad1f6fb64,40835655,0,0x0,8
tick,0x7ffad1f6fb64,40851674,0,0x0,8
tick,0x7ffad1f6fb64,40866672,0,0x0,8
tick,0x7ffad1f6fb64,40881687,0,0x0,8
tick,0x7ffad1f6fb64,40896705,0,0x0,8
tick,0x7ffad1f6fb64,40912721,0,0x0,8
tick,0x7ffad1f6fb64,40928729,0,0x0,8
tick,0x7ffad1f6fb64,40943748,0,0x0,8
tick,0x7ffad1f6fb64,40959748,0,0x0,8
tick,0x7ffad1f6fb64,40975773,0,0x0,8
tick,0x7ffad1f6fb64,40991801,0,0x0,8
tick,0x7ffad1f6fb64,41007814,0,0x0,8
tick,0x7ffad1f6fb64,41022804,0,0x0,8
tick,0x7ffad1f6fb64,41037835,0,0x0,8
tick,0x7ffad1f6fb64,41052825,0,0x0,8
tick,0x7ffad1f6fb64,41068860,0,0x0,8
tick,0x7ffad1f6fb64,41084899,0,0x0,8
tick,0x7ffad1f6fb64,41100906,0,0x0,8
tick,0x7ffad1f6fb64,41115913,0,0x0,8
tick,0x7ffad1f6fb64,41131918,0,0x0,8
tick,0x7ffad1f6fb64,41147944,0,0x0,8
tick,0x7ffad1f6fb64,41162943,0,0x0,8
tick,0x7ffad1f6fb64,41178978,0,0x0,8
tick,0x7ffad1f6fb64,41194980,0,0x0,8
tick,0x7ffad1f6fb64,41211007,0,0x0,8
tick,0x7ffad1f6fb64,41226005,0,0x0,8
tick,0x7ffad1f6fb64,41242015,0,0x0,8
tick,0x7ffad1f6fb64,41257027,0,0x0,8
tick,0x7ffad1f6fb64,41273050,0,0x0,8
tick,0x7ffad1f6fb64,41289098,0,0x0,8
tick,0x7ffad1f6fb64,41304069,0,0x0,8
tick,0x7ffad1f6fb64,41320103,0,0x0,8
tick,0x7ffad1f6fb64,41335133,0,0x0,8
tick,0x7ffad1f6fb64,41350118,0,0x0,8
tick,0x7ffad1f6fb64,41366186,0,0x0,8
tick,0x7ffad1f6fb64,41381164,0,0x0,8
tick,0x7ffad1f6fb64,41396200,0,0x0,8
tick,0x7ffad1f6fb64,41411214,0,0x0,8
tick,0x7ffad1f6fb64,41427231,0,0x0,8
tick,0x7ffad1f6fb64,41442189,0,0x0,8
tick,0x7ffad1f6fb64,41457224,0,0x0,8
tick,0x7ffad1f6fb64,41472232,0,0x0,8
tick,0x7ffad1f6fb64,41487239,0,0x0,8
tick,0x7ffad1f6fb64,41503265,0,0x0,8
tick,0x7ffad1f6fb64,41519283,0,0x0,8
tick,0x7ffad1f6fb64,41535298,0,0x0,8
tick,0x7ffad1f6fb64,41550291,0,0x0,8
tick,0x7ffad1f6fb64,41566321,0,0x0,8
tick,0x7ffad1f6fb64,41581330,0,0x0,8
tick,0x7ffad1f6fb64,41596380,0,0x0,8
tick,0x7ffad1f6fb64,41612390,0,0x0,8
tick,0x7ffad1f6fb64,41627371,0,0x0,8
tick,0x7ffad1f6fb64,41642390,0,0x0,8
tick,0x7ffad1f6fb64,41657423,0,0x0,8
tick,0x7ffad1f6fb64,41673406,0,0x0,8
tick,0x7ffad1f6fb64,41689451,0,0x0,8
tick,0x7ffad1f6fb64,41705458,0,0x0,8
tick,0x7ffad1f6fb64,41721467,0,0x0,8
tick,0x7ffad1f6fb64,41736508,0,0x0,8
tick,0x7ffad1f6fb64,41752480,0,0x0,8
tick,0x7ffad1f6fb64,41768487,0,0x0,8
tick,0x7ffad1f6fb64,41783536,0,0x0,8
tick,0x7ffad1f6fb64,41799533,0,0x0,8
tick,0x7ffad1f6fb64,41815547,0,0x0,8
tick,0x7ffad1f6fb64,41830564,0,0x0,8
tick,0x7ffad1f6fb64,41846580,0,0x0,8
tick,0x7ffad1f6fb64,41862603,0,0x0,8
tick,0x7ffad1f6fb64,41878609,0,0x0,8
tick,0x7ffad1f6fb64,41893633,0,0x0,8
tick,0x7ffad1f6fb64,41908637,0,0x0,8
tick,0x7ffad1f6fb64,41924649,0,0x0,8
tick,0x7ffad1f6fb64,41939691,0,0x0,8
tick,0x7ffad1f6fb64,41955870,0,0x0,8
tick,0x7ffad1f6fb64,41971724,0,0x0,8
tick,0x7ffad1f6fb64,41986731,0,0x0,8
tick,0x7ffad1f6fb64,42001708,0,0x0,8
tick,0x7ffad1f6fb64,42017736,0,0x0,8
tick,0x7ffad1f6fb64,42032744,0,0x0,8
tick,0x7ffad1f6fb64,42047764,0,0x0,8
tick,0x7ffad1f6fb64,42063814,0,0x0,8
tick,0x7ffad1f6fb64,42079798,0,0x0,8
tick,0x7ffad1f6fb64,42094810,0,0x0,8
tick,0x7ffad1f6fb64,42110854,0,0x0,8
tick,0x7ffad1f6fb64,42125834,0,0x0,8
tick,0x7ffad1f6fb64,42140835,0,0x0,8
tick,0x7ffad1f6fb64,42156906,0,0x0,8
tick,0x7ffad1f6fb64,42171888,0,0x0,8
tick,0x7ffad1f6fb64,42186887,0,0x0,8
tick,0x7ffad1f6fb64,42202920,0,0x0,8
tick,0x7ffad1f6fb64,42218932,0,0x0,8
tick,0x7ffad1f6fb64,42234953,0,0x0,8
tick,0x7ffad1f6fb64,42249952,0,0x0,8
tick,0x7ffad1f6fb64,42265959,0,0x0,8
tick,0x7ffad1f6fb64,42281967,0,0x0,8
tick,0x7ffad1f6fb64,42297992,0,0x0,8
tick,0x7ffad1f6fb64,42313996,0,0x0,8
tick,0x7ffad1f6fb64,42329226,0,0x0,8
tick,0x7ffad1f6fb64,42345035,0,0x0,8
tick,0x7ffad1f6fb64,42361053,0,0x0,8
tick,0x7ffad1f6fb64,42376061,0,0x0,8
tick,0x7ffad1f6fb64,42392073,0,0x0,8
tick,0x7ffad1f6fb64,42407107,0,0x0,8
tick,0x7ffad1f6fb64,42423095,0,0x0,8
tick,0x7ffad1f6fb64,42439109,0,0x0,8
tick,0x7ffad1f6fb64,42455148,0,0x0,8
tick,0x7ffad1f6fb64,42471137,0,0x0,8
tick,0x7ffad1f6fb64,42487174,0,0x0,8
tick,0x7ffad1f6fb64,42502158,0,0x0,8
tick,0x7ffad1f6fb64,42517193,0,0x0,8
tick,0x7ffad1f6fb64,42533202,0,0x0,8
tick,0x7ffad1f6fb64,42549208,0,0x0,8
tick,0x7ffad1f6fb64,42565207,0,0x0,8
tick,0x7ffad1f6fb64,42580243,0,0x0,8
tick,0x7ffad1f6fb64,42595273,0,0x0,8
tick,0x7ffad1f6fb64,42611267,0,0x0,8
tick,0x7ffad1f6fb64,42626301,0,0x0,8
tick,0x7ffad1f6fb64,42642299,0,0x0,8
tick,0x7ffad1f6fb64,42657335,0,0x0,8
tick,0x7ffad1f6fb64,42672332,0,0x0,8
tick,0x7ffad1f6fb64,42688351,0,0x0,8
tick,0x7ffad1f6fb64,42703393,0,0x0,8
tick,0x7ffad1f6fb64,42719377,0,0x0,8
tick,0x7ffad1f6fb64,42734392,0,0x0,8
tick,0x7ffad1f6fb64,42749405,0,0x0,8
tick,0x7ffad1f6fb64,42764419,0,0x0,8
tick,0x7ffad1f6fb64,42779486,0,0x0,8
tick,0x7ffad1f6fb64,42795432,0,0x0,8
tick,0x7ffad1f6fb64,42811482,0,0x0,8
tick,0x7ffad1f6fb64,42827511,0,0x0,8
tick,0x7ffad1f6fb64,42843491,0,0x0,8
tick,0x7ffad1f6fb64,42858540,0,0x0,8
tick,0x7ffad1f6fb64,42874515,0,0x0,8
tick,0x7ffad1f6fb64,42889556,0,0x0,8
tick,0x7ffad1f6fb64,42905540,0,0x0,8
tick,0x7ffad1f6fb64,42921584,0,0x0,8
tick,0x7ffad1f6fb64,42937555,0,0x0,8
tick,0x7ffad1f6fb64,42952589,0,0x0,8
tick,0x7ffad1f6fb64,42968643,0,0x0,8
tick,0x7ffad1f6fb64,42984611,0,0x0,8
tick,0x7ffad1f6fb64,42999621,0,0x0,8
tick,0x7ffad1f6fb64,43015654,0,0x0,8
tick,0x7ffad1f6fb64,43031662,0,0x0,8
tick,0x7ffad1f6fb64,43046663,0,0x0,8
tick,0x7ffad1f6fb64,43062867,0,0x0,8
tick,0x7ffad1f6fb64,43077726,0,0x0,8
tick,0x7ffad1f6fb64,43093711,0,0x0,8
tick,0x7ffad1f6fb64,43108725,0,0x0,8
tick,0x7ffad1f6fb64,43124726,0,0x0,8
tick,0x7ffad1f6fb64,43139895,0,0x0,8
tick,0x7ffad1f6fb64,43155768,0,0x0,8
tick,0x7ffad1f6fb64,43171769,0,0x0,8
tick,0x7ffad1f6fb64,43186792,0,0x0,8
tick,0x7ffad1f6fb64,43202802,0,0x0,8
tick,0x7ffad1f6fb64,43218827,0,0x0,8
tick,0x7ffad1f6fb64,43233844,0,0x0,8
tick,0x7ffad1f6fb64,43249853,0,0x0,8
tick,0x7ffad1f6fb64,43265873,0,0x0,8
tick,0x7ffad1f6fb64,43281890,0,0x0,8
tick,0x7ffad1f6fb64,43297898,0,0x0,8
tick,0x7ffad1f6fb64,43312911,0,0x0,8
tick,0x7ffad1f6fb64,43327923,0,0x0,8
tick,0x7ffad1f6fb64,43342980,0,0x0,8
tick,0x7ffad1f6fb64,43357962,0,0x0,8
tick,0x7ffad1f6fb64,43373977,0,0x0,8
tick,0x7ffad1f6fb64,43390015,0,0x0,8
tick,0x7ffad1f6fb64,43406006,0,0x0,8
tick,0x7ffad1f6fb64,43421024,0,0x0,8
tick,0x7ffad1f6fb64,43437016,0,0x0,8
tick,0x7ffad1f6fb64,43453027,0,0x0,8
tick,0x7ffad1f6fb64,43469064,0,0x0,8
tick,0x7ffad1f6fb64,43485078,0,0x0,8
tick,0x7ffad1f6fb64,43500073,0,0x0,8
tick,0x7ffad1f6fb64,43516098,0,0x0,8
tick,0x7ffad1f6fb64,43531107,0,0x0,8
tick,0x7ffad1f6fb64,43547119,0,0x0,8
tick,0x7ffad1f6fb64,43563135,0,0x0,8
tick,0x7ffad1f6fb64,43578175,0,0x0,8
tick,0x7ffad1f6fb64,43593179,0,0x0,8
tick,0x7ffad1f6fb64,43608190,0,0x0,8
tick,0x7ffad1f6fb64,43624211,0,0x0,8
tick,0x7ffad1f6fb64,43640288,0,0x0,8
tick,0x7ffad1f6fb64,43655249,0,0x0,8
tick,0x7ffad1f6fb64,43671255,0,0x0,8
tick,0x7ffad1f6fb64,43687267,0,0x0,8
tick,0x7ffad1f6fb64,43703257,0,0x0,8
tick,0x7ffad1f6fb64,43718290,0,0x0,8
tick,0x7ffad1f6fb64,43733285,0,0x0,8
tick,0x7ffad1f6fb64,43749307,0,0x0,8
tick,0x7ffad1f6fb64,43764323,0,0x0,8
tick,0x7ffad1f6fb64,43779367,0,0x0,8
tick,0x7ffad1f6fb64,43794370,0,0x0,8
tick,0x7ffad1f6fb64,43809345,0,0x0,8
tick,0x7ffad1f6fb64,43825388,0,0x0,8
tick,0x7ffad1f6fb64,43840405,0,0x0,8
tick,0x7ffad1f6fb64,43856395,0,0x0,8
tick,0x7ffad1f6fb64,43872415,0,0x0,8
tick,0x7ffad1f6fb64,43887438,0,0x0,8
tick,0x7ffad1f6fb64,43903466,0,0x0,8
tick,0x7ffad1f6fb64,43919474,0,0x0,8
tick,0x7ffad1f6fb64,43935491,0,0x0,8
tick,0x7ffad1f6fb64,43950496,0,0x0,8
tick,0x7ffad1f6fb64,43965516,0,0x0,8
tick,0x7ffad1f6fb64,43980526,0,0x0,8
tick,0x7ffad1f6fb64,43996562,0,0x0,8
tick,0x7ffad1f6fb64,44011571,0,0x0,8
tick,0x7ffad1f6fb64,44027571,0,0x0,8
tick,0x7ffad1f6fb64,44043570,0,0x0,8
tick,0x7ffad1f6fb64,44059586,0,0x0,8
tick,0x7ffad1f6fb64,44074602,0,0x0,8
tick,0x7ffad1f6fb64,44090632,0,0x0,8
tick,0x7ffad1f6fb64,44106631,0,0x0,8
tick,0x7ffad1f6fb64,44121661,0,0x0,8
tick,0x7ffad1f6fb64,44137661,0,0x0,8
tick,0x7ffad1f6fb64,44152688,0,0x0,8
tick,0x7ffad1f6fb64,44168718,0,0x0,8
tick,0x7ffad1f6fb64,44184710,0,0x0,8
tick,0x7ffad1f6fb64,44199719,0,0x0,8
tick,0x7ffad1f6fb64,44215731,0,0x0,8
tick,0x7ffad1f6fb64,44231748,0,0x0,8
tick,0x7ffad1f6fb64,44247748,0,0x0,8
tick,0x7ffad1f6fb64,44263773,0,0x0,8
tick,0x7ffad1f6fb64,44279801,0,0x0,8
tick,0x7ffad1f6fb64,44295810,0,0x0,8
tick,0x7ffad1f6fb64,44310809,0,0x0,8
tick,0x7ffad1f6fb64,44326833,0,0x0,8
tick,0x7ffad1f6fb64,44341861,0,0x0,8
tick,0x7ffad1f6fb64,44357854,0,0x0,8
tick,0x7ffad1f6fb64,44373879,0,0x0,8
tick,0x7ffad1f6fb64,44389878,0,0x0,8
tick,0x7ffad1f6fb64,44405969,0,0x0,8
tick,0x7ffad1f6fb64,44421958,0,0x0,8
tick,0x7ffad1f6fb64,44436931,0,0x0,8
tick,0x7ffad1f6fb64,44452965,0,0x0,8
tick,0x7ffad1f6fb64,44468954,0,0x0,8
tick,0x7ffad1f6fb64,44484972,0,0x0,8
tick,0x7ffad1f6fb64,44500015,0,0x0,8
tick,0x7ffad1f6fb64,44514994,0,0x0,8
tick,0x7ffad1f6fb64,44530024,0,0x0,8
tick,0x7ffad1f6fb64,44546041,0,0x0,8
tick,0x7ffad1f6fb64,44561063,0,0x0,8
tick,0x7ffad1f6fb64,44577058,0,0x0,8
tick,0x7ffad1f6fb64,44593076,0,0x0,8
tick,0x7ffad1f6fb64,44608101,0,0x0,8
tick,0x7ffad1f6fb64,44623097,0,0x0,8
tick,0x7ffad1f6fb64,44638126,0,0x0,8
tick,0x7ffad1f6fb64,44654160,0,0x0,8
tick,0x7ffad1f6fb64,44669190,0,0x0,8
tick,0x7ffad1f6fb64,44684178,0,0x0,8
tick,0x7ffad1f6fb64,44700174,0,0x0,8
tick,0x7ffad1f6fb64,44716174,0,0x0,8
tick,0x7ffad1f6fb64,44732196,0,0x0,8
tick,0x7ffad1f6fb64,44748215,0,0x0,8
tick,0x7ffad1f6fb64,44764232,0,0x0,8
tick,0x7ffad1f6fb64,44780239,0,0x0,8
tick,0x7ffad1f6fb64,44795251,0,0x0,8
tick,0x7ffad1f6fb64,44811324,0,0x0,8
tick,0x7ffad1f6fb64,44826287,0,0x0,8
tick,0x7ffad1f6fb64,44841300,0,0x0,8
tick,0x7ffad1f6fb64,44857315,0,0x0,8
tick,0x7ffad1f6fb64,44873328,0,0x0,8
tick,0x7ffad1f6fb64,44888343,0,0x0,8
tick,0x7ffad1f6fb64,44904369,0,0x0,8
tick,0x7ffad1f6fb64,44920432,0,0x0,8
tick,0x7ffad1f6fb64,44935399,0,0x0,8
tick,0x7ffad1f6fb64,44950401,0,0x0,8
tick,0x7ffad1f6fb64,44968847,0,0x0,8
tick,0x7ffad1f6fb64,44981553,0,0x0,8
tick,0x7ffad1f6fb64,44996448,0,0x0,8
tick,0x7ffad1f6fb64,45012495,0,0x0,8
tick,0x7ffad1f6fb64,45027508,0,0x0,8
tick,0x7ffad1f6fb64,45043518,0,0x0,8
tick,0x7ffad1f6fb64,45059518,0,0x0,8
tick,0x7ffad1f6fb64,45075533,0,0x0,8
tick,0x7ffad1f6fb64,45090540,0,0x0,8
tick,0x7ffad1f6fb64,45106563,0,0x0,8
tick,0x7ffad1f6fb64,45122561,0,0x0,8
tick,0x7ffad1f6fb64,45137582,0,0x0,8
tick,0x7ffad1f6fb64,45153601,0,0x0,8
tick,0x7ffad1f6fb64,45169605,0,0x0,8
tick,0x7ffad1f6fb64,45185648,0,0x0,8
tick,0x7ffad1f6fb64,45201633,0,0x0,8
tick,0x7ffad1f6fb64,45217661,0,0x0,8
tick,0x7ffad1f6fb64,45233675,0,0x0,8
tick,0x7ffad1f6fb64,45248700,0,0x0,8
tick,0x7ffad1f6fb64,45264715,0,0x0,8
tick,0x7ffad1f6fb64,45280713,0,0x0,8
tick,0x7ffad1f6fb64,45295731,0,0x0,8
tick,0x7ffad1f6fb64,45311731,0,0x0,8
tick,0x7ffad1f6fb64,45326776,0,0x0,8
tick,0x7ffad1f6fb64,45341751,0,0x0,8
tick,0x7ffad1f6fb64,45357833,0,0x0,8
tick,0x7ffad1f6fb64,45373798,0,0x0,8
tick,0x7ffad1f6fb64,45388800,0,0x0,8
tick,0x7ffad1f6fb64,45404819,0,0x0,8
tick,0x7ffad1f6fb64,45420831,0,0x0,8
tick,0x7ffad1f6fb64,45436876,0,0x0,8
tick,0x7ffad1f6fb64,45452866,0,0x0,8
tick,0x7ffad1f6fb64,45468900,0,0x0,8
tick,0x7ffad1f6fb64,45484883,0,0x0,8
tick,0x7ffad1f6fb64,45500898,0,0x0,8
tick,0x7ffad1f6fb64,45517068,0,0x0,8
tick,0x7ffad1f6fb64,45531922,0,0x0,8
tick,0x7ffad1f6fb64,45547949,0,0x0,8
tick,0x7ffad1f6fb64,45563938,0,0x0,8
tick,0x7ffad1f6fb64,45579999,0,0x0,8
tick,0x7ffad1f6fb64,45595986,0,0x0,8
tick,0x7ffad1f6fb64,45612017,0,0x0,8
tick,0x7ffad1f6fb64,45627044,0,0x0,8
tick,0x7ffad1f6fb64,45643018,0,0x0,8
tick,0x7ffad1f6fb64,45658064,0,0x0,8
tick,0x7ffad1f6fb64,45674084,0,0x0,8
tick,0x7ffad1f6fb64,45690110,0,0x0,8
tick,0x7ffad1f6fb64,45706097,0,0x0,8
tick,0x7ffad1f6fb64,45721107,0,0x0,8
tick,0x7ffad1f6fb64,45736105,0,0x0,8
tick,0x7ffad1f6fb64,45751111,0,0x0,8
tick,0x7ffad1f6fb64,45767175,0,0x0,8
tick,0x7ffad1f6fb64,45782148,0,0x0,8
tick,0x7ffad1f6fb64,45798175,0,0x0,8
tick,0x7ffad1f6fb64,45813195,0,0x0,8
tick,0x7ffad1f6fb64,45829205,0,0x0,8
tick,0x7ffad1f6fb64,45845241,0,0x0,8
tick,0x7ffad1f6fb64,45861226,0,0x0,8
tick,0x7ffad1f6fb64,45877409,0,0x0,8
tick,0x7ffad1f6fb64,45892257,0,0x0,8
tick,0x7ffad1f6fb64,45908286,0,0x0,8
tick,0x7ffad1f6fb64,45924301,0,0x0,8
tick,0x7ffad1f6fb64,45940296,0,0x0,8
tick,0x7ffad1f6fb64,45956305,0,0x0,8
tick,0x7ffad1f6fb64,45971324,0,0x0,8
tick,0x7ffad1f6fb64,45987356,0,0x0,8
tick,0x7ffad1f6fb64,46003346,0,0x0,8
tick,0x7ffad1f6fb64,46019404,0,0x0,8
tick,0x7ffad1f6fb64,46035383,0,0x0,8
tick,0x7ffad1f6fb64,46050570,0,0x0,8
tick,0x7ffad1f6fb64,46065403,0,0x0,8
tick,0x7ffad1f6fb64,46080437,0,0x0,8
tick,0x7ffad1f6fb64,46096439,0,0x0,8
tick,0x7ffad1f6fb64,46112457,0,0x0,8
tick,0x7ffad1f6fb64,46127470,0,0x0,8
tick,0x7ffad1f6fb64,46143474,0,0x0,8
tick,0x7ffad1f6fb64,46159494,0,0x0,8
tick,0x7ffad1f6fb64,46175526,0,0x0,8
tick,0x7ffad1f6fb64,46191558,0,0x0,8
tick,0x7ffad1f6fb64,46206552,0,0x0,8
tick,0x7ffad1f6fb64,46221535,0,0x0,8
tick,0x7ffad1f6fb64,46237568,0,0x0,8
tick,0x7ffad1f6fb64,46253576,0,0x0,8
tick,0x7ffad1f6fb64,46269597,0,0x0,8
tick,0x7ffad1f6fb64,46284617,0,0x0,8
tick,0x7ffad1f6fb64,46299620,0,0x0,8
tick,0x7ffad1f6fb64,46315640,0,0x0,8
tick,0x7ffad1f6fb64,46330647,0,0x0,8
tick,0x7ffad1f6fb64,46346724,0,0x0,8
tick,0x7ffad1f6fb64,46362699,0,0x0,8
tick,0x7ffad1f6fb64,46378716,0,0x0,8
tick,0x7ffad1f6fb64,46393728,0,0x0,8
tick,0x7ffad1f6fb64,46409741,0,0x0,8
tick,0x7ffad1f6fb64,46424762,0,0x0,8
tick,0x7ffad1f6fb64,46440764,0,0x0,8
tick,0x7ffad1f6fb64,46456770,0,0x0,8
tick,0x7ffad1f6fb64,46471797,0,0x0,8
tick,0x7ffad1f6fb64,46487804,0,0x0,8
tick,0x7ffad1f6fb64,46502795,0,0x0,8
tick,0x7ffad1f6fb64,46517827,0,0x0,8
tick,0x7ffad1f6fb64,46533854,0,0x0,8
tick,0x7ffad1f6fb64,46548842,0,0x0,8
tick,0x7ffad1f6fb64,46564873,0,0x0,8
tick,0x7ffad1f6fb64,46579878,0,0x0,8
tick,0x7ffad1f6fb64,46594892,0,0x0,8
tick,0x7ffad1f6fb64,46610910,0,0x0,8
tick,0x7ffad1f6fb64,46626928,0,0x0,8
tick,0x7ffad1f6fb64,46642939,0,0x0,8
tick,0x7ffad1f6fb64,46658970,0,0x0,8
tick,0x7ffad1f6fb64,46674978,0,0x0,8
tick,0x7ffad1f6fb64,46690999,0,0x0,8
tick,0x7ffad1f6fb64,46706173,0,0x0,8
tick,0x7ffad1f6fb64,46721027,0,0x0,8
tick,0x7ffad1f6fb64,46736052,0,0x0,8
tick,0x7ffad1f6fb64,46752041,0,0x0,8
tick,0x7ffad1f6fb64,46767034,0,0x0,8
tick,0x7ffad1f6fb64,46782081,0,0x0,8
tick,0x7ffad1f6fb64,46798090,0,0x0,8
tick,0x7ffad1f6fb64,46814105,0,0x0,8
tick,0x7ffad1f6fb64,46830111,0,0x0,8
tick,0x7ffad1f6fb64,46846126,0,0x0,8
tick,0x7ffad1f6fb64,46861144,0,0x0,8
tick,0x7ffad1f6fb64,46876137,0,0x0,8
tick,0x7ffad1f6fb64,46892169,0,0x0,8
tick,0x7ffad1f6fb64,46907196,0,0x0,8
tick,0x7ffad1f6fb64,46922180,0,0x0,8
tick,0x7ffad1f6fb64,46938206,0,0x0,8
tick,0x7ffad1f6fb64,46954215,0,0x0,8
tick,0x7ffad1f6fb64,46970243,0,0x0,8
tick,0x7ffad1f6fb64,46985248,0,0x0,8
tick,0x7ffad1f6fb64,47001270,0,0x0,8
tick,0x7ffad1f6fb64,47016288,0,0x0,8
tick,0x7ffad1f6fb64,47032299,0,0x0,8
tick,0x7ffad1f6fb64,47047315,0,0x0,8
tick,0x7ffad1f6fb64,47062303,0,0x0,8
tick,0x7ffad1f6fb64,47077343,0,0x0,8
tick,0x7ffad1f6fb64,47092351,0,0x0,8
tick,0x7ffad1f6fb64,47107366,0,0x0,8
tick,0x7ffad1f6fb64,47122369,0,0x0,8
tick,0x7ffad1f6fb64,47137384,0,0x0,8
tick,0x7ffad1f6fb64,47153399,0,0x0,8
tick,0x7ffad1f6fb64,47169414,0,0x0,8
tick,0x7ffad1f6fb64,47185439,0,0x0,8
tick,0x7ffad1f6fb64,47200457,0,0x0,8
tick,0x7ffad1f6fb64,47216477,0,0x0,8
tick,0x7ffad1f6fb64,47232489,0,0x0,8
tick,0x7ffad1f6fb64,47248478,0,0x0,8
tick,0x7ffad1f6fb64,47264493,0,0x0,8
tick,0x7ffad1f6fb64,47280515,0,0x0,8
tick,0x7ffad1f6fb64,47296542,0,0x0,8
tick,0x7ffad1f6fb64,47312572,0,0x0,8
tick,0x7ffad1f6fb64,47327553,0,0x0,8
tick,0x7ffad1f6fb64,47343574,0,0x0,8
tick,0x7ffad1f6fb64,47359590,0,0x0,8
tick,0x7ffad1f6fb64,47375610,0,0x0,8
tick,0x7ffad1f6fb64,47391605,0,0x0,8
tick,0x7ffad1f6fb64,47407645,0,0x0,8
tick,0x7ffad1f6fb64,47422655,0,0x0,8
tick,0x7ffad1f6fb64,47437667,0,0x0,8
tick,0x7ffad1f6fb64,47452682,0,0x0,8
tick,0x7ffad1f6fb64,47468700,0,0x0,8
tick,0x7ffad1f6fb64,47484699,0,0x0,8
tick,0x7ffad1f6fb64,47499716,0,0x0,8
tick,0x7ffad1f6fb64,47515738,0,0x0,8
tick,0x7ffad1f6fb64,47530741,0,0x0,8
tick,0x7ffad1f6fb64,47546755,0,0x0,8
tick,0x7ffad1f6fb64,47562783,0,0x0,8
tick,0x7ffad1f6fb64,47578782,0,0x0,8
tick,0x7ffad1f6fb64,47593803,0,0x0,8
tick,0x7ffad1f6fb64,47609814,0,0x0,8
tick,0x7ffad1f6fb64,47625885,0,0x0,8
tick,0x7ffad1f6fb64,47640844,0,0x0,8
tick,0x7ffad1f6fb64,47655869,0,0x0,8
tick,0x7ffad1f6fb64,47670870,0,0x0,8
tick,0x7ffad1f6fb64,47686923,0,0x0,8
tick,0x7ffad1f6fb64,47702907,0,0x0,8
tick,0x7ffad1f6fb64,47717936,0,0x0,8
tick,0x7ffad1f6fb64,47732953,0,0x0,8
tick,0x7ffad1f6fb64,47748945,0,0x0,8
tick,0x7ffad1f6fb64,47764954,0,0x0,8
tick,0x7ffad1f6fb64,47779981,0,0x0,8
tick,0x7ffad1f6fb64,47794973,0,0x0,8
tick,0x7ffad1f6fb64,47810995,0,0x0,8
tick,0x7ffad1f6fb64,47826017,0,0x0,8
tick,0x7ffad1f6fb64,47842057,0,0x0,8
tick,0x7ffad1f6fb64,47858028,0,0x0,8
tick,0x7ffad1f6fb64,47874062,0,0x0,8
tick,0x7ffad1f6fb64,47889060,0,0x0,8
tick,0x7ffad1f6fb64,47904075,0,0x0,8
tick,0x7ffad1f6fb64,47920105,0,0x0,8
tick,0x7ffad1f6fb64,47936121,0,0x0,8
tick,0x7ffad1f6fb64,47951162,0,0x0,8
tick,0x7ffad1f6fb64,47967184,0,0x0,8
tick,0x7ffad1f6fb64,47982176,0,0x0,8
tick,0x7ffad1f6fb64,47998203,0,0x0,8
tick,0x7ffad1f6fb64,48014198,0,0x0,8
tick,0x7ffad1f6fb64,48030216,0,0x0,8
tick,0x7ffad1f6fb64,48046209,0,0x0,8
tick,0x7ffad1f6fb64,48062237,0,0x0,8
tick,0x7ffad1f6fb64,48077271,0,0x0,8
tick,0x7ffad1f6fb64,48093274,0,0x0,8
tick,0x7ffad1f6fb64,48109275,0,0x0,8
tick,0x7ffad1f6fb64,48124288,0,0x0,8
tick,0x7ffad1f6fb64,48140320,0,0x0,8
tick,0x7ffad1f6fb64,48155323,0,0x0,8
tick,0x7ffad1f6fb64,48171417,0,0x0,8
tick,0x7ffad1f6fb64,48187351,0,0x0,8
tick,0x7ffad1f6fb64,48202359,0,0x0,8
tick,0x7ffad1f6fb64,48217377,0,0x0,8
tick,0x7ffad1f6fb64,48233401,0,0x0,8
tick,0x7ffad1f6fb64,48248398,0,0x0,8
tick,0x7ffad1f6fb64,48263406,0,0x0,8
tick,0x7ffad1f6fb64,48278454,0,0x0,8
tick,0x7ffad1f6fb64,48294445,0,0x0,8
tick,0x7ffad1f6fb64,48310464,0,0x0,8
tick,0x7ffad1f6fb64,48325472,0,0x0,8
tick,0x7ffad1f6fb64,48340483,0,0x0,8
tick,0x7ffad1f6fb64,48355488,0,0x0,8
tick,0x7ffad1f6fb64,48371520,0,0x0,8
tick,0x7ffad1f6fb64,48387568,0,0x0,8
tick,0x7ffad1f6fb64,48403538,0,0x0,8
tick,0x7ffad1f6fb64,48419573,0,0x0,8
tick,0x7ffad1f6fb64,48434603,0,0x0,8
tick,0x7ffad1f6fb64,48449574,0,0x0,8
tick,0x7ffad1f6fb64,48464774,0,0x0,8
tick,0x7ffad1f6fb64,48479601,0,0x0,8
tick,0x7ffad1f6fb64,48495650,0,0x0,8
tick,0x7ffad1f6fb64,48510634,0,0x0,8
tick,0x7ffad1f6fb64,48525662,0,0x0,8
tick,0x7ffad1f6fb64,48540655,0,0x0,8
tick,0x7ffad1f6fb64,48556679,0,0x0,8
tick,0x7ffad1f6fb64,48572686,0,0x0,8
tick,0x7ffad1f6fb64,48588719,0,0x0,8
tick,0x7ffad1f6fb64,48604734,0,0x0,8
tick,0x7ffad1f6fb64,48620738,0,0x0,8
tick,0x7ffad1f6fb64,48636762,0,0x0,8
tick,0x7ffad1f6fb64,48651782,0,0x0,8
tick,0x7ffad1f6fb64,48666790,0,0x0,8
tick,0x7ffad1f6fb64,48681797,0,0x0,8
tick,0x7ffad1f6fb64,48697830,0,0x0,8
tick,0x7ffad1f6fb64,48713853,0,0x0,8
tick,0x7ffad1f6fb64,48729854,0,0x0,8
tick,0x7ffad1f6fb64,48744907,0,0x0,8
tick,0x7ffad1f6fb64,48759865,0,0x0,8
tick,0x7ffad1f6fb64,48774876,0,0x0,8
tick,0x7ffad1f6fb64,48790889,0,0x0,8
tick,0x7ffad1f6fb64,48805904,0,0x0,8
tick,0x7ffad1f6fb64,48820930,0,0x0,8
tick,0x7ffad1f6fb64,48835943,0,0x0,8
tick,0x7ffad1f6fb64,48851977,0,0x0,8
tick,0x7ffad1f6fb64,48866970,0,0x0,8
tick,0x7ffad1f6fb64,48881967,0,0x0,8
tick,0x7ffad1f6fb64,48898002,0,0x0,8
tick,0x7ffad1f6fb64,48914006,0,0x0,8
tick,0x7ffad1f6fb64,48930016,0,0x0,8
tick,0x7ffad1f6fb64,48946035,0,0x0,8
tick,0x7ffad1f6fb64,48962055,0,0x0,8
tick,0x7ffad1f6fb64,48978070,0,0x0,8
tick,0x7ffad1f6fb64,48994088,0,0x0,8
tick,0x7ffad1f6fb64,49010085,0,0x0,8
tick,0x7ffad1f6fb64,49026133,0,0x0,8
tick,0x7ffad1f6fb64,49041128,0,0x0,8
tick,0x7ffad1f6fb64,49057132,0,0x0,8
tick,0x7ffad1f6fb64,49073150,0,0x0,8
tick,0x7ffad1f6fb64,49088169,0,0x0,8
tick,0x7ffad1f6fb64,49104214,0,0x0,8
tick,0x7ffad1f6fb64,49119191,0,0x0,8
tick,0x7ffad1f6fb64,49135199,0,0x0,8
tick,0x7ffad1f6fb64,49150229,0,0x0,8
tick,0x7ffad1f6fb64,49166242,0,0x0,8
tick,0x7ffad1f6fb64,49181289,0,0x0,8
tick,0x7ffad1f6fb64,49197262,0,0x0,8
tick,0x7ffad1f6fb64,49212284,0,0x0,8
tick,0x7ffad1f6fb64,49227297,0,0x0,8
tick,0x7ffad1f6fb64,49243327,0,0x0,8
tick,0x7ffad1f6fb64,49259342,0,0x0,8
tick,0x7ffad1f6fb64,49275332,0,0x0,8
tick,0x7ffad1f6fb64,49291345,0,0x0,8
tick,0x7ffad1f6fb64,49307421,0,0x0,8
tick,0x7ffad1f6fb64,49322377,0,0x0,8
tick,0x7ffad1f6fb64,49337415,0,0x0,8
tick,0x7ffad1f6fb64,49353410,0,0x0,8
tick,0x7ffad1f6fb64,49369451,0,0x0,8
tick,0x7ffad1f6fb64,49385426,0,0x0,8
tick,0x7ffad1f6fb64,49401449,0,0x0,8
tick,0x7ffad1f6fb64,49417459,0,0x0,8
tick,0x7ffad1f6fb64,49433465,0,0x0,8
tick,0x7ffad1f6fb64,49448483,0,0x0,8
tick,0x7ffad1f6fb64,49464504,0,0x0,8
tick,0x7ffad1f6fb64,49479525,0,0x0,8
tick,0x7ffad1f6fb64,49495526,0,0x0,8
tick,0x7ffad1f6fb64,49511558,0,0x0,8
tick,0x7ffad1f6fb64,49527595,0,0x0,8
tick,0x7ffad1f6fb64,49543570,0,0x0,8
tick,0x7ffad1f6fb64,49558588,0,0x0,8
tick,0x7ffad1f6fb64,49573604,0,0x0,8
tick,0x7ffad1f6fb64,49589628,0,0x0,8
tick,0x7ffad1f6fb64,49605645,0,0x0,8
tick,0x7ffad1f6fb64,49621647,0,0x0,8
tick,0x7ffad1f6fb64,49637685,0,0x0,8
tick,0x7ffad1f6fb64,49652772,0,0x0,8
tick,0x7ffad1f6fb64,49668705,0,0x0,8
tick,0x7ffad1f6fb64,49684730,0,0x0,8
tick,0x7ffad1f6fb64,49699729,0,0x0,8
tick,0x7ffad1f6fb64,49715743,0,0x0,8
tick,0x7ffad1f6fb64,49730747,0,0x0,8
tick,0x7ffad1f6fb64,49746787,0,0x0,8
tick,0x7ffad1f6fb64,49761824,0,0x0,8
tick,0x7ffad1f6fb64,49777799,0,0x0,8
tick,0x7ffad1f6fb64,49792812,0,0x0,8
tick,0x7ffad1f6fb64,49807808,0,0x0,8
tick,0x7ffad1f6fb64,49823824,0,0x0,8
tick,0x7ffad1f6fb64,49839869,0,0x0,8
tick,0x7ffad1f6fb64,49855855,0,0x0,8
tick,0x7ffad1f6fb64,49871880,0,0x0,8
tick,0x7ffad1f6fb64,49886880,0,0x0,8
tick,0x7ffad1f6fb64,49902898,0,0x0,8
tick,0x7ffad1f6fb64,49918936,0,0x0,8
tick,0x7ffad1f6fb64,49933941,0,0x0,8
tick,0x7ffad1f6fb64,49949981,0,0x0,8
tick,0x7ffad1f6fb64,49964961,0,0x0,8
tick,0x7ffad1f6fb64,49979986,0,0x0,8
tick,0x7ffad1f6fb64,49995983,0,0x0,8
tick,0x7ffad1f6fb64,50012005,0,0x0,8
tick,0x7ffad1f6fb64,50027029,0,0x0,8
tick,0x7ffad1f6fb64,50043021,0,0x0,8
tick,0x7ffad1f6fb64,50059042,0,0x0,8
tick,0x7ffad1f6fb64,50075066,0,0x0,8
tick,0x7ffad1f6fb64,50090070,0,0x0,8
tick,0x7ffad1f6fb64,50106091,0,0x0,8
tick,0x7ffad1f6fb64,50121153,0,0x0,8
tick,0x7ffad1f6fb64,50137126,0,0x0,8
tick,0x7ffad1f6fb64,50153124,0,0x0,8
tick,0x7ffad1f6fb64,50169165,0,0x0,8
tick,0x7ffad1f6fb64,50185153,0,0x0,8
tick,0x7ffad1f6fb64,50200178,0,0x0,8
tick,0x7ffad1f6fb64,50216236,0,0x0,8
tick,0x7ffad1f6fb64,50232197,0,0x0,8
tick,0x7ffad1f6fb64,50248226,0,0x0,8
tick,0x7ffad1f6fb64,50263268,0,0x0,8
tick,0x7ffad1f6fb64,50278271,0,0x0,8
tick,0x7ffad1f6fb64,50294262,0,0x0,8
tick,0x7ffad1f6fb64,50310287,0,0x0,8
tick,0x7ffad1f6fb64,50326275,0,0x0,8
tick,0x7ffad1f6fb64,50342304,0,0x0,8
tick,0x7ffad1f6fb64,50358368,0,0x0,8
tick,0x7ffad1f6fb64,50374381,0,0x0,8
tick,0x7ffad1f6fb64,50390385,0,0x0,8
tick,0x7ffad1f6fb64,50406379,0,0x0,8
tick,0x7ffad1f6fb64,50421363,0,0x0,8
tick,0x7ffad1f6fb64,50437389,0,0x0,8
tick,0x7ffad1f6fb64,50453413,0,0x0,8
tick,0x7ffad1f6fb64,50469428,0,0x0,8
tick,0x7ffad1f6fb64,50485423,0,0x0,8
tick,0x7ffad1f6fb64,50500501,0,0x0,8
tick,0x7ffad1f6fb64,50515479,0,0x0,8
tick,0x7ffad1f6fb64,50531499,0,0x0,8
tick,0x7ffad1f6fb64,50547488,0,0x0,8
tick,0x7ffad1f6fb64,50563505,0,0x0,8
tick,0x7ffad1f6fb64,50579528,0,0x0,8
tick,0x7ffad1f6fb64,50594531,0,0x0,8
tick,0x7ffad1f6fb64,50610550,0,0x0,8
tick,0x7ffad1f6fb64,50625581,0,0x0,8
tick,0x7ffad1f6fb64,50640568,0,0x0,8
tick,0x7ffad1f6fb64,50656616,0,0x0,8
tick,0x7ffad1f6fb64,50671607,0,0x0,8
tick,0x7ffad1f6fb64,50687644,0,0x0,8
tick,0x7ffad1f6fb64,50703638,0,0x0,8
tick,0x7ffad1f6fb64,50719661,0,0x0,8
tick,0x7ffad1f6fb64,50735663,0,0x0,8
tick,0x7ffad1f6fb64,50750681,0,0x0,8
tick,0x7ffad1f6fb64,50765719,0,0x0,8
tick,0x7ffad1f6fb64,50781712,0,0x0,8
tick,0x7ffad1f6fb64,50797738,0,0x0,8
tick,0x7ffad1f6fb64,50812739,0,0x0,8
tick,0x7ffad1f6fb64,50828750,0,0x0,8
tick,0x7ffad1f6fb64,50843760,0,0x0,8
tick,0x7ffad1f6fb64,50859770,0,0x0,8
tick,0x7ffad1f6fb64,50875784,0,0x0,8
tick,0x7ffad1f6fb64,50891803,0,0x0,8
tick,0x7ffad1f6fb64,50907847,0,0x0,8
tick,0x7ffad1f6fb64,50923832,0,0x0,8
tick,0x7ffad1f6fb64,50939852,0,0x0,8
tick,0x7ffad1f6fb64,50954867,0,0x0,8
tick,0x7ffad1f6fb64,50970880,0,0x0,8
tick,0x7ffad1f6fb64,50986919,0,0x0,8
tick,0x7ffad1f6fb64,51001915,0,0x0,8
tick,0x7ffad1f6fb64,51017951,0,0x0,8
tick,0x7ffad1f6fb64,51032940,0,0x0,8
tick,0x7ffad1f6fb64,51048953,0,0x0,8
tick,0x7ffad1f6fb64,51063958,0,0x0,8
tick,0x7ffad1f6fb64,51079973,0,0x0,8
tick,0x7ffad1f6fb64,51094992,0,0x0,8
tick,0x7ffad1f6fb64,51111013,0,0x0,8
tick,0x7ffad1f6fb64,51126045,0,0x0,8
tick,0x7ffad1f6fb64,51141071,0,0x0,8
tick,0x7ffad1f6fb64,51157049,0,0x0,8
tick,0x7ffad1f6fb64,51172124,0,0x0,8
tick,0x7ffad1f6fb64,51187092,0,0x0,8
tick,0x7ffad1f6fb64,51203066,0,0x0,8
tick,0x7ffad1f6fb64,51218093,0,0x0,8
tick,0x7ffad1f6fb64,51233123,0,0x0,8
tick,0x7ffad1f6fb64,51249118,0,0x0,8
tick,0x7ffad1f6fb64,51265161,0,0x0,8
tick,0x7ffad1f6fb64,51280186,0,0x0,8
tick,0x7ffad1f6fb64,51295183,0,0x0,8
tick,0x7ffad1f6fb64,51311188,0,0x0,8
tick,0x7ffad1f6fb64,51327213,0,0x0,8
tick,0x7ffad1f6fb64,51343238,0,0x0,8
tick,0x7ffad1f6fb64,51359247,0,0x0,8
tick,0x7ffad1f6fb64,51374272,0,0x0,8
tick,0x7ffad1f6fb64,51389267,0,0x0,8
tick,0x7ffad1f6fb64,51404271,0,0x0,8
tick,0x7ffad1f6fb64,51420290,0,0x0,8
tick,0x7ffad1f6fb64,51436306,0,0x0,8
tick,0x7ffad1f6fb64,51452521,0,0x0,8
tick,0x7ffad1f6fb64,51467353,0,0x0,8
tick,0x7ffad1f6fb64,51482355,0,0x0,8
tick,0x7ffad1f6fb64,51498376,0,0x0,8
tick,0x7ffad1f6fb64,51514357,0,0x0,8
tick,0x7ffad1f6fb64,51529415,0,0x0,8
tick,0x7ffad1f6fb64,51544436,0,0x0,8
tick,0x7ffad1f6fb64,51560445,0,0x0,8
tick,0x7ffad1f6fb64,51576444,0,0x0,8
tick,0x7ffad1f6fb64,51592450,0,0x0,8
tick,0x7ffad1f6fb64,51607466,0,0x0,8
tick,0x7ffad1f6fb64,51622470,0,0x0,8
tick,0x7ffad1f6fb64,51637518,0,0x0,8
tick,0x7ffad1f6fb64,51652668,0,0x0,8
tick,0x7ffad1f6fb64,51668541,0,0x0,8
tick,0x7ffad1f6fb64,51683514,0,0x0,8
tick,0x7ffad1f6fb64,51699546,0,0x0,8
tick,0x7ffad1f6fb64,51714556,0,0x0,8
tick,0x7ffad1f6fb64,51730566,0,0x0,8
tick,0x7ffad1f6fb64,51746627,0,0x0,8
tick,0x7ffad1f6fb64,51761596,0,0x0,8
tick,0x7ffad1f6fb64,51776639,0,0x0,8
tick,0x7ffad1f6fb64,51792640,0,0x0,8
tick,0x7ffad1f6fb64,51808640,0,0x0,8
tick,0x7ffad1f6fb64,51824670,0,0x0,8
tick,0x7ffad1f6fb64,51839711,0,0x0,8
tick,0x7ffad1f6fb64,51855681,0,0x0,8
tick,0x7ffad1f6fb64,51871700,0,0x0,8
tick,0x7ffad1f6fb64,51887762,0,0x0,8
tick,0x7ffad1f6fb64,51902731,0,0x0,8
tick,0x7ffad1f6fb64,51918756,0,0x0,8
tick,0x7ffad1f6fb64,51933778,0,0x0,8
tick,0x7ffad1f6fb64,51949757,0,0x0,8
tick,0x7ffad1f6fb64,51964834,0,0x0,8
tick,0x7ffad1f6fb64,51979805,0,0x0,8
tick,0x7ffad1f6fb64,51995847,0,0x0,8
tick,0x7ffad1f6fb64,52010857,0,0x0,8
tick,0x7ffad1f6fb64,52026909,0,0x0,8
tick,0x7ffad1f6fb64,52042878,0,0x0,8
tick,0x7ffad1f6fb64,52058929,0,0x0,8
tick,0x7ffad1f6fb64,52074930,0,0x0,8
tick,0x7ffad1f6fb64,52089955,0,0x0,8
tick,0x7ffad1f6fb64,52106150,0,0x0,8
tick,0x7ffad1f6fb64,52121065,0,0x0,8
tick,0x7ffad1f6fb64,52135931,0,0x0,8
tick,0x7ffad1f6fb64,52151972,0,0x0,8
tick,0x7ffad1f6fb64,52166994,0,0x0,8
tick,0x7ffad1f6fb64,52183003,0,0x0,8
tick,0x7ffad1f6fb64,52197988,0,0x0,8
tick,0x7ffad1f6fb64,52213040,0,0x0,8
tick,0x7ffad1f6fb64,52229034,0,0x0,8
tick,0x7ffad1f6fb64,52245038,0,0x0,8
tick,0x7ffad1f6fb64,52261067,0,0x0,8
tick,0x7ffad1f6fb64,52277094,0,0x0,8
tick,0x7ffad1f6fb64,52293101,0,0x0,8
tick,0x7ffad1f6fb64,52309152,0,0x0,8
tick,0x7ffad1f6fb64,52325124,0,0x0,8
tick,0x7ffad1f6fb64,52340117,0,0x0,8
tick,0x7ffad1f6fb64,52356140,0,0x0,8
tick,0x7ffad1f6fb64,52372166,0,0x0,8
tick,0x7ffad1f6fb64,52388167,0,0x0,8
tick,0x7ffad1f6fb64,52404192,0,0x0,8
tick,0x7ffad1f6fb64,52420195,0,0x0,8
tick,0x7ffad1f6fb64,52435215,0,0x0,8
tick,0x7ffad1f6fb64,52450217,0,0x0,8
tick,0x7ffad1f6fb64,52466260,0,0x0,8
tick,0x7ffad1f6fb64,52482257,0,0x0,8
tick,0x7ffad1f6fb64,52497271,0,0x0,8
tick,0x7ffad1f6fb64,52513293,0,0x0,8
tick,0x7ffad1f6fb64,52529309,0,0x0,8
tick,0x7ffad1f6fb64,52545319,0,0x0,8
tick,0x7ffad1f6fb64,52560333,0,0x0,8
tick,0x7ffad1f6fb64,52576363,0,0x0,8
tick,0x7ffad1f6fb64,52592391,0,0x0,8
tick,0x7ffad1f6fb64,52607378,0,0x0,8
tick,0x7ffad1f6fb64,52622392,0,0x0,8
tick,0x7ffad1f6fb64,52637427,0,0x0,8
tick,0x7ffad1f6fb64,52652456,0,0x0,8
tick,0x7ffad1f6fb64,52667437,0,0x0,8
tick,0x7ffad1f6fb64,52682459,0,0x0,8
tick,0x7ffad1f6fb64,52698467,0,0x0,8
tick,0x7ffad1f6fb64,52714477,0,0x0,8
tick,0x7ffad1f6fb64,52729482,0,0x0,8
tick,0x7ffad1f6fb64,52745492,0,0x0,8
tick,0x7ffad1f6fb64,52761525,0,0x0,8
tick,0x7ffad1f6fb64,52777534,0,0x0,8
tick,0x7ffad1f6fb64,52792553,0,0x0,8
tick,0x7ffad1f6fb64,52807550,0,0x0,8
tick,0x7ffad1f6fb64,52822613,0,0x0,8
tick,0x7ffad1f6fb64,52837598,0,0x0,8
tick,0x7ffad1f6fb64,52852599,0,0x0,8
tick,0x7ffad1f6fb64,52868623,0,0x0,8
tick,0x7ffad1f6fb64,52884632,0,0x0,8
tick,0x7ffad1f6fb64,52899651,0,0x0,8
tick,0x7ffad1f6fb64,52915646,0,0x0,8
tick,0x7ffad1f6fb64,52930672,0,0x0,8
tick,0x7ffad1f6fb64,52945669,0,0x0,8
tick,0x7ffad1f6fb64,52960695,0,0x0,8
tick,0x7ffad1f6fb64,52975725,0,0x0,8
tick,0x7ffad1f6fb64,52991710,0,0x0,8
tick,0x7ffad1f6fb64,53007731,0,0x0,8
tick,0x7ffad1f6fb64,53023765,0,0x0,8
tick,0x7ffad1f6fb64,53038769,0,0x0,8
tick,0x7ffad1f6fb64,53054788,0,0x0,8
tick,0x7ffad1f6fb64,53070790,0,0x0,8
tick,0x7ffad1f6fb64,53086835,0,0x0,8
tick,0x7ffad1f6fb64,53102818,0,0x0,8
tick,0x7ffad1f6fb64,53117857,0,0x0,8
tick,0x7ffad1f6fb64,53132841,0,0x0,8
tick,0x7ffad1f6fb64,53147885,0,0x0,8
tick,0x7ffad1f6fb64,53163890,0,0x0,8
tick,0x7ffad1f6fb64,53179901,0,0x0,8
tick,0x7ffad1f6fb64,53196045,0,0x0,8
tick,0x7ffad1f6fb64,53211924,0,0x0,8
tick,0x7ffad1f6fb64,53226951,0,0x0,8
tick,0x7ffad1f6fb64,53242963,0,0x0,8
tick,0x7ffad1f6fb64,53257974,0,0x0,8
tick,0x7ffad1f6fb64,53272979,0,0x0,8
tick,0x7ffad1f6fb64,53288003,0,0x0,8
tick,0x7ffad1f6fb64,53303028,0,0x0,8
tick,0x7ffad1f6fb64,53318007,0,0x0,8
tick,0x7ffad1f6fb64,53333213,0,0x0,8
tick,0x7ffad1f6fb64,53348095,0,0x0,8
tick,0x7ffad1f6fb64,53364062,0,0x0,8
tick,0x7ffad1f6fb64,53380067,0,0x0,8
tick,0x7ffad1f6fb64,53395087,0,0x0,8
tick,0x7ffad1f6fb64,53410104,0,0x0,8
tick,0x7ffad1f6fb64,53425115,0,0x0,8
tick,0x7ffad1f6fb64,53440160,0,0x0,8
tick,0x7ffad1f6fb64,53455158,0,0x0,8
tick,0x7ffad1f6fb64,53471191,0,0x0,8
tick,0x7ffad1f6fb64,53487182,0,0x0,8
tick,0x7ffad1f6fb64,53503205,0,0x0,8
tick,0x7ffad1f6fb64,53519244,0,0x0,8
tick,0x7ffad1f6fb64,53535228,0,0x0,8
tick,0x7ffad1f6fb64,53550227,0,0x0,8
tick,0x7ffad1f6fb64,53566233,0,0x0,8
tick,0x7ffad1f6fb64,53582262,0,0x0,8
tick,0x7ffad1f6fb64,53598280,0,0x0,8
tick,0x7ffad1f6fb64,53614318,0,0x0,8
tick,0x7ffad1f6fb64,53629319,0,0x0,8
tick,0x7ffad1f6fb64,53645315,0,0x0,8
tick,0x7ffad1f6fb64,53661344,0,0x0,8
tick,0x7ffad1f6fb64,53677358,0,0x0,8
tick,0x7ffad1f6fb64,53693399,0,0x0,8
tick,0x7ffad1f6fb64,53709388,0,0x0,8
tick,0x7ffad1f6fb64,53725415,0,0x0,8
tick,0x7ffad1f6fb64,53740421,0,0x0,8
tick,0x7ffad1f6fb64,53756413,0,0x0,8
tick,0x7ffad1f6fb64,53771445,0,0x0,8
tick,0x7ffad1f6fb64,53787477,0,0x0,8
tick,0x7ffad1f6fb64,53802454,0,0x0,8
tick,0x7ffad1f6fb64,53817523,0,0x0,8
tick,0x7ffad1f6fb64,53833503,0,0x0,8
tick,0x7ffad1f6fb64,53848524,0,0x0,8
tick,0x7ffad1f6fb64,53863518,0,0x0,8
tick,0x7ffad1f6fb64,53879530,0,0x0,8
tick,0x7ffad1f6fb64,53894581,0,0x0,8
tick,0x7ffad1f6fb64,53910554,0,0x0,8
tick,0x7ffad1f6fb64,53925572,0,0x0,8
tick,0x7ffad1f6fb64,53940584,0,0x0,8
tick,0x7ffad1f6fb64,53956613,0,0x0,8
tick,0x7ffad1f6fb64,53972632,0,0x0,8
tick,0x7ffad1f6fb64,53988666,0,0x0,8
tick,0x7ffad1f6fb64,54003655,0,0x0,8
tick,0x7ffad1f6fb64,54019675,0,0x0,8
tick,0x7ffad1f6fb64,54034711,0,0x0,8
tick,0x7ffad1f6fb64,54050677,0,0x0,8
tick,0x7ffad1f6fb64,54065716,0,0x0,8
tick,0x7ffad1f6fb64,54081747,0,0x0,8
tick,0x7ffad1f6fb64,54096746,0,0x0,8
tick,0x7ffad1f6fb64,54112741,0,0x0,8
tick,0x7ffad1f6fb64,54127759,0,0x0,8
tick,0x7ffad1f6fb64,54142818,0,0x0,8
tick,0x7ffad1f6fb64,54158806,0,0x0,8
tick,0x7ffad1f6fb64,54173797,0,0x0,8
tick,0x7ffad1f6fb64,54188836,0,0x0,8
tick,0x7ffad1f6fb64,54203846,0,0x0,8
tick,0x7ffad1f6fb64,54219853,0,0x0,8
tick,0x7ffad1f6fb64,54235861,0,0x0,8
tick,0x7ffad1f6fb64,54251859,0,0x0,8
tick,0x7ffad1f6fb64,54266918,0,0x0,8
tick,0x7ffad1f6fb64,54281949,0,0x0,8
tick,0x7ffad1f6fb64,54297899,0,0x0,8
tick,0x7ffad1f6fb64,54313941,0,0x0,8
tick,0x7ffad1f6fb64,54328945,0,0x0,8
tick,0x7ffad1f6fb64,54343945,0,0x0,8
tick,0x7ffad1f6fb64,54360018,0,0x0,8
tick,0x7ffad1f6fb64,54375979,0,0x0,8
tick,0x7ffad1f6fb64,54391996,0,0x0,8
tick,0x7ffad1f6fb64,54407008,0,0x0,8
tick,0x7ffad1f6fb64,54423027,0,0x0,8
tick,0x7ffad1f6fb64,54439028,0,0x0,8
tick,0x7ffad1f6fb64,54455058,0,0x0,8
tick,0x7ffad1f6fb64,54470078,0,0x0,8
tick,0x7ffad1f6fb64,54486069,0,0x0,8
tick,0x7ffad1f6fb64,54502094,0,0x0,8
tick,0x7ffad1f6fb64,54518108,0,0x0,8
tick,0x7ffad1f6fb64,54533157,0,0x0,8
tick,0x7ffad1f6fb64,54548134,0,0x0,8
tick,0x7ffad1f6fb64,54564137,0,0x0,8
tick,0x7ffad1f6fb64,54580191,0,0x0,8
tick,0x7ffad1f6fb64,54595203,0,0x0,8
tick,0x7ffad1f6fb64,54610199,0,0x0,8
tick,0x7ffad1f6fb64,54626198,0,0x0,8
tick,0x7ffad1f6fb64,54642219,0,0x0,8
tick,0x7ffad1f6fb64,54658241,0,0x0,8
tick,0x7ffad1f6fb64,54674247,0,0x0,8
tick,0x7ffad1f6fb64,54689266,0,0x0,8
tick,0x7ffad1f6fb64,54704280,0,0x0,8
tick,0x7ffad1f6fb64,54719291,0,0x0,8
tick,0x7ffad1f6fb64,54734310,0,0x0,8
tick,0x7ffad1f6fb64,54750323,0,0x0,8
tick,0x7ffad1f6fb64,54766358,0,0x0,8
tick,0x7ffad1f6fb64,54781347,0,0x0,8
tick,0x7ffad1f6fb64,54796354,0,0x0,8
tick,0x7ffad1f6fb64,54812372,0,0x0,8
tick,0x7ffad1f6fb64,54827424,0,0x0,8
tick,0x7ffad1f6fb64,54843408,0,0x0,8
tick,0x7ffad1f6fb64,54859424,0,0x0,8
tick,0x7ffad1f6fb64,54874478,0,0x0,8
tick,0x7ffad1f6fb64,54890443,0,0x0,8
tick,0x7ffad1f6fb64,54906464,0,0x0,8
tick,0x7ffad1f6fb64,54922474,0,0x0,8
tick,0x7ffad1f6fb64,54937499,0,0x0,8
tick,0x7ffad1f6fb64,54953497,0,0x0,8
tick,0x7ffad1f6fb64,54969521,0,0x0,8
tick,0x7ffad1f6fb64,54985529,0,0x0,8
tick,0x7ffad1f6fb64,55001559,0,0x0,8
tick,0x7ffad1f6fb64,55017562,0,0x0,8
tick,0x7ffad1f6fb64,55032567,0,0x0,8
tick,0x7ffad1f6fb64,55047592,0,0x0,8
tick,0x7ffad1f6fb64,55063598,0,0x0,8
tick,0x7ffad1f6fb64,55079634,0,0x0,8
tick,0x7ffad1f6fb64,55094637,0,0x0,8
tick,0x7ffad1f6fb64,55110651,0,0x0,8
tick,0x7ffad1f6fb64,55125651,0,0x0,8
tick,0x7ffad1f6fb64,55140674,0,0x0,8
tick,0x7ffad1f6fb64,55156704,0,0x0,8
tick,0x7ffad1f6fb64,55172709,0,0x0,8
tick,0x7ffad1f6fb64,55188717,0,0x0,8
tick,0x7ffad1f6fb64,55204731,0,0x0,8
tick,0x7ffad1f6fb64,55220749,0,0x0,8
tick,0x7ffad1f6fb64,55235770,0,0x0,8
tick,0x7ffad1f6fb64,55250767,0,0x0,8
tick,0x7ffad1f6fb64,55266809,0,0x0,8
tick,0x7ffad1f6fb64,55281801,0,0x0,8
tick,0x7ffad1f6fb64,55297811,0,0x0,8
tick,0x7ffad1f6fb64,55312826,0,0x0,8
tick,0x7ffad1f6fb64,55328853,0,0x0,8
tick,0x7ffad1f6fb64,55343842,0,0x0,8
tick,0x7ffad1f6fb64,55359862,0,0x0,8
tick,0x7ffad1f6fb64,55374916,0,0x0,8
tick,0x7ffad1f6fb64,55390935,0,0x0,8
tick,0x7ffad1f6fb64,55405911,0,0x0,8
tick,0x7ffad1f6fb64,55421929,0,0x0,8
tick,0x7ffad1f6fb64,55436938,0,0x0,8
tick,0x7ffad1f6fb64,55452961,0,0x0,8
tick,0x7ffad1f6fb64,55469041,0,0x0,8
tick,0x7ffad1f6fb64,55485016,0,0x0,8
tick,0x7ffad1f6fb64,55501014,0,0x0,8
tick,0x7ffad1f6fb64,55517022,0,0x0,8
tick,0x7ffad1f6fb64,55533025,0,0x0,8
tick,0x7ffad1f6fb64,55548044,0,0x0,8
tick,0x7ffad1f6fb64,55564052,0,0x0,8
tick,0x7ffad1f6fb64,55579088,0,0x0,8
tick,0x7ffad1f6fb64,55594119,0,0x0,8
tick,0x7ffad1f6fb64,55610105,0,0x0,8
tick,0x7ffad1f6fb64,55625124,0,0x0,8
tick,0x7ffad1f6fb64,55640187,0,0x0,8
tick,0x7ffad1f6fb64,55655135,0,0x0,8
tick,0x7ffad1f6fb64,55671166,0,0x0,8
tick,0x7ffad1f6fb64,55686214,0,0x0,8
tick,0x7ffad1f6fb64,55702208,0,0x0,8
tick,0x7ffad1f6fb64,55718219,0,0x0,8
tick,0x7ffad1f6fb64,55733239,0,0x0,8
tick,0x7ffad1f6fb64,55749269,0,0x0,8
tick,0x7ffad1f6fb64,55764250,0,0x0,8
tick,0x7ffad1f6fb64,55780277,0,0x0,8
tick,0x7ffad1f6fb64,55796270,0,0x0,8
tick,0x7ffad1f6fb64,55811318,0,0x0,8
tick,0x7ffad1f6fb64,55827414,0,0x0,8
tick,0x7ffad1f6fb64,55843343,0,0x0,8
tick,0x7ffad1f6fb64,55859351,0,0x0,8
tick,0x7ffad1f6fb64,55874341,0,0x0,8
tick,0x7ffad1f6fb64,55890391,0,0x0,8
tick,0x7ffad1f6fb64,55906421,0,0x0,8
tick,0x7ffad1f6fb64,55921414,0,0x0,8
tick,0x7ffad1f6fb64,55936389,0,0x0,8
tick,0x7ffad1f6fb64,55952419,0,0x0,8
tick,0x7ffad1f6fb64,55967452,0,0x0,8
tick,0x7ffad1f6fb64,55982452,0,0x0,8
tick,0x7ffad1f6fb64,55997461,0,0x0,8
tick,0x7ffad1f6fb64,56012498,0,0x0,8
tick,0x7ffad1f6fb64,56027768,0,0x0,8
tick,0x7ffad1f6fb64,56043507,0,0x0,8
tick,0x7ffad1f6fb64,56059511,0,0x0,8
tick,0x7ffad1f6fb64,56074530,0,0x0,8
tick,0x7ffad1f6fb64,56090548,0,0x0,8
tick,0x7ffad1f6fb64,56106559,0,0x0,8
tick,0x7ffad1f6fb64,56121584,0,0x0,8
tick,0x7ffad1f6fb64,56137616,0,0x0,8
tick,0x7ffad1f6fb64,56153603,0,0x0,8
tick,0x7ffad1f6fb64,56168631,0,0x0,8
tick,0x7ffad1f6fb64,56184628,0,0x0,8
tick,0x7ffad1f6fb64,56199645,0,0x0,8
tick,0x7ffad1f6fb64,56215733,0,0x0,8
tick,0x7ffad1f6fb64,56230668,0,0x0,8
tick,0x7ffad1f6fb64,56245716,0,0x0,8
tick,0x7ffad1f6fb64,56261730,0,0x0,8
tick,0x7ffad1f6fb64,56277734,0,0x0,8
tick,0x7ffad1f6fb64,56293738,0,0x0,8
tick,0x7ffad1f6fb64,56309738,0,0x0,8
tick,0x7ffad1f6fb64,56324756,0,0x0,8
tick,0x7ffad1f6fb64,56339773,0,0x0,8
tick,0x7ffad1f6fb64,56354810,0,0x0,8
tick,0x7ffad1f6fb64,56369795,0,0x0,8
tick,0x7ffad1f6fb64,56385818,0,0x0,8
tick,0x7ffad1f6fb64,56401829,0,0x0,8
tick,0x7ffad1f6fb64,56417841,0,0x0,8
tick,0x7ffad1f6fb64,56432894,0,0x0,8
tick,0x7ffad1f6fb64,56448891,0,0x0,8
tick,0x7ffad1f6fb64,56463895,0,0x0,8
tick,0x7ffad1f6fb64,56479897,0,0x0,8
tick,0x7ffad1f6fb64,56495930,0,0x0,8
tick,0x7ffad1f6fb64,56511919,0,0x0,8
tick,0x7ffad1f6fb64,56527956,0,0x0,8
tick,0x7ffad1f6fb64,56543948,0,0x0,8
tick,0x7ffad1f6fb64,56558968,0,0x0,8
tick,0x7ffad1f6fb64,56575044,0,0x0,8
tick,0x7ffad1f6fb64,56590023,0,0x0,8
tick,0x7ffad1f6fb64,56606062,0,0x0,8
tick,0x7ffad1f6fb64,56621053,0,0x0,8
tick,0x7ffad1f6fb64,56636055,0,0x0,8
tick,0x7ffad1f6fb64,56652061,0,0x0,8
tick,0x7ffad1f6fb64,56667058,0,0x0,8
tick,0x7ffad1f6fb64,56682112,0,0x0,8
tick,0x7ffad1f6fb64,56698108,0,0x0,8
tick,0x7ffad1f6fb64,56714125,0,0x0,8
tick,0x7ffad1f6fb64,56730124,0,0x0,8
tick,0x7ffad1f6fb64,56746132,0,0x0,8
tick,0x7ffad1f6fb64,56762175,0,0x0,8
tick,0x7ffad1f6fb64,56777190,0,0x0,8
tick,0x7ffad1f6fb64,56793201,0,0x0,8
tick,0x7ffad1f6fb64,56809195,0,0x0,8
tick,0x7ffad1f6fb64,56825219,0,0x0,8
tick,0x7ffad1f6fb64,56840232,0,0x0,8
tick,0x7ffad1f6fb64,56856256,0,0x0,8
tick,0x7ffad1f6fb64,56872258,0,0x0,8
tick,0x7ffad1f6fb64,56887277,0,0x0,8
tick,0x7ffad1f6fb64,56903294,0,0x0,8
tick,0x7ffad1f6fb64,56919292,0,0x0,8
tick,0x7ffad1f6fb64,56935340,0,0x0,8
tick,0x7ffad1f6fb64,56950347,0,0x0,8
tick,0x7ffad1f6fb64,56966381,0,0x0,8
tick,0x7ffad1f6fb64,56982384,0,0x0,8
tick,0x7ffad1f6fb64,56997402,0,0x0,8
tick,0x7ffad1f6fb64,57013413,0,0x0,8
tick,0x7ffad1f6fb64,57029425,0,0x0,8
tick,0x7ffad1f6fb64,57045416,0,0x0,8
tick,0x7ffad1f6fb64,57060420,0,0x0,8
tick,0x7ffad1f6fb64,57075448,0,0x0,8
tick,0x7ffad1f6fb64,57091473,0,0x0,8
tick,0x7ffad1f6fb64,57106463,0,0x0,8
tick,0x7ffad1f6fb64,57122530,0,0x0,8
tick,0x7ffad1f6fb64,57137502,0,0x0,8
tick,0x7ffad1f6fb64,57153511,0,0x0,8
tick,0x7ffad1f6fb64,57169510,0,0x0,8
tick,0x7ffad1f6fb64,57185587,0,0x0,8
tick,0x7ffad1f6fb64,57201592,0,0x0,8
tick,0x7ffad1f6fb64,57216579,0,0x0,8
tick,0x7ffad1f6fb64,57232591,0,0x0,8
tick,0x7ffad1f6fb64,57248584,0,0x0,8
tick,0x7ffad1f6fb64,57263629,0,0x0,8
tick,0x7ffad1f6fb64,57278662,0,0x0,8
tick,0x7ffad1f6fb64,57293627,0,0x0,8
tick,0x7ffad1f6fb64,57309665,0,0x0,8
tick,0x7ffad1f6fb64,57324678,0,0x0,8
tick,0x7ffad1f6fb64,57339691,0,0x0,8
tick,0x7ffad1f6fb64,57355695,0,0x0,8
tick,0x7ffad1f6fb64,57370718,0,0x0,8
tick,0x7ffad1f6fb64,57386773,0,0x0,8
tick,0x7ffad1f6fb64,57402782,0,0x0,8
tick,0x7ffad1f6fb64,57417752,0,0x0,8
tick,0x7ffad1f6fb64,57432814,0,0x0,8
tick,0x7ffad1f6fb64,57448784,0,0x0,8
tick,0x7ffad1f6fb64,57464792,0,0x0,8
tick,0x7ffad1f6fb64,57479803,0,0x0,8
tick,0x7ffad1f6fb64,57494834,0,0x0,8
tick,0x7ffad1f6fb64,57510829,0,0x0,8
tick,0x7ffad1f6fb64,57526832,0,0x0,8
tick,0x7ffad1f6fb64,57542850,0,0x0,8
tick,0x7ffad1f6fb64,57557866,0,0x0,8
tick,0x7ffad1f6fb64,57573919,0,0x0,8
tick,0x7ffad1f6fb64,57589918,0,0x0,8
tick,0x7ffad1f6fb64,57604920,0,0x0,8
tick,0x7ffad1f6fb64,57620946,0,0x0,8
tick,0x7ffad1f6fb64,57635947,0,0x0,8
tick,0x7ffad1f6fb64,57650962,0,0x0,8
tick,0x7ffad1f6fb64,57665999,0,0x0,8
tick,0x7ffad1f6fb64,57682004,0,0x0,8
tick,0x7ffad1f6fb64,57697041,0,0x0,8
tick,0x7ffad1f6fb64,57712004,0,0x0,8
tick,0x7ffad1f6fb64,57727031,0,0x0,8
tick,0x7ffad1f6fb64,57743041,0,0x0,8
tick,0x7ffad1f6fb64,57758055,0,0x0,8
tick,0x7ffad1f6fb64,57774064,0,0x0,8
tick,0x7ffad1f6fb64,57789099,0,0x0,8
tick,0x7ffad1f6fb64,57804130,0,0x0,8
tick,0x7ffad1f6fb64,57820153,0,0x0,8
tick,0x7ffad1f6fb64,57836150,0,0x0,8
tick,0x7ffad1f6fb64,57852165,0,0x0,8
tick,0x7ffad1f6fb64,57868182,0,0x0,8
tick,0x7ffad1f6fb64,57883204,0,0x0,8
tick,0x7ffad1f6fb64,57898198,0,0x0,8
tick,0x7ffad1f6fb64,57914225,0,0x0,8
tick,0x7ffad1f6fb64,57930206,0,0x0,8
tick,0x7ffad1f6fb64,57946358,0,0x0,8
tick,0x7ffad1f6fb64,57961247,0,0x0,8
tick,0x7ffad1f6fb64,57976321,0,0x0,8
tick,0x7ffad1f6fb64,57991304,0,0x0,8
tick,0x7ffad1f6fb64,58007285,0,0x0,8
tick,0x7ffad1f6fb64,58022313,0,0x0,8
tick,0x7ffad1f6fb64,58038309,0,0x0,8
tick,0x7ffad1f6fb64,58054316,0,0x0,8
tick,0x7ffad1f6fb64,58070353,0,0x0,8
tick,0x7ffad1f6fb64,58086364,0,0x0,8
tick,0x7ffad1f6fb64,58101385,0,0x0,8
tick,0x7ffad1f6fb64,58117390,0,0x0,8
tick,0x7ffad1f6fb64,58133401,0,0x0,8
tick,0x7ffad1f6fb64,58149427,0,0x0,8
tick,0x7ffad1f6fb64,58164448,0,0x0,8
tick,0x7ffad1f6fb64,58180480,0,0x0,8
tick,0x7ffad1f6fb64,58196478,0,0x0,8
tick,0x7ffad1f6fb64,58212503,0,0x0,8
tick,0x7ffad1f6fb64,58227497,0,0x0,8
tick,0x7ffad1f6fb64,58243511,0,0x0,8
tick,0x7ffad1f6fb64,58259561,0,0x0,8
tick,0x7ffad1f6fb64,58274591,0,0x0,8
tick,0x7ffad1f6fb64,58289558,0,0x0,8
tick,0x7ffad1f6fb64,58304617,0,0x0,8
tick,0x7ffad1f6fb64,58320609,0,0x0,8
tick,0x7ffad1f6fb64,58336609,0,0x0,8
tick,0x7ffad1f6fb64,58351611,0,0x0,8
tick,0x7ffad1f6fb64,58366650,0,0x0,8
tick,0x7ffad1f6fb64,58381634,0,0x0,8
tick,0x7ffad1f6fb64,58397671,0,0x0,8
tick,0x7ffad1f6fb64,58412655,0,0x0,8
tick,0x7ffad1f6fb64,58428687,0,0x0,8
tick,0x7ffad1f6fb64,58444680,0,0x0,8
tick,0x7ffad1f6fb64,58460718,0,0x0,8
tick,0x7ffad1f6fb64,58475718,0,0x0,8
tick,0x7ffad1f6fb64,58491746,0,0x0,8
tick,0x7ffad1f6fb64,58506744,0,0x0,8
tick,0x7ffad1f6fb64,58522822,0,0x0,8
tick,0x7ffad1f6fb64,58537775,0,0x0,8
tick,0x7ffad1f6fb64,58553764,0,0x0,8
tick,0x7ffad1f6fb64,58569792,0,0x0,8
tick,0x7ffad1f6fb64,58584843,0,0x0,8
tick,0x7ffad1f6fb64,58600831,0,0x0,8
tick,0x7ffad1f6fb64,58616848,0,0x0,8
tick,0x7ffad1f6fb64,58631849,0,0x0,8
tick,0x7ffad1f6fb64,58646882,0,0x0,8
tick,0x7ffad1f6fb64,58662887,0,0x0,8
tick,0x7ffad1f6fb64,58677905,0,0x0,8
tick,0x7ffad1f6fb64,58693924,0,0x0,8
tick,0x7ffad1f6fb64,58708936,0,0x0,8
tick,0x7ffad1f6fb64,58724942,0,0x0,8
tick,0x7ffad1f6fb64,58740972,0,0x0,8
tick,0x7ffad1f6fb64,58757036,0,0x0,8
tick,0x7ffad1f6fb64,58772977,0,0x0,8
tick,0x7ffad1f6fb64,58789024,0,0x0,8
tick,0x7ffad1f6fb64,58804012,0,0x0,8
tick,0x7ffad1f6fb64,58819083,0,0x0,8
tick,0x7ffad1f6fb64,58835068,0,0x0,8
tick,0x7ffad1f6fb64,58850067,0,0x0,8
tick,0x7ffad1f6fb64,58865145,0,0x0,8
tick,0x7ffad1f6fb64,58880095,0,0x0,8
tick,0x7ffad1f6fb64,58896176,0,0x0,8
tick,0x7ffad1f6fb64,58912141,0,0x0,8
tick,0x7ffad1f6fb64,58928149,0,0x0,8
tick,0x7ffad1f6fb64,58944135,0,0x0,8
tick,0x7ffad1f6fb64,58960140,0,0x0,8
tick,0x7ffad1f6fb64,58976197,0,0x0,8
tick,0x7ffad1f6fb64,58992167,0,0x0,8
tick,0x7ffad1f6fb64,59008233,0,0x0,8
tick,0x7ffad1f6fb64,59023228,0,0x0,8
tick,0x7ffad1f6fb64,59038223,0,0x0,8
tick,0x7ffad1f6fb64,59053226,0,0x0,8
tick,0x7ffad1f6fb64,59068256,0,0x0,8
tick,0x7ffad1f6fb64,59084257,0,0x0,8
tick,0x7ffad1f6fb64,59100279,0,0x0,8
tick,0x7ffad1f6fb64,59116300,0,0x0,8
tick,0x7ffad1f6fb64,59131312,0,0x0,8
tick,0x7ffad1f6fb64,59146324,0,0x0,8
tick,0x7ffad1f6fb64,59162335,0,0x0,8
tick,0x7ffad1f6fb64,59177365,0,0x0,8
tick,0x7ffad1f6fb64,59193389,0,0x0,8
tick,0x7ffad1f6fb64,59209384,0,0x0,8
tick,0x7ffad1f6fb64,59224401,0,0x0,8
tick,0x7ffad1f6fb64,59239418,0,0x0,8
tick,0x7ffad1f6fb64,59255448,0,0x0,8
tick,0x7ffad1f6fb64,59271474,0,0x0,8
tick,0x7ffad1f6fb64,59286464,0,0x0,8
tick,0x7ffad1f6fb64,59302495,0,0x0,8
tick,0x7ffad1f6fb64,59317496,0,0x0,8
tick,0x7ffad1f6fb64,59333564,0,0x0,8
tick,0x7ffad1f6fb64,59349537,0,0x0,8
tick,0x7ffad1f6fb64,59365534,0,0x0,8
tick,0x7ffad1f6fb64,59380544,0,0x0,8
tick,0x7ffad1f6fb64,59395558,0,0x0,8
tick,0x7ffad1f6fb64,59411563,0,0x0,8
tick,0x7ffad1f6fb64,59427597,0,0x0,8
tick,0x7ffad1f6fb64,59442617,0,0x0,8
tick,0x7ffad1f6fb64,59458612,0,0x0,8
tick,0x7ffad1f6fb64,59474629,0,0x0,8
tick,0x7ffad1f6fb64,59490662,0,0x0,8
tick,0x7ffad1f6fb64,59506656,0,0x0,8
tick,0x7ffad1f6fb64,59522720,0,0x0,8
tick,0x7ffad1f6fb64,59537680,0,0x0,8
tick,0x7ffad1f6fb64,59552683,0,0x0,8
tick,0x7ffad1f6fb64,59567708,0,0x0,8
tick,0x7ffad1f6fb64,59583709,0,0x0,8
tick,0x7ffad1f6fb64,59599752,0,0x0,8
tick,0x7ffad1f6fb64,59615762,0,0x0,8
tick,0x7ffad1f6fb64,59631788,0,0x0,8
tick,0x7ffad1f6fb64,59647780,0,0x0,8
tick,0x7ffad1f6fb64,59662792,0,0x0,8
tick,0x7ffad1f6fb64,59678828,0,0x0,8
tick,0x7ffad1f6fb64,59694837,0,0x0,8
tick,0x7ffad1f6fb64,59710871,0,0x0,8
tick,0x7ffad1f6fb64,59726849,0,0x0,8
tick,0x7ffad1f6fb64,59741870,0,0x0,8
tick,0x7ffad1f6fb64,59757896,0,0x0,8
tick,0x7ffad1f6fb64,59772904,0,0x0,8
tick,0x7ffad1f6fb64,59788928,0,0x0,8
tick,0x7ffad1f6fb64,59804936,0,0x0,8
tick,0x7ffad1f6fb64,59820947,0,0x0,8
tick,0x7ffad1f6fb64,59835982,0,0x0,8
tick,0x7ffad1f6fb64,59851965,0,0x0,8
tick,0x7ffad1f6fb64,59867978,0,0x0,8
tick,0x7ffad1f6fb64,59884050,0,0x0,8
tick,0x7ffad1f6fb64,59899025,0,0x0,8
tick,0x7ffad1f6fb64,59915019,0,0x0,8
tick,0x7ffad1f6fb64,59930041,0,0x0,8
tick,0x7ffad1f6fb64,59945046,0,0x0,8
tick,0x7ffad1f6fb64,59961076,0,0x0,8
tick,0x7ffad1f6fb64,59976126,0,0x0,8
tick,0x7ffad1f6fb64,59992133,0,0x0,8
tick,0x7ffad1f6fb64,60008132,0,0x0,8
tick,0x7ffad1f6fb64,60024268,0,0x0,8
tick,0x7ffad1f6fb64,60039172,0,0x0,8
tick,0x7ffad1f6fb64,60054171,0,0x0,8
tick,0x7ffad1f6fb64,60069204,0,0x0,8
tick,0x7ffad1f6fb64,60085206,0,0x0,8
tick,0x7ffad1f6fb64,60101199,0,0x0,8
tick,0x7ffad1f6fb64,60117224,0,0x0,8
tick,0x7ffad1f6fb64,60132230,0,0x0,8
tick,0x7ffad1f6fb64,60147253,0,0x0,8
tick,0x7ffad1f6fb64,60163253,0,0x0,8
tick,0x7ffad1f6fb64,60178278,0,0x0,8
tick,0x7ffad1f6fb64,60194284,0,0x0,8
tick,0x7ffad1f6fb64,60210297,0,0x0,8
tick,0x7ffad1f6fb64,60225303,0,0x0,8
tick,0x7ffad1f6fb64,60240321,0,0x0,8
tick,0x7ffad1f6fb64,60255331,0,0x0,8
tick,0x7ffad1f6fb64,60270360,0,0x0,8
tick,0x7ffad1f6fb64,60286369,0,0x0,8
tick,0x7ffad1f6fb64,60301373,0,0x0,8
tick,0x7ffad1f6fb64,60316397,0,0x0,8
tick,0x7ffad1f6fb64,60331414,0,0x0,8
tick,0x7ffad1f6fb64,60347460,0,0x0,8
tick,0x7ffad1f6fb64,60363444,0,0x0,8
tick,0x7ffad1f6fb64,60378445,0,0x0,8
tick,0x7ffad1f6fb64,60394477,0,0x0,8
tick,0x7ffad1f6fb64,60410487,0,0x0,8
tick,0x7ffad1f6fb64,60425484,0,0x0,8
tick,0x7ffad1f6fb64,60440521,0,0x0,8
tick,0x7ffad1f6fb64,60455805,0,0x0,8
tick,0x7ffad1f6fb64,60471547,0,0x0,8
tick,0x7ffad1f6fb64,60487563,0,0x0,8
tick,0x7ffad1f6fb64,60503582,0,0x0,8
tick,0x7ffad1f6fb64,60519580,0,0x0,8
tick,0x7ffad1f6fb64,60534582,0,0x0,8
tick,0x7ffad1f6fb64,60550621,0,0x0,8
tick,0x7ffad1f6fb64,60565642,0,0x0,8
tick,0x7ffad1f6fb64,60581631,0,0x0,8
tick,0x7ffad1f6fb64,60597657,0,0x0,8
tick,0x7ffad1f6fb64,60613692,0,0x0,8
tick,0x7ffad1f6fb64,60629816,0,0x0,8
tick,0x7ffad1f6fb64,60645717,0,0x0,8
tick,0x7ffad1f6fb64,60660728,0,0x0,8
tick,0x7ffad1f6fb64,60675729,0,0x0,8
tick,0x7ffad1f6fb64,60691745,0,0x0,8
tick,0x7ffad1f6fb64,60707781,0,0x0,8
tick,0x7ffad1f6fb64,60722797,0,0x0,8
tick,0x7ffad1f6fb64,60738787,0,0x0,8
tick,0x7ffad1f6fb64,60753821,0,0x0,8
tick,0x7ffad1f6fb64,60769816,0,0x0,8
tick,0x7ffad1f6fb64,60785814,0,0x0,8
tick,0x7ffad1f6fb64,60800820,0,0x0,8
tick,0x7ffad1f6fb64,60816849,0,0x0,8
tick,0x7ffad1f6fb64,60831887,0,0x0,8
tick,0x7ffad1f6fb64,60846862,0,0x0,8
tick,0x7ffad1f6fb64,60862941,0,0x0,8
tick,0x7ffad1f6fb64,60878915,0,0x0,8
tick,0x7ffad1f6fb64,60893916,0,0x0,8
tick,0x7ffad1f6fb64,60908968,0,0x0,8
tick,0x7ffad1f6fb64,60924952,0,0x0,8
tick,0x7ffad1f6fb64,60941036,0,0x0,8
tick,0x7ffad1f6fb64,60955971,0,0x0,8
tick,0x7ffad1f6fb64,60971989,0,0x0,8
tick,0x7ffad1f6fb64,60987999,0,0x0,8
tick,0x7ffad1f6fb64,61003014,0,0x0,8
tick,0x7ffad1f6fb64,61019061,0,0x0,8
tick,0x7ffad1f6fb64,61035042,0,0x0,8
tick,0x7ffad1f6fb64,61050055,0,0x0,8
tick,0x7ffad1f6fb64,61066103,0,0x0,8
tick,0x7ffad1f6fb64,61082098,0,0x0,8
tick,0x7ffad1f6fb64,61098113,0,0x0,8
tick,0x7ffad1f6fb64,61113112,0,0x0,8
tick,0x7ffad1f6fb64,61129135,0,0x0,8
tick,0x7ffad1f6fb64,61145148,0,0x0,8
tick,0x7ffad1f6fb64,61161191,0,0x0,8
tick,0x7ffad1f6fb64,61176183,0,0x0,8
tick,0x7ffad1f6fb64,61191193,0,0x0,8
tick,0x7ffad1f6fb64,61206206,0,0x0,8
tick,0x7ffad1f6fb64,61221228,0,0x0,8
tick,0x7ffad1f6fb64,61237235,0,0x0,8
tick,0x7ffad1f6fb64,61253247,0,0x0,8
tick,0x7ffad1f6fb64,61269372,0,0x0,8
tick,0x7ffad1f6fb64,61285293,0,0x0,8
tick,0x7ffad1f6fb64,61301289,0,0x0,8
tick,0x7ffad1f6fb64,61316345,0,0x0,8
tick,0x7ffad1f6fb64,61331323,0,0x0,8
tick,0x7ffad1f6fb64,61347322,0,0x0,8
tick,0x7ffad1f6fb64,61363367,0,0x0,8
tick,0x7ffad1f6fb64,61378422,0,0x0,8
tick,0x7ffad1f6fb64,61394375,0,0x0,8
tick,0x7ffad1f6fb64,61409396,0,0x0,8
tick,0x7ffad1f6fb64,61425395,0,0x0,8
tick,0x7ffad1f6fb64,61440411,0,0x0,8
tick,0x7ffad1f6fb64,61455428,0,0x0,8
tick,0x7ffad1f6fb64,61471445,0,0x0,8
tick,0x7ffad1f6fb64,61487474,0,0x0,8
tick,0x7ffad1f6fb64,61503472,0,0x0,8
tick,0x7ffad1f6fb64,61519484,0,0x0,8
tick,0x7ffad1f6fb64,61535581,0,0x0,8
tick,0x7ffad1f6fb64,61551501,0,0x0,8
tick,0x7ffad1f6fb64,61567532,0,0x0,8
tick,0x7ffad1f6fb64,61583550,0,0x0,8
tick,0x7ffad1f6fb64,61598555,0,0x0,8
tick,0x7ffad1f6fb64,61613559,0,0x0,8
tick,0x7ffad1f6fb64,61628612,0,0x0,8
tick,0x7ffad1f6fb64,61644613,0,0x0,8
tick,0x7ffad1f6fb64,61659620,0,0x0,8
tick,0x7ffad1f6fb64,61674635,0,0x0,8
tick,0x7ffad1f6fb64,61690661,0,0x0,8
tick,0x7ffad1f6fb64,61706693,0,0x0,8
tick,0x7ffad1f6fb64,61722965,0,0x0,8
tick,0x7ffad1f6fb64,61737728,0,0x0,8
tick,0x7ffad1f6fb64,61753695,0,0x0,8
tick,0x7ffad1f6fb64,61768714,0,0x0,8
tick,0x7ffad1f6fb64,61784727,0,0x0,8
tick,0x7ffad1f6fb64,61799734,0,0x0,8
tick,0x7ffad1f6fb64,61814765,0,0x0,8
tick,0x7ffad1f6fb64,61830771,0,0x0,8
tick,0x7ffad1f6fb64,61846795,0,0x0,8
tick,0x7ffad1f6fb64,61861792,0,0x0,8
tick,0x7ffad1f6fb64,61877834,0,0x0,8
tick,0x7ffad1f6fb64,61893855,0,0x0,8
tick,0x7ffad1f6fb64,61909871,0,0x0,8
tick,0x7ffad1f6fb64,61925874,0,0x0,8
tick,0x7ffad1f6fb64,61940883,0,0x0,8
tick,0x7ffad1f6fb64,61956901,0,0x0,8
tick,0x7ffad1f6fb64,61972899,0,0x0,8
tick,0x7ffad1f6fb64,61988918,0,0x0,8
tick,0x7ffad1f6fb64,62004931,0,0x0,8
tick,0x7ffad1f6fb64,62020943,0,0x0,8
tick,0x7ffad1f6fb64,62036959,0,0x0,8
tick,0x7ffad1f6fb64,62052956,0,0x0,8
tick,0x7ffad1f6fb64,62068998,0,0x0,8
tick,0x7ffad1f6fb64,62085008,0,0x0,8
tick,0x7ffad1f6fb64,62101009,0,0x0,8
tick,0x7ffad1f6fb64,62116069,0,0x0,8
tick,0x7ffad1f6fb64,62132072,0,0x0,8
tick,0x7ffad1f6fb64,62148092,0,0x0,8
tick,0x7ffad1f6fb64,62164151,0,0x0,8
tick,0x7ffad1f6fb64,62180124,0,0x0,8
tick,0x7ffad1f6fb64,62195152,0,0x0,8
tick,0x7ffad1f6fb64,62211130,0,0x0,8
tick,0x7ffad1f6fb64,62227139,0,0x0,8
tick,0x7ffad1f6fb64,62243146,0,0x0,8
tick,0x7ffad1f6fb64,62258226,0,0x0,8
tick,0x7ffad1f6fb64,62274183,0,0x0,8
tick,0x7ffad1f6fb64,62290187,0,0x0,8
tick,0x7ffad1f6fb64,62306183,0,0x0,8
tick,0x7ffad1f6fb64,62321210,0,0x0,8
tick,0x7ffad1f6fb64,62336438,0,0x0,8
tick,0x7ffad1f6fb64,62352274,0,0x0,8
tick,0x7ffad1f6fb64,62368267,0,0x0,8
tick,0x7ffad1f6fb64,62383273,0,0x0,8
tick,0x7ffad1f6fb64,62398301,0,0x0,8
tick,0x7ffad1f6fb64,62414315,0,0x0,8
tick,0x7ffad1f6fb64,62430332,0,0x0,8
tick,0x7ffad1f6fb64,62446346,0,0x0,8
tick,0x7ffad1f6fb64,62461376,0,0x0,8
tick,0x7ffad1f6fb64,62476356,0,0x0,8
tick,0x7ffad1f6fb64,62491366,0,0x0,8
tick,0x7ffad1f6fb64,62506399,0,0x0,8
tick,0x7ffad1f6fb64,62521406,0,0x0,8
tick,0x7ffad1f6fb64,62537415,0,0x0,8
tick,0x7ffad1f6fb64,62552421,0,0x0,8
tick,0x7ffad1f6fb64,62568441,0,0x0,8
tick,0x7ffad1f6fb64,62584459,0,0x0,8
tick,0x7ffad1f6fb64,62599467,0,0x0,8
tick,0x7ffad1f6fb64,62615513,0,0x0,8
tick,0x7ffad1f6fb64,62631550,0,0x0,8
tick,0x7ffad1f6fb64,62646516,0,0x0,8
tick,0x7ffad1f6fb64,62662555,0,0x0,8
tick,0x7ffad1f6fb64,62677537,0,0x0,8
tick,0x7ffad1f6fb64,62693575,0,0x0,8
tick,0x7ffad1f6fb64,62708570,0,0x0,8
tick,0x7ffad1f6fb64,62724580,0,0x0,8
tick,0x7ffad1f6fb64,62739591,0,0x0,8
tick,0x7ffad1f6fb64,62755609,0,0x0,8
tick,0x7ffad1f6fb64,62771651,0,0x0,8
tick,0x7ffad1f6fb64,62786630,0,0x0,8
tick,0x7ffad1f6fb64,62802658,0,0x0,8
tick,0x7ffad1f6fb64,62817665,0,0x0,8
tick,0x7ffad1f6fb64,62833725,0,0x0,8
tick,0x7ffad1f6fb64,62848700,0,0x0,8
tick,0x7ffad1f6fb64,62864733,0,0x0,8
tick,0x7ffad1f6fb64,62880726,0,0x0,8
tick,0x7ffad1f6fb64,62895762,0,0x0,8
tick,0x7ffad1f6fb64,62911785,0,0x0,8
tick,0x7ffad1f6fb64,62926781,0,0x0,8
tick,0x7ffad1f6fb64,62942779,0,0x0,8
tick,0x7ffad1f6fb64,62958804,0,0x0,8
tick,0x7ffad1f6fb64,62974840,0,0x0,8
tick,0x7ffad1f6fb64,62990839,0,0x0,8
tick,0x7ffad1f6fb64,63006834,0,0x0,8
tick,0x7ffad1f6fb64,63022865,0,0x0,8
tick,0x7ffad1f6fb64,63037870,0,0x0,8
tick,0x7ffad1f6fb64,63053880,0,0x0,8
tick,0x7ffad1f6fb64,63068892,0,0x0,8
tick,0x7ffad1f6fb64,63083911,0,0x0,8
tick,0x7ffad1f6fb64,63098919,0,0x0,8
tick,0x7ffad1f6fb64,63114938,0,0x0,8
tick,0x7ffad1f6fb64,63129958,0,0x0,8
tick,0x7ffad1f6fb64,63145967,0,0x0,8
tick,0x7ffad1f6fb64,63160979,0,0x0,8
tick,0x7ffad1f6fb64,63175993,0,0x0,8
tick,0x7ffad1f6fb64,63190997,0,0x0,8
tick,0x7ffad1f6fb64,63206023,0,0x0,8
tick,0x7ffad1f6fb64,63221039,0,0x0,8
tick,0x7ffad1f6fb64,63237055,0,0x0,8
tick,0x7ffad1f6fb64,63253052,0,0x0,8
tick,0x7ffad1f6fb64,63269095,0,0x0,8
tick,0x7ffad1f6fb64,63285094,0,0x0,8
tick,0x7ffad1f6fb64,63300107,0,0x0,8
tick,0x7ffad1f6fb64,63316126,0,0x0,8
tick,0x7ffad1f6fb64,63331142,0,0x0,8
tick,0x7ffad1f6fb64,63347158,0,0x0,8
tick,0x7ffad1f6fb64,63363200,0,0x0,8
tick,0x7ffad1f6fb64,63378190,0,0x0,8
tick,0x7ffad1f6fb64,63393189,0,0x0,8
tick,0x7ffad1f6fb64,63408205,0,0x0,8
tick,0x7ffad1f6fb64,63423257,0,0x0,8
tick,0x7ffad1f6fb64,63438233,0,0x0,8
tick,0x7ffad1f6fb64,63454265,0,0x0,8
tick,0x7ffad1f6fb64,63470258,0,0x0,8
tick,0x7ffad1f6fb64,63486286,0,0x0,8
tick,0x7ffad1f6fb64,63502300,0,0x0,8
tick,0x7ffad1f6fb64,63518315,0,0x0,8
tick,0x7ffad1f6fb64,63534319,0,0x0,8
tick,0x7ffad1f6fb64,63549325,0,0x0,8
tick,0x7ffad1f6fb64,63565369,0,0x0,8
tick,0x7ffad1f6fb64,63580358,0,0x0,8
tick,0x7ffad1f6fb64,63596380,0,0x0,8
tick,0x7ffad1f6fb64,63611379,0,0x0,8
tick,0x7ffad1f6fb64,63626398,0,0x0,8
tick,0x7ffad1f6fb64,63642455,0,0x0,8
tick,0x7ffad1f6fb64,63658448,0,0x0,8
tick,0x7ffad1f6fb64,63674465,0,0x0,8
tick,0x7ffad1f6fb64,63689470,0,0x0,8
tick,0x7ffad1f6fb64,63705484,0,0x0,8
tick,0x7ffad1f6fb64,63720496,0,0x0,8
tick,0x7ffad1f6fb64,63736488,0,0x0,8
tick,0x7ffad1f6fb64,63751515,0,0x0,8
tick,0x7ffad1f6fb64,63767538,0,0x0,8
tick,0x7ffad1f6fb64,63783561,0,0x0,8
tick,0x7ffad1f6fb64,63798560,0,0x0,8
tick,0x7ffad1f6fb64,63813578,0,0x0,8
tick,0x7ffad1f6fb64,63829586,0,0x0,8
tick,0x7ffad1f6fb64,63845597,0,0x0,8
tick,0x7ffad1f6fb64,63861599,0,0x0,8
tick,0x7ffad1f6fb64,63877679,0,0x0,8
tick,0x7ffad1f6fb64,63892692,0,0x0,8
tick,0x7ffad1f6fb64,63907669,0,0x0,8
tick,0x7ffad1f6fb64,63922679,0,0x0,8
tick,0x7ffad1f6fb64,63937721,0,0x0,8
tick,0x7ffad1f6fb64,63952691,0,0x0,8
tick,0x7ffad1f6fb64,63968699,0,0x0,8
tick,0x7ffad1f6fb64,63984731,0,0x0,8
tick,0x7ffad1f6fb64,63999784,0,0x0,8
tick,0x7ffad1f6fb64,64015772,0,0x0,8
tick,0x7ffad1f6fb64,64031780,0,0x0,8
tick,0x7ffad1f6fb64,64047993,0,0x0,8
tick,0x7ffad1f6fb64,64062816,0,0x0,8
tick,0x7ffad1f6fb64,64078841,0,0x0,8
tick,0x7ffad1f6fb64,64094837,0,0x0,8
tick,0x7ffad1f6fb64,64109848,0,0x0,8
tick,0x7ffad1f6fb64,64125856,0,0x0,8
tick,0x7ffad1f6fb64,64141871,0,0x0,8
tick,0x7ffad1f6fb64,64157917,0,0x0,8
tick,0x7ffad1f6fb64,64172916,0,0x0,8
tick,0x7ffad1f6fb64,64188917,0,0x0,8
tick,0x7ffad1f6fb64,64204950,0,0x0,8
tick,0x7ffad1f6fb64,64219952,0,0x0,8
tick,0x7ffad1f6fb64,64235957,0,0x0,8
tick,0x7ffad1f6fb64,64250992,0,0x0,8
tick,0x7ffad1f6fb64,64266991,0,0x0,8
tick,0x7ffad1f6fb64,64283003,0,0x0,8
tick,0x7ffad1f6fb64,64298056,0,0x0,8
tick,0x7ffad1f6fb64,64313059,0,0x0,8
tick,0x7ffad1f6fb64,64328057,0,0x0,8
tick,0x7ffad1f6fb64,64344051,0,0x0,8
tick,0x7ffad1f6fb64,64359069,0,0x0,8
tick,0x7ffad1f6fb64,64375103,0,0x0,8
tick,0x7ffad1f6fb64,64391116,0,0x0,8
tick,0x7ffad1f6fb64,64406160,0,0x0,8
tick,0x7ffad1f6fb64,64421131,0,0x0,8
tick,0x7ffad1f6fb64,64437178,0,0x0,8
tick,0x7ffad1f6fb64,64453165,0,0x0,8
tick,0x7ffad1f6fb64,64469156,0,0x0,8
tick,0x7ffad1f6fb64,64485192,0,0x0,8
tick,0x7ffad1f6fb64,64501207,0,0x0,8
tick,0x7ffad1f6fb64,64516232,0,0x0,8
tick,0x7ffad1f6fb64,64531226,0,0x0,8
tick,0x7ffad1f6fb64,64547243,0,0x0,8
tick,0x7ffad1f6fb64,64563247,0,0x0,8
tick,0x7ffad1f6fb64,64578280,0,0x0,8
tick,0x7ffad1f6fb64,64594295,0,0x0,8
tick,0x7ffad1f6fb64,64610311,0,0x0,8
tick,0x7ffad1f6fb64,64626328,0,0x0,8
tick,0x7ffad1f6fb64,64642332,0,0x0,8
tick,0x7ffad1f6fb64,64657367,0,0x0,8
tick,0x7ffad1f6fb64,64672373,0,0x0,8
tick,0x7ffad1f6fb64,64687396,0,0x0,8
tick,0x7ffad1f6fb64,64703382,0,0x0,8
tick,0x7ffad1f6fb64,64719381,0,0x0,8
tick,0x7ffad1f6fb64,64735400,0,0x0,8
tick,0x7ffad1f6fb64,64751406,0,0x0,8
tick,0x7ffad1f6fb64,64766450,0,0x0,8
tick,0x7ffad1f6fb64,64781441,0,0x0,8
tick,0x7ffad1f6fb64,64796463,0,0x0,8
tick,0x7ffad1f6fb64,64812504,0,0x0,8
tick,0x7ffad1f6fb64,64827496,0,0x0,8
tick,0x7ffad1f6fb64,64843496,0,0x0,8
tick,0x7ffad1f6fb64,64858534,0,0x0,8
tick,0x7ffad1f6fb64,64874551,0,0x0,8
tick,0x7ffad1f6fb64,64890556,0,0x0,8
tick,0x7ffad1f6fb64,64906564,0,0x0,8
tick,0x7ffad1f6fb64,64922583,0,0x0,8
tick,0x7ffad1f6fb64,64937594,0,0x0,8
tick,0x7ffad1f6fb64,64952602,0,0x0,8
tick,0x7ffad1f6fb64,64968652,0,0x0,8
tick,0x7ffad1f6fb64,64983633,0,0x0,8
tick,0x7ffad1f6fb64,64998657,0,0x0,8
tick,0x7ffad1f6fb64,65013686,0,0x0,8
tick,0x7ffad1f6fb64,65029666,0,0x0,8
tick,0x7ffad1f6fb64,65045680,0,0x0,8
tick,0x7ffad1f6fb64,65060732,0,0x0,8
tick,0x7ffad1f6fb64,65075706,0,0x0,8
tick,0x7ffad1f6fb64,65091758,0,0x0,8
tick,0x7ffad1f6fb64,65107869,0,0x0,8
tick,0x7ffad1f6fb64,65122764,0,0x0,8
tick,0x7ffad1f6fb64,65138774,0,0x0,8
tick,0x7ffad1f6fb64,65154787,0,0x0,8
tick,0x7ffad1f6fb64,65170803,0,0x0,8
tick,0x7ffad1f6fb64,65186831,0,0x0,8
tick,0x7ffad1f6fb64,65202856,0,0x0,8
tick,0x7ffad1f6fb64,65217845,0,0x0,8
tick,0x7ffad1f6fb64,65232857,0,0x0,8
tick,0x7ffad1f6fb64,65247873,0,0x0,8
tick,0x7ffad1f6fb64,65263886,0,0x0,8
tick,0x7ffad1f6fb64,65279894,0,0x0,8
tick,0x7ffad1f6fb64,65295962,0,0x0,8
tick,0x7ffad1f6fb64,65311032,0,0x0,8
tick,0x7ffad1f6fb64,65326971,0,0x0,8
tick,0x7ffad1f6fb64,65341997,0,0x0,8
tick,0x7ffad1f6fb64,65357989,0,0x0,8
tick,0x7ffad1f6fb64,65373091,0,0x0,8
tick,0x7ffad1f6fb64,65388992,0,0x0,8
tick,0x7ffad1f6fb64,65405012,0,0x0,8
tick,0x7ffad1f6fb64,65420045,0,0x0,8
tick,0x7ffad1f6fb64,65435051,0,0x0,8
tick,0x7ffad1f6fb64,65450046,0,0x0,8
tick,0x7ffad1f6fb64,65466115,0,0x0,8
tick,0x7ffad1f6fb64,65482110,0,0x0,8
tick,0x7ffad1f6fb64,65498111,0,0x0,8
tick,0x7ffad1f6fb64,65514123,0,0x0,8
tick,0x7ffad1f6fb64,65529147,0,0x0,8
tick,0x7ffad1f6fb64,65544140,0,0x0,8
tick,0x7ffad1f6fb64,65560180,0,0x0,8
tick,0x7ffad1f6fb64,65576172,0,0x0,8
tick,0x7ffad1f6fb64,65592188,0,0x0,8
tick,0x7ffad1f6fb64,65608201,0,0x0,8
tick,0x7ffad1f6fb64,65623259,0,0x0,8
tick,0x7ffad1f6fb64,65638229,0,0x0,8
tick,0x7ffad1f6fb64,65654263,0,0x0,8
tick,0x7ffad1f6fb64,65669278,0,0x0,8
tick,0x7ffad1f6fb64,65685365,0,0x0,8
tick,0x7ffad1f6fb64,65700280,0,0x0,8
tick,0x7ffad1f6fb64,65715294,0,0x0,8
tick,0x7ffad1f6fb64,65731303,0,0x0,8
tick,0x7ffad1f6fb64,65747393,0,0x0,8
tick,0x7ffad1f6fb64,65762348,0,0x0,8
tick,0x7ffad1f6fb64,65777392,0,0x0,8
tick,0x7ffad1f6fb64,65792375,0,0x0,8
tick,0x7ffad1f6fb64,65808388,0,0x0,8
tick,0x7ffad1f6fb64,65823426,0,0x0,8
tick,0x7ffad1f6fb64,65839417,0,0x0,8
tick,0x7ffad1f6fb64,65855450,0,0x0,8
tick,0x7ffad1f6fb64,65870520,0,0x0,8
tick,0x7ffad1f6fb64,65886466,0,0x0,8
tick,0x7ffad1f6fb64,65902462,0,0x0,8
tick,0x7ffad1f6fb64,65917474,0,0x0,8
tick,0x7ffad1f6fb64,65933509,0,0x0,8
tick,0x7ffad1f6fb64,65949514,0,0x0,8
tick,0x7ffad1f6fb64,65964556,0,0x0,8
tick,0x7ffad1f6fb64,65980542,0,0x0,8
tick,0x7ffad1f6fb64,65995593,0,0x0,8
tick,0x7ffad1f6fb64,66010563,0,0x0,8
tick,0x7ffad1f6fb64,66025587,0,0x0,8
tick,0x7ffad1f6fb64,66040603,0,0x0,8
tick,0x7ffad1f6fb64,66056633,0,0x0,8
tick,0x7ffad1f6fb64,66072636,0,0x0,8
tick,0x7ffad1f6fb64,66088650,0,0x0,8
tick,0x7ffad1f6fb64,66103652,0,0x0,8
tick,0x7ffad1f6fb64,66119679,0,0x0,8
tick,0x7ffad1f6fb64,66134709,0,0x0,8
tick,0x7ffad1f6fb64,66150696,0,0x0,8
tick,0x7ffad1f6fb64,66165729,0,0x0,8
tick,0x7ffad1f6fb64,66181779,0,0x0,8
tick,0x7ffad1f6fb64,66196764,0,0x0,8
tick,0x7ffad1f6fb64,66212783,0,0x0,8
tick,0x7ffad1f6fb64,66228812,0,0x0,8
tick,0x7ffad1f6fb64,66243782,0,0x0,8
tick,0x7ffad1f6fb64,66259810,0,0x0,8
tick,0x7ffad1f6fb64,66275823,0,0x0,8
tick,0x7ffad1f6fb64,66291852,0,0x0,8
tick,0x7ffad1f6fb64,66307848,0,0x0,8
tick,0x7ffad1f6fb64,66322863,0,0x0,8
tick,0x7ffad1f6fb64,66338877,0,0x0,8
tick,0x7ffad1f6fb64,66354879,0,0x0,8
tick,0x7ffad1f6fb64,66370920,0,0x0,8
tick,0x7ffad1f6fb64,66385906,0,0x0,8
tick,0x7ffad1f6fb64,66401924,0,0x0,8
tick,0x7ffad1f6fb64,66418059,0,0x0,8
tick,0x7ffad1f6fb64,66433989,0,0x0,8
tick,0x7ffad1f6fb64,66448967,0,0x0,8
tick,0x7ffad1f6fb64,66464980,0,0x0,8
tick,0x7ffad1f6fb64,66481016,0,0x0,8
tick,0x7ffad1f6fb64,66496009,0,0x0,8
tick,0x7ffad1f6fb64,66512057,0,0x0,8
tick,0x7ffad1f6fb64,66528049,0,0x0,8
tick,0x7ffad1f6fb64,66543060,0,0x0,8
tick,0x7ffad1f6fb64,66559092,0,0x0,8
tick,0x7ffad1f6fb64,66575081,0,0x0,8
tick,0x7ffad1f6fb64,66590087,0,0x0,8
tick,0x7ffad1f6fb64,66606113,0,0x0,8
tick,0x7ffad1f6fb64,66621151,0,0x0,8
tick,0x7ffad1f6fb64,66637167,0,0x0,8
tick,0x7ffad1f6fb64,66652139,0,0x0,8
tick,0x7ffad1f6fb64,66668164,0,0x0,8
tick,0x7ffad1f6fb64,66684194,0,0x0,8
tick,0x7ffad1f6fb64,66699201,0,0x0,8
tick,0x7ffad1f6fb64,66715264,0,0x0,8
tick,0x7ffad1f6fb64,66731252,0,0x0,8
tick,0x7ffad1f6fb64,66746247,0,0x0,8
tick,0x7ffad1f6fb64,66761258,0,0x0,8
tick,0x7ffad1f6fb64,66777260,0,0x0,8
tick,0x7ffad1f6fb64,66793322,0,0x0,8
tick,0x7ffad1f6fb64,66808321,0,0x0,8
tick,0x7ffad1f6fb64,66824340,0,0x0,8
tick,0x7ffad1f6fb64,66840333,0,0x0,8
tick,0x7ffad1f6fb64,66856332,0,0x0,8
tick,0x7ffad1f6fb64,66871402,0,0x0,8
tick,0x7ffad1f6fb64,66887395,0,0x0,8
tick,0x7ffad1f6fb64,66903375,0,0x0,8
tick,0x7ffad1f6fb64,66918403,0,0x0,8
tick,0x7ffad1f6fb64,66934427,0,0x0,8
tick,0x7ffad1f6fb64,66950446,0,0x0,8
tick,0x7ffad1f6fb64,66966440,0,0x0,8
tick,0x7ffad1f6fb64,66982472,0,0x0,8
tick,0x7ffad1f6fb64,66998469,0,0x0,8
tick,0x7ffad1f6fb64,67014509,0,0x0,8
tick,0x7ffad1f6fb64,67030503,0,0x0,8
tick,0x7ffad1f6fb64,67046513,0,0x0,8
tick,0x7ffad1f6fb64,67061553,0,0x0,8
tick,0x7ffad1f6fb64,67077555,0,0x0,8
tick,0x7ffad1f6fb64,67093576,0,0x0,8
tick,0x7ffad1f6fb64,67108563,0,0x0,8
tick,0x7ffad1f6fb64,67124817,0,0x0,8
tick,0x7ffad1f6fb64,67140619,0,0x0,8
tick,0x7ffad1f6fb64,67156630,0,0x0,8
tick,0x7ffad1f6fb64,67172653,0,0x0,8
tick,0x7ffad1f6fb64,67187662,0,0x0,8
tick,0x7ffad1f6fb64,67202679,0,0x0,8
tick,0x7ffad1f6fb64,67217672,0,0x0,8
tick,0x7ffad1f6fb64,67233705,0,0x0,8
tick,0x7ffad1f6fb64,67249712,0,0x0,8
tick,0x7ffad1f6fb64,67265719,0,0x0,8
tick,0x7ffad1f6fb64,67281741,0,0x0,8
tick,0x7ffad1f6fb64,67297755,0,0x0,8
tick,0x7ffad1f6fb64,67313803,0,0x0,8
tick,0x7ffad1f6fb64,67329902,0,0x0,8
tick,0x7ffad1f6fb64,67344781,0,0x0,8
tick,0x7ffad1f6fb64,67360813,0,0x0,8
tick,0x7ffad1f6fb64,67375829,0,0x0,8
tick,0x7ffad1f6fb64,67391876,0,0x0,8
tick,0x7ffad1f6fb64,67407846,0,0x0,8
tick,0x7ffad1f6fb64,67422853,0,0x0,8
tick,0x7ffad1f6fb64,67438863,0,0x0,8
tick,0x7ffad1f6fb64,67454875,0,0x0,8
tick,0x7ffad1f6fb64,67470912,0,0x0,8
tick,0x7ffad1f6fb64,67486946,0,0x0,8
tick,0x7ffad1f6fb64,67502928,0,0x0,8
tick,0x7ffad1f6fb64,67517976,0,0x0,8
tick,0x7ffad1f6fb64,67533976,0,0x0,8
tick,0x7ffad1f6fb64,67548973,0,0x0,8
tick,0x7ffad1f6fb64,67565740,0,0x0,8
tick,0x7ffad1f6fb64,67580020,0,0x0,8
tick,0x7ffad1f6fb64,67596088,0,0x0,8
tick,0x7ffad1f6fb64,67611064,0,0x0,8
tick,0x7ffad1f6fb64,67627099,0,0x0,8
tick,0x7ffad1f6fb64,67642094,0,0x0,8
tick,0x7ffad1f6fb64,67657137,0,0x0,8
tick,0x7ffad1f6fb64,67672114,0,0x0,8
tick,0x7ffad1f6fb64,67687142,0,0x0,8
tick,0x7ffad1f6fb64,67703125,0,0x0,8
tick,0x7ffad1f6fb64,67719169,0,0x0,8
tick,0x7ffad1f6fb64,67735151,0,0x0,8
tick,0x7ffad1f6fb64,67750151,0,0x0,8
tick,0x7ffad1f6fb64,67766210,0,0x0,8
tick,0x7ffad1f6fb64,67781175,0,0x0,8
tick,0x7ffad1f6fb64,67796187,0,0x0,8
tick,0x7ffad1f6fb64,67812223,0,0x0,8
tick,0x7ffad1f6fb64,67828244,0,0x0,8
tick,0x7ffad1f6fb64,67843233,0,0x0,8
tick,0x7ffad1f6fb64,67859238,0,0x0,8
tick,0x7ffad1f6fb64,67875275,0,0x0,8
tick,0x7ffad1f6fb64,67891284,0,0x0,8
tick,0x7ffad1f6fb64,67906290,0,0x0,8
tick,0x7ffad1f6fb64,67921300,0,0x0,8
tick,0x7ffad1f6fb64,67937359,0,0x0,8
tick,0x7ffad1f6fb64,67952355,0,0x0,8
tick,0x7ffad1f6fb64,67968427,0,0x0,8
tick,0x7ffad1f6fb64,67983364,0,0x0,8
tick,0x7ffad1f6fb64,67999397,0,0x0,8
tick,0x7ffad1f6fb64,68015454,0,0x0,8
tick,0x7ffad1f6fb64,68031427,0,0x0,8
tick,0x7ffad1f6fb64,68047496,0,0x0,8
tick,0x7ffad1f6fb64,68062464,0,0x0,8
tick,0x7ffad1f6fb64,68077482,0,0x0,8
tick,0x7ffad1f6fb64,68092473,0,0x0,8
tick,0x7ffad1f6fb64,68108481,0,0x0,8
tick,0x7ffad1f6fb64,68124494,0,0x0,8
tick,0x7ffad1f6fb64,68140517,0,0x0,8
tick,0x7ffad1f6fb64,68155537,0,0x0,8
tick,0x7ffad1f6fb64,68170547,0,0x0,8
tick,0x7ffad1f6fb64,68186566,0,0x0,8
tick,0x7ffad1f6fb64,68201570,0,0x0,8
tick,0x7ffad1f6fb64,68217579,0,0x0,8
tick,0x7ffad1f6fb64,68233593,0,0x0,8
tick,0x7ffad1f6fb64,68249610,0,0x0,8
tick,0x7ffad1f6fb64,68265635,0,0x0,8
tick,0x7ffad1f6fb64,68280665,0,0x0,8
tick,0x7ffad1f6fb64,68295662,0,0x0,8
tick,0x7ffad1f6fb64,68311720,0,0x0,8
tick,0x7ffad1f6fb64,68327699,0,0x0,8
tick,0x7ffad1f6fb64,68342714,0,0x0,8
tick,0x7ffad1f6fb64,68357704,0,0x0,8
tick,0x7ffad1f6fb64,68372752,0,0x0,8
tick,0x7ffad1f6fb64,68388741,0,0x0,8
tick,0x7ffad1f6fb64,68404763,0,0x0,8
tick,0x7ffad1f6fb64,68419787,0,0x0,8
tick,0x7ffad1f6fb64,68435797,0,0x0,8
tick,0x7ffad1f6fb64,68451787,0,0x0,8
tick,0x7ffad1f6fb64,68466814,0,0x0,8
tick,0x7ffad1f6fb64,68481826,0,0x0,8
tick,0x7ffad1f6fb64,68497859,0,0x0,8
tick,0x7ffad1f6fb64,68513882,0,0x0,8
tick,0x7ffad1f6fb64,68529861,0,0x0,8
tick,0x7ffad1f6fb64,68545942,0,0x0,8
tick,0x7ffad1f6fb64,68561917,0,0x0,8
tick,0x7ffad1f6fb64,68577904,0,0x0,8
tick,0x7ffad1f6fb64,68592919,0,0x0,8
tick,0x7ffad1f6fb64,68608930,0,0x0,8
tick,0x7ffad1f6fb64,68624963,0,0x0,8
tick,0x7ffad1f6fb64,68639962,0,0x0,8
tick,0x7ffad1f6fb64,68655979,0,0x0,8
tick,0x7ffad1f6fb64,68671996,0,0x0,8
tick,0x7ffad1f6fb64,68688048,0,0x0,8
tick,0x7ffad1f6fb64,68703034,0,0x0,8
tick,0x7ffad1f6fb64,68719031,0,0x0,8
tick,0x7ffad1f6fb64,68734040,0,0x0,8
tick,0x7ffad1f6fb64,68750078,0,0x0,8
tick,0x7ffad1f6fb64,68766080,0,0x0,8
tick,0x7ffad1f6fb64,68781076,0,0x0,8
tick,0x7ffad1f6fb64,68797099,0,0x0,8
tick,0x7ffad1f6fb64,68813131,0,0x0,8
tick,0x7ffad1f6fb64,68828153,0,0x0,8
tick,0x7ffad1f6fb64,68843198,0,0x0,8
tick,0x7ffad1f6fb64,68859160,0,0x0,8
tick,0x7ffad1f6fb64,68875183,0,0x0,8
tick,0x7ffad1f6fb64,68890193,0,0x0,8
tick,0x7ffad1f6fb64,68905211,0,0x0,8
tick,0x7ffad1f6fb64,68920234,0,0x0,8
tick,0x7ffad1f6fb64,68936240,0,0x0,8
tick,0x7ffad1f6fb64,68952252,0,0x0,8
tick,0x7ffad1f6fb64,68968269,0,0x0,8
tick,0x7ffad1f6fb64,68983290,0,0x0,8
tick,0x7ffad1f6fb64,68998390,0,0x0,8
tick,0x7ffad1f6fb64,69013310,0,0x0,8
tick,0x7ffad1f6fb64,69028334,0,0x0,8
tick,0x7ffad1f6fb64,69044362,0,0x0,8
tick,0x7ffad1f6fb64,69060404,0,0x0,8
tick,0x7ffad1f6fb64,69075378,0,0x0,8
tick,0x7ffad1f6fb64,69091384,0,0x0,8
tick,0x7ffad1f6fb64,69107389,0,0x0,8
tick,0x7ffad1f6fb64,69122407,0,0x0,8
tick,0x7ffad1f6fb64,69137432,0,0x0,8
tick,0x7ffad1f6fb64,69153425,0,0x0,8
tick,0x7ffad1f6fb64,69169453,0,0x0,8
tick,0x7ffad1f6fb64,69185481,0,0x0,8
tick,0x7ffad1f6fb64,69200467,0,0x0,8
tick,0x7ffad1f6fb64,69215487,0,0x0,8
tick,0x7ffad1f6fb64,69230489,0,0x0,8
tick,0x7ffad1f6fb64,69246529,0,0x0,8
tick,0x7ffad1f6fb64,69262527,0,0x0,8
tick,0x7ffad1f6fb64,69277557,0,0x0,8
tick,0x7ffad1f6fb64,69293569,0,0x0,8
tick,0x7ffad1f6fb64,69308641,0,0x0,8
tick,0x7ffad1f6fb64,69324594,0,0x0,8
tick,0x7ffad1f6fb64,69340596,0,0x0,8
tick,0x7ffad1f6fb64,69355621,0,0x0,8
tick,0x7ffad1f6fb64,69371636,0,0x0,8
tick,0x7ffad1f6fb64,69386645,0,0x0,8
tick,0x7ffad1f6fb64,69402658,0,0x0,8
tick,0x7ffad1f6fb64,69417670,0,0x0,8
tick,0x7ffad1f6fb64,69433688,0,0x0,8
tick,0x7ffad1f6fb64,69449698,0,0x0,8
tick,0x7ffad1f6fb64,69464714,0,0x0,8
tick,0x7ffad1f6fb64,69480720,0,0x0,8
tick,0x7ffad1f6fb64,69495744,0,0x0,8
tick,0x7ffad1f6fb64,69510762,0,0x0,8
tick,0x7ffad1f6fb64,69525761,0,0x0,8
tick,0x7ffad1f6fb64,69540790,0,0x0,8
tick,0x7ffad1f6fb64,69555807,0,0x0,8
tick,0x7ffad1f6fb64,69571816,0,0x0,8
tick,0x7ffad1f6fb64,69587826,0,0x0,8
tick,0x7ffad1f6fb64,69602835,0,0x0,8
tick,0x7ffad1f6fb64,69618855,0,0x0,8
tick,0x7ffad1f6fb64,69634867,0,0x0,8
tick,0x7ffad1f6fb64,69649899,0,0x0,8
tick,0x7ffad1f6fb64,69664942,0,0x0,8
tick,0x7ffad1f6fb64,69679912,0,0x0,8
tick,0x7ffad1f6fb64,69695955,0,0x0,8
tick,0x7ffad1f6fb64,69711943,0,0x0,8
tick,0x7ffad1f6fb64,69726949,0,0x0,8
tick,0x7ffad1f6fb64,69742969,0,0x0,8
tick,0x7ffad1f6fb64,69758987,0,0x0,8
tick,0x7ffad1f6fb64,69774986,0,0x0,8
tick,0x7ffad1f6fb64,69791035,0,0x0,8
tick,0x7ffad1f6fb64,69806024,0,0x0,8
tick,0x7ffad1f6fb64,69821059,0,0x0,8
tick,0x7ffad1f6fb64,69836101,0,0x0,8
tick,0x7ffad1f6fb64,69851085,0,0x0,8
tick,0x7ffad1f6fb64,69867097,0,0x0,8
tick,0x7ffad1f6fb64,69882095,0,0x0,8
tick,0x7ffad1f6fb64,69897130,0,0x0,8
tick,0x7ffad1f6fb64,69912122,0,0x0,8
tick,0x7ffad1f6fb64,69927123,0,0x0,8
tick,0x7ffad1f6fb64,69943151,0,0x0,8
tick,0x7ffad1f6fb64,69959162,0,0x0,8
tick,0x7ffad1f6fb64,69975186,0,0x0,8
tick,0x7ffad1f6fb64,69991194,0,0x0,8
tick,0x7ffad1f6fb64,70006210,0,0x0,8
tick,0x7ffad1f6fb64,70021214,0,0x0,8
tick,0x7ffad1f6fb64,70037241,0,0x0,8
tick,0x7ffad1f6fb64,70053249,0,0x0,8
tick,0x7ffad1f6fb64,70069256,0,0x0,8
tick,0x7ffad1f6fb64,70085296,0,0x0,8
tick,0x7ffad1f6fb64,70101345,0,0x0,8
tick,0x7ffad1f6fb64,70116327,0,0x0,8
tick,0x7ffad1f6fb64,70131311,0,0x0,8
tick,0x7ffad1f6fb64,70147342,0,0x0,8
tick,0x7ffad1f6fb64,70162351,0,0x0,8
tick,0x7ffad1f6fb64,70177362,0,0x0,8
tick,0x7ffad1f6fb64,70193380,0,0x0,8
tick,0x7ffad1f6fb64,70208402,0,0x0,8
tick,0x7ffad1f6fb64,70223409,0,0x0,8
tick,0x7ffad1f6fb64,70239425,0,0x0,8
tick,0x7ffad1f6fb64,70255424,0,0x0,8
tick,0x7ffad1f6fb64,70271433,0,0x0,8
tick,0x7ffad1f6fb64,70287462,0,0x0,8
tick,0x7ffad1f6fb64,70302513,0,0x0,8
tick,0x7ffad1f6fb64,70317524,0,0x0,8
tick,0x7ffad1f6fb64,70333523,0,0x0,8
tick,0x7ffad1f6fb64,70349544,0,0x0,8
tick,0x7ffad1f6fb64,70365572,0,0x0,8
tick,0x7ffad1f6fb64,70380556,0,0x0,8
tick,0x7ffad1f6fb64,70396577,0,0x0,8
tick,0x7ffad1f6fb64,70412598,0,0x0,8
tick,0x7ffad1f6fb64,70427599,0,0x0,8
tick,0x7ffad1f6fb64,70442604,0,0x0,8
tick,0x7ffad1f6fb64,70458613,0,0x0,8
tick,0x7ffad1f6fb64,70473646,0,0x0,8
tick,0x7ffad1f6fb64,70489664,0,0x0,8
tick,0x7ffad1f6fb64,70505672,0,0x0,8
tick,0x7ffad1f6fb64,70520734,0,0x0,8
tick,0x7ffad1f6fb64,70536718,0,0x0,8
tick,0x7ffad1f6fb64,70552703,0,0x0,8
tick,0x7ffad1f6fb64,70568758,0,0x0,8
tick,0x7ffad1f6fb64,70583723,0,0x0,8
tick,0x7ffad1f6fb64,70599777,0,0x0,8
tick,0x7ffad1f6fb64,70615795,0,0x0,8
tick,0x7ffad1f6fb64,70631796,0,0x0,8
tick,0x7ffad1f6fb64,70646813,0,0x0,8
tick,0x7ffad1f6fb64,70662833,0,0x0,8
tick,0x7ffad1f6fb64,70678817,0,0x0,8
tick,0x7ffad1f6fb64,70694825,0,0x0,8
tick,0x7ffad1f6fb64,70709890,0,0x0,8
tick,0x7ffad1f6fb64,70726053,0,0x0,8
tick,0x7ffad1f6fb64,70741878,0,0x0,8
tick,0x7ffad1f6fb64,70757900,0,0x0,8
tick,0x7ffad1f6fb64,70772913,0,0x0,8
tick,0x7ffad1f6fb64,70788912,0,0x0,8
tick,0x7ffad1f6fb64,70804948,0,0x0,8
tick,0x7ffad1f6fb64,70820990,0,0x0,8
tick,0x7ffad1f6fb64,70836990,0,0x0,8
tick,0x7ffad1f6fb64,70851999,0,0x0,8
tick,0x7ffad1f6fb64,70867995,0,0x0,8
tick,0x7ffad1f6fb64,70883016,0,0x0,8
tick,0x7ffad1f6fb64,70898017,0,0x0,8
tick,0x7ffad1f6fb64,70913055,0,0x0,8
tick,0x7ffad1f6fb64,70928070,0,0x0,8
tick,0x7ffad1f6fb64,70944065,0,0x0,8
tick,0x7ffad1f6fb64,70959072,0,0x0,8
tick,0x7ffad1f6fb64,70975096,0,0x0,8
tick,0x7ffad1f6fb64,70991113,0,0x0,8
tick,0x7ffad1f6fb64,71006224,0,0x0,8
tick,0x7ffad1f6fb64,71021170,0,0x0,8
tick,0x7ffad1f6fb64,71036173,0,0x0,8
tick,0x7ffad1f6fb64,71051181,0,0x0,8
tick,0x7ffad1f6fb64,71067186,0,0x0,8
tick,0x7ffad1f6fb64,71082186,0,0x0,8
tick,0x7ffad1f6fb64,71098221,0,0x0,8
tick,0x7ffad1f6fb64,71114239,0,0x0,8
tick,0x7ffad1f6fb64,71130262,0,0x0,8
tick,0x7ffad1f6fb64,71146261,0,0x0,8
tick,0x7ffad1f6fb64,71161256,0,0x0,8
tick,0x7ffad1f6fb64,71177314,0,0x0,8
tick,0x7ffad1f6fb64,71193299,0,0x0,8
tick,0x7ffad1f6fb64,71208334,0,0x0,8
tick,0x7ffad1f6fb64,71223330,0,0x0,8
tick,0x7ffad1f6fb64,71238372,0,0x0,8
tick,0x7ffad1f6fb64,71254354,0,0x0,8
tick,0x7ffad1f6fb64,71270382,0,0x0,8
tick,0x7ffad1f6fb64,71285374,0,0x0,8
tick,0x7ffad1f6fb64,71301392,0,0x0,8
tick,0x7ffad1f6fb64,71317426,0,0x0,8
tick,0x7ffad1f6fb64,71333429,0,0x0,8
tick,0x7ffad1f6fb64,71349437,0,0x0,8
tick,0x7ffad1f6fb64,71364460,0,0x0,8
tick,0x7ffad1f6fb64,71380515,0,0x0,8
tick,0x7ffad1f6fb64,71395471,0,0x0,8
tick,0x7ffad1f6fb64,71411490,0,0x0,8
tick,0x7ffad1f6fb64,71427512,0,0x0,8
tick,0x7ffad1f6fb64,71443516,0,0x0,8
tick,0x7ffad1f6fb64,71459699,0,0x0,8
tick,0x7ffad1f6fb64,71475548,0,0x0,8
tick,0x7ffad1f6fb64,71491559,0,0x0,8
tick,0x7ffad1f6fb64,71507572,0,0x0,8
tick,0x7ffad1f6fb64,71522615,0,0x0,8
tick,0x7ffad1f6fb64,71537680,0,0x0,8
tick,0x7ffad1f6fb64,71552614,0,0x0,8
tick,0x7ffad1f6fb64,71568656,0,0x0,8
tick,0x7ffad1f6fb64,71583666,0,0x0,8
tick,0x7ffad1f6fb64,71599665,0,0x0,8
tick,0x7ffad1f6fb64,71615819,0,0x0,8
tick,0x7ffad1f6fb64,71631748,0,0x0,8
tick,0x7ffad1f6fb64,71646738,0,0x0,8
tick,0x7ffad1f6fb64,71661746,0,0x0,8
tick,0x7ffad1f6fb64,71677753,0,0x0,8
tick,0x7ffad1f6fb64,71692764,0,0x0,8
tick,0x7ffad1f6fb64,71708777,0,0x0,8
tick,0x7ffad1f6fb64,71724822,0,0x0,8
tick,0x7ffad1f6fb64,71739816,0,0x0,8
tick,0x7ffad1f6fb64,71754826,0,0x0,8
tick,0x7ffad1f6fb64,71770813,0,0x0,8
tick,0x7ffad1f6fb64,71785843,0,0x0,8
tick,0x7ffad1f6fb64,71801839,0,0x0,8
tick,0x7ffad1f6fb64,71816857,0,0x0,8
tick,0x7ffad1f6fb64,71832876,0,0x0,8
tick,0x7ffad1f6fb64,71848892,0,0x0,8
tick,0x7ffad1f6fb64,71864920,0,0x0,8
tick,0x7ffad1f6fb64,71880925,0,0x0,8
tick,0x7ffad1f6fb64,71895947,0,0x0,8
tick,0x7ffad1f6fb64,71910931,0,0x0,8
tick,0x7ffad1f6fb64,71926965,0,0x0,8
tick,0x7ffad1f6fb64,71941975,0,0x0,8
tick,0x7ffad1f6fb64,71957975,0,0x0,8
tick,0x7ffad1f6fb64,71973000,0,0x0,8
tick,0x7ffad1f6fb64,71989035,0,0x0,8
tick,0x7ffad1f6fb64,72005035,0,0x0,8
tick,0x7ffad1f6fb64,72020057,0,0x0,8
tick,0x7ffad1f6fb64,72036087,0,0x0,8
tick,0x7ffad1f6fb64,72051080,0,0x0,8
tick,0x7ffad1f6fb64,72066152,0,0x0,8
tick,0x7ffad1f6fb64,72082136,0,0x0,8
tick,0x7ffad1f6fb64,72098119,0,0x0,8
tick,0x7ffad1f6fb64,72114136,0,0x0,8
tick,0x7ffad1f6fb64,72130167,0,0x0,8
tick,0x7ffad1f6fb64,72146172,0,0x0,8
tick,0x7ffad1f6fb64,72161164,0,0x0,8
tick,0x7ffad1f6fb64,72177188,0,0x0,8
tick,0x7ffad1f6fb64,72193212,0,0x0,8
tick,0x7ffad1f6fb64,72209221,0,0x0,8
tick,0x7ffad1f6fb64,72224213,0,0x0,8
tick,0x7ffad1f6fb64,72240256,0,0x0,8
tick,0x7ffad1f6fb64,72256267,0,0x0,8
tick,0x7ffad1f6fb64,72271270,0,0x0,8
tick,0x7ffad1f6fb64,72287295,0,0x0,8
tick,0x7ffad1f6fb64,72302304,0,0x0,8
tick,0x7ffad1f6fb64,72317312,0,0x0,8
tick,0x7ffad1f6fb64,72332334,0,0x0,8
tick,0x7ffad1f6fb64,72348342,0,0x0,8
tick,0x7ffad1f6fb64,72364361,0,0x0,8
tick,0x7ffad1f6fb64,72379363,0,0x0,8
tick,0x7ffad1f6fb64,72394392,0,0x0,8
tick,0x7ffad1f6fb64,72410394,0,0x0,8
tick,0x7ffad1f6fb64,72425415,0,0x0,8
tick,0x7ffad1f6fb64,72440424,0,0x0,8
tick,0x7ffad1f6fb64,72455445,0,0x0,8
tick,0x7ffad1f6fb64,72471449,0,0x0,8
tick,0x7ffad1f6fb64,72486472,0,0x0,8
tick,0x7ffad1f6fb64,72502472,0,0x0,8
tick,0x7ffad1f6fb64,72517496,0,0x0,8
tick,0x7ffad1f6fb64,72533510,0,0x0,8
tick,0x7ffad1f6fb64,72549545,0,0x0,8
tick,0x7ffad1f6fb64,72564537,0,0x0,8
tick,0x7ffad1f6fb64,72580547,0,0x0,8
tick,0x7ffad1f6fb64,72595569,0,0x0,8
tick,0x7ffad1f6fb64,72611574,0,0x0,8
tick,0x7ffad1f6fb64,72627598,0,0x0,8
tick,0x7ffad1f6fb64,72643631,0,0x0,8
tick,0x7ffad1f6fb64,72658649,0,0x0,8
tick,0x7ffad1f6fb64,72674638,0,0x0,8
tick,0x7ffad1f6fb64,72690650,0,0x0,8
tick,0x7ffad1f6fb64,72706678,0,0x0,8
tick,0x7ffad1f6fb64,72722670,0,0x0,8
tick,0x7ffad1f6fb64,72737721,0,0x0,8
tick,0x7ffad1f6fb64,72753761,0,0x0,8
tick,0x7ffad1f6fb64,72769731,0,0x0,8
tick,0x7ffad1f6fb64,72785730,0,0x0,8
tick,0x7ffad1f6fb64,72801757,0,0x0,8
tick,0x7ffad1f6fb64,72817777,0,0x0,8
tick,0x7ffad1f6fb64,72833782,0,0x0,8
tick,0x7ffad1f6fb64,72849801,0,0x0,8
tick,0x7ffad1f6fb64,72865818,0,0x0,8
tick,0x7ffad1f6fb64,72880824,0,0x0,8
tick,0x7ffad1f6fb64,72895834,0,0x0,8
tick,0x7ffad1f6fb64,72910843,0,0x0,8
tick,0x7ffad1f6fb64,72925880,0,0x0,8
tick,0x7ffad1f6fb64,72941885,0,0x0,8
tick,0x7ffad1f6fb64,72957913,0,0x0,8
tick,0x7ffad1f6fb64,72972897,0,0x0,8
tick,0x7ffad1f6fb64,72988918,0,0x0,8
tick,0x7ffad1f6fb64,73004954,0,0x0,8
tick,0x7ffad1f6fb64,73020944,0,0x0,8
tick,0x7ffad1f6fb64,73036960,0,0x0,8
tick,0x7ffad1f6fb64,73051966,0,0x0,8
tick,0x7ffad1f6fb64,73067998,0,0x0,8
tick,0x7ffad1f6fb64,73084004,0,0x0,8
tick,0x7ffad1f6fb64,73100206,0,0x0,8
tick,0x7ffad1f6fb64,73116048,0,0x0,8
tick,0x7ffad1f6fb64,73132052,0,0x0,8
tick,0x7ffad1f6fb64,73147087,0,0x0,8
tick,0x7ffad1f6fb64,73163089,0,0x0,8
tick,0x7ffad1f6fb64,73178122,0,0x0,8
tick,0x7ffad1f6fb64,73194104,0,0x0,8
tick,0x7ffad1f6fb64,73210163,0,0x0,8
tick,0x7ffad1f6fb64,73226136,0,0x0,8
tick,0x7ffad1f6fb64,73241162,0,0x0,8
tick,0x7ffad1f6fb64,73257191,0,0x0,8
tick,0x7ffad1f6fb64,73272176,0,0x0,8
tick,0x7ffad1f6fb64,73288212,0,0x0,8
tick,0x7ffad1f6fb64,73303196,0,0x0,8
tick,0x7ffad1f6fb64,73318226,0,0x0,8
tick,0x7ffad1f6fb64,73333255,0,0x0,8
tick,0x7ffad1f6fb64,73349236,0,0x0,8
tick,0x7ffad1f6fb64,73364268,0,0x0,8
tick,0x7ffad1f6fb64,73380274,0,0x0,8
tick,0x7ffad1f6fb64,73396309,0,0x0,8
tick,0x7ffad1f6fb64,73411305,0,0x0,8
tick,0x7ffad1f6fb64,73427329,0,0x0,8
tick,0x7ffad1f6fb64,73442359,0,0x0,8
tick,0x7ffad1f6fb64,73458343,0,0x0,8
tick,0x7ffad1f6fb64,73474387,0,0x0,8
tick,0x7ffad1f6fb64,73489373,0,0x0,8
tick,0x7ffad1f6fb64,73505400,0,0x0,8
tick,0x7ffad1f6fb64,73520399,0,0x0,8
tick,0x7ffad1f6fb64,73535417,0,0x0,8
tick,0x7ffad1f6fb64,73551426,0,0x0,8
tick,0x7ffad1f6fb64,73567555,0,0x0,8
tick,0x7ffad1f6fb64,73582464,0,0x0,8
tick,0x7ffad1f6fb64,73598492,0,0x0,8
tick,0x7ffad1f6fb64,73614537,0,0x0,8
tick,0x7ffad1f6fb64,73629528,0,0x0,8
tick,0x7ffad1f6fb64,73644536,0,0x0,8
tick,0x7ffad1f6fb64,73660591,0,0x0,8
tick,0x7ffad1f6fb64,73675595,0,0x0,8
tick,0x7ffad1f6fb64,73690570,0,0x0,8
tick,0x7ffad1f6fb64,73706584,0,0x0,8
tick,0x7ffad1f6fb64,73722605,0,0x0,8
tick,0x7ffad1f6fb64,73737617,0,0x0,8
tick,0x7ffad1f6fb64,73752638,0,0x0,8
tick,0x7ffad1f6fb64,73768659,0,0x0,8
tick,0x7ffad1f6fb64,73784653,0,0x0,8
tick,0x7ffad1f6fb64,73799668,0,0x0,8
tick,0x7ffad1f6fb64,73814695,0,0x0,8
tick,0x7ffad1f6fb64,73830751,0,0x0,8
tick,0x7ffad1f6fb64,73845699,0,0x0,8
tick,0x7ffad1f6fb64,73861750,0,0x0,8
tick,0x7ffad1f6fb64,73877738,0,0x0,8
tick,0x7ffad1f6fb64,73893756,0,0x0,8
tick,0x7ffad1f6fb64,73908764,0,0x0,8
tick,0x7ffad1f6fb64,73924778,0,0x0,8
tick,0x7ffad1f6fb64,73939821,0,0x0,8
tick,0x7ffad1f6fb64,73954811,0,0x0,8
tick,0x7ffad1f6fb64,73970849,0,0x0,8
tick,0x7ffad1f6fb64,73986855,0,0x0,8
tick,0x7ffad1f6fb64,74002851,0,0x0,8
tick,0x7ffad1f6fb64,74018879,0,0x0,8
tick,0x7ffad1f6fb64,74033981,0,0x0,8
tick,0x7ffad1f6fb64,74049912,0,0x0,8
tick,0x7ffad1f6fb64,74065922,0,0x0,8
tick,0x7ffad1f6fb64,74080950,0,0x0,8
tick,0x7ffad1f6fb64,74095936,0,0x0,8
tick,0x7ffad1f6fb64,74111948,0,0x0,8
tick,0x7ffad1f6fb64,74127975,0,0x0,8
tick,0x7ffad1f6fb64,74143980,0,0x0,8
tick,0x7ffad1f6fb64,74158998,0,0x0,8
tick,0x7ffad1f6fb64,74174037,0,0x0,8
tick,0x7ffad1f6fb64,74189026,0,0x0,8
tick,0x7ffad1f6fb64,74204028,0,0x0,8
tick,0x7ffad1f6fb64,74220064,0,0x0,8
tick,0x7ffad1f6fb64,74236092,0,0x0,8
tick,0x7ffad1f6fb64,74252076,0,0x0,8
tick,0x7ffad1f6fb64,74267110,0,0x0,8
tick,0x7ffad1f6fb64,74282112,0,0x0,8
tick,0x7ffad1f6fb64,74297159,0,0x0,8
tick,0x7ffad1f6fb64,74313149,0,0x0,8
tick,0x7ffad1f6fb64,74328141,0,0x0,8
tick,0x7ffad1f6fb64,74344155,0,0x0,8
tick,0x7ffad1f6fb64,74360174,0,0x0,8
tick,0x7ffad1f6fb64,74376210,0,0x0,8
tick,0x7ffad1f6fb64,74392206,0,0x0,8
tick,0x7ffad1f6fb64,74407222,0,0x0,8
tick,0x7ffad1f6fb64,74422254,0,0x0,8
tick,0x7ffad1f6fb64,74437257,0,0x0,8
tick,0x7ffad1f6fb64,74453255,0,0x0,8
tick,0x7ffad1f6fb64,74468265,0,0x0,8
tick,0x7ffad1f6fb64,74484305,0,0x0,8
tick,0x7ffad1f6fb64,74499302,0,0x0,8
tick,0x7ffad1f6fb64,74514315,0,0x0,8
tick,0x7ffad1f6fb64,74530335,0,0x0,8
tick,0x7ffad1f6fb64,74546348,0,0x0,8
tick,0x7ffad1f6fb64,74562364,0,0x0,8
tick,0x7ffad1f6fb64,74577371,0,0x0,8
tick,0x7ffad1f6fb64,74593411,0,0x0,8
tick,0x7ffad1f6fb64,74609411,0,0x0,8
tick,0x7ffad1f6fb64,74625436,0,0x0,8
tick,0x7ffad1f6fb64,74640431,0,0x0,8
tick,0x7ffad1f6fb64,74656440,0,0x0,8
tick,0x7ffad1f6fb64,74672479,0,0x0,8
tick,0x7ffad1f6fb64,74688571,0,0x0,8
tick,0x7ffad1f6fb64,74703499,0,0x0,8
tick,0x7ffad1f6fb64,74719511,0,0x0,8
tick,0x7ffad1f6fb64,74735532,0,0x0,8
tick,0x7ffad1f6fb64,74751546,0,0x0,8
tick,0x7ffad1f6fb64,74766591,0,0x0,8
tick,0x7ffad1f6fb64,74781559,0,0x0,8
tick,0x7ffad1f6fb64,74797592,0,0x0,8
tick,0x7ffad1f6fb64,74813616,0,0x0,8
tick,0x7ffad1f6fb64,74828653,0,0x0,8
tick,0x7ffad1f6fb64,74844613,0,0x0,8
tick,0x7ffad1f6fb64,74860651,0,0x0,8
tick,0x7ffad1f6fb64,74875684,0,0x0,8
tick,0x7ffad1f6fb64,74890675,0,0x0,8
tick,0x7ffad1f6fb64,74905669,0,0x0,8
tick,0x7ffad1f6fb64,74920705,0,0x0,8
tick,0x7ffad1f6fb64,74935718,0,0x0,8
tick,0x7ffad1f6fb64,74951704,0,0x0,8
tick,0x7ffad1f6fb64,74966751,0,0x0,8
tick,0x7ffad1f6fb64,74981771,0,0x0,8
tick,0x7ffad1f6fb64,74997770,0,0x0,8
tick,0x7ffad1f6fb64,75013770,0,0x0,8
tick,0x7ffad1f6fb64,75029807,0,0x0,8
tick,0x7ffad1f6fb64,75044812,0,0x0,8
tick,0x7ffad1f6fb64,75061002,0,0x0,8
tick,0x7ffad1f6fb64,75076858,0,0x0,8
tick,0x7ffad1f6fb64,75092849,0,0x0,8
tick,0x7ffad1f6fb64,75107872,0,0x0,8
tick,0x7ffad1f6fb64,75123895,0,0x0,8
tick,0x7ffad1f6fb64,75139896,0,0x0,8
tick,0x7ffad1f6fb64,75154913,0,0x0,8
tick,0x7ffad1f6fb64,75170937,0,0x0,8
tick,0x7ffad1f6fb64,75185951,0,0x0,8
tick,0x7ffad1f6fb64,75200969,0,0x0,8
tick,0x7ffad1f6fb64,75216979,0,0x0,8
tick,0x7ffad1f6fb64,75232994,0,0x0,8
tick,0x7ffad1f6fb64,75248014,0,0x0,8
tick,0x7ffad1f6fb64,75264013,0,0x0,8
tick,0x7ffad1f6fb64,75280014,0,0x0,8
tick,0x7ffad1f6fb64,75295055,0,0x0,8
tick,0x7ffad1f6fb64,75311060,0,0x0,8
tick,0x7ffad1f6fb64,75327084,0,0x0,8
tick,0x7ffad1f6fb64,75342078,0,0x0,8
tick,0x7ffad1f6fb64,75358175,0,0x0,8
tick,0x7ffad1f6fb64,75373129,0,0x0,8
tick,0x7ffad1f6fb64,75389122,0,0x0,8
tick,0x7ffad1f6fb64,75404127,0,0x0,8
tick,0x7ffad1f6fb64,75419156,0,0x0,8
tick,0x7ffad1f6fb64,75435185,0,0x0,8
tick,0x7ffad1f6fb64,75450185,0,0x0,8
tick,0x7ffad1f6fb64,75465276,0,0x0,8
tick,0x7ffad1f6fb64,75480206,0,0x0,8
tick,0x7ffad1f6fb64,75495236,0,0x0,8
tick,0x7ffad1f6fb64,75511223,0,0x0,8
tick,0x7ffad1f6fb64,75527245,0,0x0,8
tick,0x7ffad1f6fb64,75542272,0,0x0,8
tick,0x7ffad1f6fb64,75558292,0,0x0,8
tick,0x7ffad1f6fb64,75574295,0,0x0,8
tick,0x7ffad1f6fb64,75590305,0,0x0,8
tick,0x7ffad1f6fb64,75606346,0,0x0,8
tick,0x7ffad1f6fb64,75621372,0,0x0,8
tick,0x7ffad1f6fb64,75637354,0,0x0,8
tick,0x7ffad1f6fb64,75653356,0,0x0,8
tick,0x7ffad1f6fb64,75669383,0,0x0,8
tick,0x7ffad1f6fb64,75685417,0,0x0,8
tick,0x7ffad1f6fb64,75701416,0,0x0,8
tick,0x7ffad1f6fb64,75716430,0,0x0,8
tick,0x7ffad1f6fb64,75731448,0,0x0,8
tick,0x7ffad1f6fb64,75747445,0,0x0,8
tick,0x7ffad1f6fb64,75763471,0,0x0,8
tick,0x7ffad1f6fb64,75778506,0,0x0,8
tick,0x7ffad1f6fb64,75794621,0,0x0,8
tick,0x7ffad1f6fb64,75809510,0,0x0,8
tick,0x7ffad1f6fb64,75824550,0,0x0,8
tick,0x7ffad1f6fb64,75839532,0,0x0,8
tick,0x7ffad1f6fb64,75855550,0,0x0,8
tick,0x7ffad1f6fb64,75871556,0,0x0,8
tick,0x7ffad1f6fb64,75886575,0,0x0,8
tick,0x7ffad1f6fb64,75901611,0,0x0,8
tick,0x7ffad1f6fb64,75917657,0,0x0,8
tick,0x7ffad1f6fb64,75933617,0,0x0,8
tick,0x7ffad1f6fb64,75948651,0,0x0,8
tick,0x7ffad1f6fb64,75964660,0,0x0,8
tick,0x7ffad1f6fb64,75979667,0,0x0,8
tick,0x7ffad1f6fb64,75995696,0,0x0,8
tick,0x7ffad1f6fb64,76010732,0,0x0,8
tick,0x7ffad1f6fb64,76025680,0,0x0,8
tick,0x7ffad1f6fb64,76040733,0,0x0,8
tick,0x7ffad1f6fb64,76055793,0,0x0,8
tick,0x7ffad1f6fb64,76070768,0,0x0,8
tick,0x7ffad1f6fb64,76085753,0,0x0,8
tick,0x7ffad1f6fb64,76100803,0,0x0,8
tick,0x7ffad1f6fb64,76116796,0,0x0,8
tick,0x7ffad1f6fb64,76132807,0,0x0,8
tick,0x7ffad1f6fb64,76148813,0,0x0,8
tick,0x7ffad1f6fb64,76163828,0,0x0,8
tick,0x7ffad1f6fb64,76179840,0,0x0,8
tick,0x7ffad1f6fb64,76195855,0,0x0,8
tick,0x7ffad1f6fb64,76210854,0,0x0,8
tick,0x7ffad1f6fb64,76226929,0,0x0,8
tick,0x7ffad1f6fb64,76242908,0,0x0,8
tick,0x7ffad1f6fb64,76258899,0,0x0,8
tick,0x7ffad1f6fb64,76273926,0,0x0,8
tick,0x7ffad1f6fb64,76289935,0,0x0,8
tick,0x7ffad1f6fb64,76304961,0,0x0,8
tick,0x7ffad1f6fb64,76320963,0,0x0,8
tick,0x7ffad1f6fb64,76336030,0,0x0,8
tick,0x7ffad1f6fb64,76351986,0,0x0,8
tick,0x7ffad1f6fb64,76368165,0,0x0,8
tick,0x7ffad1f6fb64,76384029,0,0x0,8
tick,0x7ffad1f6fb64,76399029,0,0x0,8
tick,0x7ffad1f6fb64,76415050,0,0x0,8
tick,0x7ffad1f6fb64,76431054,0,0x0,8
tick,0x7ffad1f6fb64,76447090,0,0x0,8
tick,0x7ffad1f6fb64,76463072,0,0x0,8
tick,0x7ffad1f6fb64,76478117,0,0x0,8
tick,0x7ffad1f6fb64,76494115,0,0x0,8
tick,0x7ffad1f6fb64,76509125,0,0x0,8
tick,0x7ffad1f6fb64,76525129,0,0x0,8
tick,0x7ffad1f6fb64,76540157,0,0x0,8
tick,0x7ffad1f6fb64,76555157,0,0x0,8
tick,0x7ffad1f6fb64,76571196,0,0x0,8
tick,0x7ffad1f6fb64,76587202,0,0x0,8
tick,0x7ffad1f6fb64,76603225,0,0x0,8
tick,0x7ffad1f6fb64,76619229,0,0x0,8
tick,0x7ffad1f6fb64,76635243,0,0x0,8
tick,0x7ffad1f6fb64,76650399,0,0x0,8
tick,0x7ffad1f6fb64,76665298,0,0x0,8
tick,0x7ffad1f6fb64,76680289,0,0x0,8
tick,0x7ffad1f6fb64,76695319,0,0x0,8
tick,0x7ffad1f6fb64,76711324,0,0x0,8
tick,0x7ffad1f6fb64,76727358,0,0x0,8
tick,0x7ffad1f6fb64,76742361,0,0x0,8
tick,0x7ffad1f6fb64,76757367,0,0x0,8
tick,0x7ffad1f6fb64,76772391,0,0x0,8
tick,0x7ffad1f6fb64,76788397,0,0x0,8
tick,0x7ffad1f6fb64,76804402,0,0x0,8
tick,0x7ffad1f6fb64,76820441,0,0x0,8
tick,0x7ffad1f6fb64,76835452,0,0x0,8
tick,0x7ffad1f6fb64,76851465,0,0x0,8
tick,0x7ffad1f6fb64,76866461,0,0x0,8
tick,0x7ffad1f6fb64,76881478,0,0x0,8
tick,0x7ffad1f6fb64,76896482,0,0x0,8
tick,0x7ffad1f6fb64,76912519,0,0x0,8
tick,0x7ffad1f6fb64,76927538,0,0x0,8
tick,0x7ffad1f6fb64,76942547,0,0x0,8
tick,0x7ffad1f6fb64,76957539,0,0x0,8
tick,0x7ffad1f6fb64,76972561,0,0x0,8
tick,0x7ffad1f6fb64,76988582,0,0x0,8
tick,0x7ffad1f6fb64,77004579,0,0x0,8
tick,0x7ffad1f6fb64,77020596,0,0x0,8
tick,0x7ffad1f6fb64,77035619,0,0x0,8
tick,0x7ffad1f6fb64,77050611,0,0x0,8
tick,0x7ffad1f6fb64,77065645,0,0x0,8
tick,0x7ffad1f6fb64,77080640,0,0x0,8
tick,0x7ffad1f6fb64,77095696,0,0x0,8
tick,0x7ffad1f6fb64,77111681,0,0x0,8
tick,0x7ffad1f6fb64,77126694,0,0x0,8
tick,0x7ffad1f6fb64,77142722,0,0x0,8
tick,0x7ffad1f6fb64,77158737,0,0x0,8
tick,0x7ffad1f6fb64,77174747,0,0x0,8
tick,0x7ffad1f6fb64,77190750,0,0x0,8
tick,0x7ffad1f6fb64,77205772,0,0x0,8
tick,0x7ffad1f6fb64,77221803,0,0x0,8
tick,0x7ffad1f6fb64,77236798,0,0x0,8
tick,0x7ffad1f6fb64,77252835,0,0x0,8
tick,0x7ffad1f6fb64,77268839,0,0x0,8
tick,0x7ffad1f6fb64,77284853,0,0x0,8
tick,0x7ffad1f6fb64,77299844,0,0x0,8
tick,0x7ffad1f6fb64,77315894,0,0x0,8
tick,0x7ffad1f6fb64,77331871,0,0x0,8
tick,0x7ffad1f6fb64,77347917,0,0x0,8
tick,0x7ffad1f6fb64,77363921,0,0x0,8
tick,0x7ffad1f6fb64,77379915,0,0x0,8
tick,0x7ffad1f6fb64,77395947,0,0x0,8
tick,0x7ffad1f6fb64,77410956,0,0x0,8
tick,0x7ffad1f6fb64,77427003,0,0x0,8
tick,0x7ffad1f6fb64,77442974,0,0x0,8
tick,0x7ffad1f6fb64,77458984,0,0x0,8
tick,0x7ffad1f6fb64,77474009,0,0x0,8
tick,0x7ffad1f6fb64,77489055,0,0x0,8
tick,0x7ffad1f6fb64,77504036,0,0x0,8
tick,0x7ffad1f6fb64,77519049,0,0x0,8
tick,0x7ffad1f6fb64,77535088,0,0x0,8
tick,0x7ffad1f6fb64,77550066,0,0x0,8
tick,0x7ffad1f6fb64,77566097,0,0x0,8
tick,0x7ffad1f6fb64,77581123,0,0x0,8
tick,0x7ffad1f6fb64,77596159,0,0x0,8
tick,0x7ffad1f6fb64,77612168,0,0x0,8
tick,0x7ffad1f6fb64,77628164,0,0x0,8
tick,0x7ffad1f6fb64,77644189,0,0x0,8
tick,0x7ffad1f6fb64,77659180,0,0x0,8
tick,0x7ffad1f6fb64,77675434,0,0x0,8
tick,0x7ffad1f6fb64,77691228,0,0x0,8
tick,0x7ffad1f6fb64,77706213,0,0x0,8
tick,0x7ffad1f6fb64,77721251,0,0x0,8
tick,0x7ffad1f6fb64,77737265,0,0x0,8
tick,0x7ffad1f6fb64,77753261,0,0x0,8
tick,0x7ffad1f6fb64,77768307,0,0x0,8
tick,0x7ffad1f6fb64,77783301,0,0x0,8
tick,0x7ffad1f6fb64,77799322,0,0x0,8
tick,0x7ffad1f6fb64,77815314,0,0x0,8
tick,0x7ffad1f6fb64,77831344,0,0x0,8
tick,0x7ffad1f6fb64,77846351,0,0x0,8
tick,0x7ffad1f6fb64,77862396,0,0x0,8
tick,0x7ffad1f6fb64,77877398,0,0x0,8
tick,0x7ffad1f6fb64,77892394,0,0x0,8
tick,0x7ffad1f6fb64,77908430,0,0x0,8
tick,0x7ffad1f6fb64,77923418,0,0x0,8
tick,0x7ffad1f6fb64,77939426,0,0x0,8
tick,0x7ffad1f6fb64,77955460,0,0x0,8
tick,0x7ffad1f6fb64,77971479,0,0x0,8
tick,0x7ffad1f6fb64,77987473,0,0x0,8
tick,0x7ffad1f6fb64,78002503,0,0x0,8
tick,0x7ffad1f6fb64,78017491,0,0x0,8
tick,0x7ffad1f6fb64,78033567,0,0x0,8
tick,0x7ffad1f6fb64,78049542,0,0x0,8
tick,0x7ffad1f6fb64,78065604,0,0x0,8
tick,0x7ffad1f6fb64,78080598,0,0x0,8
tick,0x7ffad1f6fb64,78095586,0,0x0,8
tick,0x7ffad1f6fb64,78110658,0,0x0,8
tick,0x7ffad1f6fb64,78125606,0,0x0,8
tick,0x7ffad1f6fb64,78140610,0,0x0,8
tick,0x7ffad1f6fb64,78156632,0,0x0,8
tick,0x7ffad1f6fb64,78172645,0,0x0,8
tick,0x7ffad1f6fb64,78187656,0,0x0,8
tick,0x7ffad1f6fb64,78202667,0,0x0,8
tick,0x7ffad1f6fb64,78217706,0,0x0,8
tick,0x7ffad1f6fb64,78233702,0,0x0,8
tick,0x7ffad1f6fb64,78249701,0,0x0,8
tick,0x7ffad1f6fb64,78265742,0,0x0,8
tick,0x7ffad1f6fb64,78280766,0,0x0,8
tick,0x7ffad1f6fb64,78295794,0,0x0,8
tick,0x7ffad1f6fb64,78311772,0,0x0,8
tick,0x7ffad1f6fb64,78327789,0,0x0,8
tick,0x7ffad1f6fb64,78343809,0,0x0,8
tick,0x7ffad1f6fb64,78359828,0,0x0,8
tick,0x7ffad1f6fb64,78374843,0,0x0,8
tick,0x7ffad1f6fb64,78389913,0,0x0,8
tick,0x7ffad1f6fb64,78405872,0,0x0,8
tick,0x7ffad1f6fb64,78421865,0,0x0,8
tick,0x7ffad1f6fb64,78437889,0,0x0,8
tick,0x7ffad1f6fb64,78453892,0,0x0,8
tick,0x7ffad1f6fb64,78468912,0,0x0,8
tick,0x7ffad1f6fb64,78484916,0,0x0,8
tick,0x7ffad1f6fb64,78500947,0,0x0,8
tick,0x7ffad1f6fb64,78516962,0,0x0,8
tick,0x7ffad1f6fb64,78531977,0,0x0,8
tick,0x7ffad1f6fb64,78547985,0,0x0,8
tick,0x7ffad1f6fb64,78563003,0,0x0,8
tick,0x7ffad1f6fb64,78579000,0,0x0,8
tick,0x7ffad1f6fb64,78595034,0,0x0,8
tick,0x7ffad1f6fb64,78610054,0,0x0,8
tick,0x7ffad1f6fb64,78626083,0,0x0,8
tick,0x7ffad1f6fb64,78641074,0,0x0,8
tick,0x7ffad1f6fb64,78656099,0,0x0,8
tick,0x7ffad1f6fb64,78671108,0,0x0,8
tick,0x7ffad1f6fb64,78687118,0,0x0,8
tick,0x7ffad1f6fb64,78703160,0,0x0,8
tick,0x7ffad1f6fb64,78719156,0,0x0,8
tick,0x7ffad1f6fb64,78735208,0,0x0,8
tick,0x7ffad1f6fb64,78750166,0,0x0,8
tick,0x7ffad1f6fb64,78766186,0,0x0,8
tick,0x7ffad1f6fb64,78781189,0,0x0,8
tick,0x7ffad1f6fb64,78796224,0,0x0,8
tick,0x7ffad1f6fb64,78811235,0,0x0,8
tick,0x7ffad1f6fb64,78827249,0,0x0,8
tick,0x7ffad1f6fb64,78843267,0,0x0,8
tick,0x7ffad1f6fb64,78859265,0,0x0,8
tick,0x7ffad1f6fb64,78874286,0,0x0,8
tick,0x7ffad1f6fb64,78890299,0,0x0,8
tick,0x7ffad1f6fb64,78905325,0,0x0,8
tick,0x7ffad1f6fb64,78920334,0,0x0,8
tick,0x7ffad1f6fb64,78936352,0,0x0,8
tick,0x7ffad1f6fb64,78952342,0,0x0,8
tick,0x7ffad1f6fb64,78968360,0,0x0,8
tick,0x7ffad1f6fb64,78983382,0,0x0,8
tick,0x7ffad1f6fb64,78999399,0,0x0,8
tick,0x7ffad1f6fb64,79015408,0,0x0,8
tick,0x7ffad1f6fb64,79030443,0,0x0,8
tick,0x7ffad1f6fb64,79045447,0,0x0,8
tick,0x7ffad1f6fb64,79060467,0,0x0,8
tick,0x7ffad1f6fb64,79075461,0,0x0,8
tick,0x7ffad1f6fb64,79091507,0,0x0,8
tick,0x7ffad1f6fb64,79107507,0,0x0,8
tick,0x7ffad1f6fb64,79122518,0,0x0,8
tick,0x7ffad1f6fb64,79137516,0,0x0,8
tick,0x7ffad1f6fb64,79153566,0,0x0,8
tick,0x7ffad1f6fb64,79169596,0,0x0,8
tick,0x7ffad1f6fb64,79185581,0,0x0,8
tick,0x7ffad1f6fb64,79201625,0,0x0,8
tick,0x7ffad1f6fb64,79216629,0,0x0,8
tick,0x7ffad1f6fb64,79232619,0,0x0,8
tick,0x7ffad1f6fb64,79248647,0,0x0,8
tick,0x7ffad1f6fb64,79263654,0,0x0,8
tick,0x7ffad1f6fb64,79279698,0,0x0,8
tick,0x7ffad1f6fb64,79294687,0,0x0,8
tick,0x7ffad1f6fb64,79310731,0,0x0,8
tick,0x7ffad1f6fb64,79325703,0,0x0,8
tick,0x7ffad1f6fb64,79340733,0,0x0,8
tick,0x7ffad1f6fb64,79356744,0,0x0,8
tick,0x7ffad1f6fb64,79372743,0,0x0,8
tick,0x7ffad1f6fb64,79387757,0,0x0,8
tick,0x7ffad1f6fb64,79402772,0,0x0,8
tick,0x7ffad1f6fb64,79417860,0,0x0,8
tick,0x7ffad1f6fb64,79433803,0,0x0,8
tick,0x7ffad1f6fb64,79448837,0,0x0,8
tick,0x7ffad1f6fb64,79464824,0,0x0,8
tick,0x7ffad1f6fb64,79479835,0,0x0,8
tick,0x7ffad1f6fb64,79494859,0,0x0,8
tick,0x7ffad1f6fb64,79510875,0,0x0,8
tick,0x7ffad1f6fb64,79526913,0,0x0,8
tick,0x7ffad1f6fb64,79541915,0,0x0,8
tick,0x7ffad1f6fb64,79557907,0,0x0,8
tick,0x7ffad1f6fb64,79572946,0,0x0,8
tick,0x7ffad1f6fb64,79588939,0,0x0,8
tick,0x7ffad1f6fb64,79604957,0,0x0,8
tick,0x7ffad1f6fb64,79620963,0,0x0,8
tick,0x7ffad1f6fb64,79637007,0,0x0,8
tick,0x7ffad1f6fb64,79652062,0,0x0,8
tick,0x7ffad1f6fb64,79668013,0,0x0,8
tick,0x7ffad1f6fb64,79684018,0,0x0,8
tick,0x7ffad1f6fb64,79699040,0,0x0,8
tick,0x7ffad1f6fb64,79715118,0,0x0,8
tick,0x7ffad1f6fb64,79731096,0,0x0,8
tick,0x7ffad1f6fb64,79747104,0,0x0,8
tick,0x7ffad1f6fb64,79763092,0,0x0,8
tick,0x7ffad1f6fb64,79778140,0,0x0,8
tick,0x7ffad1f6fb64,79794117,0,0x0,8
tick,0x7ffad1f6fb64,79810133,0,0x0,8
tick,0x7ffad1f6fb64,79825212,0,0x0,8
tick,0x7ffad1f6fb64,79840187,0,0x0,8
tick,0x7ffad1f6fb64,79856181,0,0x0,8
tick,0x7ffad1f6fb64,79872190,0,0x0,8
tick,0x7ffad1f6fb64,79888206,0,0x0,8
tick,0x7ffad1f6fb64,79903239,0,0x0,8
tick,0x7ffad1f6fb64,79919257,0,0x0,8
tick,0x7ffad1f6fb64,79935269,0,0x0,8
tick,0x7ffad1f6fb64,79950270,0,0x0,8
tick,0x7ffad1f6fb64,79965286,0,0x0,8
tick,0x7ffad1f6fb64,79980295,0,0x0,8
tick,0x7ffad1f6fb64,79995298,0,0x0,8
tick,0x7ffad1f6fb64,80011348,0,0x0,8
tick,0x7ffad1f6fb64,80027347,0,0x0,8
tick,0x7ffad1f6fb64,80043378,0,0x0,8
tick,0x7ffad1f6fb64,80058378,0,0x0,8
tick,0x7ffad1f6fb64,80073389,0,0x0,8
tick,0x7ffad1f6fb64,80089419,0,0x0,8
tick,0x7ffad1f6fb64,80105439,0,0x0,8
tick,0x7ffad1f6fb64,80120422,0,0x0,8
tick,0x7ffad1f6fb64,80136421,0,0x0,8
tick,0x7ffad1f6fb64,80151461,0,0x0,8
tick,0x7ffad1f6fb64,80166466,0,0x0,8
tick,0x7ffad1f6fb64,80181474,0,0x0,8
tick,0x7ffad1f6fb64,80197488,0,0x0,8
tick,0x7ffad1f6fb64,80213660,0,0x0,8
tick,0x7ffad1f6fb64,80228514,0,0x0,8
tick,0x7ffad1f6fb64,80244533,0,0x0,8
tick,0x7ffad1f6fb64,80260575,0,0x0,8
tick,0x7ffad1f6fb64,80275556,0,0x0,8
tick,0x7ffad1f6fb64,80291598,0,0x0,8
tick,0x7ffad1f6fb64,80307591,0,0x0,8
tick,0x7ffad1f6fb64,80322616,0,0x0,8
tick,0x7ffad1f6fb64,80337654,0,0x0,8
tick,0x7ffad1f6fb64,80353634,0,0x0,8
tick,0x7ffad1f6fb64,80369669,0,0x0,8
tick,0x7ffad1f6fb64,80385658,0,0x0,8
tick,0x7ffad1f6fb64,80400700,0,0x0,8
tick,0x7ffad1f6fb64,80416713,0,0x0,8
tick,0x7ffad1f6fb64,80432748,0,0x0,8
tick,0x7ffad1f6fb64,80448731,0,0x0,8
tick,0x7ffad1f6fb64,80463748,0,0x0,8
tick,0x7ffad1f6fb64,80479755,0,0x0,8
tick,0x7ffad1f6fb64,80495758,0,0x0,8
tick,0x7ffad1f6fb64,80511796,0,0x0,8
tick,0x7ffad1f6fb64,80526801,0,0x0,8
tick,0x7ffad1f6fb64,80541798,0,0x0,8
tick,0x7ffad1f6fb64,80556827,0,0x0,8
tick,0x7ffad1f6fb64,80572830,0,0x0,8
tick,0x7ffad1f6fb64,80588861,0,0x0,8
tick,0x7ffad1f6fb64,80604869,0,0x0,8
tick,0x7ffad1f6fb64,80619888,0,0x0,8
tick,0x7ffad1f6fb64,80635884,0,0x0,8
tick,0x7ffad1f6fb64,80651931,0,0x0,8
tick,0x7ffad1f6fb64,80666962,0,0x0,8
tick,0x7ffad1f6fb64,80681929,0,0x0,8
tick,0x7ffad1f6fb64,80696990,0,0x0,8
tick,0x7ffad1f6fb64,80712983,0,0x0,8
tick,0x7ffad1f6fb64,80727970,0,0x0,8
tick,0x7ffad1f6fb64,80742998,0,0x0,8
tick,0x7ffad1f6fb64,80758995,0,0x0,8
tick,0x7ffad1f6fb64,80774025,0,0x0,8
tick,0x7ffad1f6fb64,80789024,0,0x0,8
tick,0x7ffad1f6fb64,80804046,0,0x0,8
tick,0x7ffad1f6fb64,80820047,0,0x0,8
tick,0x7ffad1f6fb64,80836097,0,0x0,8
tick,0x7ffad1f6fb64,80851229,0,0x0,8
tick,0x7ffad1f6fb64,80866101,0,0x0,8
tick,0x7ffad1f6fb64,80881102,0,0x0,8
tick,0x7ffad1f6fb64,80897148,0,0x0,8
tick,0x7ffad1f6fb64,80913153,0,0x0,8
tick,0x7ffad1f6fb64,80929145,0,0x0,8
tick,0x7ffad1f6fb64,80944187,0,0x0,8
tick,0x7ffad1f6fb64,80960208,0,0x0,8
tick,0x7ffad1f6fb64,80976195,0,0x0,8
tick,0x7ffad1f6fb64,80991217,0,0x0,8
tick,0x7ffad1f6fb64,81006237,0,0x0,8
tick,0x7ffad1f6fb64,81021262,0,0x0,8
tick,0x7ffad1f6fb64,81037272,0,0x0,8
tick,0x7ffad1f6fb64,81053268,0,0x0,8
tick,0x7ffad1f6fb64,81069326,0,0x0,8
tick,0x7ffad1f6fb64,81084316,0,0x0,8
tick,0x7ffad1f6fb64,81099343,0,0x0,8
tick,0x7ffad1f6fb64,81114336,0,0x0,8
tick,0x7ffad1f6fb64,81130351,0,0x0,8
tick,0x7ffad1f6fb64,81146356,0,0x0,8
tick,0x7ffad1f6fb64,81161377,0,0x0,8
tick,0x7ffad1f6fb64,81177403,0,0x0,8
tick,0x7ffad1f6fb64,81192398,0,0x0,8
tick,0x7ffad1f6fb64,81208412,0,0x0,8
tick,0x7ffad1f6fb64,81223441,0,0x0,8
tick,0x7ffad1f6fb64,81238466,0,0x0,8
tick,0x7ffad1f6fb64,81253449,0,0x0,8
tick,0x7ffad1f6fb64,81269490,0,0x0,8
tick,0x7ffad1f6fb64,81285481,0,0x0,8
tick,0x7ffad1f6fb64,81301489,0,0x0,8
tick,0x7ffad1f6fb64,81317514,0,0x0,8
tick,0x7ffad1f6fb64,81332527,0,0x0,8
tick,0x7ffad1f6fb64,81348547,0,0x0,8
tick,0x7ffad1f6fb64,81363593,0,0x0,8
tick,0x7ffad1f6fb64,81379576,0,0x0,8
tick,0x7ffad1f6fb64,81395588,0,0x0,8
tick,0x7ffad1f6fb64,81410617,0,0x0,8
tick,0x7ffad1f6fb64,81425615,0,0x0,8
tick,0x7ffad1f6fb64,81440616,0,0x0,8
tick,0x7ffad1f6fb64,81456668,0,0x0,8
tick,0x7ffad1f6fb64,81472649,0,0x0,8
tick,0x7ffad1f6fb64,81487676,0,0x0,8
tick,0x7ffad1f6fb64,81502676,0,0x0,8
tick,0x7ffad1f6fb64,81517729,0,0x0,8
tick,0x7ffad1f6fb64,81533711,0,0x0,8
tick,0x7ffad1f6fb64,81549722,0,0x0,8
tick,0x7ffad1f6fb64,81565754,0,0x0,8
tick,0x7ffad1f6fb64,81580748,0,0x0,8
tick,0x7ffad1f6fb64,81595788,0,0x0,8
tick,0x7ffad1f6fb64,81610791,0,0x0,8
tick,0x7ffad1f6fb64,81625775,0,0x0,8
tick,0x7ffad1f6fb64,81640816,0,0x0,8
tick,0x7ffad1f6fb64,81656822,0,0x0,8
tick,0x7ffad1f6fb64,81672855,0,0x0,8
tick,0x7ffad1f6fb64,81688847,0,0x0,8
tick,0x7ffad1f6fb64,81703873,0,0x0,8
tick,0x7ffad1f6fb64,81719897,0,0x0,8
tick,0x7ffad1f6fb64,81735887,0,0x0,8
tick,0x7ffad1f6fb64,81751899,0,0x0,8
tick,0x7ffad1f6fb64,81766934,0,0x0,8
tick,0x7ffad1f6fb64,81781943,0,0x0,8
tick,0x7ffad1f6fb64,81796952,0,0x0,8
tick,0x7ffad1f6fb64,81812960,0,0x0,8
tick,0x7ffad1f6fb64,81828978,0,0x0,8
tick,0x7ffad1f6fb64,81844977,0,0x0,8
tick,0x7ffad1f6fb64,81861000,0,0x0,8
tick,0x7ffad1f6fb64,81877051,0,0x0,8
tick,0x7ffad1f6fb64,81892051,0,0x0,8
tick,0x7ffad1f6fb64,81907044,0,0x0,8
tick,0x7ffad1f6fb64,81923066,0,0x0,8
tick,0x7ffad1f6fb64,81939061,0,0x0,8
tick,0x7ffad1f6fb64,81955090,0,0x0,8
tick,0x7ffad1f6fb64,81970167,0,0x0,8
tick,0x7ffad1f6fb64,81985114,0,0x0,8
tick,0x7ffad1f6fb64,82000160,0,0x0,8
tick,0x7ffad1f6fb64,82016161,0,0x0,8
tick,0x7ffad1f6fb64,82031167,0,0x0,8
tick,0x7ffad1f6fb64,82047172,0,0x0,8
tick,0x7ffad1f6fb64,82062192,0,0x0,8
tick,0x7ffad1f6fb64,82077218,0,0x0,8
tick,0x7ffad1f6fb64,82093215,0,0x0,8
tick,0x7ffad1f6fb64,82109248,0,0x0,8
tick,0x7ffad1f6fb64,82125250,0,0x0,8
tick,0x7ffad1f6fb64,82140264,0,0x0,8
tick,0x7ffad1f6fb64,82156271,0,0x0,8
tick,0x7ffad1f6fb64,82171286,0,0x0,8
tick,0x7ffad1f6fb64,82187300,0,0x0,8
tick,0x7ffad1f6fb64,82203310,0,0x0,8
tick,0x7ffad1f6fb64,82219331,0,0x0,8
tick,0x7ffad1f6fb64,82235342,0,0x0,8
tick,0x7ffad1f6fb64,82250379,0,0x0,8
tick,0x7ffad1f6fb64,82266396,0,0x0,8
tick,0x7ffad1f6fb64,82281385,0,0x0,8
tick,0x7ffad1f6fb64,82296409,0,0x0,8
tick,0x7ffad1f6fb64,82312411,0,0x0,8
tick,0x7ffad1f6fb64,82327449,0,0x0,8
tick,0x7ffad1f6fb64,82342462,0,0x0,8
tick,0x7ffad1f6fb64,82358467,0,0x0,8
tick,0x7ffad1f6fb64,82373464,0,0x0,8
tick,0x7ffad1f6fb64,82389526,0,0x0,8
tick,0x7ffad1f6fb64,82405496,0,0x0,8
tick,0x7ffad1f6fb64,82420518,0,0x0,8
tick,0x7ffad1f6fb64,82436545,0,0x0,8
tick,0x7ffad1f6fb64,82452547,0,0x0,8
tick,0x7ffad1f6fb64,82468564,0,0x0,8
tick,0x7ffad1f6fb64,82483581,0,0x0,8
tick,0x7ffad1f6fb64,82499580,0,0x0,8
tick,0x7ffad1f6fb64,82515604,0,0x0,8
tick,0x7ffad1f6fb64,82530640,0,0x0,8
tick,0x7ffad1f6fb64,82545636,0,0x0,8
tick,0x7ffad1f6fb64,82560645,0,0x0,8
tick,0x7ffad1f6fb64,82575672,0,0x0,8
tick,0x7ffad1f6fb64,82591666,0,0x0,8
tick,0x7ffad1f6fb64,82606680,0,0x0,8
tick,0x7ffad1f6fb64,82622692,0,0x0,8
tick,0x7ffad1f6fb64,82637740,0,0x0,8
tick,0x7ffad1f6fb64,82653737,0,0x0,8
tick,0x7ffad1f6fb64,82668745,0,0x0,8
tick,0x7ffad1f6fb64,82684760,0,0x0,8
tick,0x7ffad1f6fb64,82699775,0,0x0,8
tick,0x7ffad1f6fb64,82715778,0,0x0,8
tick,0x7ffad1f6fb64,82731787,0,0x0,8
tick,0x7ffad1f6fb64,82747797,0,0x0,8
tick,0x7ffad1f6fb64,82762873,0,0x0,8
tick,0x7ffad1f6fb64,82777835,0,0x0,8
tick,0x7ffad1f6fb64,82792845,0,0x0,8
tick,0x7ffad1f6fb64,82808879,0,0x0,8
tick,0x7ffad1f6fb64,82824892,0,0x0,8
tick,0x7ffad1f6fb64,82839891,0,0x0,8
tick,0x7ffad1f6fb64,82855918,0,0x0,8
tick,0x7ffad1f6fb64,82871936,0,0x0,8
tick,0x7ffad1f6fb64,82887938,0,0x0,8
tick,0x7ffad1f6fb64,82902988,0,0x0,8
tick,0x7ffad1f6fb64,82918964,0,0x0,8
tick,0x7ffad1f6fb64,82934992,0,0x0,8
tick,0x7ffad1f6fb64,82950001,0,0x0,8
tick,0x7ffad1f6fb64,82966005,0,0x0,8
tick,0x7ffad1f6fb64,82981034,0,0x0,8
tick,0x7ffad1f6fb64,82996052,0,0x0,8
tick,0x7ffad1f6fb64,83012063,0,0x0,8
tick,0x7ffad1f6fb64,83028082,0,0x0,8
tick,0x7ffad1f6fb64,83043075,0,0x0,8
tick,0x7ffad1f6fb64,83058100,0,0x0,8
tick,0x7ffad1f6fb64,83073112,0,0x0,8
tick,0x7ffad1f6fb64,83089146,0,0x0,8
tick,0x7ffad1f6fb64,83104122,0,0x0,8
tick,0x7ffad1f6fb64,83119151,0,0x0,8
tick,0x7ffad1f6fb64,83135187,0,0x0,8
tick,0x7ffad1f6fb64,83150192,0,0x0,8
tick,0x7ffad1f6fb64,83166198,0,0x0,8
tick,0x7ffad1f6fb64,83181206,0,0x0,8
tick,0x7ffad1f6fb64,83197219,0,0x0,8
tick,0x7ffad1f6fb64,83213258,0,0x0,8
tick,0x7ffad1f6fb64,83229248,0,0x0,8
tick,0x7ffad1f6fb64,83245268,0,0x0,8
tick,0x7ffad1f6fb64,83260276,0,0x0,8
tick,0x7ffad1f6fb64,83276296,0,0x0,8
tick,0x7ffad1f6fb64,83291312,0,0x0,8
tick,0x7ffad1f6fb64,83307304,0,0x0,8
tick,0x7ffad1f6fb64,83322378,0,0x0,8
tick,0x7ffad1f6fb64,83337393,0,0x0,8
tick,0x7ffad1f6fb64,83353368,0,0x0,8
tick,0x7ffad1f6fb64,83369384,0,0x0,8
tick,0x7ffad1f6fb64,83385420,0,0x0,8
tick,0x7ffad1f6fb64,83401422,0,0x0,8
tick,0x7ffad1f6fb64,83417495,0,0x0,8
tick,0x7ffad1f6fb64,83433436,0,0x0,8
tick,0x7ffad1f6fb64,83448460,0,0x0,8
tick,0x7ffad1f6fb64,83463477,0,0x0,8
tick,0x7ffad1f6fb64,83478503,0,0x0,8
tick,0x7ffad1f6fb64,83494497,0,0x0,8
tick,0x7ffad1f6fb64,83510541,0,0x0,8
tick,0x7ffad1f6fb64,83525516,0,0x0,8
tick,0x7ffad1f6fb64,83540549,0,0x0,8
tick,0x7ffad1f6fb64,83555548,0,0x0,8
tick,0x7ffad1f6fb64,83570653,0,0x0,8
tick,0x7ffad1f6fb64,83586565,0,0x0,8
tick,0x7ffad1f6fb64,83601591,0,0x0,8
tick,0x7ffad1f6fb64,83616592,0,0x0,8
tick,0x7ffad1f6fb64,83632636,0,0x0,8
tick,0x7ffad1f6fb64,83648655,0,0x0,8
tick,0x7ffad1f6fb64,83664692,0,0x0,8
tick,0x7ffad1f6fb64,83679677,0,0x0,8
tick,0x7ffad1f6fb64,83695700,0,0x0,8
tick,0x7ffad1f6fb64,83710693,0,0x0,8
tick,0x7ffad1f6fb64,83725708,0,0x0,8
tick,0x7ffad1f6fb64,83740746,0,0x0,8
tick,0x7ffad1f6fb64,83756739,0,0x0,8
tick,0x7ffad1f6fb64,83772795,0,0x0,8
tick,0x7ffad1f6fb64,83788767,0,0x0,8
tick,0x7ffad1f6fb64,83804775,0,0x0,8
tick,0x7ffad1f6fb64,83819797,0,0x0,8
tick,0x7ffad1f6fb64,83834838,0,0x0,8
tick,0x7ffad1f6fb64,83849840,0,0x0,8
tick,0x7ffad1f6fb64,83865866,0,0x0,8
tick,0x7ffad1f6fb64,83881930,0,0x0,8
tick,0x7ffad1f6fb64,83896861,0,0x0,8
tick,0x7ffad1f6fb64,83911865,0,0x0,8
tick,0x7ffad1f6fb64,83927917,0,0x0,8
tick,0x7ffad1f6fb64,83943912,0,0x0,8
tick,0x7ffad1f6fb64,83959937,0,0x0,8
tick,0x7ffad1f6fb64,83975942,0,0x0,8
tick,0x7ffad1f6fb64,83991963,0,0x0,8
tick,0x7ffad1f6fb64,84006985,0,0x0,8
tick,0x7ffad1f6fb64,84023004,0,0x0,8
tick,0x7ffad1f6fb64,84039013,0,0x0,8
tick,0x7ffad1f6fb64,84054984,0,0x0,8
tick,0x7ffad1f6fb64,84070061,0,0x0,8
tick,0x7ffad1f6fb64,84086032,0,0x0,8
tick,0x7ffad1f6fb64,84102086,0,0x0,8
tick,0x7ffad1f6fb64,84117065,0,0x0,8
tick,0x7ffad1f6fb64,84132079,0,0x0,8
tick,0x7ffad1f6fb64,84147126,0,0x0,8
tick,0x7ffad1f6fb64,84163109,0,0x0,8
tick,0x7ffad1f6fb64,84178186,0,0x0,8
tick,0x7ffad1f6fb64,84194188,0,0x0,8
tick,0x7ffad1f6fb64,84210165,0,0x0,8
tick,0x7ffad1f6fb64,84226191,0,0x0,8
tick,0x7ffad1f6fb64,84242175,0,0x0,8
tick,0x7ffad1f6fb64,84257207,0,0x0,8
tick,0x7ffad1f6fb64,84273225,0,0x0,8
tick,0x7ffad1f6fb64,84289248,0,0x0,8
tick,0x7ffad1f6fb64,84304329,0,0x0,8
tick,0x7ffad1f6fb64,84319285,0,0x0,8
tick,0x7ffad1f6fb64,84334273,0,0x0,8
tick,0x7ffad1f6fb64,84349265,0,0x0,8
tick,0x7ffad1f6fb64,84365299,0,0x0,8
tick,0x7ffad1f6fb64,84380309,0,0x0,8
tick,0x7ffad1f6fb64,84396330,0,0x0,8
tick,0x7ffad1f6fb64,84412319,0,0x0,8
tick,0x7ffad1f6fb64,84427336,0,0x0,8
tick,0x7ffad1f6fb64,84442391,0,0x0,8
tick,0x7ffad1f6fb64,84458380,0,0x0,8
tick,0x7ffad1f6fb64,84473430,0,0x0,8
tick,0x7ffad1f6fb64,84489395,0,0x0,8
tick,0x7ffad1f6fb64,84505438,0,0x0,8
tick,0x7ffad1f6fb64,84521436,0,0x0,8
tick,0x7ffad1f6fb64,84537512,0,0x0,8
tick,0x7ffad1f6fb64,84552461,0,0x0,8
tick,0x7ffad1f6fb64,84568485,0,0x0,8
tick,0x7ffad1f6fb64,84584647,0,0x0,8
tick,0x7ffad1f6fb64,84599524,0,0x0,8
tick,0x7ffad1f6fb64,84614530,0,0x0,8
tick,0x7ffad1f6fb64,84630589,0,0x0,8
tick,0x7ffad1f6fb64,84645551,0,0x0,8
tick,0x7ffad1f6fb64,84660567,0,0x0,8
tick,0x7ffad1f6fb64,84675571,0,0x0,8
tick,0x7ffad1f6fb64,84690623,0,0x0,8
tick,0x7ffad1f6fb64,84706607,0,0x0,8
tick,0x7ffad1f6fb64,84722636,0,0x0,8
tick,0x7ffad1f6fb64,84737629,0,0x0,8
tick,0x7ffad1f6fb64,84753641,0,0x0,8
tick,0x7ffad1f6fb64,84769667,0,0x0,8
tick,0x7ffad1f6fb64,84785673,0,0x0,8
tick,0x7ffad1f6fb64,84800676,0,0x0,8
tick,0x7ffad1f6fb64,84816705,0,0x0,8
tick,0x7ffad1f6fb64,84832724,0,0x0,8
tick,0x7ffad1f6fb64,84848732,0,0x0,8
tick,0x7ffad1f6fb64,84863792,0,0x0,8
tick,0x7ffad1f6fb64,84879777,0,0x0,8
tick,0x7ffad1f6fb64,84894774,0,0x0,8
tick,0x7ffad1f6fb64,84909786,0,0x0,8
tick,0x7ffad1f6fb64,84924804,0,0x0,8
tick,0x7ffad1f6fb64,84939853,0,0x0,8
tick,0x7ffad1f6fb64,84955856,0,0x0,8
tick,0x7ffad1f6fb64,84971833,0,0x0,8
tick,0x7ffad1f6fb64,84987857,0,0x0,8
tick,0x7ffad1f6fb64,85002896,0,0x0,8
tick,0x7ffad1f6fb64,85017912,0,0x0,8
tick,0x7ffad1f6fb64,85033915,0,0x0,8
tick,0x7ffad1f6fb64,85049930,0,0x0,8
tick,0x7ffad1f6fb64,85064972,0,0x0,8
tick,0x7ffad1f6fb64,85079973,0,0x0,8
tick,0x7ffad1f6fb64,85094963,0,0x0,8
tick,0x7ffad1f6fb64,85109989,0,0x0,8
tick,0x7ffad1f6fb64,85125985,0,0x0,8
tick,0x7ffad1f6fb64,85142007,0,0x0,8
tick,0x7ffad1f6fb64,85158037,0,0x0,8
tick,0x7ffad1f6fb64,85173027,0,0x0,8
tick,0x7ffad1f6fb64,85189039,0,0x0,8
tick,0x7ffad1f6fb64,85205055,0,0x0,8
tick,0x7ffad1f6fb64,85220058,0,0x0,8
tick,0x7ffad1f6fb64,85236065,0,0x0,8
tick,0x7ffad1f6fb64,85252093,0,0x0,8
tick,0x7ffad1f6fb64,85268121,0,0x0,8
tick,0x7ffad1f6fb64,85283120,0,0x0,8
tick,0x7ffad1f6fb64,85298148,0,0x0,8
tick,0x7ffad1f6fb64,85313156,0,0x0,8
tick,0x7ffad1f6fb64,85329160,0,0x0,8
tick,0x7ffad1f6fb64,85344179,0,0x0,8
tick,0x7ffad1f6fb64,85360243,0,0x0,8
tick,0x7ffad1f6fb64,85376246,0,0x0,8
tick,0x7ffad1f6fb64,85392223,0,0x0,8
tick,0x7ffad1f6fb64,85408243,0,0x0,8
tick,0x7ffad1f6fb64,85423258,0,0x0,8
tick,0x7ffad1f6fb64,85439271,0,0x0,8
tick,0x7ffad1f6fb64,85455294,0,0x0,8
tick,0x7ffad1f6fb64,85471307,0,0x0,8
tick,0x7ffad1f6fb64,85486327,0,0x0,8
tick,0x7ffad1f6fb64,85502330,0,0x0,8
tick,0x7ffad1f6fb64,85517340,0,0x0,8
tick,0x7ffad1f6fb64,85532370,0,0x0,8
tick,0x7ffad1f6fb64,85548401,0,0x0,8
tick,0x7ffad1f6fb64,85564421,0,0x0,8
tick,0x7ffad1f6fb64,85580460,0,0x0,8
tick,0x7ffad1f6fb64,85595415,0,0x0,8
tick,0x7ffad1f6fb64,85610438,0,0x0,8
tick,0x7ffad1f6fb64,85625459,0,0x0,8
tick,0x7ffad1f6fb64,85640494,0,0x0,8
tick,0x7ffad1f6fb64,85655481,0,0x0,8
tick,0x7ffad1f6fb64,85670482,0,0x0,8
tick,0x7ffad1f6fb64,85686503,0,0x0,8
tick,0x7ffad1f6fb64,85702550,0,0x0,8
tick,0x7ffad1f6fb64,85717525,0,0x0,8
tick,0x7ffad1f6fb64,85732531,0,0x0,8
tick,0x7ffad1f6fb64,85748552,0,0x0,8
tick,0x7ffad1f6fb64,85764572,0,0x0,8
tick,0x7ffad1f6fb64,85779569,0,0x0,8
tick,0x7ffad1f6fb64,85795596,0,0x0,8
tick,0x7ffad1f6fb64,85810622,0,0x0,8
tick,0x7ffad1f6fb64,85825630,0,0x0,8
tick,0x7ffad1f6fb64,85840626,0,0x0,8
tick,0x7ffad1f6fb64,85856640,0,0x0,8
tick,0x7ffad1f6fb64,85872664,0,0x0,8
tick,0x7ffad1f6fb64,85887689,0,0x0,8
tick,0x7ffad1f6fb64,85902695,0,0x0,8
tick,0x7ffad1f6fb64,85917716,0,0x0,8
tick,0x7ffad1f6fb64,85933739,0,0x0,8
tick,0x7ffad1f6fb64,85949727,0,0x0,8
tick,0x7ffad1f6fb64,85965750,0,0x0,8
tick,0x7ffad1f6fb64,85980787,0,0x0,8
tick,0x7ffad1f6fb64,85995776,0,0x0,8
tick,0x7ffad1f6fb64,86011801,0,0x0,8
tick,0x7ffad1f6fb64,86027812,0,0x0,8
tick,0x7ffad1f6fb64,86042808,0,0x0,8
tick,0x7ffad1f6fb64,86057830,0,0x0,8
tick,0x7ffad1f6fb64,86073892,0,0x0,8
tick,0x7ffad1f6fb64,86089858,0,0x0,8
tick,0x7ffad1f6fb64,86105882,0,0x0,8
tick,0x7ffad1f6fb64,86120906,0,0x0,8
tick,0x7ffad1f6fb64,86136911,0,0x0,8
tick,0x7ffad1f6fb64,86151901,0,0x0,8
tick,0x7ffad1f6fb64,86166958,0,0x0,8
tick,0x7ffad1f6fb64,86181942,0,0x0,8
tick,0x7ffad1f6fb64,86197954,0,0x0,8
tick,0x7ffad1f6fb64,86213970,0,0x0,8
tick,0x7ffad1f6fb64,86229980,0,0x0,8
tick,0x7ffad1f6fb64,86246025,0,0x0,8
tick,0x7ffad1f6fb64,86262012,0,0x0,8
tick,0x7ffad1f6fb64,86278024,0,0x0,8
tick,0x7ffad1f6fb64,86293044,0,0x0,8
tick,0x7ffad1f6fb64,86309056,0,0x0,8
tick,0x7ffad1f6fb64,86325073,0,0x0,8
tick,0x7ffad1f6fb64,86340060,0,0x0,8
tick,0x7ffad1f6fb64,86356109,0,0x0,8
tick,0x7ffad1f6fb64,86371136,0,0x0,8
tick,0x7ffad1f6fb64,86387149,0,0x0,8
tick,0x7ffad1f6fb64,86403146,0,0x0,8
tick,0x7ffad1f6fb64,86419173,0,0x0,8
tick,0x7ffad1f6fb64,86435167,0,0x0,8
tick,0x7ffad1f6fb64,86450188,0,0x0,8
tick,0x7ffad1f6fb64,86466210,0,0x0,8
tick,0x7ffad1f6fb64,86481245,0,0x0,8
tick,0x7ffad1f6fb64,86496242,0,0x0,8
tick,0x7ffad1f6fb64,86511252,0,0x0,8
tick,0x7ffad1f6fb64,86527252,0,0x0,8
tick,0x7ffad1f6fb64,86542266,0,0x0,8
tick,0x7ffad1f6fb64,86558466,0,0x0,8
tick,0x7ffad1f6fb64,86573336,0,0x0,8
tick,0x7ffad1f6fb64,86589333,0,0x0,8
tick,0x7ffad1f6fb64,86605323,0,0x0,8
tick,0x7ffad1f6fb64,86620345,0,0x0,8
tick,0x7ffad1f6fb64,86636355,0,0x0,8
tick,0x7ffad1f6fb64,86652368,0,0x0,8
tick,0x7ffad1f6fb64,86667382,0,0x0,8
tick,0x7ffad1f6fb64,86682409,0,0x0,8
tick,0x7ffad1f6fb64,86698417,0,0x0,8
tick,0x7ffad1f6fb64,86714451,0,0x0,8
tick,0x7ffad1f6fb64,86729450,0,0x0,8
tick,0x7ffad1f6fb64,86745473,0,0x0,8
tick,0x7ffad1f6fb64,86761502,0,0x0,8
tick,0x7ffad1f6fb64,86777491,0,0x0,8
tick,0x7ffad1f6fb64,86792571,0,0x0,8
tick,0x7ffad1f6fb64,86807558,0,0x0,8
tick,0x7ffad1f6fb64,86823569,0,0x0,8
tick,0x7ffad1f6fb64,86838605,0,0x0,8
tick,0x7ffad1f6fb64,86853582,0,0x0,8
tick,0x7ffad1f6fb64,86869595,0,0x0,8
tick,0x7ffad1f6fb64,86885606,0,0x0,8
tick,0x7ffad1f6fb64,86901615,0,0x0,8
tick,0x7ffad1f6fb64,86916609,0,0x0,8
tick,0x7ffad1f6fb64,86932651,0,0x0,8
tick,0x7ffad1f6fb64,86948651,0,0x0,8
tick,0x7ffad1f6fb64,86963658,0,0x0,8
tick,0x7ffad1f6fb64,86978690,0,0x0,8
tick,0x7ffad1f6fb64,86994719,0,0x0,8
tick,0x7ffad1f6fb64,87009728,0,0x0,8
tick,0x7ffad1f6fb64,87025723,0,0x0,8
tick,0x7ffad1f6fb64,87040731,0,0x0,8
tick,0x7ffad1f6fb64,87055788,0,0x0,8
tick,0x7ffad1f6fb64,87070754,0,0x0,8
tick,0x7ffad1f6fb64,87086751,0,0x0,8
tick,0x7ffad1f6fb64,87101802,0,0x0,8
tick,0x7ffad1f6fb64,87117814,0,0x0,8
tick,0x7ffad1f6fb64,87133801,0,0x0,8
tick,0x7ffad1f6fb64,87149810,0,0x0,8
tick,0x7ffad1f6fb64,87164836,0,0x0,8
tick,0x7ffad1f6fb64,87179873,0,0x0,8
tick,0x7ffad1f6fb64,87194870,0,0x0,8
tick,0x7ffad1f6fb64,87210882,0,0x0,8
tick,0x7ffad1f6fb64,87226943,0,0x0,8
tick,0x7ffad1f6fb64,87242923,0,0x0,8
tick,0x7ffad1f6fb64,87257935,0,0x0,8
tick,0x7ffad1f6fb64,87272972,0,0x0,8
tick,0x7ffad1f6fb64,87287978,0,0x0,8
tick,0x7ffad1f6fb64,87302975,0,0x0,8
tick,0x7ffad1f6fb64,87318998,0,0x0,8
tick,0x7ffad1f6fb64,87334077,0,0x0,8
tick,0x7ffad1f6fb64,87350030,0,0x0,8
tick,0x7ffad1f6fb64,87366046,0,0x0,8
tick,0x7ffad1f6fb64,87381042,0,0x0,8
tick,0x7ffad1f6fb64,87396074,0,0x0,8
tick,0x7ffad1f6fb64,87411109,0,0x0,8
tick,0x7ffad1f6fb64,87427087,0,0x0,8
tick,0x7ffad1f6fb64,87443116,0,0x0,8
tick,0x7ffad1f6fb64,87459098,0,0x0,8
tick,0x7ffad1f6fb64,87474133,0,0x0,8
tick,0x7ffad1f6fb64,87490148,0,0x0,8
tick,0x7ffad1f6fb64,87506200,0,0x0,8
tick,0x7ffad1f6fb64,87521203,0,0x0,8
tick,0x7ffad1f6fb64,87536191,0,0x0,8
tick,0x7ffad1f6fb64,87551193,0,0x0,8
tick,0x7ffad1f6fb64,87566215,0,0x0,8
tick,0x7ffad1f6fb64,87581241,0,0x0,8
tick,0x7ffad1f6fb64,87596227,0,0x0,8
tick,0x7ffad1f6fb64,87612271,0,0x0,8
tick,0x7ffad1f6fb64,87627252,0,0x0,8
tick,0x7ffad1f6fb64,87642296,0,0x0,8
tick,0x7ffad1f6fb64,87657324,0,0x0,8
tick,0x7ffad1f6fb64,87672325,0,0x0,8
tick,0x7ffad1f6fb64,87688360,0,0x0,8
tick,0x7ffad1f6fb64,87704367,0,0x0,8
tick,0x7ffad1f6fb64,87720629,0,0x0,8
tick,0x7ffad1f6fb64,87736386,0,0x0,8
tick,0x7ffad1f6fb64,87751391,0,0x0,8
tick,0x7ffad1f6fb64,87766414,0,0x0,8
tick,0x7ffad1f6fb64,87781392,0,0x0,8
tick,0x7ffad1f6fb64,87797431,0,0x0,8
tick,0x7ffad1f6fb64,87813519,0,0x0,8
tick,0x7ffad1f6fb64,87829446,0,0x0,8
tick,0x7ffad1f6fb64,87844462,0,0x0,8
tick,0x7ffad1f6fb64,87860478,0,0x0,8
tick,0x7ffad1f6fb64,87875513,0,0x0,8
tick,0x7ffad1f6fb64,87891502,0,0x0,8
tick,0x7ffad1f6fb64,87907536,0,0x0,8
tick,0x7ffad1f6fb64,87923567,0,0x0,8
tick,0x7ffad1f6fb64,87938616,0,0x0,8
tick,0x7ffad1f6fb64,87954561,0,0x0,8
tick,0x7ffad1f6fb64,87970605,0,0x0,8
tick,0x7ffad1f6fb64,87985655,0,0x0,8
tick,0x7ffad1f6fb64,88001607,0,0x0,8
tick,0x7ffad1f6fb64,88016674,0,0x0,8
tick,0x7ffad1f6fb64,88031679,0,0x0,8
tick,0x7ffad1f6fb64,88046644,0,0x0,8
tick,0x7ffad1f6fb64,88062668,0,0x0,8
tick,0x7ffad1f6fb64,88078677,0,0x0,8
tick,0x7ffad1f6fb64,88093814,0,0x0,8
tick,0x7ffad1f6fb64,88109730,0,0x0,8
tick,0x7ffad1f6fb64,88124730,0,0x0,8
tick,0x7ffad1f6fb64,88139724,0,0x0,8
tick,0x7ffad1f6fb64,88155729,0,0x0,8
tick,0x7ffad1f6fb64,88171756,0,0x0,8
tick,0x7ffad1f6fb64,88187774,0,0x0,8
tick,0x7ffad1f6fb64,88202789,0,0x0,8
tick,0x7ffad1f6fb64,88218839,0,0x0,8
tick,0x7ffad1f6fb64,88234842,0,0x0,8
tick,0x7ffad1f6fb64,88249825,0,0x0,8
tick,0x7ffad1f6fb64,88265891,0,0x0,8
tick,0x7ffad1f6fb64,88280914,0,0x0,8
tick,0x7ffad1f6fb64,88295898,0,0x0,8
tick,0x7ffad1f6fb64,88311923,0,0x0,8
tick,0x7ffad1f6fb64,88327894,0,0x0,8
tick,0x7ffad1f6fb64,88343903,0,0x0,8
tick,0x7ffad1f6fb64,88359059,0,0x0,8
tick,0x7ffad1f6fb64,88374980,0,0x0,8
tick,0x7ffad1f6fb64,88391001,0,0x0,8
tick,0x7ffad1f6fb64,88406010,0,0x0,8
tick,0x7ffad1f6fb64,88421001,0,0x0,8
tick,0x7ffad1f6fb64,88436989,0,0x0,8
tick,0x7ffad1f6fb64,88452003,0,0x0,8
tick,0x7ffad1f6fb64,88468053,0,0x0,8
tick,0x7ffad1f6fb64,88484070,0,0x0,8
tick,0x7ffad1f6fb64,88499167,0,0x0,8
tick,0x7ffad1f6fb64,88515063,0,0x0,8
tick,0x7ffad1f6fb64,88531113,0,0x0,8
tick,0x7ffad1f6fb64,88547114,0,0x0,8
tick,0x7ffad1f6fb64,88563149,0,0x0,8
tick,0x7ffad1f6fb64,88578125,0,0x0,8
tick,0x7ffad1f6fb64,88594160,0,0x0,8
tick,0x7ffad1f6fb64,88610157,0,0x0,8
tick,0x7ffad1f6fb64,88626209,0,0x0,8
tick,0x7ffad1f6fb64,88641211,0,0x0,8
tick,0x7ffad1f6fb64,88656215,0,0x0,8
tick,0x7ffad1f6fb64,88671216,0,0x0,8
tick,0x7ffad1f6fb64,88687225,0,0x0,8
tick,0x7ffad1f6fb64,88703231,0,0x0,8
tick,0x7ffad1f6fb64,88719276,0,0x0,8
tick,0x7ffad1f6fb64,88734270,0,0x0,8
tick,0x7ffad1f6fb64,88749300,0,0x0,8
tick,0x7ffad1f6fb64,88765289,0,0x0,8
tick,0x7ffad1f6fb64,88780323,0,0x0,8
tick,0x7ffad1f6fb64,88795339,0,0x0,8
tick,0x7ffad1f6fb64,88811322,0,0x0,8
tick,0x7ffad1f6fb64,88827359,0,0x0,8
tick,0x7ffad1f6fb64,88842364,0,0x0,8
tick,0x7ffad1f6fb64,88857390,0,0x0,8
tick,0x7ffad1f6fb64,88873390,0,0x0,8
tick,0x7ffad1f6fb64,88889413,0,0x0,8
tick,0x7ffad1f6fb64,88905415,0,0x0,8
tick,0x7ffad1f6fb64,88920447,0,0x0,8
tick,0x7ffad1f6fb64,88935461,0,0x0,8
tick,0x7ffad1f6fb64,88950466,0,0x0,8
tick,0x7ffad1f6fb64,88966494,0,0x0,8
tick,0x7ffad1f6fb64,88981492,0,0x0,8
tick,0x7ffad1f6fb64,88997519,0,0x0,8
tick,0x7ffad1f6fb64,89013555,0,0x0,8
tick,0x7ffad1f6fb64,89029528,0,0x0,8
tick,0x7ffad1f6fb64,89044569,0,0x0,8
tick,0x7ffad1f6fb64,89059587,0,0x0,8
tick,0x7ffad1f6fb64,89074589,0,0x0,8
tick,0x7ffad1f6fb64,89089587,0,0x0,8
tick,0x7ffad1f6fb64,89105617,0,0x0,8
tick,0x7ffad1f6fb64,89121627,0,0x0,8
tick,0x7ffad1f6fb64,89137674,0,0x0,8
tick,0x7ffad1f6fb64,89152644,0,0x0,8
tick,0x7ffad1f6fb64,89168662,0,0x0,8
tick,0x7ffad1f6fb64,89184678,0,0x0,8
tick,0x7ffad1f6fb64,89199694,0,0x0,8
tick,0x7ffad1f6fb64,89215696,0,0x0,8
tick,0x7ffad1f6fb64,89231718,0,0x0,8
tick,0x7ffad1f6fb64,89246722,0,0x0,8
tick,0x7ffad1f6fb64,89262746,0,0x0,8
tick,0x7ffad1f6fb64,89277814,0,0x0,8
tick,0x7ffad1f6fb64,89293820,0,0x0,8
tick,0x7ffad1f6fb64,89309804,0,0x0,8
tick,0x7ffad1f6fb64,89325799,0,0x0,8
tick,0x7ffad1f6fb64,89340820,0,0x0,8
tick,0x7ffad1f6fb64,89356833,0,0x0,8
tick,0x7ffad1f6fb64,89372851,0,0x0,8
tick,0x7ffad1f6fb64,89387864,0,0x0,8
tick,0x7ffad1f6fb64,89402886,0,0x0,8
tick,0x7ffad1f6fb64,89418896,0,0x0,8
tick,0x7ffad1f6fb64,89434910,0,0x0,8
tick,0x7ffad1f6fb64,89449909,0,0x0,8
tick,0x7ffad1f6fb64,89464932,0,0x0,8
tick,0x7ffad1f6fb64,89479949,0,0x0,8
tick,0x7ffad1f6fb64,89495948,0,0x0,8
tick,0x7ffad1f6fb64,89511985,0,0x0,8
tick,0x7ffad1f6fb64,89526985,0,0x0,8
tick,0x7ffad1f6fb64,89542019,0,0x0,8
tick,0x7ffad1f6fb64,89558028,0,0x0,8
tick,0x7ffad1f6fb64,89574056,0,0x0,8
tick,0x7ffad1f6fb64,89590030,0,0x0,8
tick,0x7ffad1f6fb64,89606067,0,0x0,8
tick,0x7ffad1f6fb64,89621074,0,0x0,8
tick,0x7ffad1f6fb64,89637069,0,0x0,8
tick,0x7ffad1f6fb64,89653118,0,0x0,8
tick,0x7ffad1f6fb64,89668101,0,0x0,8
tick,0x7ffad1f6fb64,89684119,0,0x0,8
tick,0x7ffad1f6fb64,89699135,0,0x0,8
tick,0x7ffad1f6fb64,89714160,0,0x0,8
tick,0x7ffad1f6fb64,89730172,0,0x0,8
tick,0x7ffad1f6fb64,89746180,0,0x0,8
tick,0x7ffad1f6fb64,89761201,0,0x0,8
tick,0x7ffad1f6fb64,89777223,0,0x0,8
tick,0x7ffad1f6fb64,89793232,0,0x0,8
tick,0x7ffad1f6fb64,89808249,0,0x0,8
tick,0x7ffad1f6fb64,89824262,0,0x0,8
tick,0x7ffad1f6fb64,89840280,0,0x0,8
tick,0x7ffad1f6fb64,89856287,0,0x0,8
tick,0x7ffad1f6fb64,89871309,0,0x0,8
tick,0x7ffad1f6fb64,89886318,0,0x0,8
tick,0x7ffad1f6fb64,89902308,0,0x0,8
tick,0x7ffad1f6fb64,89917334,0,0x0,8
tick,0x7ffad1f6fb64,89932359,0,0x0,8
tick,0x7ffad1f6fb64,89947367,0,0x0,8
tick,0x7ffad1f6fb64,89962379,0,0x0,8
tick,0x7ffad1f6fb64,89977403,0,0x0,8
tick,0x7ffad1f6fb64,89993414,0,0x0,8
tick,0x7ffad1f6fb64,90009419,0,0x0,8
tick,0x7ffad1f6fb64,90025434,0,0x0,8
tick,0x7ffad1f6fb64,90040455,0,0x0,8
tick,0x7ffad1f6fb64,90056451,0,0x0,8
tick,0x7ffad1f6fb64,90072480,0,0x0,8
tick,0x7ffad1f6fb64,90087553,0,0x0,8
tick,0x7ffad1f6fb64,90103507,0,0x0,8
tick,0x7ffad1f6fb64,90119521,0,0x0,8
tick,0x7ffad1f6fb64,90134537,0,0x0,8
tick,0x7ffad1f6fb64,90150547,0,0x0,8
tick,0x7ffad1f6fb64,90166622,0,0x0,8
tick,0x7ffad1f6fb64,90182582,0,0x0,8
tick,0x7ffad1f6fb64,90198590,0,0x0,8
tick,0x7ffad1f6fb64,90213610,0,0x0,8
tick,0x7ffad1f6fb64,90229607,0,0x0,8
tick,0x7ffad1f6fb64,90245635,0,0x0,8
tick,0x7ffad1f6fb64,90260654,0,0x0,8
tick,0x7ffad1f6fb64,90275706,0,0x0,8
tick,0x7ffad1f6fb64,90290689,0,0x0,8
tick,0x7ffad1f6fb64,90306709,0,0x0,8
tick,0x7ffad1f6fb64,90322721,0,0x0,8
tick,0x7ffad1f6fb64,90338717,0,0x0,8
tick,0x7ffad1f6fb64,90354738,0,0x0,8
tick,0x7ffad1f6fb64,90369799,0,0x0,8
tick,0x7ffad1f6fb64,90384767,0,0x0,8
tick,0x7ffad1f6fb64,90399860,0,0x0,8
tick,0x7ffad1f6fb64,90415819,0,0x0,8
tick,0x7ffad1f6fb64,90430812,0,0x0,8
tick,0x7ffad1f6fb64,90446830,0,0x0,8
tick,0x7ffad1f6fb64,90462837,0,0x0,8
tick,0x7ffad1f6fb64,90478868,0,0x0,8
tick,0x7ffad1f6fb64,90494887,0,0x0,8
tick,0x7ffad1f6fb64,90509888,0,0x0,8
tick,0x7ffad1f6fb64,90525910,0,0x0,8
tick,0x7ffad1f6fb64,90541914,0,0x0,8
tick,0x7ffad1f6fb64,90557940,0,0x0,8
tick,0x7ffad1f6fb64,90572929,0,0x0,8
tick,0x7ffad1f6fb64,90587952,0,0x0,8
tick,0x7ffad1f6fb64,90603051,0,0x0,8
tick,0x7ffad1f6fb64,90619013,0,0x0,8
tick,0x7ffad1f6fb64,90633999,0,0x0,8
tick,0x7ffad1f6fb64,90650012,0,0x0,8
tick,0x7ffad1f6fb64,90666031,0,0x0,8
tick,0x7ffad1f6fb64,90681042,0,0x0,8
tick,0x7ffad1f6fb64,90696057,0,0x0,8
tick,0x7ffad1f6fb64,90711088,0,0x0,8
tick,0x7ffad1f6fb64,90727070,0,0x0,8
tick,0x7ffad1f6fb64,90742088,0,0x0,8
tick,0x7ffad1f6fb64,90757103,0,0x0,8
tick,0x7ffad1f6fb64,90773112,0,0x0,8
tick,0x7ffad1f6fb64,90788142,0,0x0,8
tick,0x7ffad1f6fb64,90804152,0,0x0,8
tick,0x7ffad1f6fb64,90819183,0,0x0,8
tick,0x7ffad1f6fb64,90834179,0,0x0,8
tick,0x7ffad1f6fb64,90850186,0,0x0,8
tick,0x7ffad1f6fb64,90866227,0,0x0,8
tick,0x7ffad1f6fb64,90881205,0,0x0,8
tick,0x7ffad1f6fb64,90897231,0,0x0,8
tick,0x7ffad1f6fb64,90912248,0,0x0,8
tick,0x7ffad1f6fb64,90927264,0,0x0,8
tick,0x7ffad1f6fb64,90943275,0,0x0,8
tick,0x7ffad1f6fb64,90959287,0,0x0,8
tick,0x7ffad1f6fb64,90975326,0,0x0,8
tick,0x7ffad1f6fb64,90991336,0,0x0,8
tick,0x7ffad1f6fb64,91007326,0,0x0,8
tick,0x7ffad1f6fb64,91022359,0,0x0,8
tick,0x7ffad1f6fb64,91037382,0,0x0,8
tick,0x7ffad1f6fb64,91053389,0,0x0,8
tick,0x7ffad1f6fb64,91069381,0,0x0,8
tick,0x7ffad1f6fb64,91085433,0,0x0,8
tick,0x7ffad1f6fb64,91100424,0,0x0,8
tick,0x7ffad1f6fb64,91115462,0,0x0,8
tick,0x7ffad1f6fb64,91130444,0,0x0,8
tick,0x7ffad1f6fb64,91146479,0,0x0,8
tick,0x7ffad1f6fb64,91162478,0,0x0,8
tick,0x7ffad1f6fb64,91177506,0,0x0,8
tick,0x7ffad1f6fb64,91193566,0,0x0,8
tick,0x7ffad1f6fb64,91209521,0,0x0,8
tick,0x7ffad1f6fb64,91225548,0,0x0,8
tick,0x7ffad1f6fb64,91240541,0,0x0,8
tick,0x7ffad1f6fb64,91256562,0,0x0,8
tick,0x7ffad1f6fb64,91272583,0,0x0,8
tick,0x7ffad1f6fb64,91288603,0,0x0,8
tick,0x7ffad1f6fb64,91304608,0,0x0,8
tick,0x7ffad1f6fb64,91320633,0,0x0,8
tick,0x7ffad1f6fb64,91335631,0,0x0,8
tick,0x7ffad1f6fb64,91351642,0,0x0,8
tick,0x7ffad1f6fb64,91366678,0,0x0,8
tick,0x7ffad1f6fb64,91381670,0,0x0,8
tick,0x7ffad1f6fb64,91396682,0,0x0,8
tick,0x7ffad1f6fb64,91411703,0,0x0,8
tick,0x7ffad1f6fb64,91427714,0,0x0,8
tick,0x7ffad1f6fb64,91442728,0,0x0,8
tick,0x7ffad1f6fb64,91458746,0,0x0,8
tick,0x7ffad1f6fb64,91474780,0,0x0,8
tick,0x7ffad1f6fb64,91490774,0,0x0,8
tick,0x7ffad1f6fb64,91505791,0,0x0,8
tick,0x7ffad1f6fb64,91520800,0,0x0,8
tick,0x7ffad1f6fb64,91536821,0,0x0,8
tick,0x7ffad1f6fb64,91552822,0,0x0,8
tick,0x7ffad1f6fb64,91567853,0,0x0,8
tick,0x7ffad1f6fb64,91583879,0,0x0,8
tick,0x7ffad1f6fb64,91598886,0,0x0,8
tick,0x7ffad1f6fb64,91613883,0,0x0,8
tick,0x7ffad1f6fb64,91629928,0,0x0,8
tick,0x7ffad1f6fb64,91645917,0,0x0,8
tick,0x7ffad1f6fb64,91661931,0,0x0,8
tick,0x7ffad1f6fb64,91676934,0,0x0,8
tick,0x7ffad1f6fb64,91692973,0,0x0,8
tick,0x7ffad1f6fb64,91707986,0,0x0,8
tick,0x7ffad1f6fb64,91722984,0,0x0,8
tick,0x7ffad1f6fb64,91739002,0,0x0,8
tick,0x7ffad1f6fb64,91755012,0,0x0,8
tick,0x7ffad1f6fb64,91770039,0,0x0,8
tick,0x7ffad1f6fb64,91786046,0,0x0,8
tick,0x7ffad1f6fb64,91801073,0,0x0,8
tick,0x7ffad1f6fb64,91817074,0,0x0,8
tick,0x7ffad1f6fb64,91833090,0,0x0,8
tick,0x7ffad1f6fb64,91848139,0,0x0,8
tick,0x7ffad1f6fb64,91864114,0,0x0,8
tick,0x7ffad1f6fb64,91880115,0,0x0,8
tick,0x7ffad1f6fb64,91895142,0,0x0,8
tick,0x7ffad1f6fb64,91910163,0,0x0,8
tick,0x7ffad1f6fb64,91925169,0,0x0,8
tick,0x7ffad1f6fb64,91940234,0,0x0,8
tick,0x7ffad1f6fb64,91955214,0,0x0,8
tick,0x7ffad1f6fb64,91970204,0,0x0,8
tick,0x7ffad1f6fb64,91986226,0,0x0,8
tick,0x7ffad1f6fb64,92002254,0,0x0,8
tick,0x7ffad1f6fb64,92018279,0,0x0,8
tick,0x7ffad1f6fb64,92034267,0,0x0,8
tick,0x7ffad1f6fb64,92049295,0,0x0,8
tick,0x7ffad1f6fb64,92065409,0,0x0,8
tick,0x7ffad1f6fb64,92080455,0,0x0,8
tick,0x7ffad1f6fb64,92095327,0,0x0,8
tick,0x7ffad1f6fb64,92111385,0,0x0,8
tick,0x7ffad1f6fb64,92127368,0,0x0,8
tick,0x7ffad1f6fb64,92143464,0,0x0,8
tick,0x7ffad1f6fb64,92158381,0,0x0,8
tick,0x7ffad1f6fb64,92174408,0,0x0,8
tick,0x7ffad1f6fb64,92190421,0,0x0,8
tick,0x7ffad1f6fb64,92206429,0,0x0,8
tick,0x7ffad1f6fb64,92222468,0,0x0,8
tick,0x7ffad1f6fb64,92237484,0,0x0,8
tick,0x7ffad1f6fb64,92253479,0,0x0,8
tick,0x7ffad1f6fb64,92269505,0,0x0,8
tick,0x7ffad1f6fb64,92284535,0,0x0,8
tick,0x7ffad1f6fb64,92299511,0,0x0,8
tick,0x7ffad1f6fb64,92315562,0,0x0,8
tick,0x7ffad1f6fb64,92331546,0,0x0,8
tick,0x7ffad1f6fb64,92347606,0,0x0,8
tick,0x7ffad1f6fb64,92363583,0,0x0,8
tick,0x7ffad1f6fb64,92378616,0,0x0,8
tick,0x7ffad1f6fb64,92394639,0,0x0,8
tick,0x7ffad1f6fb64,92410612,0,0x0,8
tick,0x7ffad1f6fb64,92425639,0,0x0,8
tick,0x7ffad1f6fb64,92440649,0,0x0,8
tick,0x7ffad1f6fb64,92455711,0,0x0,8
tick,0x7ffad1f6fb64,92470688,0,0x0,8
tick,0x7ffad1f6fb64,92486694,0,0x0,8
tick,0x7ffad1f6fb64,92502707,0,0x0,8
tick,0x7ffad1f6fb64,92518724,0,0x0,8
tick,0x7ffad1f6fb64,92534738,0,0x0,8
tick,0x7ffad1f6fb64,92549733,0,0x0,8
tick,0x7ffad1f6fb64,92565777,0,0x0,8
tick,0x7ffad1f6fb64,92581760,0,0x0,8
tick,0x7ffad1f6fb64,92596765,0,0x0,8
tick,0x7ffad1f6fb64,92612830,0,0x0,8
tick,0x7ffad1f6fb64,92627858,0,0x0,8
tick,0x7ffad1f6fb64,92643830,0,0x0,8
tick,0x7ffad1f6fb64,92658858,0,0x0,8
tick,0x7ffad1f6fb64,92673869,0,0x0,8
tick,0x7ffad1f6fb64,92689871,0,0x0,8
tick,0x7ffad1f6fb64,92704885,0,0x0,8
tick,0x7ffad1f6fb64,92719897,0,0x0,8
tick,0x7ffad1f6fb64,92734921,0,0x0,8
tick,0x7ffad1f6fb64,92749914,0,0x0,8
tick,0x7ffad1f6fb64,92765938,0,0x0,8
tick,0x7ffad1f6fb64,92781964,0,0x0,8
tick,0x7ffad1f6fb64,92796973,0,0x0,8
tick,0x7ffad1f6fb64,92812994,0,0x0,8
tick,0x7ffad1f6fb64,92829004,0,0x0,8
tick,0x7ffad1f6fb64,92844014,0,0x0,8
tick,0x7ffad1f6fb64,92860017,0,0x0,8
tick,0x7ffad1f6fb64,92875025,0,0x0,8
tick,0x7ffad1f6fb64,92890057,0,0x0,8
tick,0x7ffad1f6fb64,92906084,0,0x0,8
tick,0x7ffad1f6fb64,92921123,0,0x0,8
tick,0x7ffad1f6fb64,92936148,0,0x0,8
tick,0x7ffad1f6fb64,92951119,0,0x0,8
tick,0x7ffad1f6fb64,92966212,0,0x0,8
tick,0x7ffad1f6fb64,92981196,0,0x0,8
tick,0x7ffad1f6fb64,92997174,0,0x0,8
tick,0x7ffad1f6fb64,93012159,0,0x0,8
tick,0x7ffad1f6fb64,93027164,0,0x0,8
tick,0x7ffad1f6fb64,93043231,0,0x0,8
tick,0x7ffad1f6fb64,93058230,0,0x0,8
tick,0x7ffad1f6fb64,93074219,0,0x0,8
tick,0x7ffad1f6fb64,93090232,0,0x0,8
tick,0x7ffad1f6fb64,93106274,0,0x0,8
tick,0x7ffad1f6fb64,93121306,0,0x0,8
tick,0x7ffad1f6fb64,93137322,0,0x0,8
tick,0x7ffad1f6fb64,93152332,0,0x0,8
tick,0x7ffad1f6fb64,93167349,0,0x0,8
tick,0x7ffad1f6fb64,93182339,0,0x0,8
tick,0x7ffad1f6fb64,93198330,0,0x0,8
tick,0x7ffad1f6fb64,93214375,0,0x0,8
tick,0x7ffad1f6fb64,93229438,0,0x0,8
tick,0x7ffad1f6fb64,93245412,0,0x0,8
tick,0x7ffad1f6fb64,93261428,0,0x0,8
tick,0x7ffad1f6fb64,93277420,0,0x0,8
tick,0x7ffad1f6fb64,93292426,0,0x0,8
tick,0x7ffad1f6fb64,93308486,0,0x0,8
tick,0x7ffad1f6fb64,93324459,0,0x0,8
tick,0x7ffad1f6fb64,93340489,0,0x0,8
tick,0x7ffad1f6fb64,93356506,0,0x0,8
tick,0x7ffad1f6fb64,93371502,0,0x0,8
tick,0x7ffad1f6fb64,93386499,0,0x0,8
tick,0x7ffad1f6fb64,93402553,0,0x0,8
tick,0x7ffad1f6fb64,93417552,0,0x0,8
tick,0x7ffad1f6fb64,93432571,0,0x0,8
tick,0x7ffad1f6fb64,93448566,0,0x0,8
tick,0x7ffad1f6fb64,93464626,0,0x0,8
tick,0x7ffad1f6fb64,93479590,0,0x0,8
tick,0x7ffad1f6fb64,93495661,0,0x0,8
tick,0x7ffad1f6fb64,93510659,0,0x0,8
tick,0x7ffad1f6fb64,93525635,0,0x0,8
tick,0x7ffad1f6fb64,93540662,0,0x0,8
tick,0x7ffad1f6fb64,93555663,0,0x0,8
tick,0x7ffad1f6fb64,93570666,0,0x0,8
tick,0x7ffad1f6fb64,93586685,0,0x0,8
tick,0x7ffad1f6fb64,93602725,0,0x0,8
tick,0x7ffad1f6fb64,93618772,0,0x0,8
tick,0x7ffad1f6fb64,93633756,0,0x0,8
tick,0x7ffad1f6fb64,93648769,0,0x0,8
tick,0x7ffad1f6fb64,93663758,0,0x0,8
tick,0x7ffad1f6fb64,93678880,0,0x0,8
tick,0x7ffad1f6fb64,93694815,0,0x0,8
tick,0x7ffad1f6fb64,93710849,0,0x0,8
tick,0x7ffad1f6fb64,93725818,0,0x0,8
tick,0x7ffad1f6fb64,93740838,0,0x0,8
tick,0x7ffad1f6fb64,93756857,0,0x0,8
tick,0x7ffad1f6fb64,93771858,0,0x0,8
tick,0x7ffad1f6fb64,93787925,0,0x0,8
tick,0x7ffad1f6fb64,93802913,0,0x0,8
tick,0x7ffad1f6fb64,93818908,0,0x0,8
tick,0x7ffad1f6fb64,93833921,0,0x0,8
tick,0x7ffad1f6fb64,93849921,0,0x0,8
tick,0x7ffad1f6fb64,93865955,0,0x0,8
tick,0x7ffad1f6fb64,93881985,0,0x0,8
tick,0x7ffad1f6fb64,93898009,0,0x0,8
tick,0x7ffad1f6fb64,93913995,0,0x0,8
tick,0x7ffad1f6fb64,93928998,0,0x0,8
tick,0x7ffad1f6fb64,93945009,0,0x0,8
tick,0x7ffad1f6fb64,93961150,0,0x0,8
tick,0x7ffad1f6fb64,93977087,0,0x0,8
tick,0x7ffad1f6fb64,93992053,0,0x0,8
tick,0x7ffad1f6fb64,94007079,0,0x0,8
tick,0x7ffad1f6fb64,94023108,0,0x0,8
tick,0x7ffad1f6fb64,94039087,0,0x0,8
tick,0x7ffad1f6fb64,94055131,0,0x0,8
tick,0x7ffad1f6fb64,94070137,0,0x0,8
tick,0x7ffad1f6fb64,94086229,0,0x0,8
tick,0x7ffad1f6fb64,94101167,0,0x0,8
tick,0x7ffad1f6fb64,94117169,0,0x0,8
tick,0x7ffad1f6fb64,94133192,0,0x0,8
tick,0x7ffad1f6fb64,94148212,0,0x0,8
tick,0x7ffad1f6fb64,94163216,0,0x0,8
tick,0x7ffad1f6fb64,94178240,0,0x0,8
tick,0x7ffad1f6fb64,94194263,0,0x0,8
tick,0x7ffad1f6fb64,94210248,0,0x0,8
tick,0x7ffad1f6fb64,94225321,0,0x0,8
tick,0x7ffad1f6fb64,94240301,0,0x0,8
tick,0x7ffad1f6fb64,94256302,0,0x0,8
tick,0x7ffad1f6fb64,94271343,0,0x0,8
tick,0x7ffad1f6fb64,94287365,0,0x0,8
tick,0x7ffad1f6fb64,94303378,0,0x0,8
tick,0x7ffad1f6fb64,94318389,0,0x0,8
tick,0x7ffad1f6fb64,94334698,0,0x0,8
tick,0x7ffad1f6fb64,94349412,0,0x0,8
tick,0x7ffad1f6fb64,94365422,0,0x0,8
tick,0x7ffad1f6fb64,94380427,0,0x0,8
tick,0x7ffad1f6fb64,94395458,0,0x0,8
tick,0x7ffad1f6fb64,94410495,0,0x0,8
tick,0x7ffad1f6fb64,94425469,0,0x0,8
tick,0x7ffad1f6fb64,94440503,0,0x0,8
tick,0x7ffad1f6fb64,94456514,0,0x0,8
tick,0x7ffad1f6fb64,94471526,0,0x0,8
tick,0x7ffad1f6fb64,94487526,0,0x0,8
tick,0x7ffad1f6fb64,94503555,0,0x0,8
tick,0x7ffad1f6fb64,94519572,0,0x0,8
tick,0x7ffad1f6fb64,94534697,0,0x0,8
tick,0x7ffad1f6fb64,94549624,0,0x0,8
tick,0x7ffad1f6fb64,94564610,0,0x0,8
tick,0x7ffad1f6fb64,94579615,0,0x0,8
tick,0x7ffad1f6fb64,94595634,0,0x0,8
tick,0x7ffad1f6fb64,94610655,0,0x0,8
tick,0x7ffad1f6fb64,94625683,0,0x0,8
tick,0x7ffad1f6fb64,94640669,0,0x0,8
tick,0x7ffad1f6fb64,94655799,0,0x0,8
tick,0x7ffad1f6fb64,94670716,0,0x0,8
tick,0x7ffad1f6fb64,94686738,0,0x0,8
tick,0x7ffad1f6fb64,94701738,0,0x0,8
tick,0x7ffad1f6fb64,94717724,0,0x0,8
tick,0x7ffad1f6fb64,94733753,0,0x0,8
tick,0x7ffad1f6fb64,94749797,0,0x0,8
tick,0x7ffad1f6fb64,94765810,0,0x0,8
tick,0x7ffad1f6fb64,94780824,0,0x0,8
tick,0x7ffad1f6fb64,94795811,0,0x0,8
tick,0x7ffad1f6fb64,94810844,0,0x0,8
tick,0x7ffad1f6fb64,94825849,0,0x0,8
tick,0x7ffad1f6fb64,94840867,0,0x0,8
tick,0x7ffad1f6fb64,94856881,0,0x0,8
tick,0x7ffad1f6fb64,94871896,0,0x0,8
tick,0x7ffad1f6fb64,94886937,0,0x0,8
tick,0x7ffad1f6fb64,94902241,0,0x0,8
tick,0x7ffad1f6fb64,94917956,0,0x0,8
tick,0x7ffad1f6fb64,94932965,0,0x0,8
tick,0x7ffad1f6fb64,94948208,0,0x0,8
tick,0x7ffad1f6fb64,94963963,0,0x0,8
tick,0x7ffad1f6fb64,94980038,0,0x0,8
tick,0x7ffad1f6fb64,94995005,0,0x0,8
tick,0x7ffad1f6fb64,95011035,0,0x0,8
tick,0x7ffad1f6fb64,95027053,0,0x0,8
tick,0x7ffad1f6fb64,95042053,0,0x0,8
tick,0x7ffad1f6fb64,95057056,0,0x0,8
tick,0x7ffad1f6fb64,95072055,0,0x0,8
tick,0x7ffad1f6fb64,95088103,0,0x0,8
tick,0x7ffad1f6fb64,95103116,0,0x0,8
tick,0x7ffad1f6fb64,95119161,0,0x0,8
tick,0x7ffad1f6fb64,95135182,0,0x0,8
tick,0x7ffad1f6fb64,95150135,0,0x0,8
tick,0x7ffad1f6fb64,95165174,0,0x0,8
tick,0x7ffad1f6fb64,95180167,0,0x0,8
tick,0x7ffad1f6fb64,95195201,0,0x0,8
tick,0x7ffad1f6fb64,95211240,0,0x0,8
tick,0x7ffad1f6fb64,95227427,0,0x0,8
tick,0x7ffad1f6fb64,95243260,0,0x0,8
tick,0x7ffad1f6fb64,95259218,0,0x0,8
tick,0x7ffad1f6fb64,95274251,0,0x0,8
tick,0x7ffad1f6fb64,95290290,0,0x0,8
tick,0x7ffad1f6fb64,95306252,0,0x0,8
tick,0x7ffad1f6fb64,95321309,0,0x0,8
tick,0x7ffad1f6fb64,95336321,0,0x0,8
tick,0x7ffad1f6fb64,95351303,0,0x0,8
tick,0x7ffad1f6fb64,95366354,0,0x0,8
tick,0x7ffad1f6fb64,95381333,0,0x0,8
tick,0x7ffad1f6fb64,95396344,0,0x0,8
tick,0x7ffad1f6fb64,95411345,0,0x0,8
tick,0x7ffad1f6fb64,95426364,0,0x0,8
tick,0x7ffad1f6fb64,95441558,0,0x0,8
tick,0x7ffad1f6fb64,95457386,0,0x0,8
tick,0x7ffad1f6fb64,95473391,0,0x0,8
tick,0x7ffad1f6fb64,95488423,0,0x0,8
tick,0x7ffad1f6fb64,95504434,0,0x0,8
tick,0x7ffad1f6fb64,95520484,0,0x0,8
tick,0x7ffad1f6fb64,95535455,0,0x0,8
tick,0x7ffad1f6fb64,95551463,0,0x0,8
tick,0x7ffad1f6fb64,95566495,0,0x0,8
tick,0x7ffad1f6fb64,95581504,0,0x0,8
tick,0x7ffad1f6fb64,95597510,0,0x0,8
tick,0x7ffad1f6fb64,95613521,0,0x0,8
tick,0x7ffad1f6fb64,95628544,0,0x0,8
tick,0x7ffad1f6fb64,95644555,0,0x0,8
tick,0x7ffad1f6fb64,95660587,0,0x0,8
tick,0x7ffad1f6fb64,95675596,0,0x0,8
tick,0x7ffad1f6fb64,95690602,0,0x0,8
tick,0x7ffad1f6fb64,95705625,0,0x0,8
tick,0x7ffad1f6fb64,95721728,0,0x0,8
tick,0x7ffad1f6fb64,95737645,0,0x0,8
tick,0x7ffad1f6fb64,95752665,0,0x0,8
tick,0x7ffad1f6fb64,95768671,0,0x0,8
tick,0x7ffad1f6fb64,95783669,0,0x0,8
tick,0x7ffad1f6fb64,95798696,0,0x0,8
tick,0x7ffad1f6fb64,95813742,0,0x0,8
tick,0x7ffad1f6fb64,95829724,0,0x0,8
tick,0x7ffad1f6fb64,95845733,0,0x0,8
tick,0x7ffad1f6fb64,95860743,0,0x0,8
tick,0x7ffad1f6fb64,95875764,0,0x0,8
tick,0x7ffad1f6fb64,95891780,0,0x0,8
tick,0x7ffad1f6fb64,95907798,0,0x0,8
tick,0x7ffad1f6fb64,95923828,0,0x0,8
tick,0x7ffad1f6fb64,95939822,0,0x0,8
tick,0x7ffad1f6fb64,95954834,0,0x0,8
tick,0x7ffad1f6fb64,95969856,0,0x0,8
tick,0x7ffad1f6fb64,95985870,0,0x0,8
tick,0x7ffad1f6fb64,96001870,0,0x0,8
tick,0x7ffad1f6fb64,96016925,0,0x0,8
tick,0x7ffad1f6fb64,96032911,0,0x0,8
tick,0x7ffad1f6fb64,96048907,0,0x0,8
tick,0x7ffad1f6fb64,96064970,0,0x0,8
tick,0x7ffad1f6fb64,96079968,0,0x0,8
tick,0x7ffad1f6fb64,96094968,0,0x0,8
tick,0x7ffad1f6fb64,96111005,0,0x0,8
tick,0x7ffad1f6fb64,96126030,0,0x0,8
tick,0x7ffad1f6fb64,96142043,0,0x0,8
tick,0x7ffad1f6fb64,96157013,0,0x0,8
tick,0x7ffad1f6fb64,96173038,0,0x0,8
tick,0x7ffad1f6fb64,96189076,0,0x0,8
tick,0x7ffad1f6fb64,96205060,0,0x0,8
tick,0x7ffad1f6fb64,96220092,0,0x0,8
tick,0x7ffad1f6fb64,96236111,0,0x0,8
tick,0x7ffad1f6fb64,96252130,0,0x0,8
tick,0x7ffad1f6fb64,96268142,0,0x0,8
tick,0x7ffad1f6fb64,96284151,0,0x0,8
tick,0x7ffad1f6fb64,96299159,0,0x0,8
tick,0x7ffad1f6fb64,96314196,0,0x0,8
tick,0x7ffad1f6fb64,96329181,0,0x0,8
tick,0x7ffad1f6fb64,96345211,0,0x0,8
tick,0x7ffad1f6fb64,96361216,0,0x0,8
tick,0x7ffad1f6fb64,96377237,0,0x0,8
tick,0x7ffad1f6fb64,96393237,0,0x0,8
tick,0x7ffad1f6fb64,96409244,0,0x0,8
tick,0x7ffad1f6fb64,96424265,0,0x0,8
tick,0x7ffad1f6fb64,96440291,0,0x0,8
tick,0x7ffad1f6fb64,96455369,0,0x0,8
tick,0x7ffad1f6fb64,96470357,0,0x0,8
tick,0x7ffad1f6fb64,96486354,0,0x0,8
tick,0x7ffad1f6fb64,96502377,0,0x0,8
tick,0x7ffad1f6fb64,96517420,0,0x0,8
tick,0x7ffad1f6fb64,96532428,0,0x0,8
tick,0x7ffad1f6fb64,96547411,0,0x0,8
tick,0x7ffad1f6fb64,96563577,0,0x0,8
tick,0x7ffad1f6fb64,96578434,0,0x0,8
tick,0x7ffad1f6fb64,96593444,0,0x0,8
tick,0x7ffad1f6fb64,96608453,0,0x0,8
tick,0x7ffad1f6fb64,96624461,0,0x0,8
tick,0x7ffad1f6fb64,96640457,0,0x0,8
tick,0x7ffad1f6fb64,96655499,0,0x0,8
tick,0x7ffad1f6fb64,96670551,0,0x0,8
tick,0x7ffad1f6fb64,96686564,0,0x0,8
tick,0x7ffad1f6fb64,96701565,0,0x0,8
tick,0x7ffad1f6fb64,96716616,0,0x0,8
tick,0x7ffad1f6fb64,96732566,0,0x0,8
tick,0x7ffad1f6fb64,96748776,0,0x0,8
tick,0x7ffad1f6fb64,96764592,0,0x0,8
tick,0x7ffad1f6fb64,96779609,0,0x0,8
tick,0x7ffad1f6fb64,96794633,0,0x0,8
tick,0x7ffad1f6fb64,96810668,0,0x0,8
tick,0x7ffad1f6fb64,96825725,0,0x0,8
tick,0x7ffad1f6fb64,96840651,0,0x0,8
tick,0x7ffad1f6fb64,96856728,0,0x0,8
tick,0x7ffad1f6fb64,96872722,0,0x0,8
tick,0x7ffad1f6fb64,96888699,0,0x0,8
tick,0x7ffad1f6fb64,96904714,0,0x0,8
tick,0x7ffad1f6fb64,96919722,0,0x0,8
tick,0x7ffad1f6fb64,96935785,0,0x0,8
tick,0x7ffad1f6fb64,96950798,0,0x0,8
tick,0x7ffad1f6fb64,96965784,0,0x0,8
tick,0x7ffad1f6fb64,96980846,0,0x0,8
tick,0x7ffad1f6fb64,96995825,0,0x0,8
tick,0x7ffad1f6fb64,97011887,0,0x0,8
tick,0x7ffad1f6fb64,97027841,0,0x0,8
tick,0x7ffad1f6fb64,97043876,0,0x0,8
tick,0x7ffad1f6fb64,97058902,0,0x0,8
tick,0x7ffad1f6fb64,97073883,0,0x0,8
tick,0x7ffad1f6fb64,97088892,0,0x0,8
tick,0x7ffad1f6fb64,97104874,0,0x0,8
tick,0x7ffad1f6fb64,97119950,0,0x0,8
tick,0x7ffad1f6fb64,97135974,0,0x0,8
tick,0x7ffad1f6fb64,97151939,0,0x0,8
tick,0x7ffad1f6fb64,97166983,0,0x0,8
tick,0x7ffad1f6fb64,97181976,0,0x0,8
tick,0x7ffad1f6fb64,97197978,0,0x0,8
tick,0x7ffad1f6fb64,97214018,0,0x0,8
tick,0x7ffad1f6fb64,97230223,0,0x0,8
tick,0x7ffad1f6fb64,97245026,0,0x0,8
tick,0x7ffad1f6fb64,97260083,0,0x0,8
tick,0x7ffad1f6fb64,97275060,0,0x0,8
tick,0x7ffad1f6fb64,97291057,0,0x0,8
tick,0x7ffad1f6fb64,97306083,0,0x0,8
tick,0x7ffad1f6fb64,97321113,0,0x0,8
tick,0x7ffad1f6fb64,97337142,0,0x0,8
tick,0x7ffad1f6fb64,97352125,0,0x0,8
tick,0x7ffad1f6fb64,97367158,0,0x0,8
tick,0x7ffad1f6fb64,97382148,0,0x0,8
tick,0x7ffad1f6fb64,97397159,0,0x0,8
tick,0x7ffad1f6fb64,97412150,0,0x0,8
tick,0x7ffad1f6fb64,97428177,0,0x0,8
tick,0x7ffad1f6fb64,97444228,0,0x0,8
tick,0x7ffad1f6fb64,97459231,0,0x0,8
tick,0x7ffad1f6fb64,97474226,0,0x0,8
tick,0x7ffad1f6fb64,97490246,0,0x0,8
tick,0x7ffad1f6fb64,97506246,0,0x0,8
tick,0x7ffad1f6fb64,97521264,0,0x0,8
tick,0x7ffad1f6fb64,97536325,0,0x0,8
tick,0x7ffad1f6fb64,97551337,0,0x0,8
tick,0x7ffad1f6fb64,97566316,0,0x0,8
tick,0x7ffad1f6fb64,97581325,0,0x0,8
tick,0x7ffad1f6fb64,97597355,0,0x0,8
tick,0x7ffad1f6fb64,97613388,0,0x0,8
tick,0x7ffad1f6fb64,97629399,0,0x0,8
tick,0x7ffad1f6fb64,97645384,0,0x0,8
tick,0x7ffad1f6fb64,97661414,0,0x0,8
tick,0x7ffad1f6fb64,97676416,0,0x0,8
tick,0x7ffad1f6fb64,97691431,0,0x0,8
tick,0x7ffad1f6fb64,97707448,0,0x0,8
tick,0x7ffad1f6fb64,97722535,0,0x0,8
tick,0x7ffad1f6fb64,97737497,0,0x0,8
tick,0x7ffad1f6fb64,97753499,0,0x0,8
tick,0x7ffad1f6fb64,97768521,0,0x0,8
tick,0x7ffad1f6fb64,97784515,0,0x0,8
tick,0x7ffad1f6fb64,97799534,0,0x0,8
tick,0x7ffad1f6fb64,97815557,0,0x0,8
tick,0x7ffad1f6fb64,97831555,0,0x0,8
tick,0x7ffad1f6fb64,97847590,0,0x0,8
tick,0x7ffad1f6fb64,97862584,0,0x0,8
tick,0x7ffad1f6fb64,97878604,0,0x0,8
tick,0x7ffad1f6fb64,97894613,0,0x0,8
tick,0x7ffad1f6fb64,97909649,0,0x0,8
tick,0x7ffad1f6fb64,97925645,0,0x0,8
tick,0x7ffad1f6fb64,97940643,0,0x0,8
tick,0x7ffad1f6fb64,97955674,0,0x0,8
tick,0x7ffad1f6fb64,97970677,0,0x0,8
tick,0x7ffad1f6fb64,97986696,0,0x0,8
tick,0x7ffad1f6fb64,98002711,0,0x0,8
tick,0x7ffad1f6fb64,98018718,0,0x0,8
tick,0x7ffad1f6fb64,98034729,0,0x0,8
tick,0x7ffad1f6fb64,98049732,0,0x0,8
tick,0x7ffad1f6fb64,98065763,0,0x0,8
tick,0x7ffad1f6fb64,98080774,0,0x0,8
tick,0x7ffad1f6fb64,98095820,0,0x0,8
tick,0x7ffad1f6fb64,98110815,0,0x0,8
tick,0x7ffad1f6fb64,98126832,0,0x0,8
tick,0x7ffad1f6fb64,98142818,0,0x0,8
tick,0x7ffad1f6fb64,98157846,0,0x0,8
tick,0x7ffad1f6fb64,98173862,0,0x0,8
tick,0x7ffad1f6fb64,98189871,0,0x0,8
tick,0x7ffad1f6fb64,98205894,0,0x0,8
tick,0x7ffad1f6fb64,98220899,0,0x0,8
tick,0x7ffad1f6fb64,98236946,0,0x0,8
tick,0x7ffad1f6fb64,98252932,0,0x0,8
tick,0x7ffad1f6fb64,98268936,0,0x0,8
tick,0x7ffad1f6fb64,98283994,0,0x0,8
tick,0x7ffad1f6fb64,98298967,0,0x0,8
tick,0x7ffad1f6fb64,98315027,0,0x0,8
tick,0x7ffad1f6fb64,98331022,0,0x0,8
tick,0x7ffad1f6fb64,98347034,0,0x0,8
tick,0x7ffad1f6fb64,98363078,0,0x0,8
tick,0x7ffad1f6fb64,98379054,0,0x0,8
tick,0x7ffad1f6fb64,98395069,0,0x0,8
tick,0x7ffad1f6fb64,98410099,0,0x0,8
tick,0x7ffad1f6fb64,98426119,0,0x0,8
tick,0x7ffad1f6fb64,98442098,0,0x0,8
tick,0x7ffad1f6fb64,98458118,0,0x0,8
tick,0x7ffad1f6fb64,98473146,0,0x0,8
tick,0x7ffad1f6fb64,98488172,0,0x0,8
tick,0x7ffad1f6fb64,98504192,0,0x0,8
tick,0x7ffad1f6fb64,98520197,0,0x0,8
tick,0x7ffad1f6fb64,98535213,0,0x0,8
tick,0x7ffad1f6fb64,98550226,0,0x0,8
tick,0x7ffad1f6fb64,98565263,0,0x0,8
tick,0x7ffad1f6fb64,98580233,0,0x0,8
tick,0x7ffad1f6fb64,98595303,0,0x0,8
tick,0x7ffad1f6fb64,98610252,0,0x0,8
tick,0x7ffad1f6fb64,98625271,0,0x0,8
tick,0x7ffad1f6fb64,98640304,0,0x0,8
tick,0x7ffad1f6fb64,98655305,0,0x0,8
tick,0x7ffad1f6fb64,98670310,0,0x0,8
tick,0x7ffad1f6fb64,98686331,0,0x0,8
tick,0x7ffad1f6fb64,98702347,0,0x0,8
tick,0x7ffad1f6fb64,98717341,0,0x0,8
tick,0x7ffad1f6fb64,98733363,0,0x0,8
tick,0x7ffad1f6fb64,98749512,0,0x0,8
tick,0x7ffad1f6fb64,98765408,0,0x0,8
tick,0x7ffad1f6fb64,98780418,0,0x0,8
tick,0x7ffad1f6fb64,98795447,0,0x0,8
tick,0x7ffad1f6fb64,98811437,0,0x0,8
tick,0x7ffad1f6fb64,98827463,0,0x0,8
tick,0x7ffad1f6fb64,98842459,0,0x0,8
tick,0x7ffad1f6fb64,98858498,0,0x0,8
tick,0x7ffad1f6fb64,98874495,0,0x0,8
tick,0x7ffad1f6fb64,98890503,0,0x0,8
tick,0x7ffad1f6fb64,98905523,0,0x0,8
tick,0x7ffad1f6fb64,98920538,0,0x0,8
tick,0x7ffad1f6fb64,98936587,0,0x0,8
tick,0x7ffad1f6fb64,98951579,0,0x0,8
tick,0x7ffad1f6fb64,98966620,0,0x0,8
tick,0x7ffad1f6fb64,98981620,0,0x0,8
tick,0x7ffad1f6fb64,98996623,0,0x0,8
tick,0x7ffad1f6fb64,99011638,0,0x0,8
tick,0x7ffad1f6fb64,99027644,0,0x0,8
tick,0x7ffad1f6fb64,99043656,0,0x0,8
tick,0x7ffad1f6fb64,99059680,0,0x0,8
tick,0x7ffad1f6fb64,99075735,0,0x0,8
tick,0x7ffad1f6fb64,99090722,0,0x0,8
tick,0x7ffad1f6fb64,99106718,0,0x0,8
tick,0x7ffad1f6fb64,99122728,0,0x0,8
tick,0x7ffad1f6fb64,99138743,0,0x0,8
tick,0x7ffad1f6fb64,99153750,0,0x0,8
tick,0x7ffad1f6fb64,99168787,0,0x0,8
tick,0x7ffad1f6fb64,99183771,0,0x0,8
tick,0x7ffad1f6fb64,99199794,0,0x0,8
tick,0x7ffad1f6fb64,99215831,0,0x0,8
tick,0x7ffad1f6fb64,99231824,0,0x0,8
tick,0x7ffad1f6fb64,99247833,0,0x0,8
tick,0x7ffad1f6fb64,99262870,0,0x0,8
tick,0x7ffad1f6fb64,99277865,0,0x0,8
tick,0x7ffad1f6fb64,99292870,0,0x0,8
tick,0x7ffad1f6fb64,99307925,0,0x0,8
tick,0x7ffad1f6fb64,99323033,0,0x0,8
tick,0x7ffad1f6fb64,99337920,0,0x0,8
tick,0x7ffad1f6fb64,99352932,0,0x0,8
tick,0x7ffad1f6fb64,99368957,0,0x0,8
tick,0x7ffad1f6fb64,99384953,0,0x0,8
tick,0x7ffad1f6fb64,99399979,0,0x0,8
tick,0x7ffad1f6fb64,99416019,0,0x0,8
tick,0x7ffad1f6fb64,99431013,0,0x0,8
tick,0x7ffad1f6fb64,99446025,0,0x0,8
tick,0x7ffad1f6fb64,99462035,0,0x0,8
tick,0x7ffad1f6fb64,99478062,0,0x0,8
tick,0x7ffad1f6fb64,99494064,0,0x0,8
tick,0x7ffad1f6fb64,99509086,0,0x0,8
tick,0x7ffad1f6fb64,99525082,0,0x0,8
tick,0x7ffad1f6fb64,99540106,0,0x0,8
tick,0x7ffad1f6fb64,99556092,0,0x0,8
tick,0x7ffad1f6fb64,99572128,0,0x0,8
tick,0x7ffad1f6fb64,99588152,0,0x0,8
tick,0x7ffad1f6fb64,99604157,0,0x0,8
tick,0x7ffad1f6fb64,99620212,0,0x0,8
tick,0x7ffad1f6fb64,99636194,0,0x0,8
tick,0x7ffad1f6fb64,99651237,0,0x0,8
tick,0x7ffad1f6fb64,99666220,0,0x0,8
tick,0x7ffad1f6fb64,99681234,0,0x0,8
tick,0x7ffad1f6fb64,99696489,0,0x0,8
tick,0x7ffad1f6fb64,99711302,0,0x0,8
tick,0x7ffad1f6fb64,99726306,0,0x0,8
tick,0x7ffad1f6fb64,99741284,0,0x0,8
tick,0x7ffad1f6fb64,99756338,0,0x0,8
tick,0x7ffad1f6fb64,99771302,0,0x0,8
tick,0x7ffad1f6fb64,99786329,0,0x0,8
tick,0x7ffad1f6fb64,99801343,0,0x0,8
tick,0x7ffad1f6fb64,99817382,0,0x0,8
tick,0x7ffad1f6fb64,99833381,0,0x0,8
tick,0x7ffad1f6fb64,99849386,0,0x0,8
tick,0x7ffad1f6fb64,99865408,0,0x0,8
tick,0x7ffad1f6fb64,99880408,0,0x0,8
tick,0x7ffad1f6fb64,99895477,0,0x0,8
tick,0x7ffad1f6fb64,99911442,0,0x0,8
tick,0x7ffad1f6fb64,99927457,0,0x0,8
tick,0x7ffad1f6fb64,99943474,0,0x0,8
tick,0x7ffad1f6fb64,99958483,0,0x0,8
tick,0x7ffad1f6fb64,99974507,0,0x0,8
tick,0x7ffad1f6fb64,99989512,0,0x0,8
tick,0x7ffad1f6fb64,100005512,0,0x0,8
tick,0x7ffad1f6fb64,100020539,0,0x0,8
tick,0x7ffad1f6fb64,100035548,0,0x0,8
tick,0x7ffad1f6fb64,100050557,0,0x0,8
tick,0x7ffad1f6fb64,100066607,0,0x0,8
tick,0x7ffad1f6fb64,100081619,0,0x0,8
tick,0x7ffad1f6fb64,100097638,0,0x0,8
tick,0x7ffad1f6fb64,100113644,0,0x0,8
tick,0x7ffad1f6fb64,100129652,0,0x0,8
tick,0x7ffad1f6fb64,100144663,0,0x0,8
tick,0x7ffad1f6fb64,100160706,0,0x0,8
tick,0x7ffad1f6fb64,100175718,0,0x0,8
tick,0x7ffad1f6fb64,100191694,0,0x0,8
tick,0x7ffad1f6fb64,100207725,0,0x0,8
tick,0x7ffad1f6fb64,100222721,0,0x0,8
tick,0x7ffad1f6fb64,100237741,0,0x0,8
tick,0x7ffad1f6fb64,100253742,0,0x0,8
tick,0x7ffad1f6fb64,100269773,0,0x0,8
tick,0x7ffad1f6fb64,100284796,0,0x0,8
tick,0x7ffad1f6fb64,100299795,0,0x0,8
tick,0x7ffad1f6fb64,100314807,0,0x0,8
tick,0x7ffad1f6fb64,100329852,0,0x0,8
tick,0x7ffad1f6fb64,100345847,0,0x0,8
tick,0x7ffad1f6fb64,100360870,0,0x0,8
tick,0x7ffad1f6fb64,100376917,0,0x0,8
tick,0x7ffad1f6fb64,100392900,0,0x0,8
tick,0x7ffad1f6fb64,100408925,0,0x0,8
tick,0x7ffad1f6fb64,100424922,0,0x0,8
tick,0x7ffad1f6fb64,100440947,0,0x0,8
tick,0x7ffad1f6fb64,100456956,0,0x0,8
tick,0x7ffad1f6fb64,100472968,0,0x0,8
tick,0x7ffad1f6fb64,100488008,0,0x0,8
tick,0x7ffad1f6fb64,100503063,0,0x0,8
tick,0x7ffad1f6fb64,100518045,0,0x0,8
tick,0x7ffad1f6fb64,100534024,0,0x0,8
tick,0x7ffad1f6fb64,100549020,0,0x0,8
tick,0x7ffad1f6fb64,100565055,0,0x0,8
tick,0x7ffad1f6fb64,100580051,0,0x0,8
tick,0x7ffad1f6fb64,100596256,0,0x0,8
tick,0x7ffad1f6fb64,100612100,0,0x0,8
tick,0x7ffad1f6fb64,100628091,0,0x0,8
tick,0x7ffad1f6fb64,100643117,0,0x0,8
tick,0x7ffad1f6fb64,100659159,0,0x0,8
tick,0x7ffad1f6fb64,100674149,0,0x0,8
tick,0x7ffad1f6fb64,100690152,0,0x0,8
tick,0x7ffad1f6fb64,100705215,0,0x0,8
tick,0x7ffad1f6fb64,100720171,0,0x0,8
tick,0x7ffad1f6fb64,100735195,0,0x0,8
tick,0x7ffad1f6fb64,100750218,0,0x0,8
tick,0x7ffad1f6fb64,100766215,0,0x0,8
tick,0x7ffad1f6fb64,100781241,0,0x0,8
tick,0x7ffad1f6fb64,100797275,0,0x0,8
tick,0x7ffad1f6fb64,100812290,0,0x0,8
tick,0x7ffad1f6fb64,100827283,0,0x0,8
tick,0x7ffad1f6fb64,100843319,0,0x0,8
tick,0x7ffad1f6fb64,100859338,0,0x0,8
tick,0x7ffad1f6fb64,100875325,0,0x0,8
tick,0x7ffad1f6fb64,100891351,0,0x0,8
tick,0x7ffad1f6fb64,100907361,0,0x0,8
tick,0x7ffad1f6fb64,100922389,0,0x0,8
tick,0x7ffad1f6fb64,100937389,0,0x0,8
tick,0x7ffad1f6fb64,100953395,0,0x0,8
tick,0x7ffad1f6fb64,100969400,0,0x0,8
tick,0x7ffad1f6fb64,100984426,0,0x0,8
tick,0x7ffad1f6fb64,100999456,0,0x0,8
tick,0x7ffad1f6fb64,101014448,0,0x0,8
tick,0x7ffad1f6fb64,101030526,0,0x0,8
tick,0x7ffad1f6fb64,101046468,0,0x0,8
tick,0x7ffad1f6fb64,101062503,0,0x0,8
tick,0x7ffad1f6fb64,101077502,0,0x0,8
tick,0x7ffad1f6fb64,101092527,0,0x0,8
tick,0x7ffad1f6fb64,101108517,0,0x0,8
tick,0x7ffad1f6fb64,101124555,0,0x0,8
tick,0x7ffad1f6fb64,101139573,0,0x0,8
tick,0x7ffad1f6fb64,101155597,0,0x0,8
tick,0x7ffad1f6fb64,101171607,0,0x0,8
tick,0x7ffad1f6fb64,101187621,0,0x0,8
tick,0x7ffad1f6fb64,101203726,0,0x0,8
tick,0x7ffad1f6fb64,101219661,0,0x0,8
tick,0x7ffad1f6fb64,101235659,0,0x0,8
tick,0x7ffad1f6fb64,101251672,0,0x0,8
tick,0x7ffad1f6fb64,101266680,0,0x0,8
tick,0x7ffad1f6fb64,101281708,0,0x0,8
tick,0x7ffad1f6fb64,101296747,0,0x0,8
tick,0x7ffad1f6fb64,101312772,0,0x0,8
tick,0x7ffad1f6fb64,101328741,0,0x0,8
tick,0x7ffad1f6fb64,101343755,0,0x0,8
tick,0x7ffad1f6fb64,101359821,0,0x0,8
tick,0x7ffad1f6fb64,101374799,0,0x0,8
tick,0x7ffad1f6fb64,101390809,0,0x0,8
tick,0x7ffad1f6fb64,101406848,0,0x0,8
tick,0x7ffad1f6fb64,101422850,0,0x0,8
tick,0x7ffad1f6fb64,101438854,0,0x0,8
tick,0x7ffad1f6fb64,101454861,0,0x0,8
tick,0x7ffad1f6fb64,101469894,0,0x0,8
tick,0x7ffad1f6fb64,101485878,0,0x0,8
tick,0x7ffad1f6fb64,101501910,0,0x0,8
tick,0x7ffad1f6fb64,101517929,0,0x0,8
tick,0x7ffad1f6fb64,101532941,0,0x0,8
tick,0x7ffad1f6fb64,101548925,0,0x0,8
tick,0x7ffad1f6fb64,101563967,0,0x0,8
tick,0x7ffad1f6fb64,101579008,0,0x0,8
tick,0x7ffad1f6fb64,101594999,0,0x0,8
tick,0x7ffad1f6fb64,101610005,0,0x0,8
tick,0x7ffad1f6fb64,101626027,0,0x0,8
tick,0x7ffad1f6fb64,101641001,0,0x0,8
tick,0x7ffad1f6fb64,101657260,0,0x0,8
tick,0x7ffad1f6fb64,101673047,0,0x0,8
tick,0x7ffad1f6fb64,101689087,0,0x0,8
tick,0x7ffad1f6fb64,101705079,0,0x0,8
tick,0x7ffad1f6fb64,101720129,0,0x0,8
tick,0x7ffad1f6fb64,101735137,0,0x0,8
tick,0x7ffad1f6fb64,101750147,0,0x0,8
tick,0x7ffad1f6fb64,101766144,0,0x0,8
tick,0x7ffad1f6fb64,101782149,0,0x0,8
tick,0x7ffad1f6fb64,101797198,0,0x0,8
tick,0x7ffad1f6fb64,101813226,0,0x0,8
tick,0x7ffad1f6fb64,101829216,0,0x0,8
tick,0x7ffad1f6fb64,101845232,0,0x0,8
tick,0x7ffad1f6fb64,101861236,0,0x0,8
tick,0x7ffad1f6fb64,101876267,0,0x0,8
tick,0x7ffad1f6fb64,101892239,0,0x0,8
tick,0x7ffad1f6fb64,101908337,0,0x0,8
tick,0x7ffad1f6fb64,101924278,0,0x0,8
tick,0x7ffad1f6fb64,101940316,0,0x0,8
tick,0x7ffad1f6fb64,101956299,0,0x0,8
tick,0x7ffad1f6fb64,101972322,0,0x0,8
tick,0x7ffad1f6fb64,101988331,0,0x0,8
tick,0x7ffad1f6fb64,102004389,0,0x0,8
tick,0x7ffad1f6fb64,102020383,0,0x0,8
tick,0x7ffad1f6fb64,102036399,0,0x0,8
tick,0x7ffad1f6fb64,102052388,0,0x0,8
tick,0x7ffad1f6fb64,102068433,0,0x0,8
tick,0x7ffad1f6fb64,102084450,0,0x0,8
tick,0x7ffad1f6fb64,102099417,0,0x0,8
tick,0x7ffad1f6fb64,102115472,0,0x0,8
tick,0x7ffad1f6fb64,102131486,0,0x0,8
tick,0x7ffad1f6fb64,102147497,0,0x0,8
tick,0x7ffad1f6fb64,102163550,0,0x0,8
tick,0x7ffad1f6fb64,102179547,0,0x0,8
tick,0x7ffad1f6fb64,102194530,0,0x0,8
tick,0x7ffad1f6fb64,102209573,0,0x0,8
tick,0x7ffad1f6fb64,102225607,0,0x0,8
tick,0x7ffad1f6fb64,102240588,0,0x0,8
tick,0x7ffad1f6fb64,102255604,0,0x0,8
tick,0x7ffad1f6fb64,102271655,0,0x0,8
tick,0x7ffad1f6fb64,102287621,0,0x0,8
tick,0x7ffad1f6fb64,102302630,0,0x0,8
tick,0x7ffad1f6fb64,102317629,0,0x0,8
tick,0x7ffad1f6fb64,102332650,0,0x0,8
tick,0x7ffad1f6fb64,102348711,0,0x0,8
tick,0x7ffad1f6fb64,102364701,0,0x0,8
tick,0x7ffad1f6fb64,102379719,0,0x0,8
tick,0x7ffad1f6fb64,102395732,0,0x0,8
tick,0x7ffad1f6fb64,102410743,0,0x0,8
tick,0x7ffad1f6fb64,102425740,0,0x0,8
tick,0x7ffad1f6fb64,102440801,0,0x0,8
tick,0x7ffad1f6fb64,102455829,0,0x0,8
tick,0x7ffad1f6fb64,102470788,0,0x0,8
tick,0x7ffad1f6fb64,102486794,0,0x0,8
tick,0x7ffad1f6fb64,102501811,0,0x0,8
tick,0x7ffad1f6fb64,102516863,0,0x0,8
tick,0x7ffad1f6fb64,102531846,0,0x0,8
tick,0x7ffad1f6fb64,102546878,0,0x0,8
tick,0x7ffad1f6fb64,102561871,0,0x0,8
tick,0x7ffad1f6fb64,102576886,0,0x0,8
tick,0x7ffad1f6fb64,102592934,0,0x0,8
tick,0x7ffad1f6fb64,102608923,0,0x0,8
tick,0x7ffad1f6fb64,102623917,0,0x0,8
tick,0x7ffad1f6fb64,102639941,0,0x0,8
tick,0x7ffad1f6fb64,102654933,0,0x0,8
tick,0x7ffad1f6fb64,102670087,0,0x0,8
tick,0x7ffad1f6fb64,102684964,0,0x0,8
tick,0x7ffad1f6fb64,102700986,0,0x0,8
tick,0x7ffad1f6fb64,102717041,0,0x0,8
tick,0x7ffad1f6fb64,102733031,0,0x0,8
tick,0x7ffad1f6fb64,102748033,0,0x0,8
tick,0x7ffad1f6fb64,102764038,0,0x0,8
tick,0x7ffad1f6fb64,102780085,0,0x0,8
tick,0x7ffad1f6fb64,102795084,0,0x0,8
tick,0x7ffad1f6fb64,102810100,0,0x0,8
tick,0x7ffad1f6fb64,102826120,0,0x0,8
tick,0x7ffad1f6fb64,102842108,0,0x0,8
tick,0x7ffad1f6fb64,102857116,0,0x0,8
tick,0x7ffad1f6fb64,102873162,0,0x0,8
tick,0x7ffad1f6fb64,102889165,0,0x0,8
tick,0x7ffad1f6fb64,102904183,0,0x0,8
tick,0x7ffad1f6fb64,102920222,0,0x0,8
tick,0x7ffad1f6fb64,102936203,0,0x0,8
tick,0x7ffad1f6fb64,102951231,0,0x0,8
tick,0x7ffad1f6fb64,102966260,0,0x0,8
tick,0x7ffad1f6fb64,102981241,0,0x0,8
tick,0x7ffad1f6fb64,102997277,0,0x0,8
tick,0x7ffad1f6fb64,103012303,0,0x0,8
tick,0x7ffad1f6fb64,103027289,0,0x0,8
tick,0x7ffad1f6fb64,103043322,0,0x0,8
tick,0x7ffad1f6fb64,103058391,0,0x0,8
tick,0x7ffad1f6fb64,103073416,0,0x0,8
tick,0x7ffad1f6fb64,103088376,0,0x0,8
tick,0x7ffad1f6fb64,103103372,0,0x0,8
tick,0x7ffad1f6fb64,103119383,0,0x0,8
tick,0x7ffad1f6fb64,103135389,0,0x0,8
tick,0x7ffad1f6fb64,103150402,0,0x0,8
tick,0x7ffad1f6fb64,103165443,0,0x0,8
tick,0x7ffad1f6fb64,103180437,0,0x0,8
tick,0x7ffad1f6fb64,103195434,0,0x0,8
tick,0x7ffad1f6fb64,103210490,0,0x0,8
tick,0x7ffad1f6fb64,103225462,0,0x0,8
tick,0x7ffad1f6fb64,103240487,0,0x0,8
tick,0x7ffad1f6fb64,103255499,0,0x0,8
tick,0x7ffad1f6fb64,103270520,0,0x0,8
tick,0x7ffad1f6fb64,103285533,0,0x0,8
tick,0x7ffad1f6fb64,103300534,0,0x0,8
tick,0x7ffad1f6fb64,103315575,0,0x0,8
tick,0x7ffad1f6fb64,103331557,0,0x0,8
tick,0x7ffad1f6fb64,103347567,0,0x0,8
tick,0x7ffad1f6fb64,103363604,0,0x0,8
tick,0x7ffad1f6fb64,103379618,0,0x0,8
tick,0x7ffad1f6fb64,103394613,0,0x0,8
tick,0x7ffad1f6fb64,103409621,0,0x0,8
tick,0x7ffad1f6fb64,103424653,0,0x0,8
tick,0x7ffad1f6fb64,103439666,0,0x0,8
tick,0x7ffad1f6fb64,103455687,0,0x0,8
tick,0x7ffad1f6fb64,103471717,0,0x0,8
tick,0x7ffad1f6fb64,103487699,0,0x0,8
tick,0x7ffad1f6fb64,103502712,0,0x0,8
tick,0x7ffad1f6fb64,103517731,0,0x0,8
tick,0x7ffad1f6fb64,103533750,0,0x0,8
tick,0x7ffad1f6fb64,103549748,0,0x0,8
tick,0x7ffad1f6fb64,103565811,0,0x0,8
tick,0x7ffad1f6fb64,103581798,0,0x0,8
tick,0x7ffad1f6fb64,103597788,0,0x0,8
tick,0x7ffad1f6fb64,103612840,0,0x0,8
tick,0x7ffad1f6fb64,103628820,0,0x0,8
tick,0x7ffad1f6fb64,103643866,0,0x0,8
tick,0x7ffad1f6fb64,103658878,0,0x0,8
tick,0x7ffad1f6fb64,103674877,0,0x0,8
tick,0x7ffad1f6fb64,103690888,0,0x0,8
tick,0x7ffad1f6fb64,103705912,0,0x0,8
tick,0x7ffad1f6fb64,103721924,0,0x0,8
tick,0x7ffad1f6fb64,103736964,0,0x0,8
tick,0x7ffad1f6fb64,103752942,0,0x0,8
tick,0x7ffad1f6fb64,103767956,0,0x0,8
tick,0x7ffad1f6fb64,103782977,0,0x0,8
tick,0x7ffad1f6fb64,103798003,0,0x0,8
tick,0x7ffad1f6fb64,103813983,0,0x0,8
tick,0x7ffad1f6fb64,103829023,0,0x0,8
tick,0x7ffad1f6fb64,103844048,0,0x0,8
tick,0x7ffad1f6fb64,103860073,0,0x0,8
tick,0x7ffad1f6fb64,103876070,0,0x0,8
tick,0x7ffad1f6fb64,103891156,0,0x0,8
tick,0x7ffad1f6fb64,103906106,0,0x0,8
tick,0x7ffad1f6fb64,103921100,0,0x0,8
tick,0x7ffad1f6fb64,103937134,0,0x0,8
tick,0x7ffad1f6fb64,103953166,0,0x0,8
tick,0x7ffad1f6fb64,103968170,0,0x0,8
tick,0x7ffad1f6fb64,103984230,0,0x0,8
tick,0x7ffad1f6fb64,103999208,0,0x0,8
tick,0x7ffad1f6fb64,104014181,0,0x0,8
tick,0x7ffad1f6fb64,104030209,0,0x0,8
tick,0x7ffad1f6fb64,104045220,0,0x0,8
tick,0x7ffad1f6fb64,104060227,0,0x0,8
tick,0x7ffad1f6fb64,104076284,0,0x0,8
tick,0x7ffad1f6fb64,104092269,0,0x0,8
tick,0x7ffad1f6fb64,104108456,0,0x0,8
tick,0x7ffad1f6fb64,104124285,0,0x0,8
tick,0x7ffad1f6fb64,104140323,0,0x0,8
tick,0x7ffad1f6fb64,104156316,0,0x0,8
tick,0x7ffad1f6fb64,104172325,0,0x0,8
tick,0x7ffad1f6fb64,104188346,0,0x0,8
tick,0x7ffad1f6fb64,104203347,0,0x0,8
tick,0x7ffad1f6fb64,104219356,0,0x0,8
tick,0x7ffad1f6fb64,104235379,0,0x0,8
tick,0x7ffad1f6fb64,104250402,0,0x0,8
tick,0x7ffad1f6fb64,104266406,0,0x0,8
tick,0x7ffad1f6fb64,104282425,0,0x0,8
tick,0x7ffad1f6fb64,104298455,0,0x0,8
tick,0x7ffad1f6fb64,104313459,0,0x0,8
tick,0x7ffad1f6fb64,104328472,0,0x0,8
tick,0x7ffad1f6fb64,104344499,0,0x0,8
tick,0x7ffad1f6fb64,104360630,0,0x0,8
tick,0x7ffad1f6fb64,104375566,0,0x0,8
tick,0x7ffad1f6fb64,104391528,0,0x0,8
tick,0x7ffad1f6fb64,104407554,0,0x0,8
tick,0x7ffad1f6fb64,104423545,0,0x0,8
tick,0x7ffad1f6fb64,104439573,0,0x0,8
tick,0x7ffad1f6fb64,104455573,0,0x0,8
tick,0x7ffad1f6fb64,104470600,0,0x0,8
tick,0x7ffad1f6fb64,104485641,0,0x0,8
tick,0x7ffad1f6fb64,104500657,0,0x0,8
tick,0x7ffad1f6fb64,104516687,0,0x0,8
tick,0x7ffad1f6fb64,104532655,0,0x0,8
tick,0x7ffad1f6fb64,104548662,0,0x0,8
tick,0x7ffad1f6fb64,104563707,0,0x0,8
tick,0x7ffad1f6fb64,104579695,0,0x0,8
tick,0x7ffad1f6fb64,104595715,0,0x0,8
tick,0x7ffad1f6fb64,104611715,0,0x0,8
tick,0x7ffad1f6fb64,104627743,0,0x0,8
tick,0x7ffad1f6fb64,104642746,0,0x0,8
tick,0x7ffad1f6fb64,104658781,0,0x0,8
tick,0x7ffad1f6fb64,104674772,0,0x0,8
tick,0x7ffad1f6fb64,104690796,0,0x0,8
tick,0x7ffad1f6fb64,104705814,0,0x0,8
tick,0x7ffad1f6fb64,104721818,0,0x0,8
tick,0x7ffad1f6fb64,104736839,0,0x0,8
tick,0x7ffad1f6fb64,104751858,0,0x0,8
tick,0x7ffad1f6fb64,104766872,0,0x0,8
tick,0x7ffad1f6fb64,104781925,0,0x0,8
tick,0x7ffad1f6fb64,104796893,0,0x0,8
tick,0x7ffad1f6fb64,104812905,0,0x0,8
tick,0x7ffad1f6fb64,104828935,0,0x0,8
tick,0x7ffad1f6fb64,104843949,0,0x0,8
tick,0x7ffad1f6fb64,104859001,0,0x0,8
tick,0x7ffad1f6fb64,104874967,0,0x0,8
tick,0x7ffad1f6fb64,104890991,0,0x0,8
tick,0x7ffad1f6fb64,104905981,0,0x0,8
tick,0x7ffad1f6fb64,104921042,0,0x0,8
tick,0x7ffad1f6fb64,104936019,0,0x0,8
tick,0x7ffad1f6fb64,104952022,0,0x0,8
tick,0x7ffad1f6fb64,104968071,0,0x0,8
tick,0x7ffad1f6fb64,104984150,0,0x0,8
tick,0x7ffad1f6fb64,105000176,0,0x0,8
tick,0x7ffad1f6fb64,105016095,0,0x0,8
tick,0x7ffad1f6fb64,105032126,0,0x0,8
tick,0x7ffad1f6fb64,105048123,0,0x0,8
tick,0x7ffad1f6fb64,105064164,0,0x0,8
tick,0x7ffad1f6fb64,105080161,0,0x0,8
tick,0x7ffad1f6fb64,105095201,0,0x0,8
tick,0x7ffad1f6fb64,105111182,0,0x0,8
tick,0x7ffad1f6fb64,105127184,0,0x0,8
tick,0x7ffad1f6fb64,105143193,0,0x0,8
tick,0x7ffad1f6fb64,105159214,0,0x0,8
tick,0x7ffad1f6fb64,105175238,0,0x0,8
tick,0x7ffad1f6fb64,105190248,0,0x0,8
tick,0x7ffad1f6fb64,105205264,0,0x0,8
tick,0x7ffad1f6fb64,105220281,0,0x0,8
tick,0x7ffad1f6fb64,105236295,0,0x0,8
tick,0x7ffad1f6fb64,105252316,0,0x0,8
tick,0x7ffad1f6fb64,105268339,0,0x0,8
tick,0x7ffad1f6fb64,105283360,0,0x0,8
tick,0x7ffad1f6fb64,105299368,0,0x0,8
tick,0x7ffad1f6fb64,105314393,0,0x0,8
tick,0x7ffad1f6fb64,105329396,0,0x0,8
tick,0x7ffad1f6fb64,105344435,0,0x0,8
tick,0x7ffad1f6fb64,105359443,0,0x0,8
tick,0x7ffad1f6fb64,105375425,0,0x0,8
tick,0x7ffad1f6fb64,105390439,0,0x0,8
tick,0x7ffad1f6fb64,105406458,0,0x0,8
tick,0x7ffad1f6fb64,105422482,0,0x0,8
tick,0x7ffad1f6fb64,105437481,0,0x0,8
tick,0x7ffad1f6fb64,105452489,0,0x0,8
tick,0x7ffad1f6fb64,105468513,0,0x0,8
tick,0x7ffad1f6fb64,105483512,0,0x0,8
tick,0x7ffad1f6fb64,105498575,0,0x0,8
tick,0x7ffad1f6fb64,105513579,0,0x0,8
tick,0x7ffad1f6fb64,105529562,0,0x0,8
tick,0x7ffad1f6fb64,105544582,0,0x0,8
tick,0x7ffad1f6fb64,105560590,0,0x0,8
tick,0x7ffad1f6fb64,105575587,0,0x0,8
tick,0x7ffad1f6fb64,105591623,0,0x0,8
tick,0x7ffad1f6fb64,105607662,0,0x0,8
tick,0x7ffad1f6fb64,105623669,0,0x0,8
tick,0x7ffad1f6fb64,105639646,0,0x0,8
tick,0x7ffad1f6fb64,105655712,0,0x0,8
tick,0x7ffad1f6fb64,105671687,0,0x0,8
tick,0x7ffad1f6fb64,105686758,0,0x0,8
tick,0x7ffad1f6fb64,105702750,0,0x0,8
tick,0x7ffad1f6fb64,105718740,0,0x0,8
tick,0x7ffad1f6fb64,105734766,0,0x0,8
tick,0x7ffad1f6fb64,105749760,0,0x0,8
tick,0x7ffad1f6fb64,105764810,0,0x0,8
tick,0x7ffad1f6fb64,105779784,0,0x0,8
tick,0x7ffad1f6fb64,105795811,0,0x0,8
tick,0x7ffad1f6fb64,105811827,0,0x0,8
tick,0x7ffad1f6fb64,105826885,0,0x0,8
tick,0x7ffad1f6fb64,105841882,0,0x0,8
tick,0x7ffad1f6fb64,105856907,0,0x0,8
tick,0x7ffad1f6fb64,105872038,0,0x0,8
tick,0x7ffad1f6fb64,105887946,0,0x0,8
tick,0x7ffad1f6fb64,105902929,0,0x0,8
tick,0x7ffad1f6fb64,105918917,0,0x0,8
tick,0x7ffad1f6fb64,105935020,0,0x0,8
tick,0x7ffad1f6fb64,105949951,0,0x0,8
tick,0x7ffad1f6fb64,105966045,0,0x0,8
tick,0x7ffad1f6fb64,105982017,0,0x0,8
tick,0x7ffad1f6fb64,105997010,0,0x0,8
tick,0x7ffad1f6fb64,106012033,0,0x0,8
tick,0x7ffad1f6fb64,106027040,0,0x0,8
tick,0x7ffad1f6fb64,106043048,0,0x0,8
tick,0x7ffad1f6fb64,106058065,0,0x0,8
tick,0x7ffad1f6fb64,106074106,0,0x0,8
tick,0x7ffad1f6fb64,106090099,0,0x0,8
tick,0x7ffad1f6fb64,106105101,0,0x0,8
tick,0x7ffad1f6fb64,106120109,0,0x0,8
tick,0x7ffad1f6fb64,106136203,0,0x0,8
tick,0x7ffad1f6fb64,106152386,0,0x0,8
tick,0x7ffad1f6fb64,106167168,0,0x0,8
tick,0x7ffad1f6fb64,106182159,0,0x0,8
tick,0x7ffad1f6fb64,106198187,0,0x0,8
tick,0x7ffad1f6fb64,106213198,0,0x0,8
tick,0x7ffad1f6fb64,106229213,0,0x0,8
tick,0x7ffad1f6fb64,106244228,0,0x0,8
tick,0x7ffad1f6fb64,106260268,0,0x0,8
tick,0x7ffad1f6fb64,106276293,0,0x0,8
tick,0x7ffad1f6fb64,106292288,0,0x0,8
tick,0x7ffad1f6fb64,106307281,0,0x0,8
tick,0x7ffad1f6fb64,106322284,0,0x0,8
tick,0x7ffad1f6fb64,106338303,0,0x0,8
tick,0x7ffad1f6fb64,106354350,0,0x0,8
tick,0x7ffad1f6fb64,106370338,0,0x0,8
tick,0x7ffad1f6fb64,106385391,0,0x0,8
tick,0x7ffad1f6fb64,106400386,0,0x0,8
tick,0x7ffad1f6fb64,106415387,0,0x0,8
tick,0x7ffad1f6fb64,106431376,0,0x0,8
tick,0x7ffad1f6fb64,106447483,0,0x0,8
tick,0x7ffad1f6fb64,106463430,0,0x0,8
tick,0x7ffad1f6fb64,106478470,0,0x0,8
tick,0x7ffad1f6fb64,106493442,0,0x0,8
tick,0x7ffad1f6fb64,106508449,0,0x0,8
tick,0x7ffad1f6fb64,106524472,0,0x0,8
tick,0x7ffad1f6fb64,106540533,0,0x0,8
tick,0x7ffad1f6fb64,106555503,0,0x0,8
tick,0x7ffad1f6fb64,106570519,0,0x0,8
tick,0x7ffad1f6fb64,106586548,0,0x0,8
tick,0x7ffad1f6fb64,106602538,0,0x0,8
tick,0x7ffad1f6fb64,106617549,0,0x0,8
tick,0x7ffad1f6fb64,106632613,0,0x0,8
tick,0x7ffad1f6fb64,106648606,0,0x0,8
tick,0x7ffad1f6fb64,106663606,0,0x0,8
tick,0x7ffad1f6fb64,106678616,0,0x0,8
tick,0x7ffad1f6fb64,106693652,0,0x0,8
tick,0x7ffad1f6fb64,106708647,0,0x0,8
tick,0x7ffad1f6fb64,106723656,0,0x0,8
tick,0x7ffad1f6fb64,106739692,0,0x0,8
tick,0x7ffad1f6fb64,106755710,0,0x0,8
tick,0x7ffad1f6fb64,106770719,0,0x0,8
tick,0x7ffad1f6fb64,106786730,0,0x0,8
tick,0x7ffad1f6fb64,106801729,0,0x0,8
tick,0x7ffad1f6fb64,106816744,0,0x0,8
tick,0x7ffad1f6fb64,106831757,0,0x0,8
tick,0x7ffad1f6fb64,106846856,0,0x0,8
tick,0x7ffad1f6fb64,106862761,0,0x0,8
tick,0x7ffad1f6fb64,106878811,0,0x0,8
tick,0x7ffad1f6fb64,106894834,0,0x0,8
tick,0x7ffad1f6fb64,106909808,0,0x0,8
tick,0x7ffad1f6fb64,106924823,0,0x0,8
tick,0x7ffad1f6fb64,106939874,0,0x0,8
tick,0x7ffad1f6fb64,106955891,0,0x0,8
tick,0x7ffad1f6fb64,106971870,0,0x0,8
tick,0x7ffad1f6fb64,106987899,0,0x0,8
tick,0x7ffad1f6fb64,107002897,0,0x0,8
tick,0x7ffad1f6fb64,107018925,0,0x0,8
tick,0x7ffad1f6fb64,107034949,0,0x0,8
tick,0x7ffad1f6fb64,107051021,0,0x0,8
tick,0x7ffad1f6fb64,107067014,0,0x0,8
tick,0x7ffad1f6fb64,107081972,0,0x0,8
tick,0x7ffad1f6fb64,107098010,0,0x0,8
tick,0x7ffad1f6fb64,107114083,0,0x0,8
tick,0x7ffad1f6fb64,107129058,0,0x0,8
tick,0x7ffad1f6fb64,107144041,0,0x0,8
tick,0x7ffad1f6fb64,107159059,0,0x0,8
tick,0x7ffad1f6fb64,107175076,0,0x0,8
tick,0x7ffad1f6fb64,107191074,0,0x0,8
tick,0x7ffad1f6fb64,107206091,0,0x0,8
tick,0x7ffad1f6fb64,107221124,0,0x0,8
tick,0x7ffad1f6fb64,107237121,0,0x0,8
tick,0x7ffad1f6fb64,107252137,0,0x0,8
tick,0x7ffad1f6fb64,107268161,0,0x0,8
tick,0x7ffad1f6fb64,107284197,0,0x0,8
tick,0x7ffad1f6fb64,107299421,0,0x0,8
tick,0x7ffad1f6fb64,107315203,0,0x0,8
tick,0x7ffad1f6fb64,107331195,0,0x0,8
tick,0x7ffad1f6fb64,107347256,0,0x0,8
tick,0x7ffad1f6fb64,107363237,0,0x0,8
tick,0x7ffad1f6fb64,107378291,0,0x0,8
tick,0x7ffad1f6fb64,107393269,0,0x0,8
tick,0x7ffad1f6fb64,107408322,0,0x0,8
tick,0x7ffad1f6fb64,107424293,0,0x0,8
tick,0x7ffad1f6fb64,107439361,0,0x0,8
tick,0x7ffad1f6fb64,107454348,0,0x0,8
tick,0x7ffad1f6fb64,107469369,0,0x0,8
tick,0x7ffad1f6fb64,107485350,0,0x0,8
tick,0x7ffad1f6fb64,107500405,0,0x0,8
tick,0x7ffad1f6fb64,107516409,0,0x0,8
tick,0x7ffad1f6fb64,107532389,0,0x0,8
tick,0x7ffad1f6fb64,107548419,0,0x0,8
tick,0x7ffad1f6fb64,107563444,0,0x0,8
tick,0x7ffad1f6fb64,107578440,0,0x0,8
tick,0x7ffad1f6fb64,107593451,0,0x0,8
tick,0x7ffad1f6fb64,107609504,0,0x0,8
tick,0x7ffad1f6fb64,107624498,0,0x0,8
tick,0x7ffad1f6fb64,107639496,0,0x0,8
tick,0x7ffad1f6fb64,107654555,0,0x0,8
tick,0x7ffad1f6fb64,107670607,0,0x0,8
tick,0x7ffad1f6fb64,107686658,0,0x0,8
tick,0x7ffad1f6fb64,107702551,0,0x0,8
tick,0x7ffad1f6fb64,107717587,0,0x0,8
tick,0x7ffad1f6fb64,107732626,0,0x0,8
tick,0x7ffad1f6fb64,107748601,0,0x0,8
tick,0x7ffad1f6fb64,107764614,0,0x0,8
tick,0x7ffad1f6fb64,107780862,0,0x0,8
tick,0x7ffad1f6fb64,107796682,0,0x0,8
tick,0x7ffad1f6fb64,107812662,0,0x0,8
tick,0x7ffad1f6fb64,107828661,0,0x0,8
tick,0x7ffad1f6fb64,107843666,0,0x0,8
tick,0x7ffad1f6fb64,107859705,0,0x0,8
tick,0x7ffad1f6fb64,107875719,0,0x0,8
tick,0x7ffad1f6fb64,107891740,0,0x0,8
tick,0x7ffad1f6fb64,107907725,0,0x0,8
tick,0x7ffad1f6fb64,107923754,0,0x0,8
tick,0x7ffad1f6fb64,107938756,0,0x0,8
tick,0x7ffad1f6fb64,107954801,0,0x0,8
tick,0x7ffad1f6fb64,107969781,0,0x0,8
tick,0x7ffad1f6fb64,107985815,0,0x0,8
tick,0x7ffad1f6fb64,108001849,0,0x0,8
tick,0x7ffad1f6fb64,108017847,0,0x0,8
tick,0x7ffad1f6fb64,108033892,0,0x0,8
tick,0x7ffad1f6fb64,108049879,0,0x0,8
tick,0x7ffad1f6fb64,108064924,0,0x0,8
tick,0x7ffad1f6fb64,108080907,0,0x0,8
tick,0x7ffad1f6fb64,108095905,0,0x0,8
tick,0x7ffad1f6fb64,108111959,0,0x0,8
tick,0x7ffad1f6fb64,108127965,0,0x0,8
tick,0x7ffad1f6fb64,108143946,0,0x0,8
tick,0x7ffad1f6fb64,108158969,0,0x0,8
tick,0x7ffad1f6fb64,108174967,0,0x0,8
tick,0x7ffad1f6fb64,108189986,0,0x0,8
tick,0x7ffad1f6fb64,108205013,0,0x0,8
tick,0x7ffad1f6fb64,108221019,0,0x0,8
tick,0x7ffad1f6fb64,108236018,0,0x0,8
tick,0x7ffad1f6fb64,108252038,0,0x0,8
tick,0x7ffad1f6fb64,108268059,0,0x0,8
tick,0x7ffad1f6fb64,108283069,0,0x0,8
tick,0x7ffad1f6fb64,108298093,0,0x0,8
tick,0x7ffad1f6fb64,108314109,0,0x0,8
tick,0x7ffad1f6fb64,108330119,0,0x0,8
tick,0x7ffad1f6fb64,108346122,0,0x0,8
tick,0x7ffad1f6fb64,108362145,0,0x0,8
tick,0x7ffad1f6fb64,108377164,0,0x0,8
tick,0x7ffad1f6fb64,108393159,0,0x0,8
tick,0x7ffad1f6fb64,108408216,0,0x0,8
tick,0x7ffad1f6fb64,108423188,0,0x0,8
tick,0x7ffad1f6fb64,108439214,0,0x0,8
tick,0x7ffad1f6fb64,108455224,0,0x0,8
tick,0x7ffad1f6fb64,108470236,0,0x0,8
tick,0x7ffad1f6fb64,108486241,0,0x0,8
tick,0x7ffad1f6fb64,108502257,0,0x0,8
tick,0x7ffad1f6fb64,108518272,0,0x0,8
tick,0x7ffad1f6fb64,108534285,0,0x0,8
tick,0x7ffad1f6fb64,108549292,0,0x0,8
tick,0x7ffad1f6fb64,108565324,0,0x0,8
tick,0x7ffad1f6fb64,108580386,0,0x0,8
tick,0x7ffad1f6fb64,108596366,0,0x0,8
tick,0x7ffad1f6fb64,108611347,0,0x0,8
tick,0x7ffad1f6fb64,108626371,0,0x0,8
tick,0x7ffad1f6fb64,108642400,0,0x0,8
tick,0x7ffad1f6fb64,108657523,0,0x0,8
tick,0x7ffad1f6fb64,108673425,0,0x0,8
tick,0x7ffad1f6fb64,108688443,0,0x0,8
tick,0x7ffad1f6fb64,108704442,0,0x0,8
tick,0x7ffad1f6fb64,108720483,0,0x0,8
tick,0x7ffad1f6fb64,108736470,0,0x0,8
tick,0x7ffad1f6fb64,108752493,0,0x0,8
tick,0x7ffad1f6fb64,108768497,0,0x0,8
tick,0x7ffad1f6fb64,108783507,0,0x0,8
tick,0x7ffad1f6fb64,108799536,0,0x0,8
tick,0x7ffad1f6fb64,108814555,0,0x0,8
tick,0x7ffad1f6fb64,108829571,0,0x0,8
tick,0x7ffad1f6fb64,108844582,0,0x0,8
tick,0x7ffad1f6fb64,108860608,0,0x0,8
tick,0x7ffad1f6fb64,108875620,0,0x0,8
tick,0x7ffad1f6fb64,108890619,0,0x0,8
tick,0x7ffad1f6fb64,108905637,0,0x0,8
tick,0x7ffad1f6fb64,108920653,0,0x0,8
tick,0x7ffad1f6fb64,108935658,0,0x0,8
tick,0x7ffad1f6fb64,108951684,0,0x0,8
tick,0x7ffad1f6fb64,108966691,0,0x0,8
tick,0x7ffad1f6fb64,108981683,0,0x0,8
tick,0x7ffad1f6fb64,108996710,0,0x0,8
tick,0x7ffad1f6fb64,109012746,0,0x0,8
tick,0x7ffad1f6fb64,109028731,0,0x0,8
tick,0x7ffad1f6fb64,109044748,0,0x0,8
tick,0x7ffad1f6fb64,109059773,0,0x0,8
tick,0x7ffad1f6fb64,109074783,0,0x0,8
tick,0x7ffad1f6fb64,109090839,0,0x0,8
tick,0x7ffad1f6fb64,109106810,0,0x0,8
tick,0x7ffad1f6fb64,109121837,0,0x0,8
tick,0x7ffad1f6fb64,109137844,0,0x0,8
tick,0x7ffad1f6fb64,109153848,0,0x0,8
tick,0x7ffad1f6fb64,109169868,0,0x0,8
tick,0x7ffad1f6fb64,109185890,0,0x0,8
tick,0x7ffad1f6fb64,109200905,0,0x0,8
tick,0x7ffad1f6fb64,109215900,0,0x0,8
tick,0x7ffad1f6fb64,109231930,0,0x0,8
tick,0x7ffad1f6fb64,109247952,0,0x0,8
tick,0x7ffad1f6fb64,109263944,0,0x0,8
tick,0x7ffad1f6fb64,109279974,0,0x0,8
tick,0x7ffad1f6fb64,109296010,0,0x0,8
tick,0x7ffad1f6fb64,109312012,0,0x0,8
tick,0x7ffad1f6fb64,109328016,0,0x0,8
tick,0x7ffad1f6fb64,109344022,0,0x0,8
tick,0x7ffad1f6fb64,109360054,0,0x0,8
tick,0x7ffad1f6fb64,109376064,0,0x0,8
tick,0x7ffad1f6fb64,109391070,0,0x0,8
tick,0x7ffad1f6fb64,109406073,0,0x0,8
tick,0x7ffad1f6fb64,109421116,0,0x0,8
tick,0x7ffad1f6fb64,109437112,0,0x0,8
tick,0x7ffad1f6fb64,109453151,0,0x0,8
tick,0x7ffad1f6fb64,109468127,0,0x0,8
tick,0x7ffad1f6fb64,109484183,0,0x0,8
tick,0x7ffad1f6fb64,109499169,0,0x0,8
tick,0x7ffad1f6fb64,109515231,0,0x0,8
tick,0x7ffad1f6fb64,109530209,0,0x0,8
tick,0x7ffad1f6fb64,109545208,0,0x0,8
tick,0x7ffad1f6fb64,109561241,0,0x0,8
tick,0x7ffad1f6fb64,109577264,0,0x0,8
tick,0x7ffad1f6fb64,109593328,0,0x0,8
tick,0x7ffad1f6fb64,109608284,0,0x0,8
tick,0x7ffad1f6fb64,109623304,0,0x0,8
tick,0x7ffad1f6fb64,109638319,0,0x0,8
tick,0x7ffad1f6fb64,109654323,0,0x0,8
tick,0x7ffad1f6fb64,109669329,0,0x0,8
tick,0x7ffad1f6fb64,109684365,0,0x0,8
tick,0x7ffad1f6fb64,109699362,0,0x0,8
tick,0x7ffad1f6fb64,109715401,0,0x0,8
tick,0x7ffad1f6fb64,109730386,0,0x0,8
tick,0x7ffad1f6fb64,109746417,0,0x0,8
tick,0x7ffad1f6fb64,109761416,0,0x0,8
tick,0x7ffad1f6fb64,109777433,0,0x0,8
tick,0x7ffad1f6fb64,109793443,0,0x0,8
tick,0x7ffad1f6fb64,109808451,0,0x0,8
tick,0x7ffad1f6fb64,109823474,0,0x0,8
tick,0x7ffad1f6fb64,109839494,0,0x0,8
tick,0x7ffad1f6fb64,109854525,0,0x0,8
tick,0x7ffad1f6fb64,109870507,0,0x0,8
tick,0x7ffad1f6fb64,109886580,0,0x0,8
tick,0x7ffad1f6fb64,109901547,0,0x0,8
tick,0x7ffad1f6fb64,109916550,0,0x0,8
tick,0x7ffad1f6fb64,109932578,0,0x0,8
tick,0x7ffad1f6fb64,109948584,0,0x0,8
tick,0x7ffad1f6fb64,109964631,0,0x0,8
tick,0x7ffad1f6fb64,109980612,0,0x0,8
tick,0x7ffad1f6fb64,109995627,0,0x0,8
tick,0x7ffad1f6fb64,110011668,0,0x0,8
tick,0x7ffad1f6fb64,110027684,0,0x0,8
tick,0x7ffad1f6fb64,110043663,0,0x0,8
tick,0x7ffad1f6fb64,110059670,0,0x0,8
tick,0x7ffad1f6fb64,110075718,0,0x0,8
tick,0x7ffad1f6fb64,110091719,0,0x0,8
tick,0x7ffad1f6fb64,110107753,0,0x0,8
tick,0x7ffad1f6fb64,110123258,0,0x0,8
tick,0x7ffad1f6fb64,110139269,0,0x0,8
tick,0x7ffad1f6fb64,110154276,0,0x0,8
tick,0x7ffad1f6fb64,110170296,0,0x0,8
tick,0x7ffad1f6fb64,110185317,0,0x0,8
tick,0x7ffad1f6fb64,110200318,0,0x0,8
tick,0x7ffad1f6fb64,110215335,0,0x0,8
tick,0x7ffad1f6fb64,110231356,0,0x0,8
tick,0x7ffad1f6fb64,110247368,0,0x0,8
tick,0x7ffad1f6fb64,110262407,0,0x0,8
tick,0x7ffad1f6fb64,110277392,0,0x0,8
tick,0x7ffad1f6fb64,110292421,0,0x0,8
tick,0x7ffad1f6fb64,110307424,0,0x0,8
tick,0x7ffad1f6fb64,110322442,0,0x0,8
tick,0x7ffad1f6fb64,110337453,0,0x0,8
tick,0x7ffad1f6fb64,110353474,0,0x0,8
tick,0x7ffad1f6fb64,110368487,0,0x0,8
tick,0x7ffad1f6fb64,110384496,0,0x0,8
tick,0x7ffad1f6fb64,110399519,0,0x0,8
tick,0x7ffad1f6fb64,110415520,0,0x0,8
tick,0x7ffad1f6fb64,110430535,0,0x0,8
tick,0x7ffad1f6fb64,110446565,0,0x0,8
tick,0x7ffad1f6fb64,110462566,0,0x0,8
tick,0x7ffad1f6fb64,110478587,0,0x0,8
tick,0x7ffad1f6fb64,110494627,0,0x0,8
tick,0x7ffad1f6fb64,110509635,0,0x0,8
tick,0x7ffad1f6fb64,110525618,0,0x0,8
tick,0x7ffad1f6fb64,110540661,0,0x0,8
tick,0x7ffad1f6fb64,110556694,0,0x0,8
tick,0x7ffad1f6fb64,110571667,0,0x0,8
tick,0x7ffad1f6fb64,110586682,0,0x0,8
tick,0x7ffad1f6fb64,110602706,0,0x0,8
tick,0x7ffad1f6fb64,110617743,0,0x0,8
tick,0x7ffad1f6fb64,110632723,0,0x0,8
tick,0x7ffad1f6fb64,110648756,0,0x0,8
tick,0x7ffad1f6fb64,110664756,0,0x0,8
tick,0x7ffad1f6fb64,110680766,0,0x0,8
tick,0x7ffad1f6fb64,110695792,0,0x0,8
tick,0x7ffad1f6fb64,110710793,0,0x0,8
tick,0x7ffad1f6fb64,110726833,0,0x0,8
tick,0x7ffad1f6fb64,110742815,0,0x0,8
tick,0x7ffad1f6fb64,110757844,0,0x0,8
tick,0x7ffad1f6fb64,110773850,0,0x0,8
tick,0x7ffad1f6fb64,110789863,0,0x0,8
tick,0x7ffad1f6fb64,110805886,0,0x0,8
tick,0x7ffad1f6fb64,110821925,0,0x0,8
tick,0x7ffad1f6fb64,110837924,0,0x0,8
tick,0x7ffad1f6fb64,110853960,0,0x0,8
tick,0x7ffad1f6fb64,110868948,0,0x0,8
tick,0x7ffad1f6fb64,110884958,0,0x0,8
tick,0x7ffad1f6fb64,110900962,0,0x0,8
tick,0x7ffad1f6fb64,110916970,0,0x0,8
tick,0x7ffad1f6fb64,110933012,0,0x0,8
tick,0x7ffad1f6fb64,110948016,0,0x0,8
tick,0x7ffad1f6fb64,110964023,0,0x0,8
tick,0x7ffad1f6fb64,110980055,0,0x0,8
tick,0x7ffad1f6fb64,110996057,0,0x0,8
tick,0x7ffad1f6fb64,111012067,0,0x0,8
tick,0x7ffad1f6fb64,111027075,0,0x0,8
tick,0x7ffad1f6fb64,111043090,0,0x0,8
tick,0x7ffad1f6fb64,111058137,0,0x0,8
tick,0x7ffad1f6fb64,111073129,0,0x0,8
tick,0x7ffad1f6fb64,111089165,0,0x0,8
tick,0x7ffad1f6fb64,111105167,0,0x0,8
tick,0x7ffad1f6fb64,111120184,0,0x0,8
tick,0x7ffad1f6fb64,111136182,0,0x0,8
tick,0x7ffad1f6fb64,111152189,0,0x0,8
tick,0x7ffad1f6fb64,111167231,0,0x0,8
tick,0x7ffad1f6fb64,111182230,0,0x0,8
tick,0x7ffad1f6fb64,111198250,0,0x0,8
tick,0x7ffad1f6fb64,111214236,0,0x0,8
tick,0x7ffad1f6fb64,111230255,0,0x0,8
tick,0x7ffad1f6fb64,111246295,0,0x0,8
tick,0x7ffad1f6fb64,111261299,0,0x0,8
tick,0x7ffad1f6fb64,111276326,0,0x0,8
tick,0x7ffad1f6fb64,111292330,0,0x0,8
tick,0x7ffad1f6fb64,111307373,0,0x0,8
tick,0x7ffad1f6fb64,111322351,0,0x0,8
tick,0x7ffad1f6fb64,111337359,0,0x0,8
tick,0x7ffad1f6fb64,111352381,0,0x0,8
tick,0x7ffad1f6fb64,111367406,0,0x0,8
tick,0x7ffad1f6fb64,111382417,0,0x0,8
tick,0x7ffad1f6fb64,111398418,0,0x0,8
tick,0x7ffad1f6fb64,111414423,0,0x0,8
tick,0x7ffad1f6fb64,111430445,0,0x0,8
tick,0x7ffad1f6fb64,111446465,0,0x0,8
tick,0x7ffad1f6fb64,111461496,0,0x0,8
tick,0x7ffad1f6fb64,111477505,0,0x0,8
tick,0x7ffad1f6fb64,111492552,0,0x0,8
tick,0x7ffad1f6fb64,111507529,0,0x0,8
tick,0x7ffad1f6fb64,111523535,0,0x0,8
tick,0x7ffad1f6fb64,111539551,0,0x0,8
tick,0x7ffad1f6fb64,111555556,0,0x0,8
tick,0x7ffad1f6fb64,111571580,0,0x0,8
tick,0x7ffad1f6fb64,111587588,0,0x0,8
tick,0x7ffad1f6fb64,111603620,0,0x0,8
tick,0x7ffad1f6fb64,111618630,0,0x0,8
tick,0x7ffad1f6fb64,111634656,0,0x0,8
tick,0x7ffad1f6fb64,111649649,0,0x0,8
tick,0x7ffad1f6fb64,111664664,0,0x0,8
tick,0x7ffad1f6fb64,111679690,0,0x0,8
tick,0x7ffad1f6fb64,111694690,0,0x0,8
tick,0x7ffad1f6fb64,111709734,0,0x0,8
tick,0x7ffad1f6fb64,111724726,0,0x0,8
tick,0x7ffad1f6fb64,111739729,0,0x0,8
tick,0x7ffad1f6fb64,111754766,0,0x0,8
tick,0x7ffad1f6fb64,111769810,0,0x0,8
tick,0x7ffad1f6fb64,111784780,0,0x0,8
tick,0x7ffad1f6fb64,111799808,0,0x0,8
tick,0x7ffad1f6fb64,111815843,0,0x0,8
tick,0x7ffad1f6fb64,111831811,0,0x0,8
tick,0x7ffad1f6fb64,111846829,0,0x0,8
tick,0x7ffad1f6fb64,111861875,0,0x0,8
tick,0x7ffad1f6fb64,111877878,0,0x0,8
tick,0x7ffad1f6fb64,111892881,0,0x0,8
tick,0x7ffad1f6fb64,111907882,0,0x0,8
tick,0x7ffad1f6fb64,111923916,0,0x0,8
tick,0x7ffad1f6fb64,111939909,0,0x0,8
tick,0x7ffad1f6fb64,111954934,0,0x0,8
tick,0x7ffad1f6fb64,111970952,0,0x0,8
tick,0x7ffad1f6fb64,111986967,0,0x0,8
tick,0x7ffad1f6fb64,112002973,0,0x0,8
tick,0x7ffad1f6fb64,112018993,0,0x0,8
tick,0x7ffad1f6fb64,112035010,0,0x0,8
tick,0x7ffad1f6fb64,112050014,0,0x0,8
tick,0x7ffad1f6fb64,112066109,0,0x0,8
tick,0x7ffad1f6fb64,112081039,0,0x0,8
tick,0x7ffad1f6fb64,112096087,0,0x0,8
tick,0x7ffad1f6fb64,112112098,0,0x0,8
tick,0x7ffad1f6fb64,112127101,0,0x0,8
tick,0x7ffad1f6fb64,112143161,0,0x0,8
tick,0x7ffad1f6fb64,112158104,0,0x0,8
tick,0x7ffad1f6fb64,112174146,0,0x0,8
tick,0x7ffad1f6fb64,112189157,0,0x0,8
tick,0x7ffad1f6fb64,112205159,0,0x0,8
tick,0x7ffad1f6fb64,112220165,0,0x0,8
tick,0x7ffad1f6fb64,112235191,0,0x0,8
tick,0x7ffad1f6fb64,112250215,0,0x0,8
tick,0x7ffad1f6fb64,112266227,0,0x0,8
tick,0x7ffad1f6fb64,112281237,0,0x0,8
tick,0x7ffad1f6fb64,112297253,0,0x0,8
tick,0x7ffad1f6fb64,112313258,0,0x0,8
tick,0x7ffad1f6fb64,112329267,0,0x0,8
tick,0x7ffad1f6fb64,112345275,0,0x0,8
tick,0x7ffad1f6fb64,112360336,0,0x0,8
tick,0x7ffad1f6fb64,112376316,0,0x0,8
tick,0x7ffad1f6fb64,112392343,0,0x0,8
tick,0x7ffad1f6fb64,112407336,0,0x0,8
tick,0x7ffad1f6fb64,112422354,0,0x0,8
tick,0x7ffad1f6fb64,112437372,0,0x0,8
tick,0x7ffad1f6fb64,112453381,0,0x0,8
tick,0x7ffad1f6fb64,112469409,0,0x0,8
tick,0x7ffad1f6fb64,112485414,0,0x0,8
tick,0x7ffad1f6fb64,112501427,0,0x0,8
tick,0x7ffad1f6fb64,112517452,0,0x0,8
tick,0x7ffad1f6fb64,112533465,0,0x0,8
tick,0x7ffad1f6fb64,112548467,0,0x0,8
tick,0x7ffad1f6fb64,112564483,0,0x0,8
tick,0x7ffad1f6fb64,112579525,0,0x0,8
tick,0x7ffad1f6fb64,112595536,0,0x0,8
tick,0x7ffad1f6fb64,112611548,0,0x0,8
tick,0x7ffad1f6fb64,112627541,0,0x0,8
tick,0x7ffad1f6fb64,112642547,0,0x0,8
tick,0x7ffad1f6fb64,112657604,0,0x0,8
tick,0x7ffad1f6fb64,112673583,0,0x0,8
tick,0x7ffad1f6fb64,112689606,0,0x0,8
tick,0x7ffad1f6fb64,112705607,0,0x0,8
tick,0x7ffad1f6fb64,112721692,0,0x0,8
tick,0x7ffad1f6fb64,112736645,0,0x0,8
tick,0x7ffad1f6fb64,112752656,0,0x0,8
tick,0x7ffad1f6fb64,112768664,0,0x0,8
tick,0x7ffad1f6fb64,112784668,0,0x0,8
tick,0x7ffad1f6fb64,112799717,0,0x0,8
tick,0x7ffad1f6fb64,112814700,0,0x0,8
tick,0x7ffad1f6fb64,112829741,0,0x0,8
tick,0x7ffad1f6fb64,112845754,0,0x0,8
tick,0x7ffad1f6fb64,112861761,0,0x0,8
tick,0x7ffad1f6fb64,112876763,0,0x0,8
tick,0x7ffad1f6fb64,112891791,0,0x0,8
tick,0x7ffad1f6fb64,112906802,0,0x0,8
tick,0x7ffad1f6fb64,112922801,0,0x0,8
tick,0x7ffad1f6fb64,112938832,0,0x0,8
tick,0x7ffad1f6fb64,112954822,0,0x0,8
tick,0x7ffad1f6fb64,112970851,0,0x0,8
tick,0x7ffad1f6fb64,112985887,0,0x0,8
tick,0x7ffad1f6fb64,113001877,0,0x0,8
tick,0x7ffad1f6fb64,113016916,0,0x0,8
tick,0x7ffad1f6fb64,113031911,0,0x0,8
tick,0x7ffad1f6fb64,113047930,0,0x0,8
tick,0x7ffad1f6fb64,113063981,0,0x0,8
tick,0x7ffad1f6fb64,113078978,0,0x0,8
tick,0x7ffad1f6fb64,113093999,0,0x0,8
tick,0x7ffad1f6fb64,113108979,0,0x0,8
tick,0x7ffad1f6fb64,113125014,0,0x0,8
tick,0x7ffad1f6fb64,113140005,0,0x0,8
tick,0x7ffad1f6fb64,113156022,0,0x0,8
tick,0x7ffad1f6fb64,113172140,0,0x0,8
tick,0x7ffad1f6fb64,113188035,0,0x0,8
tick,0x7ffad1f6fb64,113204075,0,0x0,8
tick,0x7ffad1f6fb64,113220103,0,0x0,8
tick,0x7ffad1f6fb64,113235103,0,0x0,8
tick,0x7ffad1f6fb64,113250108,0,0x0,8
tick,0x7ffad1f6fb64,113265119,0,0x0,8
tick,0x7ffad1f6fb64,113280118,0,0x0,8
tick,0x7ffad1f6fb64,113295156,0,0x0,8
tick,0x7ffad1f6fb64,113310167,0,0x0,8
tick,0x7ffad1f6fb64,113325172,0,0x0,8
tick,0x7ffad1f6fb64,113340196,0,0x0,8
tick,0x7ffad1f6fb64,113355217,0,0x0,8
tick,0x7ffad1f6fb64,113371218,0,0x0,8
tick,0x7ffad1f6fb64,113387238,0,0x0,8
tick,0x7ffad1f6fb64,113402251,0,0x0,8
tick,0x7ffad1f6fb64,113418274,0,0x0,8
tick,0x7ffad1f6fb64,113434274,0,0x0,8
tick,0x7ffad1f6fb64,113449303,0,0x0,8
tick,0x7ffad1f6fb64,113465292,0,0x0,8
tick,0x7ffad1f6fb64,113480322,0,0x0,8
tick,0x7ffad1f6fb64,113495345,0,0x0,8
tick,0x7ffad1f6fb64,113511355,0,0x0,8
tick,0x7ffad1f6fb64,113527358,0,0x0,8
tick,0x7ffad1f6fb64,113543390,0,0x0,8
tick,0x7ffad1f6fb64,113559385,0,0x0,8
tick,0x7ffad1f6fb64,113575402,0,0x0,8
tick,0x7ffad1f6fb64,113590426,0,0x0,8
tick,0x7ffad1f6fb64,113606459,0,0x0,8
tick,0x7ffad1f6fb64,113622459,0,0x0,8
tick,0x7ffad1f6fb64,113637465,0,0x0,8
tick,0x7ffad1f6fb64,113652483,0,0x0,8
tick,0x7ffad1f6fb64,113667518,0,0x0,8
tick,0x7ffad1f6fb64,113683564,0,0x0,8
tick,0x7ffad1f6fb64,113699518,0,0x0,8
tick,0x7ffad1f6fb64,113715551,0,0x0,8
tick,0x7ffad1f6fb64,113730583,0,0x0,8
tick,0x7ffad1f6fb64,113746562,0,0x0,8
tick,0x7ffad1f6fb64,113762638,0,0x0,8
tick,0x7ffad1f6fb64,113777619,0,0x0,8
tick,0x7ffad1f6fb64,113792603,0,0x0,8
tick,0x7ffad1f6fb64,113807627,0,0x0,8
tick,0x7ffad1f6fb64,113823641,0,0x0,8
tick,0x7ffad1f6fb64,113839638,0,0x0,8
tick,0x7ffad1f6fb64,113855660,0,0x0,8
tick,0x7ffad1f6fb64,113870677,0,0x0,8
tick,0x7ffad1f6fb64,113886701,0,0x0,8
tick,0x7ffad1f6fb64,113901727,0,0x0,8
tick,0x7ffad1f6fb64,113917730,0,0x0,8
tick,0x7ffad1f6fb64,113932728,0,0x0,8
tick,0x7ffad1f6fb64,113948740,0,0x0,8
tick,0x7ffad1f6fb64,113964751,0,0x0,8
tick,0x7ffad1f6fb64,113979787,0,0x0,8
tick,0x7ffad1f6fb64,113995809,0,0x0,8
tick,0x7ffad1f6fb64,114011795,0,0x0,8
tick,0x7ffad1f6fb64,114026811,0,0x0,8
tick,0x7ffad1f6fb64,114042830,0,0x0,8
tick,0x7ffad1f6fb64,114057850,0,0x0,8
tick,0x7ffad1f6fb64,114072889,0,0x0,8
tick,0x7ffad1f6fb64,114087881,0,0x0,8
tick,0x7ffad1f6fb64,114102905,0,0x0,8
tick,0x7ffad1f6fb64,114118915,0,0x0,8
tick,0x7ffad1f6fb64,114133923,0,0x0,8
tick,0x7ffad1f6fb64,114148910,0,0x0,8
tick,0x7ffad1f6fb64,114164935,0,0x0,8
tick,0x7ffad1f6fb64,114179961,0,0x0,8
tick,0x7ffad1f6fb64,114195008,0,0x0,8
tick,0x7ffad1f6fb64,114210987,0,0x0,8
tick,0x7ffad1f6fb64,114226000,0,0x0,8
tick,0x7ffad1f6fb64,114241018,0,0x0,8
tick,0x7ffad1f6fb64,114257019,0,0x0,8
tick,0x7ffad1f6fb64,114273033,0,0x0,8
tick,0x7ffad1f6fb64,114289075,0,0x0,8
tick,0x7ffad1f6fb64,114304076,0,0x0,8
tick,0x7ffad1f6fb64,114320095,0,0x0,8
tick,0x7ffad1f6fb64,114336098,0,0x0,8
tick,0x7ffad1f6fb64,114351127,0,0x0,8
tick,0x7ffad1f6fb64,114366129,0,0x0,8
tick,0x7ffad1f6fb64,114381159,0,0x0,8
tick,0x7ffad1f6fb64,114397192,0,0x0,8
tick,0x7ffad1f6fb64,114413173,0,0x0,8
tick,0x7ffad1f6fb64,114429184,0,0x0,8
tick,0x7ffad1f6fb64,114445205,0,0x0,8
tick,0x7ffad1f6fb64,114461207,0,0x0,8
tick,0x7ffad1f6fb64,114476236,0,0x0,8
tick,0x7ffad1f6fb64,114491246,0,0x0,8
tick,0x7ffad1f6fb64,114507245,0,0x0,8
tick,0x7ffad1f6fb64,114522269,0,0x0,8
tick,0x7ffad1f6fb64,114538301,0,0x0,8
tick,0x7ffad1f6fb64,114553281,0,0x0,8
tick,0x7ffad1f6fb64,114569325,0,0x0,8
tick,0x7ffad1f6fb64,114584317,0,0x0,8
tick,0x7ffad1f6fb64,114599339,0,0x0,8
tick,0x7ffad1f6fb64,114614392,0,0x0,8
tick,0x7ffad1f6fb64,114630411,0,0x0,8
tick,0x7ffad1f6fb64,114646392,0,0x0,8
tick,0x7ffad1f6fb64,114661413,0,0x0,8
tick,0x7ffad1f6fb64,114677418,0,0x0,8
tick,0x7ffad1f6fb64,114693425,0,0x0,8
tick,0x7ffad1f6fb64,114708444,0,0x0,8
tick,0x7ffad1f6fb64,114724460,0,0x0,8
tick,0x7ffad1f6fb64,114739459,0,0x0,8
tick,0x7ffad1f6fb64,114754497,0,0x0,8
tick,0x7ffad1f6fb64,114769486,0,0x0,8
tick,0x7ffad1f6fb64,114785527,0,0x0,8
tick,0x7ffad1f6fb64,114800512,0,0x0,8
tick,0x7ffad1f6fb64,114816526,0,0x0,8
tick,0x7ffad1f6fb64,114832567,0,0x0,8
tick,0x7ffad1f6fb64,114848647,0,0x0,8
tick,0x7ffad1f6fb64,114864583,0,0x0,8
tick,0x7ffad1f6fb64,114879594,0,0x0,8
tick,0x7ffad1f6fb64,114894614,0,0x0,8
tick,0x7ffad1f6fb64,114910629,0,0x0,8
tick,0x7ffad1f6fb64,114925637,0,0x0,8
tick,0x7ffad1f6fb64,114940644,0,0x0,8
tick,0x7ffad1f6fb64,114956650,0,0x0,8
tick,0x7ffad1f6fb64,114972673,0,0x0,8
tick,0x7ffad1f6fb64,114988681,0,0x0,8
tick,0x7ffad1f6fb64,115004696,0,0x0,8
tick,0x7ffad1f6fb64,115019719,0,0x0,8
tick,0x7ffad1f6fb64,115035743,0,0x0,8
tick,0x7ffad1f6fb64,115050735,0,0x0,8
tick,0x7ffad1f6fb64,115065755,0,0x0,8
tick,0x7ffad1f6fb64,115080791,0,0x0,8
tick,0x7ffad1f6fb64,115095783,0,0x0,8
tick,0x7ffad1f6fb64,115110781,0,0x0,8
tick,0x7ffad1f6fb64,115126808,0,0x0,8
tick,0x7ffad1f6fb64,115142837,0,0x0,8
tick,0x7ffad1f6fb64,115157840,0,0x0,8
tick,0x7ffad1f6fb64,115173866,0,0x0,8
tick,0x7ffad1f6fb64,115189881,0,0x0,8
tick,0x7ffad1f6fb64,115205909,0,0x0,8
tick,0x7ffad1f6fb64,115220967,0,0x0,8
tick,0x7ffad1f6fb64,115236919,0,0x0,8
tick,0x7ffad1f6fb64,115252943,0,0x0,8
tick,0x7ffad1f6fb64,115268939,0,0x0,8
tick,0x7ffad1f6fb64,115283969,0,0x0,8
tick,0x7ffad1f6fb64,115298983,0,0x0,8
tick,0x7ffad1f6fb64,115314996,0,0x0,8
tick,0x7ffad1f6fb64,115331001,0,0x0,8
tick,0x7ffad1f6fb64,115347013,0,0x0,8
tick,0x7ffad1f6fb64,115362030,0,0x0,8
tick,0x7ffad1f6fb64,115377029,0,0x0,8
tick,0x7ffad1f6fb64,115393035,0,0x0,8
tick,0x7ffad1f6fb64,115408075,0,0x0,8
tick,0x7ffad1f6fb64,115424071,0,0x0,8
tick,0x7ffad1f6fb64,115440098,0,0x0,8
tick,0x7ffad1f6fb64,115455106,0,0x0,8
tick,0x7ffad1f6fb64,115471149,0,0x0,8
tick,0x7ffad1f6fb64,115487125,0,0x0,8
tick,0x7ffad1f6fb64,115502166,0,0x0,8
tick,0x7ffad1f6fb64,115518211,0,0x0,8
tick,0x7ffad1f6fb64,115534197,0,0x0,8
tick,0x7ffad1f6fb64,115549201,0,0x0,8
tick,0x7ffad1f6fb64,115564206,0,0x0,8
tick,0x7ffad1f6fb64,115580210,0,0x0,8
tick,0x7ffad1f6fb64,115595258,0,0x0,8
tick,0x7ffad1f6fb64,115610255,0,0x0,8
tick,0x7ffad1f6fb64,115626289,0,0x0,8
tick,0x7ffad1f6fb64,115642269,0,0x0,8
tick,0x7ffad1f6fb64,115657326,0,0x0,8
tick,0x7ffad1f6fb64,115673296,0,0x0,8
tick,0x7ffad1f6fb64,115689326,0,0x0,8
tick,0x7ffad1f6fb64,115704327,0,0x0,8
tick,0x7ffad1f6fb64,115719369,0,0x0,8
tick,0x7ffad1f6fb64,115735395,0,0x0,8
tick,0x7ffad1f6fb64,115750367,0,0x0,8
tick,0x7ffad1f6fb64,115766417,0,0x0,8
tick,0x7ffad1f6fb64,115781422,0,0x0,8
tick,0x7ffad1f6fb64,115797431,0,0x0,8
tick,0x7ffad1f6fb64,115812429,0,0x0,8
tick,0x7ffad1f6fb64,115827463,0,0x0,8
tick,0x7ffad1f6fb64,115842473,0,0x0,8
tick,0x7ffad1f6fb64,115857488,0,0x0,8
tick,0x7ffad1f6fb64,115872517,0,0x0,8
tick,0x7ffad1f6fb64,115888565,0,0x0,8
tick,0x7ffad1f6fb64,115903558,0,0x0,8
tick,0x7ffad1f6fb64,115919547,0,0x0,8
tick,0x7ffad1f6fb64,115935544,0,0x0,8
tick,0x7ffad1f6fb64,115951587,0,0x0,8
tick,0x7ffad1f6fb64,115966571,0,0x0,8
tick,0x7ffad1f6fb64,115981590,0,0x0,8
tick,0x7ffad1f6fb64,115997603,0,0x0,8
tick,0x7ffad1f6fb64,116013620,0,0x0,8
tick,0x7ffad1f6fb64,116028631,0,0x0,8
tick,0x7ffad1f6fb64,116044645,0,0x0,8
tick,0x7ffad1f6fb64,116060674,0,0x0,8
tick,0x7ffad1f6fb64,116075739,0,0x0,8
tick,0x7ffad1f6fb64,116091716,0,0x0,8
tick,0x7ffad1f6fb64,116107751,0,0x0,8
tick,0x7ffad1f6fb64,116122716,0,0x0,8
tick,0x7ffad1f6fb64,116137743,0,0x0,8
tick,0x7ffad1f6fb64,116152775,0,0x0,8
tick,0x7ffad1f6fb64,116168799,0,0x0,8
tick,0x7ffad1f6fb64,116184767,0,0x0,8
tick,0x7ffad1f6fb64,116199800,0,0x0,8
tick,0x7ffad1f6fb64,116215818,0,0x0,8
tick,0x7ffad1f6fb64,116231821,0,0x0,8
tick,0x7ffad1f6fb64,116246897,0,0x0,8
tick,0x7ffad1f6fb64,116261863,0,0x0,8
tick,0x7ffad1f6fb64,116277878,0,0x0,8
tick,0x7ffad1f6fb64,116292929,0,0x0,8
tick,0x7ffad1f6fb64,116307907,0,0x0,8
tick,0x7ffad1f6fb64,116322931,0,0x0,8
tick,0x7ffad1f6fb64,116338924,0,0x0,8
tick,0x7ffad1f6fb64,116354929,0,0x0,8
tick,0x7ffad1f6fb64,116370947,0,0x0,8
tick,0x7ffad1f6fb64,116385996,0,0x0,8
tick,0x7ffad1f6fb64,116401988,0,0x0,8
tick,0x7ffad1f6fb64,116417026,0,0x0,8
tick,0x7ffad1f6fb64,116432997,0,0x0,8
tick,0x7ffad1f6fb64,116449162,0,0x0,8
tick,0x7ffad1f6fb64,116465057,0,0x0,8
tick,0x7ffad1f6fb64,116480060,0,0x0,8
tick,0x7ffad1f6fb64,116496081,0,0x0,8
tick,0x7ffad1f6fb64,116512088,0,0x0,8
tick,0x7ffad1f6fb64,116527095,0,0x0,8
tick,0x7ffad1f6fb64,116543106,0,0x0,8
tick,0x7ffad1f6fb64,116558120,0,0x0,8
tick,0x7ffad1f6fb64,116574136,0,0x0,8
tick,0x7ffad1f6fb64,116590146,0,0x0,8
tick,0x7ffad1f6fb64,116605175,0,0x0,8
tick,0x7ffad1f6fb64,116620199,0,0x0,8
tick,0x7ffad1f6fb64,116635197,0,0x0,8
tick,0x7ffad1f6fb64,116650215,0,0x0,8
tick,0x7ffad1f6fb64,116665231,0,0x0,8
tick,0x7ffad1f6fb64,116680257,0,0x0,8
tick,0x7ffad1f6fb64,116695259,0,0x0,8
tick,0x7ffad1f6fb64,116711285,0,0x0,8
tick,0x7ffad1f6fb64,116727263,0,0x0,8
tick,0x7ffad1f6fb64,116742269,0,0x0,8
tick,0x7ffad1f6fb64,116757316,0,0x0,8
tick,0x7ffad1f6fb64,116773325,0,0x0,8
tick,0x7ffad1f6fb64,116788334,0,0x0,8
tick,0x7ffad1f6fb64,116803337,0,0x0,8
tick,0x7ffad1f6fb64,116819371,0,0x0,8
tick,0x7ffad1f6fb64,116835387,0,0x0,8
tick,0x7ffad1f6fb64,116850392,0,0x0,8
tick,0x7ffad1f6fb64,116866395,0,0x0,8
tick,0x7ffad1f6fb64,116881408,0,0x0,8
tick,0x7ffad1f6fb64,116897431,0,0x0,8
tick,0x7ffad1f6fb64,116913454,0,0x0,8
tick,0x7ffad1f6fb64,116929469,0,0x0,8
tick,0x7ffad1f6fb64,116944456,0,0x0,8
tick,0x7ffad1f6fb64,116960490,0,0x0,8
tick,0x7ffad1f6fb64,116975505,0,0x0,8
tick,0x7ffad1f6fb64,116990497,0,0x0,8
tick,0x7ffad1f6fb64,117006532,0,0x0,8
tick,0x7ffad1f6fb64,117022734,0,0x0,8
tick,0x7ffad1f6fb64,117037627,0,0x0,8
tick,0x7ffad1f6fb64,117052545,0,0x0,8
tick,0x7ffad1f6fb64,117068584,0,0x0,8
tick,0x7ffad1f6fb64,117084614,0,0x0,8
tick,0x7ffad1f6fb64,117099607,0,0x0,8
tick,0x7ffad1f6fb64,117115639,0,0x0,8
tick,0x7ffad1f6fb64,117130640,0,0x0,8
tick,0x7ffad1f6fb64,117146667,0,0x0,8
tick,0x7ffad1f6fb64,117161675,0,0x0,8
tick,0x7ffad1f6fb64,117177681,0,0x0,8
tick,0x7ffad1f6fb64,117192704,0,0x0,8
tick,0x7ffad1f6fb64,117207704,0,0x0,8
tick,0x7ffad1f6fb64,117223714,0,0x0,8
tick,0x7ffad1f6fb64,117238737,0,0x0,8
tick,0x7ffad1f6fb64,117253749,0,0x0,8
tick,0x7ffad1f6fb64,117269781,0,0x0,8
tick,0x7ffad1f6fb64,117285787,0,0x0,8
tick,0x7ffad1f6fb64,117300788,0,0x0,8
tick,0x7ffad1f6fb64,117316792,0,0x0,8
tick,0x7ffad1f6fb64,117332824,0,0x0,8
tick,0x7ffad1f6fb64,117348868,0,0x0,8
tick,0x7ffad1f6fb64,117363877,0,0x0,8
tick,0x7ffad1f6fb64,117378854,0,0x0,8
tick,0x7ffad1f6fb64,117394892,0,0x0,8
tick,0x7ffad1f6fb64,117410888,0,0x0,8
tick,0x7ffad1f6fb64,117425913,0,0x0,8
tick,0x7ffad1f6fb64,117440898,0,0x0,8
tick,0x7ffad1f6fb64,117456929,0,0x0,8
tick,0x7ffad1f6fb64,117471946,0,0x0,8
tick,0x7ffad1f6fb64,117487968,0,0x0,8
tick,0x7ffad1f6fb64,117502976,0,0x0,8
tick,0x7ffad1f6fb64,117518988,0,0x0,8
tick,0x7ffad1f6fb64,117535000,0,0x0,8
tick,0x7ffad1f6fb64,117550012,0,0x0,8
tick,0x7ffad1f6fb64,117565060,0,0x0,8
tick,0x7ffad1f6fb64,117580059,0,0x0,8
tick,0x7ffad1f6fb64,117596061,0,0x0,8
tick,0x7ffad1f6fb64,117612066,0,0x0,8
tick,0x7ffad1f6fb64,117628084,0,0x0,8
tick,0x7ffad1f6fb64,117643112,0,0x0,8
tick,0x7ffad1f6fb64,117658117,0,0x0,8
tick,0x7ffad1f6fb64,117674126,0,0x0,8
tick,0x7ffad1f6fb64,117690142,0,0x0,8
tick,0x7ffad1f6fb64,117706187,0,0x0,8
tick,0x7ffad1f6fb64,117721167,0,0x0,8
tick,0x7ffad1f6fb64,117736194,0,0x0,8
tick,0x7ffad1f6fb64,117752193,0,0x0,8
tick,0x7ffad1f6fb64,117768206,0,0x0,8
tick,0x7ffad1f6fb64,117783284,0,0x0,8
tick,0x7ffad1f6fb64,117798255,0,0x0,8
tick,0x7ffad1f6fb64,117814262,0,0x0,8
tick,0x7ffad1f6fb64,117829300,0,0x0,8
tick,0x7ffad1f6fb64,117845283,0,0x0,8
tick,0x7ffad1f6fb64,117860305,0,0x0,8
tick,0x7ffad1f6fb64,117876326,0,0x0,8
tick,0x7ffad1f6fb64,117891343,0,0x0,8
tick,0x7ffad1f6fb64,117906332,0,0x0,8
tick,0x7ffad1f6fb64,117922341,0,0x0,8
tick,0x7ffad1f6fb64,117937370,0,0x0,8
tick,0x7ffad1f6fb64,117953382,0,0x0,8
tick,0x7ffad1f6fb64,117969401,0,0x0,8
tick,0x7ffad1f6fb64,117985404,0,0x0,8
tick,0x7ffad1f6fb64,118001422,0,0x0,8
tick,0x7ffad1f6fb64,118017452,0,0x0,8
tick,0x7ffad1f6fb64,118032447,0,0x0,8
tick,0x7ffad1f6fb64,118048466,0,0x0,8
tick,0x7ffad1f6fb64,118064483,0,0x0,8
tick,0x7ffad1f6fb64,118080516,0,0x0,8
tick,0x7ffad1f6fb64,118096515,0,0x0,8
tick,0x7ffad1f6fb64,118111523,0,0x0,8
tick,0x7ffad1f6fb64,118126543,0,0x0,8
tick,0x7ffad1f6fb64,118142550,0,0x0,8
tick,0x7ffad1f6fb64,118157577,0,0x0,8
tick,0x7ffad1f6fb64,118172592,0,0x0,8
tick,0x7ffad1f6fb64,118187588,0,0x0,8
tick,0x7ffad1f6fb64,118203615,0,0x0,8
tick,0x7ffad1f6fb64,118219632,0,0x0,8
tick,0x7ffad1f6fb64,118235645,0,0x0,8
tick,0x7ffad1f6fb64,118251656,0,0x0,8
tick,0x7ffad1f6fb64,118266678,0,0x0,8
tick,0x7ffad1f6fb64,118281700,0,0x0,8
tick,0x7ffad1f6fb64,118297717,0,0x0,8
tick,0x7ffad1f6fb64,118313729,0,0x0,8
tick,0x7ffad1f6fb64,118328731,0,0x0,8
tick,0x7ffad1f6fb64,118344752,0,0x0,8
tick,0x7ffad1f6fb64,118360758,0,0x0,8
tick,0x7ffad1f6fb64,118375778,0,0x0,8
tick,0x7ffad1f6fb64,118391796,0,0x0,8
tick,0x7ffad1f6fb64,118406798,0,0x0,8
tick,0x7ffad1f6fb64,118422803,0,0x0,8
tick,0x7ffad1f6fb64,118438821,0,0x0,8
tick,0x7ffad1f6fb64,118454860,0,0x0,8
tick,0x7ffad1f6fb64,118469849,0,0x0,8
tick,0x7ffad1f6fb64,118485859,0,0x0,8
tick,0x7ffad1f6fb64,118501941,0,0x0,8
tick,0x7ffad1f6fb64,118516918,0,0x0,8
tick,0x7ffad1f6fb64,118531908,0,0x0,8
tick,0x7ffad1f6fb64,118547922,0,0x0,8
tick,0x7ffad1f6fb64,118563982,0,0x0,8
tick,0x7ffad1f6fb64,118579957,0,0x0,8
tick,0x7ffad1f6fb64,118595989,0,0x0,8
tick,0x7ffad1f6fb64,118611984,0,0x0,8
tick,0x7ffad1f6fb64,118627029,0,0x0,8
tick,0x7ffad1f6fb64,118642008,0,0x0,8
tick,0x7ffad1f6fb64,118658041,0,0x0,8
tick,0x7ffad1f6fb64,118674053,0,0x0,8
tick,0x7ffad1f6fb64,118689047,0,0x0,8
tick,0x7ffad1f6fb64,118705091,0,0x0,8
tick,0x7ffad1f6fb64,118720078,0,0x0,8
tick,0x7ffad1f6fb64,118735099,0,0x0,8
tick,0x7ffad1f6fb64,118750096,0,0x0,8
tick,0x7ffad1f6fb64,118765132,0,0x0,8
tick,0x7ffad1f6fb64,118780147,0,0x0,8
tick,0x7ffad1f6fb64,118795151,0,0x0,8
tick,0x7ffad1f6fb64,118811180,0,0x0,8
tick,0x7ffad1f6fb64,118826194,0,0x0,8
tick,0x7ffad1f6fb64,118842188,0,0x0,8
tick,0x7ffad1f6fb64,118858205,0,0x0,8
tick,0x7ffad1f6fb64,118874226,0,0x0,8
tick,0x7ffad1f6fb64,118889255,0,0x0,8
tick,0x7ffad1f6fb64,118905250,0,0x0,8
tick,0x7ffad1f6fb64,118920250,0,0x0,8
tick,0x7ffad1f6fb64,118936285,0,0x0,8
tick,0x7ffad1f6fb64,118952302,0,0x0,8
tick,0x7ffad1f6fb64,118968306,0,0x0,8
tick,0x7ffad1f6fb64,118983453,0,0x0,8
tick,0x7ffad1f6fb64,118999382,0,0x0,8
tick,0x7ffad1f6fb64,119015375,0,0x0,8
tick,0x7ffad1f6fb64,119030372,0,0x0,8
tick,0x7ffad1f6fb64,119045452,0,0x0,8
tick,0x7ffad1f6fb64,119060401,0,0x0,8
tick,0x7ffad1f6fb64,119076413,0,0x0,8
tick,0x7ffad1f6fb64,119091434,0,0x0,8
tick,0x7ffad1f6fb64,119106442,0,0x0,8
tick,0x7ffad1f6fb64,119122456,0,0x0,8
tick,0x7ffad1f6fb64,119137477,0,0x0,8
tick,0x7ffad1f6fb64,119153477,0,0x0,8
tick,0x7ffad1f6fb64,119168504,0,0x0,8
tick,0x7ffad1f6fb64,119184518,0,0x0,8
tick,0x7ffad1f6fb64,119199533,0,0x0,8
tick,0x7ffad1f6fb64,119215543,0,0x0,8
tick,0x7ffad1f6fb64,119231554,0,0x0,8
tick,0x7ffad1f6fb64,119247635,0,0x0,8
tick,0x7ffad1f6fb64,119262584,0,0x0,8
tick,0x7ffad1f6fb64,119278600,0,0x0,8
tick,0x7ffad1f6fb64,119293604,0,0x0,8
tick,0x7ffad1f6fb64,119309625,0,0x0,8
tick,0x7ffad1f6fb64,119324662,0,0x0,8
tick,0x7ffad1f6fb64,119339646,0,0x0,8
tick,0x7ffad1f6fb64,119354662,0,0x0,8
tick,0x7ffad1f6fb64,119370675,0,0x0,8
tick,0x7ffad1f6fb64,119386704,0,0x0,8
tick,0x7ffad1f6fb64,119402706,0,0x0,8
tick,0x7ffad1f6fb64,119417715,0,0x0,8
tick,0x7ffad1f6fb64,119433739,0,0x0,8
tick,0x7ffad1f6fb64,119449753,0,0x0,8
tick,0x7ffad1f6fb64,119464764,0,0x0,8
tick,0x7ffad1f6fb64,119480782,0,0x0,8
tick,0x7ffad1f6fb64,119495785,0,0x0,8
tick,0x7ffad1f6fb64,119511812,0,0x0,8
tick,0x7ffad1f6fb64,119527830,0,0x0,8
tick,0x7ffad1f6fb64,119542847,0,0x0,8
tick,0x7ffad1f6fb64,119557851,0,0x0,8
tick,0x7ffad1f6fb64,119572879,0,0x0,8
tick,0x7ffad1f6fb64,119588873,0,0x0,8
tick,0x7ffad1f6fb64,119604886,0,0x0,8
tick,0x7ffad1f6fb64,119619910,0,0x0,8
tick,0x7ffad1f6fb64,119634926,0,0x0,8
tick,0x7ffad1f6fb64,119649971,0,0x0,8
tick,0x7ffad1f6fb64,119665940,0,0x0,8
tick,0x7ffad1f6fb64,119680977,0,0x0,8
tick,0x7ffad1f6fb64,119695992,0,0x0,8
tick,0x7ffad1f6fb64,119710992,0,0x0,8
tick,0x7ffad1f6fb64,119726990,0,0x0,8
tick,0x7ffad1f6fb64,119743018,0,0x0,8
tick,0x7ffad1f6fb64,119758065,0,0x0,8
tick,0x7ffad1f6fb64,119774049,0,0x0,8
tick,0x7ffad1f6fb64,119790098,0,0x0,8
tick,0x7ffad1f6fb64,119805074,0,0x0,8
tick,0x7ffad1f6fb64,119820091,0,0x0,8
tick,0x7ffad1f6fb64,119835136,0,0x0,8
tick,0x7ffad1f6fb64,119850109,0,0x0,8
tick,0x7ffad1f6fb64,119866146,0,0x0,8
tick,0x7ffad1f6fb64,119881154,0,0x0,8
tick,0x7ffad1f6fb64,119897181,0,0x0,8
tick,0x7ffad1f6fb64,119913180,0,0x0,8
tick,0x7ffad1f6fb64,119929189,0,0x0,8
tick,0x7ffad1f6fb64,119945220,0,0x0,8
tick,0x7ffad1f6fb64,119961242,0,0x0,8
tick,0x7ffad1f6fb64,119976228,0,0x0,8
tick,0x7ffad1f6fb64,119992245,0,0x0,8
tick,0x7ffad1f6fb64,120008262,0,0x0,8
tick,0x7ffad1f6fb64,120024268,0,0x0,8
tick,0x7ffad1f6fb64,120040286,0,0x0,8
tick,0x7ffad1f6fb64,120055276,0,0x0,8
tick,0x7ffad1f6fb64,120070317,0,0x0,8
tick,0x7ffad1f6fb64,120086335,0,0x0,8
tick,0x7ffad1f6fb64,120102349,0,0x0,8
tick,0x7ffad1f6fb64,120117378,0,0x0,8
tick,0x7ffad1f6fb64,120133392,0,0x0,8
tick,0x7ffad1f6fb64,120149391,0,0x0,8
tick,0x7ffad1f6fb64,120165408,0,0x0,8
tick,0x7ffad1f6fb64,120180431,0,0x0,8
tick,0x7ffad1f6fb64,120195481,0,0x0,8
tick,0x7ffad1f6fb64,120210447,0,0x0,8
tick,0x7ffad1f6fb64,120225454,0,0x0,8
tick,0x7ffad1f6fb64,120240471,0,0x0,8
tick,0x7ffad1f6fb64,120256481,0,0x0,8
tick,0x7ffad1f6fb64,120271515,0,0x0,8
tick,0x7ffad1f6fb64,120287511,0,0x0,8
tick,0x7ffad1f6fb64,120303568,0,0x0,8
tick,0x7ffad1f6fb64,120319541,0,0x0,8
tick,0x7ffad1f6fb64,120335565,0,0x0,8
tick,0x7ffad1f6fb64,120350614,0,0x0,8
tick,0x7ffad1f6fb64,120365589,0,0x0,8
tick,0x7ffad1f6fb64,120380602,0,0x0,8
tick,0x7ffad1f6fb64,120395613,0,0x0,8
tick,0x7ffad1f6fb64,120410631,0,0x0,8
tick,0x7ffad1f6fb64,120425640,0,0x0,8
tick,0x7ffad1f6fb64,120440661,0,0x0,8
tick,0x7ffad1f6fb64,120456664,0,0x0,8
tick,0x7ffad1f6fb64,120472678,0,0x0,8
tick,0x7ffad1f6fb64,120487686,0,0x0,8
tick,0x7ffad1f6fb64,120502716,0,0x0,8
tick,0x7ffad1f6fb64,120517737,0,0x0,8
tick,0x7ffad1f6fb64,120533738,0,0x0,8
tick,0x7ffad1f6fb64,120549810,0,0x0,8
tick,0x7ffad1f6fb64,120564773,0,0x0,8
tick,0x7ffad1f6fb64,120579773,0,0x0,8
tick,0x7ffad1f6fb64,120595797,0,0x0,8
tick,0x7ffad1f6fb64,120611804,0,0x0,8
tick,0x7ffad1f6fb64,120627838,0,0x0,8
tick,0x7ffad1f6fb64,120643845,0,0x0,8
tick,0x7ffad1f6fb64,120659853,0,0x0,8
tick,0x7ffad1f6fb64,120674857,0,0x0,8
tick,0x7ffad1f6fb64,120689905,0,0x0,8
tick,0x7ffad1f6fb64,120704901,0,0x0,8
tick,0x7ffad1f6fb64,120720898,0,0x0,8
tick,0x7ffad1f6fb64,120736928,0,0x0,8
tick,0x7ffad1f6fb64,120752933,0,0x0,8
tick,0x7ffad1f6fb64,120767953,0,0x0,8
tick,0x7ffad1f6fb64,120782974,0,0x0,8
tick,0x7ffad1f6fb64,120797975,0,0x0,8
tick,0x7ffad1f6fb64,120814005,0,0x0,8
tick,0x7ffad1f6fb64,120830013,0,0x0,8
tick,0x7ffad1f6fb64,120846058,0,0x0,8
tick,0x7ffad1f6fb64,120862047,0,0x0,8
tick,0x7ffad1f6fb64,120877049,0,0x0,8
tick,0x7ffad1f6fb64,120893061,0,0x0,8
tick,0x7ffad1f6fb64,120909085,0,0x0,8
tick,0x7ffad1f6fb64,120924095,0,0x0,8
tick,0x7ffad1f6fb64,120940106,0,0x0,8
tick,0x7ffad1f6fb64,120956126,0,0x0,8
tick,0x7ffad1f6fb64,120972129,0,0x0,8
tick,0x7ffad1f6fb64,120987139,0,0x0,8
tick,0x7ffad1f6fb64,121003168,0,0x0,8
tick,0x7ffad1f6fb64,121019176,0,0x0,8
tick,0x7ffad1f6fb64,121035173,0,0x0,8
tick,0x7ffad1f6fb64,121050188,0,0x0,8
tick,0x7ffad1f6fb64,121066233,0,0x0,8
tick,0x7ffad1f6fb64,121081242,0,0x0,8
tick,0x7ffad1f6fb64,121097248,0,0x0,8
tick,0x7ffad1f6fb64,121113262,0,0x0,8
tick,0x7ffad1f6fb64,121129272,0,0x0,8
tick,0x7ffad1f6fb64,121144292,0,0x0,8
tick,0x7ffad1f6fb64,121160297,0,0x0,8
tick,0x7ffad1f6fb64,121176344,0,0x0,8
tick,0x7ffad1f6fb64,121192331,0,0x0,8
tick,0x7ffad1f6fb64,121208374,0,0x0,8
tick,0x7ffad1f6fb64,121224355,0,0x0,8
tick,0x7ffad1f6fb64,121239373,0,0x0,8
tick,0x7ffad1f6fb64,121254390,0,0x0,8
tick,0x7ffad1f6fb64,121269404,0,0x0,8
tick,0x7ffad1f6fb64,121285431,0,0x0,8
tick,0x7ffad1f6fb64,121301424,0,0x0,8
tick,0x7ffad1f6fb64,121317462,0,0x0,8
tick,0x7ffad1f6fb64,121332460,0,0x0,8
tick,0x7ffad1f6fb64,121348471,0,0x0,8
tick,0x7ffad1f6fb64,121363509,0,0x0,8
tick,0x7ffad1f6fb64,121379510,0,0x0,8
tick,0x7ffad1f6fb64,121395519,0,0x0,8
tick,0x7ffad1f6fb64,121411536,0,0x0,8
tick,0x7ffad1f6fb64,121426547,0,0x0,8
tick,0x7ffad1f6fb64,121442571,0,0x0,8
tick,0x7ffad1f6fb64,121458568,0,0x0,8
tick,0x7ffad1f6fb64,121473584,0,0x0,8
tick,0x7ffad1f6fb64,121489603,0,0x0,8
tick,0x7ffad1f6fb64,121505637,0,0x0,8
tick,0x7ffad1f6fb64,121520680,0,0x0,8
tick,0x7ffad1f6fb64,121536656,0,0x0,8
tick,0x7ffad1f6fb64,121552666,0,0x0,8
tick,0x7ffad1f6fb64,121567691,0,0x0,8
tick,0x7ffad1f6fb64,121583698,0,0x0,8
tick,0x7ffad1f6fb64,121599723,0,0x0,8
tick,0x7ffad1f6fb64,121615767,0,0x0,8
tick,0x7ffad1f6fb64,121630736,0,0x0,8
tick,0x7ffad1f6fb64,121646757,0,0x0,8
tick,0x7ffad1f6fb64,121661776,0,0x0,8
tick,0x7ffad1f6fb64,121677810,0,0x0,8
tick,0x7ffad1f6fb64,121693838,0,0x0,8
tick,0x7ffad1f6fb64,121709824,0,0x0,8
tick,0x7ffad1f6fb64,121725839,0,0x0,8
tick,0x7ffad1f6fb64,121740822,0,0x0,8
tick,0x7ffad1f6fb64,121756842,0,0x0,8
tick,0x7ffad1f6fb64,121772862,0,0x0,8
tick,0x7ffad1f6fb64,121787892,0,0x0,8
tick,0x7ffad1f6fb64,121802904,0,0x0,8
tick,0x7ffad1f6fb64,121817915,0,0x0,8
tick,0x7ffad1f6fb64,121833934,0,0x0,8
tick,0x7ffad1f6fb64,121849930,0,0x0,8
tick,0x7ffad1f6fb64,121864974,0,0x0,8
tick,0x7ffad1f6fb64,121879959,0,0x0,8
tick,0x7ffad1f6fb64,121895967,0,0x0,8
tick,0x7ffad1f6fb64,121910991,0,0x0,8
tick,0x7ffad1f6fb64,121927003,0,0x0,8
tick,0x7ffad1f6fb64,121942029,0,0x0,8
tick,0x7ffad1f6fb64,121958026,0,0x0,8
tick,0x7ffad1f6fb64,121974052,0,0x0,8
tick,0x7ffad1f6fb64,121989064,0,0x0,8
tick,0x7ffad1f6fb64,122005065,0,0x0,8
tick,0x7ffad1f6fb64,122020111,0,0x0,8
tick,0x7ffad1f6fb64,122036101,0,0x0,8
tick,0x7ffad1f6fb64,122052109,0,0x0,8
tick,0x7ffad1f6fb64,122067132,0,0x0,8
tick,0x7ffad1f6fb64,122082149,0,0x0,8
tick,0x7ffad1f6fb64,122098155,0,0x0,8
tick,0x7ffad1f6fb64,122114178,0,0x0,8
tick,0x7ffad1f6fb64,122130177,0,0x0,8
tick,0x7ffad1f6fb64,122146210,0,0x0,8
tick,0x7ffad1f6fb64,122161224,0,0x0,8
tick,0x7ffad1f6fb64,122177233,0,0x0,8
tick,0x7ffad1f6fb64,122193249,0,0x0,8
tick,0x7ffad1f6fb64,122209280,0,0x0,8
tick,0x7ffad1f6fb64,122224278,0,0x0,8
tick,0x7ffad1f6fb64,122240280,0,0x0,8
tick,0x7ffad1f6fb64,122256309,0,0x0,8
tick,0x7ffad1f6fb64,122272324,0,0x0,8
tick,0x7ffad1f6fb64,122287325,0,0x0,8
tick,0x7ffad1f6fb64,122302425,0,0x0,8
tick,0x7ffad1f6fb64,122317363,0,0x0,8
tick,0x7ffad1f6fb64,122332371,0,0x0,8
tick,0x7ffad1f6fb64,122348392,0,0x0,8
tick,0x7ffad1f6fb64,122363388,0,0x0,8
tick,0x7ffad1f6fb64,122378434,0,0x0,8
tick,0x7ffad1f6fb64,122393437,0,0x0,8
tick,0x7ffad1f6fb64,122409436,0,0x0,8
tick,0x7ffad1f6fb64,122425466,0,0x0,8
tick,0x7ffad1f6fb64,122440472,0,0x0,8
tick,0x7ffad1f6fb64,122456486,0,0x0,8
tick,0x7ffad1f6fb64,122472503,0,0x0,8
tick,0x7ffad1f6fb64,122488508,0,0x0,8
tick,0x7ffad1f6fb64,122503520,0,0x0,8
tick,0x7ffad1f6fb64,122519542,0,0x0,8
tick,0x7ffad1f6fb64,122534548,0,0x0,8
tick,0x7ffad1f6fb64,122550556,0,0x0,8
tick,0x7ffad1f6fb64,122566612,0,0x0,8
tick,0x7ffad1f6fb64,122581606,0,0x0,8
tick,0x7ffad1f6fb64,122596642,0,0x0,8
tick,0x7ffad1f6fb64,122612629,0,0x0,8
tick,0x7ffad1f6fb64,122627662,0,0x0,8
tick,0x7ffad1f6fb64,122642658,0,0x0,8
tick,0x7ffad1f6fb64,122658666,0,0x0,8
tick,0x7ffad1f6fb64,122674693,0,0x0,8
tick,0x7ffad1f6fb64,122689720,0,0x0,8
tick,0x7ffad1f6fb64,122705729,0,0x0,8
tick,0x7ffad1f6fb64,122721733,0,0x0,8
tick,0x7ffad1f6fb64,122737787,0,0x0,8
tick,0x7ffad1f6fb64,122753752,0,0x0,8
tick,0x7ffad1f6fb64,122769762,0,0x0,8
tick,0x7ffad1f6fb64,122785783,0,0x0,8
tick,0x7ffad1f6fb64,122801791,0,0x0,8
tick,0x7ffad1f6fb64,122816832,0,0x0,8
tick,0x7ffad1f6fb64,122832837,0,0x0,8
tick,0x7ffad1f6fb64,122847842,0,0x0,8
tick,0x7ffad1f6fb64,122863847,0,0x0,8
tick,0x7ffad1f6fb64,122879892,0,0x0,8
tick,0x7ffad1f6fb64,122895876,0,0x0,8
tick,0x7ffad1f6fb64,122911910,0,0x0,8
tick,0x7ffad1f6fb64,122926921,0,0x0,8
tick,0x7ffad1f6fb64,122942934,0,0x0,8
tick,0x7ffad1f6fb64,122958953,0,0x0,8
tick,0x7ffad1f6fb64,122974980,0,0x0,8
tick,0x7ffad1f6fb64,122989980,0,0x0,8
tick,0x7ffad1f6fb64,123005992,0,0x0,8
tick,0x7ffad1f6fb64,123021005,0,0x0,8
tick,0x7ffad1f6fb64,123037032,0,0x0,8
tick,0x7ffad1f6fb64,123052016,0,0x0,8
tick,0x7ffad1f6fb64,123068055,0,0x0,8
tick,0x7ffad1f6fb64,123084084,0,0x0,8
tick,0x7ffad1f6fb64,123100069,0,0x0,8
tick,0x7ffad1f6fb64,123116085,0,0x0,8
tick,0x7ffad1f6fb64,123132092,0,0x0,8
tick,0x7ffad1f6fb64,123147112,0,0x0,8
tick,0x7ffad1f6fb64,123163122,0,0x0,8
tick,0x7ffad1f6fb64,123178147,0,0x0,8
tick,0x7ffad1f6fb64,123194161,0,0x0,8
tick,0x7ffad1f6fb64,123210179,0,0x0,8
tick,0x7ffad1f6fb64,123226186,0,0x0,8
tick,0x7ffad1f6fb64,123241208,0,0x0,8
tick,0x7ffad1f6fb64,123256222,0,0x0,8
tick,0x7ffad1f6fb64,123271232,0,0x0,8
tick,0x7ffad1f6fb64,123287241,0,0x0,8
tick,0x7ffad1f6fb64,123302247,0,0x0,8
tick,0x7ffad1f6fb64,123317265,0,0x0,8
tick,0x7ffad1f6fb64,123333324,0,0x0,8
tick,0x7ffad1f6fb64,123348286,0,0x0,8
tick,0x7ffad1f6fb64,123363348,0,0x0,8
tick,0x7ffad1f6fb64,123378326,0,0x0,8
tick,0x7ffad1f6fb64,123393454,0,0x0,8
tick,0x7ffad1f6fb64,123409352,0,0x0,8
tick,0x7ffad1f6fb64,123425364,0,0x0,8
tick,0x7ffad1f6fb64,123440379,0,0x0,8
tick,0x7ffad1f6fb64,123455390,0,0x0,8
tick,0x7ffad1f6fb64,123471410,0,0x0,8
tick,0x7ffad1f6fb64,123487424,0,0x0,8
tick,0x7ffad1f6fb64,123503446,0,0x0,8
tick,0x7ffad1f6fb64,123518441,0,0x0,8
tick,0x7ffad1f6fb64,123534466,0,0x0,8
tick,0x7ffad1f6fb64,123549460,0,0x0,8
tick,0x7ffad1f6fb64,123565492,0,0x0,8
tick,0x7ffad1f6fb64,123581513,0,0x0,8
tick,0x7ffad1f6fb64,123596525,0,0x0,8
tick,0x7ffad1f6fb64,123611557,0,0x0,8
tick,0x7ffad1f6fb64,123627563,0,0x0,8
tick,0x7ffad1f6fb64,123642572,0,0x0,8
tick,0x7ffad1f6fb64,123658586,0,0x0,8
tick,0x7ffad1f6fb64,123674599,0,0x0,8
tick,0x7ffad1f6fb64,123689619,0,0x0,8
tick,0x7ffad1f6fb64,123704623,0,0x0,8
tick,0x7ffad1f6fb64,123720632,0,0x0,8
tick,0x7ffad1f6fb64,123736652,0,0x0,8
tick,0x7ffad1f6fb64,123752681,0,0x0,8
tick,0x7ffad1f6fb64,123768694,0,0x0,8
tick,0x7ffad1f6fb64,123783715,0,0x0,8
tick,0x7ffad1f6fb64,123798783,0,0x0,8
tick,0x7ffad1f6fb64,123813752,0,0x0,8
tick,0x7ffad1f6fb64,123828755,0,0x0,8
tick,0x7ffad1f6fb64,123843806,0,0x0,8
tick,0x7ffad1f6fb64,123859766,0,0x0,8
tick,0x7ffad1f6fb64,123875787,0,0x0,8
tick,0x7ffad1f6fb64,123891904,0,0x0,8
tick,0x7ffad1f6fb64,123906823,0,0x0,8
tick,0x7ffad1f6fb64,123922811,0,0x0,8
tick,0x7ffad1f6fb64,123937841,0,0x0,8
tick,0x7ffad1f6fb64,123953850,0,0x0,8
tick,0x7ffad1f6fb64,123968856,0,0x0,8
tick,0x7ffad1f6fb64,123984893,0,0x0,8
tick,0x7ffad1f6fb64,124000878,0,0x0,8
tick,0x7ffad1f6fb64,124016931,0,0x0,8
tick,0x7ffad1f6fb64,124031903,0,0x0,8
tick,0x7ffad1f6fb64,124047926,0,0x0,8
tick,0x7ffad1f6fb64,124063946,0,0x0,8
tick,0x7ffad1f6fb64,124079986,0,0x0,8
tick,0x7ffad1f6fb64,124095084,0,0x0,8
tick,0x7ffad1f6fb64,124111020,0,0x0,8
tick,0x7ffad1f6fb64,124127048,0,0x0,8
tick,0x7ffad1f6fb64,124143068,0,0x0,8
tick,0x7ffad1f6fb64,124158037,0,0x0,8
tick,0x7ffad1f6fb64,124173084,0,0x0,8
tick,0x7ffad1f6fb64,124188071,0,0x0,8
tick,0x7ffad1f6fb64,124204093,0,0x0,8
tick,0x7ffad1f6fb64,124220100,0,0x0,8
tick,0x7ffad1f6fb64,124235141,0,0x0,8
tick,0x7ffad1f6fb64,124250113,0,0x0,8
tick,0x7ffad1f6fb64,124266159,0,0x0,8
tick,0x7ffad1f6fb64,124282172,0,0x0,8
tick,0x7ffad1f6fb64,124298165,0,0x0,8
tick,0x7ffad1f6fb64,124314193,0,0x0,8
tick,0x7ffad1f6fb64,124330191,0,0x0,8
tick,0x7ffad1f6fb64,124346236,0,0x0,8
tick,0x7ffad1f6fb64,124361217,0,0x0,8
tick,0x7ffad1f6fb64,124376240,0,0x0,8
tick,0x7ffad1f6fb64,124392253,0,0x0,8
tick,0x7ffad1f6fb64,124407277,0,0x0,8
tick,0x7ffad1f6fb64,124422306,0,0x0,8
tick,0x7ffad1f6fb64,124437344,0,0x0,8
tick,0x7ffad1f6fb64,124453317,0,0x0,8
tick,0x7ffad1f6fb64,124469331,0,0x0,8
tick,0x7ffad1f6fb64,124485337,0,0x0,8
tick,0x7ffad1f6fb64,124501358,0,0x0,8
tick,0x7ffad1f6fb64,124517354,0,0x0,8
tick,0x7ffad1f6fb64,124532404,0,0x0,8
tick,0x7ffad1f6fb64,124548386,0,0x0,8
tick,0x7ffad1f6fb64,124563410,0,0x0,8
tick,0x7ffad1f6fb64,124578429,0,0x0,8
tick,0x7ffad1f6fb64,124593427,0,0x0,8
tick,0x7ffad1f6fb64,124609453,0,0x0,8
tick,0x7ffad1f6fb64,124624459,0,0x0,8
tick,0x7ffad1f6fb64,124639479,0,0x0,8
tick,0x7ffad1f6fb64,124654511,0,0x0,8
tick,0x7ffad1f6fb64,124670517,0,0x0,8
tick,0x7ffad1f6fb64,124686531,0,0x0,8
tick,0x7ffad1f6fb64,124702541,0,0x0,8
tick,0x7ffad1f6fb64,124717561,0,0x0,8
tick,0x7ffad1f6fb64,124733565,0,0x0,8
tick,0x7ffad1f6fb64,124749576,0,0x0,8
tick,0x7ffad1f6fb64,124765619,0,0x0,8
tick,0x7ffad1f6fb64,124780671,0,0x0,8
tick,0x7ffad1f6fb64,124795623,0,0x0,8
tick,0x7ffad1f6fb64,124811642,0,0x0,8
tick,0x7ffad1f6fb64,124827661,0,0x0,8
tick,0x7ffad1f6fb64,124842652,0,0x0,8
tick,0x7ffad1f6fb64,124858735,0,0x0,8
tick,0x7ffad1f6fb64,124873692,0,0x0,8
tick,0x7ffad1f6fb64,124888710,0,0x0,8
tick,0x7ffad1f6fb64,124904757,0,0x0,8
tick,0x7ffad1f6fb64,124919728,0,0x0,8
tick,0x7ffad1f6fb64,124935773,0,0x0,8
tick,0x7ffad1f6fb64,124950752,0,0x0,8
tick,0x7ffad1f6fb64,124966774,0,0x0,8
tick,0x7ffad1f6fb64,124981794,0,0x0,8
tick,0x7ffad1f6fb64,124997809,0,0x0,8
tick,0x7ffad1f6fb64,125012800,0,0x0,8
tick,0x7ffad1f6fb64,125028852,0,0x0,8
tick,0x7ffad1f6fb64,125043867,0,0x0,8
tick,0x7ffad1f6fb64,125059845,0,0x0,8
tick,0x7ffad1f6fb64,125075886,0,0x0,8
tick,0x7ffad1f6fb64,125091882,0,0x0,8
tick,0x7ffad1f6fb64,125107910,0,0x0,8
tick,0x7ffad1f6fb64,125122922,0,0x0,8
tick,0x7ffad1f6fb64,125137931,0,0x0,8
tick,0x7ffad1f6fb64,125153936,0,0x0,8
tick,0x7ffad1f6fb64,125169953,0,0x0,8
tick,0x7ffad1f6fb64,125185979,0,0x0,8
tick,0x7ffad1f6fb64,125201986,0,0x0,8
tick,0x7ffad1f6fb64,125217030,0,0x0,8
tick,0x7ffad1f6fb64,125232024,0,0x0,8
tick,0x7ffad1f6fb64,125248039,0,0x0,8
tick,0x7ffad1f6fb64,125263040,0,0x0,8
tick,0x7ffad1f6fb64,125279067,0,0x0,8
tick,0x7ffad1f6fb64,125295085,0,0x0,8
tick,0x7ffad1f6fb64,125310114,0,0x0,8
tick,0x7ffad1f6fb64,125325124,0,0x0,8
tick,0x7ffad1f6fb64,125340099,0,0x0,8
tick,0x7ffad1f6fb64,125356124,0,0x0,8
tick,0x7ffad1f6fb64,125372159,0,0x0,8
tick,0x7ffad1f6fb64,125388154,0,0x0,8
tick,0x7ffad1f6fb64,125403171,0,0x0,8
tick,0x7ffad1f6fb64,125419177,0,0x0,8
tick,0x7ffad1f6fb64,125434228,0,0x0,8
tick,0x7ffad1f6fb64,125450225,0,0x0,8
tick,0x7ffad1f6fb64,125466236,0,0x0,8
tick,0x7ffad1f6fb64,125481246,0,0x0,8
tick,0x7ffad1f6fb64,125497254,0,0x0,8
tick,0x7ffad1f6fb64,125513272,0,0x0,8
tick,0x7ffad1f6fb64,125529282,0,0x0,8
tick,0x7ffad1f6fb64,125544295,0,0x0,8
tick,0x7ffad1f6fb64,125560309,0,0x0,8
tick,0x7ffad1f6fb64,125576325,0,0x0,8
tick,0x7ffad1f6fb64,125591351,0,0x0,8
tick,0x7ffad1f6fb64,125607347,0,0x0,8
tick,0x7ffad1f6fb64,125622364,0,0x0,8
tick,0x7ffad1f6fb64,125637394,0,0x0,8
tick,0x7ffad1f6fb64,125652425,0,0x0,8
tick,0x7ffad1f6fb64,125667410,0,0x0,8
tick,0x7ffad1f6fb64,125682427,0,0x0,8
tick,0x7ffad1f6fb64,125698442,0,0x0,8
tick,0x7ffad1f6fb64,125714437,0,0x0,8
tick,0x7ffad1f6fb64,125729459,0,0x0,8
tick,0x7ffad1f6fb64,125745486,0,0x0,8
tick,0x7ffad1f6fb64,125761502,0,0x0,8
tick,0x7ffad1f6fb64,125777498,0,0x0,8
tick,0x7ffad1f6fb64,125793517,0,0x0,8
tick,0x7ffad1f6fb64,125809540,0,0x0,8
tick,0x7ffad1f6fb64,125824577,0,0x0,8
tick,0x7ffad1f6fb64,125839562,0,0x0,8
tick,0x7ffad1f6fb64,125855584,0,0x0,8
tick,0x7ffad1f6fb64,125870612,0,0x0,8
tick,0x7ffad1f6fb64,125886660,0,0x0,8
tick,0x7ffad1f6fb64,125902631,0,0x0,8
tick,0x7ffad1f6fb64,125917636,0,0x0,8
tick,0x7ffad1f6fb64,125932662,0,0x0,8
tick,0x7ffad1f6fb64,125947663,0,0x0,8
tick,0x7ffad1f6fb64,125962733,0,0x0,8
tick,0x7ffad1f6fb64,125978704,0,0x0,8
tick,0x7ffad1f6fb64,125993708,0,0x0,8
tick,0x7ffad1f6fb64,126009736,0,0x0,8
tick,0x7ffad1f6fb64,126025723,0,0x0,8
tick,0x7ffad1f6fb64,126040744,0,0x0,8
tick,0x7ffad1f6fb64,126055795,0,0x0,8
tick,0x7ffad1f6fb64,126071772,0,0x0,8
tick,0x7ffad1f6fb64,126087799,0,0x0,8
tick,0x7ffad1f6fb64,126102861,0,0x0,8
tick,0x7ffad1f6fb64,126118824,0,0x0,8
tick,0x7ffad1f6fb64,126134865,0,0x0,8
tick,0x7ffad1f6fb64,126149877,0,0x0,8
tick,0x7ffad1f6fb64,126164873,0,0x0,8
tick,0x7ffad1f6fb64,126179916,0,0x0,8
tick,0x7ffad1f6fb64,126195905,0,0x0,8
tick,0x7ffad1f6fb64,126210905,0,0x0,8
tick,0x7ffad1f6fb64,126226935,0,0x0,8
tick,0x7ffad1f6fb64,126242951,0,0x0,8
tick,0x7ffad1f6fb64,126257947,0,0x0,8
tick,0x7ffad1f6fb64,126273968,0,0x0,8
tick,0x7ffad1f6fb64,126289974,0,0x0,8
tick,0x7ffad1f6fb64,126305000,0,0x0,8
tick,0x7ffad1f6fb64,126320024,0,0x0,8
tick,0x7ffad1f6fb64,126335019,0,0x0,8
tick,0x7ffad1f6fb64,126350033,0,0x0,8
tick,0x7ffad1f6fb64,126366046,0,0x0,8
tick,0x7ffad1f6fb64,126381062,0,0x0,8
tick,0x7ffad1f6fb64,126396066,0,0x0,8
tick,0x7ffad1f6fb64,126411107,0,0x0,8
tick,0x7ffad1f6fb64,126427104,0,0x0,8
tick,0x7ffad1f6fb64,126443114,0,0x0,8
tick,0x7ffad1f6fb64,126459126,0,0x0,8
tick,0x7ffad1f6fb64,126475184,0,0x0,8
tick,0x7ffad1f6fb64,126491176,0,0x0,8
tick,0x7ffad1f6fb64,126506169,0,0x0,8
tick,0x7ffad1f6fb64,126521216,0,0x0,8
tick,0x7ffad1f6fb64,126537195,0,0x0,8
tick,0x7ffad1f6fb64,126553203,0,0x0,8
tick,0x7ffad1f6fb64,126568223,0,0x0,8
tick,0x7ffad1f6fb64,126584235,0,0x0,8
tick,0x7ffad1f6fb64,126599244,0,0x0,8
tick,0x7ffad1f6fb64,126614311,0,0x0,8
tick,0x7ffad1f6fb64,126630309,0,0x0,8
tick,0x7ffad1f6fb64,126645308,0,0x0,8
tick,0x7ffad1f6fb64,126661321,0,0x0,8
tick,0x7ffad1f6fb64,126677344,0,0x0,8
tick,0x7ffad1f6fb64,126692353,0,0x0,8
tick,0x7ffad1f6fb64,126707359,0,0x0,8
tick,0x7ffad1f6fb64,126722367,0,0x0,8
tick,0x7ffad1f6fb64,126737389,0,0x0,8
tick,0x7ffad1f6fb64,126753388,0,0x0,8
tick,0x7ffad1f6fb64,126768443,0,0x0,8
tick,0x7ffad1f6fb64,126783437,0,0x0,8
tick,0x7ffad1f6fb64,126798456,0,0x0,8
tick,0x7ffad1f6fb64,126814458,0,0x0,8
tick,0x7ffad1f6fb64,126830514,0,0x0,8
tick,0x7ffad1f6fb64,126846506,0,0x0,8
tick,0x7ffad1f6fb64,126862511,0,0x0,8
tick,0x7ffad1f6fb64,126877524,0,0x0,8
tick,0x7ffad1f6fb64,126893546,0,0x0,8
tick,0x7ffad1f6fb64,126909568,0,0x0,8
tick,0x7ffad1f6fb64,126925552,0,0x0,8
tick,0x7ffad1f6fb64,126940556,0,0x0,8
tick,0x7ffad1f6fb64,126956597,0,0x0,8
tick,0x7ffad1f6fb64,126972586,0,0x0,8
tick,0x7ffad1f6fb64,126987655,0,0x0,8
tick,0x7ffad1f6fb64,127003624,0,0x0,8
tick,0x7ffad1f6fb64,127019659,0,0x0,8
tick,0x7ffad1f6fb64,127035649,0,0x0,8
tick,0x7ffad1f6fb64,127050652,0,0x0,8
tick,0x7ffad1f6fb64,127066702,0,0x0,8
tick,0x7ffad1f6fb64,127081730,0,0x0,8
tick,0x7ffad1f6fb64,127096715,0,0x0,8
tick,0x7ffad1f6fb64,127112734,0,0x0,8
tick,0x7ffad1f6fb64,127128744,0,0x0,8
tick,0x7ffad1f6fb64,127144747,0,0x0,8
tick,0x7ffad1f6fb64,127159775,0,0x0,8
tick,0x7ffad1f6fb64,127174799,0,0x0,8
tick,0x7ffad1f6fb64,127190796,0,0x0,8
tick,0x7ffad1f6fb64,127206833,0,0x0,8
tick,0x7ffad1f6fb64,127221827,0,0x0,8
tick,0x7ffad1f6fb64,127237847,0,0x0,8
tick,0x7ffad1f6fb64,127253874,0,0x0,8
tick,0x7ffad1f6fb64,127269875,0,0x0,8
tick,0x7ffad1f6fb64,127284892,0,0x0,8
tick,0x7ffad1f6fb64,127299893,0,0x0,8
tick,0x7ffad1f6fb64,127315923,0,0x0,8
tick,0x7ffad1f6fb64,127331934,0,0x0,8
tick,0x7ffad1f6fb64,127347927,0,0x0,8
tick,0x7ffad1f6fb64,127362954,0,0x0,8
tick,0x7ffad1f6fb64,127378979,0,0x0,8
tick,0x7ffad1f6fb64,127395000,0,0x0,8
tick,0x7ffad1f6fb64,127409993,0,0x0,8
tick,0x7ffad1f6fb64,127425039,0,0x0,8
tick,0x7ffad1f6fb64,127440021,0,0x0,8
tick,0x7ffad1f6fb64,127456041,0,0x0,8
tick,0x7ffad1f6fb64,127471040,0,0x0,8
tick,0x7ffad1f6fb64,127487068,0,0x0,8
tick,0x7ffad1f6fb64,127502088,0,0x0,8
tick,0x7ffad1f6fb64,127518089,0,0x0,8
tick,0x7ffad1f6fb64,127534112,0,0x0,8
tick,0x7ffad1f6fb64,127549122,0,0x0,8
tick,0x7ffad1f6fb64,127565153,0,0x0,8
tick,0x7ffad1f6fb64,127580148,0,0x0,8
tick,0x7ffad1f6fb64,127595154,0,0x0,8
tick,0x7ffad1f6fb64,127610190,0,0x0,8
tick,0x7ffad1f6fb64,127626194,0,0x0,8
tick,0x7ffad1f6fb64,127642201,0,0x0,8
tick,0x7ffad1f6fb64,127658222,0,0x0,8
tick,0x7ffad1f6fb64,127673246,0,0x0,8
tick,0x7ffad1f6fb64,127689257,0,0x0,8
tick,0x7ffad1f6fb64,127705278,0,0x0,8
tick,0x7ffad1f6fb64,127720301,0,0x0,8
tick,0x7ffad1f6fb64,127735307,0,0x0,8
tick,0x7ffad1f6fb64,127750313,0,0x0,8
tick,0x7ffad1f6fb64,127766326,0,0x0,8
tick,0x7ffad1f6fb64,127782347,0,0x0,8
tick,0x7ffad1f6fb64,127797346,0,0x0,8
tick,0x7ffad1f6fb64,127813345,0,0x0,8
tick,0x7ffad1f6fb64,127829386,0,0x0,8
tick,0x7ffad1f6fb64,127845401,0,0x0,8
tick,0x7ffad1f6fb64,127861405,0,0x0,8
tick,0x7ffad1f6fb64,127876421,0,0x0,8
tick,0x7ffad1f6fb64,127891459,0,0x0,8
tick,0x7ffad1f6fb64,127906657,0,0x0,8
tick,0x7ffad1f6fb64,127922476,0,0x0,8
tick,0x7ffad1f6fb64,127937511,0,0x0,8
tick,0x7ffad1f6fb64,127953493,0,0x0,8
tick,0x7ffad1f6fb64,127968534,0,0x0,8
tick,0x7ffad1f6fb64,127984545,0,0x0,8
tick,0x7ffad1f6fb64,127999535,0,0x0,8
tick,0x7ffad1f6fb64,128015598,0,0x0,8
tick,0x7ffad1f6fb64,128031574,0,0x0,8
tick,0x7ffad1f6fb64,128046593,0,0x0,8
tick,0x7ffad1f6fb64,128062599,0,0x0,8
tick,0x7ffad1f6fb64,128078619,0,0x0,8
tick,0x7ffad1f6fb64,128094652,0,0x0,8
tick,0x7ffad1f6fb64,128110637,0,0x0,8
tick,0x7ffad1f6fb64,128125690,0,0x0,8
tick,0x7ffad1f6fb64,128140679,0,0x0,8
tick,0x7ffad1f6fb64,128155688,0,0x0,8
tick,0x7ffad1f6fb64,128171734,0,0x0,8
tick,0x7ffad1f6fb64,128187746,0,0x0,8
tick,0x7ffad1f6fb64,128202749,0,0x0,8
tick,0x7ffad1f6fb64,128218744,0,0x0,8
tick,0x7ffad1f6fb64,128234757,0,0x0,8
tick,0x7ffad1f6fb64,128249766,0,0x0,8
tick,0x7ffad1f6fb64,128265810,0,0x0,8
tick,0x7ffad1f6fb64,128281831,0,0x0,8
tick,0x7ffad1f6fb64,128296830,0,0x0,8
tick,0x7ffad1f6fb64,128311840,0,0x0,8
tick,0x7ffad1f6fb64,128327857,0,0x0,8
tick,0x7ffad1f6fb64,128343844,0,0x0,8
tick,0x7ffad1f6fb64,128358884,0,0x0,8
tick,0x7ffad1f6fb64,128374921,0,0x0,8
tick,0x7ffad1f6fb64,128390905,0,0x0,8
tick,0x7ffad1f6fb64,128405909,0,0x0,8
tick,0x7ffad1f6fb64,128421945,0,0x0,8
tick,0x7ffad1f6fb64,128436958,0,0x0,8
tick,0x7ffad1f6fb64,128452973,0,0x0,8
tick,0x7ffad1f6fb64,128467979,0,0x0,8
tick,0x7ffad1f6fb64,128483999,0,0x0,8
tick,0x7ffad1f6fb64,128498993,0,0x0,8
tick,0x7ffad1f6fb64,128514026,0,0x0,8
tick,0x7ffad1f6fb64,128530042,0,0x0,8
tick,0x7ffad1f6fb64,128546039,0,0x0,8
tick,0x7ffad1f6fb64,128561056,0,0x0,8
tick,0x7ffad1f6fb64,128577070,0,0x0,8
tick,0x7ffad1f6fb64,128593106,0,0x0,8
tick,0x7ffad1f6fb64,128609088,0,0x0,8
tick,0x7ffad1f6fb64,128625123,0,0x0,8
tick,0x7ffad1f6fb64,128640230,0,0x0,8
tick,0x7ffad1f6fb64,128656131,0,0x0,8
tick,0x7ffad1f6fb64,128671167,0,0x0,8
tick,0x7ffad1f6fb64,128686267,0,0x0,8
tick,0x7ffad1f6fb64,128701189,0,0x0,8
tick,0x7ffad1f6fb64,128717185,0,0x0,8
tick,0x7ffad1f6fb64,128733239,0,0x0,8
tick,0x7ffad1f6fb64,128749217,0,0x0,8
tick,0x7ffad1f6fb64,128764235,0,0x0,8
tick,0x7ffad1f6fb64,128780254,0,0x0,8
tick,0x7ffad1f6fb64,128795265,0,0x0,8
tick,0x7ffad1f6fb64,128810278,0,0x0,8
tick,0x7ffad1f6fb64,128825273,0,0x0,8
tick,0x7ffad1f6fb64,128840322,0,0x0,8
tick,0x7ffad1f6fb64,128855311,0,0x0,8
tick,0x7ffad1f6fb64,128871344,0,0x0,8
tick,0x7ffad1f6fb64,128887338,0,0x0,8
tick,0x7ffad1f6fb64,128902363,0,0x0,8
tick,0x7ffad1f6fb64,128917409,0,0x0,8
tick,0x7ffad1f6fb64,128933404,0,0x0,8
tick,0x7ffad1f6fb64,128949411,0,0x0,8
tick,0x7ffad1f6fb64,128965452,0,0x0,8
tick,0x7ffad1f6fb64,128980434,0,0x0,8
tick,0x7ffad1f6fb64,128995432,0,0x0,8
tick,0x7ffad1f6fb64,129011460,0,0x0,8
tick,0x7ffad1f6fb64,129027525,0,0x0,8
tick,0x7ffad1f6fb64,129042531,0,0x0,8
tick,0x7ffad1f6fb64,129058520,0,0x0,8
tick,0x7ffad1f6fb64,129074531,0,0x0,8
tick,0x7ffad1f6fb64,129089529,0,0x0,8
tick,0x7ffad1f6fb64,129104569,0,0x0,8
tick,0x7ffad1f6fb64,129120594,0,0x0,8
tick,0x7ffad1f6fb64,129135611,0,0x0,8
tick,0x7ffad1f6fb64,129151620,0,0x0,8
tick,0x7ffad1f6fb64,129166614,0,0x0,8
tick,0x7ffad1f6fb64,129181620,0,0x0,8
tick,0x7ffad1f6fb64,129197613,0,0x0,8
tick,0x7ffad1f6fb64,129213744,0,0x0,8
tick,0x7ffad1f6fb64,129229657,0,0x0,8
tick,0x7ffad1f6fb64,129245691,0,0x0,8
tick,0x7ffad1f6fb64,129260700,0,0x0,8
tick,0x7ffad1f6fb64,129275732,0,0x0,8
tick,0x7ffad1f6fb64,129291739,0,0x0,8
tick,0x7ffad1f6fb64,129307755,0,0x0,8
tick,0x7ffad1f6fb64,129322777,0,0x0,8
tick,0x7ffad1f6fb64,129337766,0,0x0,8
tick,0x7ffad1f6fb64,129352798,0,0x0,8
tick,0x7ffad1f6fb64,129368818,0,0x0,8
tick,0x7ffad1f6fb64,129384834,0,0x0,8
tick,0x7ffad1f6fb64,129399812,0,0x0,8
tick,0x7ffad1f6fb64,129415850,0,0x0,8
tick,0x7ffad1f6fb64,129431848,0,0x0,8
tick,0x7ffad1f6fb64,129447870,0,0x0,8
tick,0x7ffad1f6fb64,129463877,0,0x0,8
tick,0x7ffad1f6fb64,129479912,0,0x0,8
tick,0x7ffad1f6fb64,129495929,0,0x0,8
tick,0x7ffad1f6fb64,129510910,0,0x0,8
tick,0x7ffad1f6fb64,129526942,0,0x0,8
tick,0x7ffad1f6fb64,129541941,0,0x0,8
tick,0x7ffad1f6fb64,129557973,0,0x0,8
tick,0x7ffad1f6fb64,129574009,0,0x0,8
tick,0x7ffad1f6fb64,129588992,0,0x0,8
tick,0x7ffad1f6fb64,129605009,0,0x0,8
tick,0x7ffad1f6fb64,129621016,0,0x0,8
tick,0x7ffad1f6fb64,129637048,0,0x0,8
tick,0x7ffad1f6fb64,129652048,0,0x0,8
tick,0x7ffad1f6fb64,129667216,0,0x0,8
tick,0x7ffad1f6fb64,129682129,0,0x0,8
tick,0x7ffad1f6fb64,129698127,0,0x0,8
tick,0x7ffad1f6fb64,129713101,0,0x0,8
tick,0x7ffad1f6fb64,129728145,0,0x0,8
tick,0x7ffad1f6fb64,129744120,0,0x0,8
tick,0x7ffad1f6fb64,129760141,0,0x0,8
tick,0x7ffad1f6fb64,129776141,0,0x0,8
tick,0x7ffad1f6fb64,129792234,0,0x0,8
tick,0x7ffad1f6fb64,129808183,0,0x0,8
tick,0x7ffad1f6fb64,129823218,0,0x0,8
tick,0x7ffad1f6fb64,129839229,0,0x0,8
tick,0x7ffad1f6fb64,129855236,0,0x0,8
tick,0x7ffad1f6fb64,129871256,0,0x0,8
tick,0x7ffad1f6fb64,129886288,0,0x0,8
tick,0x7ffad1f6fb64,129901276,0,0x0,8
tick,0x7ffad1f6fb64,129916302,0,0x0,8
tick,0x7ffad1f6fb64,129932312,0,0x0,8
tick,0x7ffad1f6fb64,129948344,0,0x0,8
tick,0x7ffad1f6fb64,129964328,0,0x0,8
tick,0x7ffad1f6fb64,129979354,0,0x0,8
tick,0x7ffad1f6fb64,129995413,0,0x0,8
tick,0x7ffad1f6fb64,130011374,0,0x0,8
tick,0x7ffad1f6fb64,130026369,0,0x0,8
tick,0x7ffad1f6fb64,130042397,0,0x0,8
tick,0x7ffad1f6fb64,130057405,0,0x0,8
tick,0x7ffad1f6fb64,130073416,0,0x0,8
tick,0x7ffad1f6fb64,130088442,0,0x0,8
tick,0x7ffad1f6fb64,130104443,0,0x0,8
tick,0x7ffad1f6fb64,130119448,0,0x0,8
tick,0x7ffad1f6fb64,130135488,0,0x0,8
tick,0x7ffad1f6fb64,130151535,0,0x0,8
tick,0x7ffad1f6fb64,130166520,0,0x0,8
tick,0x7ffad1f6fb64,130181513,0,0x0,8
tick,0x7ffad1f6fb64,130197533,0,0x0,8
tick,0x7ffad1f6fb64,130213545,0,0x0,8
tick,0x7ffad1f6fb64,130229580,0,0x0,8
tick,0x7ffad1f6fb64,130245583,0,0x0,8
tick,0x7ffad1f6fb64,130260599,0,0x0,8
tick,0x7ffad1f6fb64,130275606,0,0x0,8
tick,0x7ffad1f6fb64,130290645,0,0x0,8
tick,0x7ffad1f6fb64,130306637,0,0x0,8
tick,0x7ffad1f6fb64,130322678,0,0x0,8
tick,0x7ffad1f6fb64,130337672,0,0x0,8
tick,0x7ffad1f6fb64,130352684,0,0x0,8
tick,0x7ffad1f6fb64,130367697,0,0x0,8
tick,0x7ffad1f6fb64,130383720,0,0x0,8
tick,0x7ffad1f6fb64,130399728,0,0x0,8
tick,0x7ffad1f6fb64,130414769,0,0x0,8
tick,0x7ffad1f6fb64,130430756,0,0x0,8
tick,0x7ffad1f6fb64,130446776,0,0x0,8
tick,0x7ffad1f6fb64,130462779,0,0x0,8
tick,0x7ffad1f6fb64,130478810,0,0x0,8
tick,0x7ffad1f6fb64,130493831,0,0x0,8
tick,0x7ffad1f6fb64,130509854,0,0x0,8
tick,0x7ffad1f6fb64,130525847,0,0x0,8
tick,0x7ffad1f6fb64,130540860,0,0x0,8
tick,0x7ffad1f6fb64,130555881,0,0x0,8
tick,0x7ffad1f6fb64,130571889,0,0x0,8
tick,0x7ffad1f6fb64,130587955,0,0x0,8
tick,0x7ffad1f6fb64,130602911,0,0x0,8
tick,0x7ffad1f6fb64,130617917,0,0x0,8
tick,0x7ffad1f6fb64,130633933,0,0x0,8
tick,0x7ffad1f6fb64,130648941,0,0x0,8
tick,0x7ffad1f6fb64,130663976,0,0x0,8
tick,0x7ffad1f6fb64,130678975,0,0x0,8
tick,0x7ffad1f6fb64,130695035,0,0x0,8
tick,0x7ffad1f6fb64,130711005,0,0x0,8
tick,0x7ffad1f6fb64,130727022,0,0x0,8
tick,0x7ffad1f6fb64,130742025,0,0x0,8
tick,0x7ffad1f6fb64,130758035,0,0x0,8
tick,0x7ffad1f6fb64,130774082,0,0x0,8
tick,0x7ffad1f6fb64,130789112,0,0x0,8
tick,0x7ffad1f6fb64,130804116,0,0x0,8
tick,0x7ffad1f6fb64,130820128,0,0x0,8
tick,0x7ffad1f6fb64,130836168,0,0x0,8
tick,0x7ffad1f6fb64,130851159,0,0x0,8
tick,0x7ffad1f6fb64,130866173,0,0x0,8
tick,0x7ffad1f6fb64,130881225,0,0x0,8
tick,0x7ffad1f6fb64,130897210,0,0x0,8
tick,0x7ffad1f6fb64,130913236,0,0x0,8
tick,0x7ffad1f6fb64,130929291,0,0x0,8
tick,0x7ffad1f6fb64,130944258,0,0x0,8
tick,0x7ffad1f6fb64,130959285,0,0x0,8
tick,0x7ffad1f6fb64,130975266,0,0x0,8
tick,0x7ffad1f6fb64,130991281,0,0x0,8
tick,0x7ffad1f6fb64,131007292,0,0x0,8
tick,0x7ffad1f6fb64,131022358,0,0x0,8
tick,0x7ffad1f6fb64,131037305,0,0x0,8
tick,0x7ffad1f6fb64,131053304,0,0x0,8
tick,0x7ffad1f6fb64,131069325,0,0x0,8
tick,0x7ffad1f6fb64,131085328,0,0x0,8
tick,0x7ffad1f6fb64,131100382,0,0x0,8
tick,0x7ffad1f6fb64,131116363,0,0x0,8
tick,0x7ffad1f6fb64,131131389,0,0x0,8
tick,0x7ffad1f6fb64,131147398,0,0x0,8
tick,0x7ffad1f6fb64,131163467,0,0x0,8
tick,0x7ffad1f6fb64,131178472,0,0x0,8
tick,0x7ffad1f6fb64,131193448,0,0x0,8
tick,0x7ffad1f6fb64,131209477,0,0x0,8
tick,0x7ffad1f6fb64,131225470,0,0x0,8
tick,0x7ffad1f6fb64,131240477,0,0x0,8
tick,0x7ffad1f6fb64,131256513,0,0x0,8
tick,0x7ffad1f6fb64,131272506,0,0x0,8
tick,0x7ffad1f6fb64,131287539,0,0x0,8
tick,0x7ffad1f6fb64,131302572,0,0x0,8
tick,0x7ffad1f6fb64,131317563,0,0x0,8
tick,0x7ffad1f6fb64,131333603,0,0x0,8
tick,0x7ffad1f6fb64,131349650,0,0x0,8
tick,0x7ffad1f6fb64,131365646,0,0x0,8
tick,0x7ffad1f6fb64,131381617,0,0x0,8
tick,0x7ffad1f6fb64,131397633,0,0x0,8
tick,0x7ffad1f6fb64,131413668,0,0x0,8
tick,0x7ffad1f6fb64,131428722,0,0x0,8
tick,0x7ffad1f6fb64,131443691,0,0x0,8
tick,0x7ffad1f6fb64,131459689,0,0x0,8
tick,0x7ffad1f6fb64,131475723,0,0x0,8
tick,0x7ffad1f6fb64,131491720,0,0x0,8
tick,0x7ffad1f6fb64,131506749,0,0x0,8
tick,0x7ffad1f6fb64,131522775,0,0x0,8
tick,0x7ffad1f6fb64,131537793,0,0x0,8
tick,0x7ffad1f6fb64,131553766,0,0x0,8
tick,0x7ffad1f6fb64,131569797,0,0x0,8
tick,0x7ffad1f6fb64,131585803,0,0x0,8
tick,0x7ffad1f6fb64,131601853,0,0x0,8
tick,0x7ffad1f6fb64,131616848,0,0x0,8
tick,0x7ffad1f6fb64,131632854,0,0x0,8
tick,0x7ffad1f6fb64,131648875,0,0x0,8
tick,0x7ffad1f6fb64,131664866,0,0x0,8
tick,0x7ffad1f6fb64,131680886,0,0x0,8
tick,0x7ffad1f6fb64,131695921,0,0x0,8
tick,0x7ffad1f6fb64,131710926,0,0x0,8
tick,0x7ffad1f6fb64,131725930,0,0x0,8
tick,0x7ffad1f6fb64,131741928,0,0x0,8
tick,0x7ffad1f6fb64,131757980,0,0x0,8
tick,0x7ffad1f6fb64,131773020,0,0x0,8
tick,0x7ffad1f6fb64,131788204,0,0x0,8
tick,0x7ffad1f6fb64,131803002,0,0x0,8
tick,0x7ffad1f6fb64,131819014,0,0x0,8
tick,0x7ffad1f6fb64,131835035,0,0x0,8
tick,0x7ffad1f6fb64,131850044,0,0x0,8
tick,0x7ffad1f6fb64,131865106,0,0x0,8
tick,0x7ffad1f6fb64,131880067,0,0x0,8
tick,0x7ffad1f6fb64,131896091,0,0x0,8
tick,0x7ffad1f6fb64,131912129,0,0x0,8
tick,0x7ffad1f6fb64,131927121,0,0x0,8
tick,0x7ffad1f6fb64,131942125,0,0x0,8
tick,0x7ffad1f6fb64,131958141,0,0x0,8
tick,0x7ffad1f6fb64,131974183,0,0x0,8
tick,0x7ffad1f6fb64,131990181,0,0x0,8
tick,0x7ffad1f6fb64,132006197,0,0x0,8
tick,0x7ffad1f6fb64,132021219,0,0x0,8
tick,0x7ffad1f6fb64,132037244,0,0x0,8
tick,0x7ffad1f6fb64,132053249,0,0x0,8
tick,0x7ffad1f6fb64,132069264,0,0x0,8
tick,0x7ffad1f6fb64,132084262,0,0x0,8
tick,0x7ffad1f6fb64,132100259,0,0x0,8
tick,0x7ffad1f6fb64,132116309,0,0x0,8
tick,0x7ffad1f6fb64,132131310,0,0x0,8
tick,0x7ffad1f6fb64,132147326,0,0x0,8
tick,0x7ffad1f6fb64,132163349,0,0x0,8
tick,0x7ffad1f6fb64,132178349,0,0x0,8
tick,0x7ffad1f6fb64,132194373,0,0x0,8
tick,0x7ffad1f6fb64,132209373,0,0x0,8
tick,0x7ffad1f6fb64,132225415,0,0x0,8
tick,0x7ffad1f6fb64,132240395,0,0x0,8
tick,0x7ffad1f6fb64,132256414,0,0x0,8
tick,0x7ffad1f6fb64,132272434,0,0x0,8
tick,0x7ffad1f6fb64,132287448,0,0x0,8
tick,0x7ffad1f6fb64,132303459,0,0x0,8
tick,0x7ffad1f6fb64,132319482,0,0x0,8
tick,0x7ffad1f6fb64,132335516,0,0x0,8
tick,0x7ffad1f6fb64,132351502,0,0x0,8
tick,0x7ffad1f6fb64,132367536,0,0x0,8
tick,0x7ffad1f6fb64,132383522,0,0x0,8
tick,0x7ffad1f6fb64,132399547,0,0x0,8
tick,0x7ffad1f6fb64,132415585,0,0x0,8
tick,0x7ffad1f6fb64,132431635,0,0x0,8
tick,0x7ffad1f6fb64,132447589,0,0x0,8
tick,0x7ffad1f6fb64,132462581,0,0x0,8
tick,0x7ffad1f6fb64,132478633,0,0x0,8
tick,0x7ffad1f6fb64,132494622,0,0x0,8
tick,0x7ffad1f6fb64,132509674,0,0x0,8
tick,0x7ffad1f6fb64,132525667,0,0x0,8
tick,0x7ffad1f6fb64,132540676,0,0x0,8
tick,0x7ffad1f6fb64,132556770,0,0x0,8
tick,0x7ffad1f6fb64,132572700,0,0x0,8
tick,0x7ffad1f6fb64,132587740,0,0x0,8
tick,0x7ffad1f6fb64,132602740,0,0x0,8
tick,0x7ffad1f6fb64,132618766,0,0x0,8
tick,0x7ffad1f6fb64,132634762,0,0x0,8
tick,0x7ffad1f6fb64,132649787,0,0x0,8
tick,0x7ffad1f6fb64,132664794,0,0x0,8
tick,0x7ffad1f6fb64,132679802,0,0x0,8
tick,0x7ffad1f6fb64,132694986,0,0x0,8
tick,0x7ffad1f6fb64,132709822,0,0x0,8
tick,0x7ffad1f6fb64,132724838,0,0x0,8
tick,0x7ffad1f6fb64,132740876,0,0x0,8
tick,0x7ffad1f6fb64,132756855,0,0x0,8
tick,0x7ffad1f6fb64,132771874,0,0x0,8
tick,0x7ffad1f6fb64,132786910,0,0x0,8
tick,0x7ffad1f6fb64,132801907,0,0x0,8
tick,0x7ffad1f6fb64,132816954,0,0x0,8
tick,0x7ffad1f6fb64,132832951,0,0x0,8
tick,0x7ffad1f6fb64,132848976,0,0x0,8
tick,0x7ffad1f6fb64,132863982,0,0x0,8
tick,0x7ffad1f6fb64,132878980,0,0x0,8
tick,0x7ffad1f6fb64,132895107,0,0x0,8
tick,0x7ffad1f6fb64,132910055,0,0x0,8
tick,0x7ffad1f6fb64,132925018,0,0x0,8
tick,0x7ffad1f6fb64,132941046,0,0x0,8
tick,0x7ffad1f6fb64,132957063,0,0x0,8
tick,0x7ffad1f6fb64,132972078,0,0x0,8
tick,0x7ffad1f6fb64,132988101,0,0x0,8
tick,0x7ffad1f6fb64,133004094,0,0x0,8
tick,0x7ffad1f6fb64,133019099,0,0x0,8
tick,0x7ffad1f6fb64,133035141,0,0x0,8
tick,0x7ffad1f6fb64,133050127,0,0x0,8
tick,0x7ffad1f6fb64,133066155,0,0x0,8
tick,0x7ffad1f6fb64,133082176,0,0x0,8
tick,0x7ffad1f6fb64,133097217,0,0x0,8
tick,0x7ffad1f6fb64,133113194,0,0x0,8
tick,0x7ffad1f6fb64,133128226,0,0x0,8
tick,0x7ffad1f6fb64,133143210,0,0x0,8
tick,0x7ffad1f6fb64,133159250,0,0x0,8
tick,0x7ffad1f6fb64,133175269,0,0x0,8
tick,0x7ffad1f6fb64,133191247,0,0x0,8
tick,0x7ffad1f6fb64,133206279,0,0x0,8
tick,0x7ffad1f6fb64,133221290,0,0x0,8
tick,0x7ffad1f6fb64,133237300,0,0x0,8
tick,0x7ffad1f6fb64,133253303,0,0x0,8
tick,0x7ffad1f6fb64,133268326,0,0x0,8
tick,0x7ffad1f6fb64,133283354,0,0x0,8
tick,0x7ffad1f6fb64,133299356,0,0x0,8
tick,0x7ffad1f6fb64,133315461,0,0x0,8
tick,0x7ffad1f6fb64,133330420,0,0x0,8
tick,0x7ffad1f6fb64,133346416,0,0x0,8
tick,0x7ffad1f6fb64,133362424,0,0x0,8
tick,0x7ffad1f6fb64,133377461,0,0x0,8
tick,0x7ffad1f6fb64,133392502,0,0x0,8
tick,0x7ffad1f6fb64,133407462,0,0x0,8
tick,0x7ffad1f6fb64,133422476,0,0x0,8
tick,0x7ffad1f6fb64,133437488,0,0x0,8
tick,0x7ffad1f6fb64,133453526,0,0x0,8
tick,0x7ffad1f6fb64,133468590,0,0x0,8
tick,0x7ffad1f6fb64,133484532,0,0x0,8
tick,0x7ffad1f6fb64,133499548,0,0x0,8
tick,0x7ffad1f6fb64,133515557,0,0x0,8
tick,0x7ffad1f6fb64,133531575,0,0x0,8
tick,0x7ffad1f6fb64,133546598,0,0x0,8
tick,0x7ffad1f6fb64,133562621,0,0x0,8
tick,0x7ffad1f6fb64,133578639,0,0x0,8
tick,0x7ffad1f6fb64,133594644,0,0x0,8
tick,0x7ffad1f6fb64,133610677,0,0x0,8
tick,0x7ffad1f6fb64,133625655,0,0x0,8
tick,0x7ffad1f6fb64,133640694,0,0x0,8
tick,0x7ffad1f6fb64,133656730,0,0x0,8
tick,0x7ffad1f6fb64,133672686,0,0x0,8
tick,0x7ffad1f6fb64,133688725,0,0x0,8
tick,0x7ffad1f6fb64,133704741,0,0x0,8
tick,0x7ffad1f6fb64,133719760,0,0x0,8
tick,0x7ffad1f6fb64,133735764,0,0x0,8
tick,0x7ffad1f6fb64,133751776,0,0x0,8
tick,0x7ffad1f6fb64,133766814,0,0x0,8
tick,0x7ffad1f6fb64,133781795,0,0x0,8
tick,0x7ffad1f6fb64,133797827,0,0x0,8
tick,0x7ffad1f6fb64,133813820,0,0x0,8
tick,0x7ffad1f6fb64,133828890,0,0x0,8
tick,0x7ffad1f6fb64,133844884,0,0x0,8
tick,0x7ffad1f6fb64,133860877,0,0x0,8
tick,0x7ffad1f6fb64,133876879,0,0x0,8
tick,0x7ffad1f6fb64,133891901,0,0x0,8
tick,0x7ffad1f6fb64,133907914,0,0x0,8
tick,0x7ffad1f6fb64,133922946,0,0x0,8
tick,0x7ffad1f6fb64,133938954,0,0x0,8
tick,0x7ffad1f6fb64,133954986,0,0x0,8
tick,0x7ffad1f6fb64,133969978,0,0x0,8
tick,0x7ffad1f6fb64,133986011,0,0x0,8
tick,0x7ffad1f6fb64,134000996,0,0x0,8
tick,0x7ffad1f6fb64,134017011,0,0x0,8
tick,0x7ffad1f6fb64,134033030,0,0x0,8
tick,0x7ffad1f6fb64,134049050,0,0x0,8
tick,0x7ffad1f6fb64,134065056,0,0x0,8
tick,0x7ffad1f6fb64,134080071,0,0x0,8
tick,0x7ffad1f6fb64,134095102,0,0x0,8
tick,0x7ffad1f6fb64,134110091,0,0x0,8
tick,0x7ffad1f6fb64,134125121,0,0x0,8
tick,0x7ffad1f6fb64,134140121,0,0x0,8
tick,0x7ffad1f6fb64,134156179,0,0x0,8
tick,0x7ffad1f6fb64,134171156,0,0x0,8
tick,0x7ffad1f6fb64,134186160,0,0x0,8
tick,0x7ffad1f6fb64,134202183,0,0x0,8
tick,0x7ffad1f6fb64,134218189,0,0x0,8
tick,0x7ffad1f6fb64,134233233,0,0x0,8
tick,0x7ffad1f6fb64,134249215,0,0x0,8
tick,0x7ffad1f6fb64,134265269,0,0x0,8
tick,0x7ffad1f6fb64,134280266,0,0x0,8
tick,0x7ffad1f6fb64,134295300,0,0x0,8
tick,0x7ffad1f6fb64,134311297,0,0x0,8
tick,0x7ffad1f6fb64,134327321,0,0x0,8
tick,0x7ffad1f6fb64,134342352,0,0x0,8
tick,0x7ffad1f6fb64,134358328,0,0x0,8
tick,0x7ffad1f6fb64,134374359,0,0x0,8
tick,0x7ffad1f6fb64,134390360,0,0x0,8
tick,0x7ffad1f6fb64,134405401,0,0x0,8
tick,0x7ffad1f6fb64,134420410,0,0x0,8
tick,0x7ffad1f6fb64,134435405,0,0x0,8
tick,0x7ffad1f6fb64,134451426,0,0x0,8
tick,0x7ffad1f6fb64,134466437,0,0x0,8
tick,0x7ffad1f6fb64,134481431,0,0x0,8
tick,0x7ffad1f6fb64,134497441,0,0x0,8
tick,0x7ffad1f6fb64,134513473,0,0x0,8
tick,0x7ffad1f6fb64,134529478,0,0x0,8
tick,0x7ffad1f6fb64,134545479,0,0x0,8
tick,0x7ffad1f6fb64,134560508,0,0x0,8
tick,0x7ffad1f6fb64,134575663,0,0x0,8
tick,0x7ffad1f6fb64,134591563,0,0x0,8
tick,0x7ffad1f6fb64,134607549,0,0x0,8
tick,0x7ffad1f6fb64,134622667,0,0x0,8
tick,0x7ffad1f6fb64,134637609,0,0x0,8
tick,0x7ffad1f6fb64,134653606,0,0x0,8
tick,0x7ffad1f6fb64,134669634,0,0x0,8
tick,0x7ffad1f6fb64,134685619,0,0x0,8
tick,0x7ffad1f6fb64,134700664,0,0x0,8
tick,0x7ffad1f6fb64,134716678,0,0x0,8
tick,0x7ffad1f6fb64,134732672,0,0x0,8
tick,0x7ffad1f6fb64,134747696,0,0x0,8
tick,0x7ffad1f6fb64,134763714,0,0x0,8
tick,0x7ffad1f6fb64,134779698,0,0x0,8
tick,0x7ffad1f6fb64,134794724,0,0x0,8
tick,0x7ffad1f6fb64,134809737,0,0x0,8
tick,0x7ffad1f6fb64,134825752,0,0x0,8
tick,0x7ffad1f6fb64,134840794,0,0x0,8
tick,0x7ffad1f6fb64,134855854,0,0x0,8
tick,0x7ffad1f6fb64,134871793,0,0x0,8
tick,0x7ffad1f6fb64,134886835,0,0x0,8
tick,0x7ffad1f6fb64,134902828,0,0x0,8
tick,0x7ffad1f6fb64,134917862,0,0x0,8
tick,0x7ffad1f6fb64,134933877,0,0x0,8
tick,0x7ffad1f6fb64,134948865,0,0x0,8
tick,0x7ffad1f6fb64,134963926,0,0x0,8
tick,0x7ffad1f6fb64,134978908,0,0x0,8
tick,0x7ffad1f6fb64,134994902,0,0x0,8
tick,0x7ffad1f6fb64,135009916,0,0x0,8
tick,0x7ffad1f6fb64,135025940,0,0x0,8
tick,0x7ffad1f6fb64,135041949,0,0x0,8
tick,0x7ffad1f6fb64,135056961,0,0x0,8
tick,0x7ffad1f6fb64,135071975,0,0x0,8
tick,0x7ffad1f6fb64,135086982,0,0x0,8
tick,0x7ffad1f6fb64,135103067,0,0x0,8
tick,0x7ffad1f6fb64,135119017,0,0x0,8
tick,0x7ffad1f6fb64,135135036,0,0x0,8
tick,0x7ffad1f6fb64,135150033,0,0x0,8
tick,0x7ffad1f6fb64,135165061,0,0x0,8
tick,0x7ffad1f6fb64,135180085,0,0x0,8
tick,0x7ffad1f6fb64,135196081,0,0x0,8
tick,0x7ffad1f6fb64,135211111,0,0x0,8
tick,0x7ffad1f6fb64,135226114,0,0x0,8
tick,0x7ffad1f6fb64,135241122,0,0x0,8
tick,0x7ffad1f6fb64,135256159,0,0x0,8
tick,0x7ffad1f6fb64,135271164,0,0x0,8
tick,0x7ffad1f6fb64,135287175,0,0x0,8
tick,0x7ffad1f6fb64,135303178,0,0x0,8
tick,0x7ffad1f6fb64,135318213,0,0x0,8
tick,0x7ffad1f6fb64,135334222,0,0x0,8
tick,0x7ffad1f6fb64,135350239,0,0x0,8
tick,0x7ffad1f6fb64,135366250,0,0x0,8
tick,0x7ffad1f6fb64,135381270,0,0x0,8
tick,0x7ffad1f6fb64,135397283,0,0x0,8
tick,0x7ffad1f6fb64,135412312,0,0x0,8
tick,0x7ffad1f6fb64,135427296,0,0x0,8
tick,0x7ffad1f6fb64,135443307,0,0x0,8
tick,0x7ffad1f6fb64,135459334,0,0x0,8
tick,0x7ffad1f6fb64,135475340,0,0x0,8
tick,0x7ffad1f6fb64,135491364,0,0x0,8
tick,0x7ffad1f6fb64,135507395,0,0x0,8
tick,0x7ffad1f6fb64,135522387,0,0x0,8
tick,0x7ffad1f6fb64,135537442,0,0x0,8
tick,0x7ffad1f6fb64,135553396,0,0x0,8
tick,0x7ffad1f6fb64,135568458,0,0x0,8
tick,0x7ffad1f6fb64,135583435,0,0x0,8
tick,0x7ffad1f6fb64,135599459,0,0x0,8
tick,0x7ffad1f6fb64,135614507,0,0x0,8
tick,0x7ffad1f6fb64,135630503,0,0x0,8
tick,0x7ffad1f6fb64,135646510,0,0x0,8
tick,0x7ffad1f6fb64,135662544,0,0x0,8
tick,0x7ffad1f6fb64,135677530,0,0x0,8
tick,0x7ffad1f6fb64,135692554,0,0x0,8
tick,0x7ffad1f6fb64,135708581,0,0x0,8
tick,0x7ffad1f6fb64,135724580,0,0x0,8
tick,0x7ffad1f6fb64,135740581,0,0x0,8
tick,0x7ffad1f6fb64,135755613,0,0x0,8
tick,0x7ffad1f6fb64,135770633,0,0x0,8
tick,0x7ffad1f6fb64,135786626,0,0x0,8
tick,0x7ffad1f6fb64,135801631,0,0x0,8
tick,0x7ffad1f6fb64,135817689,0,0x0,8
tick,0x7ffad1f6fb64,135833685,0,0x0,8
tick,0x7ffad1f6fb64,135849694,0,0x0,8
tick,0x7ffad1f6fb64,135865726,0,0x0,8
tick,0x7ffad1f6fb64,135881709,0,0x0,8
tick,0x7ffad1f6fb64,135896785,0,0x0,8
tick,0x7ffad1f6fb64,135911750,0,0x0,8
tick,0x7ffad1f6fb64,135926790,0,0x0,8
tick,0x7ffad1f6fb64,135942773,0,0x0,8
tick,0x7ffad1f6fb64,135958803,0,0x0,8
tick,0x7ffad1f6fb64,135974813,0,0x0,8
tick,0x7ffad1f6fb64,135990839,0,0x0,8
tick,0x7ffad1f6fb64,136006842,0,0x0,8
tick,0x7ffad1f6fb64,136022851,0,0x0,8
tick,0x7ffad1f6fb64,136038881,0,0x0,8
tick,0x7ffad1f6fb64,136054859,0,0x0,8
tick,0x7ffad1f6fb64,136070891,0,0x0,8
tick,0x7ffad1f6fb64,136086902,0,0x0,8
tick,0x7ffad1f6fb64,136102904,0,0x0,8
tick,0x7ffad1f6fb64,136117954,0,0x0,8
tick,0x7ffad1f6fb64,136133949,0,0x0,8
tick,0x7ffad1f6fb64,136149953,0,0x0,8
tick,0x7ffad1f6fb64,136165993,0,0x0,8
tick,0x7ffad1f6fb64,136181025,0,0x0,8
tick,0x7ffad1f6fb64,136196024,0,0x0,8
tick,0x7ffad1f6fb64,136212026,0,0x0,8
tick,0x7ffad1f6fb64,136227038,0,0x0,8
tick,0x7ffad1f6fb64,136242066,0,0x0,8
tick,0x7ffad1f6fb64,136258080,0,0x0,8
tick,0x7ffad1f6fb64,136274084,0,0x0,8
tick,0x7ffad1f6fb64,136290085,0,0x0,8
tick,0x7ffad1f6fb64,136306090,0,0x0,8
tick,0x7ffad1f6fb64,136321109,0,0x0,8
tick,0x7ffad1f6fb64,136337174,0,0x0,8
tick,0x7ffad1f6fb64,136353156,0,0x0,8
tick,0x7ffad1f6fb64,136368199,0,0x0,8
tick,0x7ffad1f6fb64,136384185,0,0x0,8
tick,0x7ffad1f6fb64,136400211,0,0x0,8
tick,0x7ffad1f6fb64,136415258,0,0x0,8
tick,0x7ffad1f6fb64,136431318,0,0x0,8
tick,0x7ffad1f6fb64,136447258,0,0x0,8
tick,0x7ffad1f6fb64,136463243,0,0x0,8
tick,0x7ffad1f6fb64,136478261,0,0x0,8
tick,0x7ffad1f6fb64,136494285,0,0x0,8
tick,0x7ffad1f6fb64,136509303,0,0x0,8
tick,0x7ffad1f6fb64,136525331,0,0x0,8
tick,0x7ffad1f6fb64,136540365,0,0x0,8
tick,0x7ffad1f6fb64,136556355,0,0x0,8
tick,0x7ffad1f6fb64,136572349,0,0x0,8
tick,0x7ffad1f6fb64,136588390,0,0x0,8
tick,0x7ffad1f6fb64,136604545,0,0x0,8
tick,0x7ffad1f6fb64,136619421,0,0x0,8
tick,0x7ffad1f6fb64,136635422,0,0x0,8
tick,0x7ffad1f6fb64,136651422,0,0x0,8
tick,0x7ffad1f6fb64,136667466,0,0x0,8
tick,0x7ffad1f6fb64,136682482,0,0x0,8
tick,0x7ffad1f6fb64,136698488,0,0x0,8
tick,0x7ffad1f6fb64,136714491,0,0x0,8
tick,0x7ffad1f6fb64,136730497,0,0x0,8
tick,0x7ffad1f6fb64,136745511,0,0x0,8
tick,0x7ffad1f6fb64,136760515,0,0x0,8
tick,0x7ffad1f6fb64,136775636,0,0x0,8
tick,0x7ffad1f6fb64,136791554,0,0x0,8
tick,0x7ffad1f6fb64,136807606,0,0x0,8
tick,0x7ffad1f6fb64,136823589,0,0x0,8
tick,0x7ffad1f6fb64,136838604,0,0x0,8
tick,0x7ffad1f6fb64,136854608,0,0x0,8
tick,0x7ffad1f6fb64,136870618,0,0x0,8
tick,0x7ffad1f6fb64,136886639,0,0x0,8
tick,0x7ffad1f6fb64,136901641,0,0x0,8
tick,0x7ffad1f6fb64,136916673,0,0x0,8
tick,0x7ffad1f6fb64,136932709,0,0x0,8
tick,0x7ffad1f6fb64,136948693,0,0x0,8
tick,0x7ffad1f6fb64,136963717,0,0x0,8
tick,0x7ffad1f6fb64,136979712,0,0x0,8
tick,0x7ffad1f6fb64,136994748,0,0x0,8
tick,0x7ffad1f6fb64,137010751,0,0x0,8
tick,0x7ffad1f6fb64,137026757,0,0x0,8
tick,0x7ffad1f6fb64,137041760,0,0x0,8
tick,0x7ffad1f6fb64,137056762,0,0x0,8
tick,0x7ffad1f6fb64,137072793,0,0x0,8
tick,0x7ffad1f6fb64,137087829,0,0x0,8
tick,0x7ffad1f6fb64,137102868,0,0x0,8
tick,0x7ffad1f6fb64,137118840,0,0x0,8
tick,0x7ffad1f6fb64,137134017,0,0x0,8
tick,0x7ffad1f6fb64,137149930,0,0x0,8
tick,0x7ffad1f6fb64,137165878,0,0x0,8
tick,0x7ffad1f6fb64,137180904,0,0x0,8
tick,0x7ffad1f6fb64,137195907,0,0x0,8
tick,0x7ffad1f6fb64,137210964,0,0x0,8
tick,0x7ffad1f6fb64,137226932,0,0x0,8
tick,0x7ffad1f6fb64,137242969,0,0x0,8
tick,0x7ffad1f6fb64,137258973,0,0x0,8
tick,0x7ffad1f6fb64,137273986,0,0x0,8
tick,0x7ffad1f6fb64,137288992,0,0x0,8
tick,0x7ffad1f6fb64,137304999,0,0x0,8
tick,0x7ffad1f6fb64,137321027,0,0x0,8
tick,0x7ffad1f6fb64,137337028,0,0x0,8
tick,0x7ffad1f6fb64,137352080,0,0x0,8
tick,0x7ffad1f6fb64,137367096,0,0x0,8
tick,0x7ffad1f6fb64,137382081,0,0x0,8
tick,0x7ffad1f6fb64,137398109,0,0x0,8
tick,0x7ffad1f6fb64,137414109,0,0x0,8
tick,0x7ffad1f6fb64,137429115,0,0x0,8
tick,0x7ffad1f6fb64,137444136,0,0x0,8
tick,0x7ffad1f6fb64,137460150,0,0x0,8
tick,0x7ffad1f6fb64,137475165,0,0x0,8
tick,0x7ffad1f6fb64,137491165,0,0x0,8
tick,0x7ffad1f6fb64,137506182,0,0x0,8
tick,0x7ffad1f6fb64,137521211,0,0x0,8
tick,0x7ffad1f6fb64,137537225,0,0x0,8
tick,0x7ffad1f6fb64,137553223,0,0x0,8
tick,0x7ffad1f6fb64,137569243,0,0x0,8
tick,0x7ffad1f6fb64,137585264,0,0x0,8
tick,0x7ffad1f6fb64,137600274,0,0x0,8
tick,0x7ffad1f6fb64,137616308,0,0x0,8
tick,0x7ffad1f6fb64,137631312,0,0x0,8
tick,0x7ffad1f6fb64,137646356,0,0x0,8
tick,0x7ffad1f6fb64,137662342,0,0x0,8
tick,0x7ffad1f6fb64,137677366,0,0x0,8
tick,0x7ffad1f6fb64,137693382,0,0x0,8
tick,0x7ffad1f6fb64,137709391,0,0x0,8
tick,0x7ffad1f6fb64,137724408,0,0x0,8
tick,0x7ffad1f6fb64,137740418,0,0x0,8
tick,0x7ffad1f6fb64,137756415,0,0x0,8
tick,0x7ffad1f6fb64,137772429,0,0x0,8
tick,0x7ffad1f6fb64,137788466,0,0x0,8
tick,0x7ffad1f6fb64,137803474,0,0x0,8
tick,0x7ffad1f6fb64,137819474,0,0x0,8
tick,0x7ffad1f6fb64,137835506,0,0x0,8
tick,0x7ffad1f6fb64,137850509,0,0x0,8
tick,0x7ffad1f6fb64,137866540,0,0x0,8
tick,0x7ffad1f6fb64,137882540,0,0x0,8
tick,0x7ffad1f6fb64,137898553,0,0x0,8
tick,0x7ffad1f6fb64,137913564,0,0x0,8
tick,0x7ffad1f6fb64,137928572,0,0x0,8
tick,0x7ffad1f6fb64,137943593,0,0x0,8
tick,0x7ffad1f6fb64,137958602,0,0x0,8
tick,0x7ffad1f6fb64,137974636,0,0x0,8
tick,0x7ffad1f6fb64,137990628,0,0x0,8
tick,0x7ffad1f6fb64,138006661,0,0x0,8
tick,0x7ffad1f6fb64,138022687,0,0x0,8
tick,0x7ffad1f6fb64,138037667,0,0x0,8
tick,0x7ffad1f6fb64,138053683,0,0x0,8
tick,0x7ffad1f6fb64,138069708,0,0x0,8
tick,0x7ffad1f6fb64,138085778,0,0x0,8
tick,0x7ffad1f6fb64,138101728,0,0x0,8
tick,0x7ffad1f6fb64,138116767,0,0x0,8
tick,0x7ffad1f6fb64,138132759,0,0x0,8
tick,0x7ffad1f6fb64,138148798,0,0x0,8
tick,0x7ffad1f6fb64,138164835,0,0x0,8
tick,0x7ffad1f6fb64,138179821,0,0x0,8
tick,0x7ffad1f6fb64,138194842,0,0x0,8
tick,0x7ffad1f6fb64,138210837,0,0x0,8
tick,0x7ffad1f6fb64,138226864,0,0x0,8
tick,0x7ffad1f6fb64,138241860,0,0x0,8
tick,0x7ffad1f6fb64,138257880,0,0x0,8
tick,0x7ffad1f6fb64,138273905,0,0x0,8
tick,0x7ffad1f6fb64,138288906,0,0x0,8
tick,0x7ffad1f6fb64,138304947,0,0x0,8
tick,0x7ffad1f6fb64,138320938,0,0x0,8
tick,0x7ffad1f6fb64,138335954,0,0x0,8
tick,0x7ffad1f6fb64,138352011,0,0x0,8
tick,0x7ffad1f6fb64,138367014,0,0x0,8
tick,0x7ffad1f6fb64,138381992,0,0x0,8
tick,0x7ffad1f6fb64,138398013,0,0x0,8
tick,0x7ffad1f6fb64,138413031,0,0x0,8
tick,0x7ffad1f6fb64,138429026,0,0x0,8
tick,0x7ffad1f6fb64,138445053,0,0x0,8
tick,0x7ffad1f6fb64,138461080,0,0x0,8
tick,0x7ffad1f6fb64,138477085,0,0x0,8
tick,0x7ffad1f6fb64,138493095,0,0x0,8
tick,0x7ffad1f6fb64,138509103,0,0x0,8
tick,0x7ffad1f6fb64,138525155,0,0x0,8
tick,0x7ffad1f6fb64,138540136,0,0x0,8
tick,0x7ffad1f6fb64,138556135,0,0x0,8
tick,0x7ffad1f6fb64,138572156,0,0x0,8
tick,0x7ffad1f6fb64,138587175,0,0x0,8
tick,0x7ffad1f6fb64,138603214,0,0x0,8
tick,0x7ffad1f6fb64,138619218,0,0x0,8
tick,0x7ffad1f6fb64,138635245,0,0x0,8
tick,0x7ffad1f6fb64,138650274,0,0x0,8
tick,0x7ffad1f6fb64,138665259,0,0x0,8
tick,0x7ffad1f6fb64,138680267,0,0x0,8
tick,0x7ffad1f6fb64,138696290,0,0x0,8
tick,0x7ffad1f6fb64,138712310,0,0x0,8
tick,0x7ffad1f6fb64,138727317,0,0x0,8
tick,0x7ffad1f6fb64,138743345,0,0x0,8
tick,0x7ffad1f6fb64,138759330,0,0x0,8
tick,0x7ffad1f6fb64,138775344,0,0x0,8
tick,0x7ffad1f6fb64,138791361,0,0x0,8
tick,0x7ffad1f6fb64,138807382,0,0x0,8
tick,0x7ffad1f6fb64,138822406,0,0x0,8
tick,0x7ffad1f6fb64,138837402,0,0x0,8
tick,0x7ffad1f6fb64,138853429,0,0x0,8
tick,0x7ffad1f6fb64,138869435,0,0x0,8
tick,0x7ffad1f6fb64,138884452,0,0x0,8
tick,0x7ffad1f6fb64,138899484,0,0x0,8
tick,0x7ffad1f6fb64,138914482,0,0x0,8
tick,0x7ffad1f6fb64,138929485,0,0x0,8
tick,0x7ffad1f6fb64,138945511,0,0x0,8
tick,0x7ffad1f6fb64,138961547,0,0x0,8
tick,0x7ffad1f6fb64,138976630,0,0x0,8
tick,0x7ffad1f6fb64,138991598,0,0x0,8
tick,0x7ffad1f6fb64,139006580,0,0x0,8
tick,0x7ffad1f6fb64,139021597,0,0x0,8
tick,0x7ffad1f6fb64,139037617,0,0x0,8
tick,0x7ffad1f6fb64,139053595,0,0x0,8
tick,0x7ffad1f6fb64,139069625,0,0x0,8
tick,0x7ffad1f6fb64,139085627,0,0x0,8
tick,0x7ffad1f6fb64,139100680,0,0x0,8
tick,0x7ffad1f6fb64,139116673,0,0x0,8
tick,0x7ffad1f6fb64,139132662,0,0x0,8
tick,0x7ffad1f6fb64,139147677,0,0x0,8
tick,0x7ffad1f6fb64,139163702,0,0x0,8
tick,0x7ffad1f6fb64,139179745,0,0x0,8
tick,0x7ffad1f6fb64,139194719,0,0x0,8
tick,0x7ffad1f6fb64,139210763,0,0x0,8
tick,0x7ffad1f6fb64,139226758,0,0x0,8
tick,0x7ffad1f6fb64,139241776,0,0x0,8
tick,0x7ffad1f6fb64,139257794,0,0x0,8
tick,0x7ffad1f6fb64,139273814,0,0x0,8
tick,0x7ffad1f6fb64,139288855,0,0x0,8
tick,0x7ffad1f6fb64,139304831,0,0x0,8
tick,0x7ffad1f6fb64,139320867,0,0x0,8
tick,0x7ffad1f6fb64,139336878,0,0x0,8
tick,0x7ffad1f6fb64,139351871,0,0x0,8
tick,0x7ffad1f6fb64,139366899,0,0x0,8
tick,0x7ffad1f6fb64,139381900,0,0x0,8
tick,0x7ffad1f6fb64,139396937,0,0x0,8
tick,0x7ffad1f6fb64,139412941,0,0x0,8
tick,0x7ffad1f6fb64,139428934,0,0x0,8
tick,0x7ffad1f6fb64,139444037,0,0x0,8
tick,0x7ffad1f6fb64,139459965,0,0x0,8
tick,0x7ffad1f6fb64,139475998,0,0x0,8
tick,0x7ffad1f6fb64,139490992,0,0x0,8
tick,0x7ffad1f6fb64,139506034,0,0x0,8
tick,0x7ffad1f6fb64,139521052,0,0x0,8
tick,0x7ffad1f6fb64,139537086,0,0x0,8
tick,0x7ffad1f6fb64,139553057,0,0x0,8
tick,0x7ffad1f6fb64,139568142,0,0x0,8
tick,0x7ffad1f6fb64,139583081,0,0x0,8
tick,0x7ffad1f6fb64,139598101,0,0x0,8
tick,0x7ffad1f6fb64,139614124,0,0x0,8
tick,0x7ffad1f6fb64,139630124,0,0x0,8
tick,0x7ffad1f6fb64,139645190,0,0x0,8
tick,0x7ffad1f6fb64,139661179,0,0x0,8
tick,0x7ffad1f6fb64,139676190,0,0x0,8
tick,0x7ffad1f6fb64,139692182,0,0x0,8
tick,0x7ffad1f6fb64,139708236,0,0x0,8
tick,0x7ffad1f6fb64,139723220,0,0x0,8
tick,0x7ffad1f6fb64,139739216,0,0x0,8
tick,0x7ffad1f6fb64,139754257,0,0x0,8
tick,0x7ffad1f6fb64,139770292,0,0x0,8
tick,0x7ffad1f6fb64,139785279,0,0x0,8
tick,0x7ffad1f6fb64,139801291,0,0x0,8
tick,0x7ffad1f6fb64,139816287,0,0x0,8
tick,0x7ffad1f6fb64,139832309,0,0x0,8
tick,0x7ffad1f6fb64,139848324,0,0x0,8
tick,0x7ffad1f6fb64,139864377,0,0x0,8
tick,0x7ffad1f6fb64,139879346,0,0x0,8
tick,0x7ffad1f6fb64,139895379,0,0x0,8
tick,0x7ffad1f6fb64,139910388,0,0x0,8
tick,0x7ffad1f6fb64,139925414,0,0x0,8
tick,0x7ffad1f6fb64,139940442,0,0x0,8
tick,0x7ffad1f6fb64,139956423,0,0x0,8
tick,0x7ffad1f6fb64,139972442,0,0x0,8
tick,0x7ffad1f6fb64,139988472,0,0x0,8
tick,0x7ffad1f6fb64,140004526,0,0x0,8
tick,0x7ffad1f6fb64,140019495,0,0x0,8
tick,0x7ffad1f6fb64,140035529,0,0x0,8
tick,0x7ffad1f6fb64,140051520,0,0x0,8
tick,0x7ffad1f6fb64,140066535,0,0x0,8
tick,0x7ffad1f6fb64,140082598,0,0x0,8
tick,0x7ffad1f6fb64,140097662,0,0x0,8
tick,0x7ffad1f6fb64,140113561,0,0x0,8
tick,0x7ffad1f6fb64,140128576,0,0x0,8
tick,0x7ffad1f6fb64,140144594,0,0x0,8
tick,0x7ffad1f6fb64,140160633,0,0x0,8
tick,0x7ffad1f6fb64,140175643,0,0x0,8
tick,0x7ffad1f6fb64,140191646,0,0x0,8
tick,0x7ffad1f6fb64,140207660,0,0x0,8
tick,0x7ffad1f6fb64,140223676,0,0x0,8
tick,0x7ffad1f6fb64,140239673,0,0x0,8
tick,0x7ffad1f6fb64,140255698,0,0x0,8
tick,0x7ffad1f6fb64,140271737,0,0x0,8
tick,0x7ffad1f6fb64,140287770,0,0x0,8
tick,0x7ffad1f6fb64,140302741,0,0x0,8
tick,0x7ffad1f6fb64,140317760,0,0x0,8
tick,0x7ffad1f6fb64,140333786,0,0x0,8
tick,0x7ffad1f6fb64,140348798,0,0x0,8
tick,0x7ffad1f6fb64,140364827,0,0x0,8
tick,0x7ffad1f6fb64,140380828,0,0x0,8
tick,0x7ffad1f6fb64,140395858,0,0x0,8
tick,0x7ffad1f6fb64,140410867,0,0x0,8
tick,0x7ffad1f6fb64,140426876,0,0x0,8
tick,0x7ffad1f6fb64,140442863,0,0x0,8
tick,0x7ffad1f6fb64,140457904,0,0x0,8
tick,0x7ffad1f6fb64,140473918,0,0x0,8
tick,0x7ffad1f6fb64,140489934,0,0x0,8
tick,0x7ffad1f6fb64,140504938,0,0x0,8
tick,0x7ffad1f6fb64,140520953,0,0x0,8
tick,0x7ffad1f6fb64,140536959,0,0x0,8
tick,0x7ffad1f6fb64,140552001,0,0x0,8
tick,0x7ffad1f6fb64,140567008,0,0x0,8
tick,0x7ffad1f6fb64,140582994,0,0x0,8
tick,0x7ffad1f6fb64,140598043,0,0x0,8
tick,0x7ffad1f6fb64,140613050,0,0x0,8
tick,0x7ffad1f6fb64,140628043,0,0x0,8
tick,0x7ffad1f6fb64,140644112,0,0x0,8
tick,0x7ffad1f6fb64,140659121,0,0x0,8
tick,0x7ffad1f6fb64,140675094,0,0x0,8
tick,0x7ffad1f6fb64,140690098,0,0x0,8
tick,0x7ffad1f6fb64,140706165,0,0x0,8
tick,0x7ffad1f6fb64,140721136,0,0x0,8
tick,0x7ffad1f6fb64,140737144,0,0x0,8
tick,0x7ffad1f6fb64,140753233,0,0x0,8
tick,0x7ffad1f6fb64,140768166,0,0x0,8
tick,0x7ffad1f6fb64,140784223,0,0x0,8
tick,0x7ffad1f6fb64,140799205,0,0x0,8
tick,0x7ffad1f6fb64,140815229,0,0x0,8
tick,0x7ffad1f6fb64,140831450,0,0x0,8
tick,0x7ffad1f6fb64,140846289,0,0x0,8
tick,0x7ffad1f6fb64,140861267,0,0x0,8
tick,0x7ffad1f6fb64,140876263,0,0x0,8
tick,0x7ffad1f6fb64,140891306,0,0x0,8
tick,0x7ffad1f6fb64,140907306,0,0x0,8
tick,0x7ffad1f6fb64,140922300,0,0x0,8
tick,0x7ffad1f6fb64,140937319,0,0x0,8
tick,0x7ffad1f6fb64,140953346,0,0x0,8
tick,0x7ffad1f6fb64,140969344,0,0x0,8
tick,0x7ffad1f6fb64,140985354,0,0x0,8
tick,0x7ffad1f6fb64,141000376,0,0x0,8
tick,0x7ffad1f6fb64,141015404,0,0x0,8
tick,0x7ffad1f6fb64,141031451,0,0x0,8
tick,0x7ffad1f6fb64,141047436,0,0x0,8
tick,0x7ffad1f6fb64,141062455,0,0x0,8
tick,0x7ffad1f6fb64,141077452,0,0x0,8
tick,0x7ffad1f6fb64,141093470,0,0x0,8
tick,0x7ffad1f6fb64,141108462,0,0x0,8
tick,0x7ffad1f6fb64,141124487,0,0x0,8
tick,0x7ffad1f6fb64,141140536,0,0x0,8
tick,0x7ffad1f6fb64,141155530,0,0x0,8
tick,0x7ffad1f6fb64,141170544,0,0x0,8
tick,0x7ffad1f6fb64,141186542,0,0x0,8
tick,0x7ffad1f6fb64,141202575,0,0x0,8
tick,0x7ffad1f6fb64,141217582,0,0x0,8
tick,0x7ffad1f6fb64,141233589,0,0x0,8
tick,0x7ffad1f6fb64,141249616,0,0x0,8
tick,0x7ffad1f6fb64,141264622,0,0x0,8
tick,0x7ffad1f6fb64,141280633,0,0x0,8
tick,0x7ffad1f6fb64,141296699,0,0x0,8
tick,0x7ffad1f6fb64,141312747,0,0x0,8
tick,0x7ffad1f6fb64,141327683,0,0x0,8
tick,0x7ffad1f6fb64,141343714,0,0x0,8
tick,0x7ffad1f6fb64,141359713,0,0x0,8
tick,0x7ffad1f6fb64,141374712,0,0x0,8
tick,0x7ffad1f6fb64,141389736,0,0x0,8
tick,0x7ffad1f6fb64,141404863,0,0x0,8
tick,0x7ffad1f6fb64,141420768,0,0x0,8
tick,0x7ffad1f6fb64,141436781,0,0x0,8
tick,0x7ffad1f6fb64,141452787,0,0x0,8
tick,0x7ffad1f6fb64,141467820,0,0x0,8
tick,0x7ffad1f6fb64,141482805,0,0x0,8
tick,0x7ffad1f6fb64,141497832,0,0x0,8
tick,0x7ffad1f6fb64,141512870,0,0x0,8
tick,0x7ffad1f6fb64,141528859,0,0x0,8
tick,0x7ffad1f6fb64,141544871,0,0x0,8
tick,0x7ffad1f6fb64,141559881,0,0x0,8
tick,0x7ffad1f6fb64,141575916,0,0x0,8
tick,0x7ffad1f6fb64,141591969,0,0x0,8
tick,0x7ffad1f6fb64,141607955,0,0x0,8
tick,0x7ffad1f6fb64,141623024,0,0x0,8
tick,0x7ffad1f6fb64,141637979,0,0x0,8
tick,0x7ffad1f6fb64,141653976,0,0x0,8
tick,0x7ffad1f6fb64,141668998,0,0x0,8
tick,0x7ffad1f6fb64,141684016,0,0x0,8
tick,0x7ffad1f6fb64,141699040,0,0x0,8
tick,0x7ffad1f6fb64,141715048,0,0x0,8
tick,0x7ffad1f6fb64,141731072,0,0x0,8
tick,0x7ffad1f6fb64,141746052,0,0x0,8
tick,0x7ffad1f6fb64,141762083,0,0x0,8
tick,0x7ffad1f6fb64,141778257,0,0x0,8
tick,0x7ffad1f6fb64,141793125,0,0x0,8
tick,0x7ffad1f6fb64,141809145,0,0x0,8
tick,0x7ffad1f6fb64,141825155,0,0x0,8
tick,0x7ffad1f6fb64,141840215,0,0x0,8
tick,0x7ffad1f6fb64,141855183,0,0x0,8
tick,0x7ffad1f6fb64,141871178,0,0x0,8
tick,0x7ffad1f6fb64,141887207,0,0x0,8
tick,0x7ffad1f6fb64,141902226,0,0x0,8
tick,0x7ffad1f6fb64,141917231,0,0x0,8
tick,0x7ffad1f6fb64,141933225,0,0x0,8
tick,0x7ffad1f6fb64,141948270,0,0x0,8
tick,0x7ffad1f6fb64,141964256,0,0x0,8
tick,0x7ffad1f6fb64,141980295,0,0x0,8
tick,0x7ffad1f6fb64,141996293,0,0x0,8
tick,0x7ffad1f6fb64,142012323,0,0x0,8
tick,0x7ffad1f6fb64,142027322,0,0x0,8
tick,0x7ffad1f6fb64,142043351,0,0x0,8
tick,0x7ffad1f6fb64,142058374,0,0x0,8
tick,0x7ffad1f6fb64,142074398,0,0x0,8
tick,0x7ffad1f6fb64,142090406,0,0x0,8
tick,0x7ffad1f6fb64,142106408,0,0x0,8
tick,0x7ffad1f6fb64,142121419,0,0x0,8
tick,0x7ffad1f6fb64,142137430,0,0x0,8
tick,0x7ffad1f6fb64,142153463,0,0x0,8
tick,0x7ffad1f6fb64,142169470,0,0x0,8
tick,0x7ffad1f6fb64,142184456,0,0x0,8
tick,0x7ffad1f6fb64,142199476,0,0x0,8
tick,0x7ffad1f6fb64,142215479,0,0x0,8
tick,0x7ffad1f6fb64,142231504,0,0x0,8
tick,0x7ffad1f6fb64,142247525,0,0x0,8
tick,0x7ffad1f6fb64,142262573,0,0x0,8
tick,0x7ffad1f6fb64,142277561,0,0x0,8
tick,0x7ffad1f6fb64,142292549,0,0x0,8
tick,0x7ffad1f6fb64,142307563,0,0x0,8
tick,0x7ffad1f6fb64,142323603,0,0x0,8
tick,0x7ffad1f6fb64,142339629,0,0x0,8
tick,0x7ffad1f6fb64,142354614,0,0x0,8
tick,0x7ffad1f6fb64,142370619,0,0x0,8
tick,0x7ffad1f6fb64,142386644,0,0x0,8
tick,0x7ffad1f6fb64,142402639,0,0x0,8
tick,0x7ffad1f6fb64,142417668,0,0x0,8
tick,0x7ffad1f6fb64,142433662,0,0x0,8
tick,0x7ffad1f6fb64,142448701,0,0x0,8
tick,0x7ffad1f6fb64,142463704,0,0x0,8
tick,0x7ffad1f6fb64,142478718,0,0x0,8
tick,0x7ffad1f6fb64,142493720,0,0x0,8
tick,0x7ffad1f6fb64,142509742,0,0x0,8
tick,0x7ffad1f6fb64,142525766,0,0x0,8
tick,0x7ffad1f6fb64,142540767,0,0x0,8
tick,0x7ffad1f6fb64,142556799,0,0x0,8
tick,0x7ffad1f6fb64,142572826,0,0x0,8
tick,0x7ffad1f6fb64,142588814,0,0x0,8
tick,0x7ffad1f6fb64,142604843,0,0x0,8
tick,0x7ffad1f6fb64,142619846,0,0x0,8
tick,0x7ffad1f6fb64,142634883,0,0x0,8
tick,0x7ffad1f6fb64,142649883,0,0x0,8
tick,0x7ffad1f6fb64,142664900,0,0x0,8
tick,0x7ffad1f6fb64,142680903,0,0x0,8
tick,0x7ffad1f6fb64,142695953,0,0x0,8
tick,0x7ffad1f6fb64,142711980,0,0x0,8
tick,0x7ffad1f6fb64,142727007,0,0x0,8
tick,0x7ffad1f6fb64,142742967,0,0x0,8
tick,0x7ffad1f6fb64,142759004,0,0x0,8
tick,0x7ffad1f6fb64,142775013,0,0x0,8
tick,0x7ffad1f6fb64,142790991,0,0x0,8
tick,0x7ffad1f6fb64,142806056,0,0x0,8
tick,0x7ffad1f6fb64,142821045,0,0x0,8
tick,0x7ffad1f6fb64,142837073,0,0x0,8
tick,0x7ffad1f6fb64,142852053,0,0x0,8
tick,0x7ffad1f6fb64,142867066,0,0x0,8
tick,0x7ffad1f6fb64,142882093,0,0x0,8
tick,0x7ffad1f6fb64,142898120,0,0x0,8
tick,0x7ffad1f6fb64,142914127,0,0x0,8
tick,0x7ffad1f6fb64,142930129,0,0x0,8
tick,0x7ffad1f6fb64,142946140,0,0x0,8
tick,0x7ffad1f6fb64,142962156,0,0x0,8
tick,0x7ffad1f6fb64,142977176,0,0x0,8
tick,0x7ffad1f6fb64,142993206,0,0x0,8
tick,0x7ffad1f6fb64,143009193,0,0x0,8
tick,0x7ffad1f6fb64,143024236,0,0x0,8
tick,0x7ffad1f6fb64,143039225,0,0x0,8
tick,0x7ffad1f6fb64,143055226,0,0x0,8
tick,0x7ffad1f6fb64,143070288,0,0x0,8
tick,0x7ffad1f6fb64,143086283,0,0x0,8
tick,0x7ffad1f6fb64,143101283,0,0x0,8
tick,0x7ffad1f6fb64,143117297,0,0x0,8
tick,0x7ffad1f6fb64,143133329,0,0x0,8
tick,0x7ffad1f6fb64,143148346,0,0x0,8
tick,0x7ffad1f6fb64,143163349,0,0x0,8
tick,0x7ffad1f6fb64,143178354,0,0x0,8
tick,0x7ffad1f6fb64,143194380,0,0x0,8
tick,0x7ffad1f6fb64,143210396,0,0x0,8
tick,0x7ffad1f6fb64,143225393,0,0x0,8
tick,0x7ffad1f6fb64,143240412,0,0x0,8
tick,0x7ffad1f6fb64,143256422,0,0x0,8
tick,0x7ffad1f6fb64,143272458,0,0x0,8
tick,0x7ffad1f6fb64,143288448,0,0x0,8
tick,0x7ffad1f6fb64,143304460,0,0x0,8
tick,0x7ffad1f6fb64,143320496,0,0x0,8
tick,0x7ffad1f6fb64,143335489,0,0x0,8
tick,0x7ffad1f6fb64,143350527,0,0x0,8
tick,0x7ffad1f6fb64,143366527,0,0x0,8
tick,0x7ffad1f6fb64,143381533,0,0x0,8
tick,0x7ffad1f6fb64,143396544,0,0x0,8
tick,0x7ffad1f6fb64,143412560,0,0x0,8
tick,0x7ffad1f6fb64,143427594,0,0x0,8
tick,0x7ffad1f6fb64,143442586,0,0x0,8
tick,0x7ffad1f6fb64,143458598,0,0x0,8
tick,0x7ffad1f6fb64,143474619,0,0x0,8
tick,0x7ffad1f6fb64,143490639,0,0x0,8
tick,0x7ffad1f6fb64,143506658,0,0x0,8
tick,0x7ffad1f6fb64,143521690,0,0x0,8
tick,0x7ffad1f6fb64,143537697,0,0x0,8
tick,0x7ffad1f6fb64,143553678,0,0x0,8
tick,0x7ffad1f6fb64,143568709,0,0x0,8
tick,0x7ffad1f6fb64,143584736,0,0x0,8
tick,0x7ffad1f6fb64,143599721,0,0x0,8
tick,0x7ffad1f6fb64,143615754,0,0x0,8
tick,0x7ffad1f6fb64,143630796,0,0x0,8
tick,0x7ffad1f6fb64,143645835,0,0x0,8
tick,0x7ffad1f6fb64,143660820,0,0x0,8
tick,0x7ffad1f6fb64,143675801,0,0x0,8
tick,0x7ffad1f6fb64,143690830,0,0x0,8
tick,0x7ffad1f6fb64,143706846,0,0x0,8
tick,0x7ffad1f6fb64,143722852,0,0x0,8
tick,0x7ffad1f6fb64,143737859,0,0x0,8
tick,0x7ffad1f6fb64,143752886,0,0x0,8
tick,0x7ffad1f6fb64,143767901,0,0x0,8
tick,0x7ffad1f6fb64,143782924,0,0x0,8
tick,0x7ffad1f6fb64,143797916,0,0x0,8
tick,0x7ffad1f6fb64,143813916,0,0x0,8
tick,0x7ffad1f6fb64,143829954,0,0x0,8
tick,0x7ffad1f6fb64,143845953,0,0x0,8
tick,0x7ffad1f6fb64,143862002,0,0x0,8
tick,0x7ffad1f6fb64,143877991,0,0x0,8
tick,0x7ffad1f6fb64,143893015,0,0x0,8
tick,0x7ffad1f6fb64,143909022,0,0x0,8
tick,0x7ffad1f6fb64,143925018,0,0x0,8
tick,0x7ffad1f6fb64,143940069,0,0x0,8
tick,0x7ffad1f6fb64,143956068,0,0x0,8
tick,0x7ffad1f6fb64,143972074,0,0x0,8
tick,0x7ffad1f6fb64,143988102,0,0x0,8
tick,0x7ffad1f6fb64,144003111,0,0x0,8
tick,0x7ffad1f6fb64,144018130,0,0x0,8
tick,0x7ffad1f6fb64,144033141,0,0x0,8
tick,0x7ffad1f6fb64,144048139,0,0x0,8
tick,0x7ffad1f6fb64,144063163,0,0x0,8
tick,0x7ffad1f6fb64,144078198,0,0x0,8
tick,0x7ffad1f6fb64,144094193,0,0x0,8
tick,0x7ffad1f6fb64,144110211,0,0x0,8
tick,0x7ffad1f6fb64,144126245,0,0x0,8
tick,0x7ffad1f6fb64,144141237,0,0x0,8
tick,0x7ffad1f6fb64,144157272,0,0x0,8
tick,0x7ffad1f6fb64,144173280,0,0x0,8
tick,0x7ffad1f6fb64,144189327,0,0x0,8
tick,0x7ffad1f6fb64,144204316,0,0x0,8
tick,0x7ffad1f6fb64,144220303,0,0x0,8
tick,0x7ffad1f6fb64,144236331,0,0x0,8
tick,0x7ffad1f6fb64,144252329,0,0x0,8
tick,0x7ffad1f6fb64,144267383,0,0x0,8
tick,0x7ffad1f6fb64,144282342,0,0x0,8
tick,0x7ffad1f6fb64,144298412,0,0x0,8
tick,0x7ffad1f6fb64,144314396,0,0x0,8
tick,0x7ffad1f6fb64,144330416,0,0x0,8
tick,0x7ffad1f6fb64,144346410,0,0x0,8
tick,0x7ffad1f6fb64,144362443,0,0x0,8
tick,0x7ffad1f6fb64,144377464,0,0x0,8
tick,0x7ffad1f6fb64,144393469,0,0x0,8
tick,0x7ffad1f6fb64,144408489,0,0x0,8
tick,0x7ffad1f6fb64,144424504,0,0x0,8
tick,0x7ffad1f6fb64,144439515,0,0x0,8
tick,0x7ffad1f6fb64,144455548,0,0x0,8
tick,0x7ffad1f6fb64,144470535,0,0x0,8
tick,0x7ffad1f6fb64,144486560,0,0x0,8
tick,0x7ffad1f6fb64,144502582,0,0x0,8
tick,0x7ffad1f6fb64,144517581,0,0x0,8
tick,0x7ffad1f6fb64,144533594,0,0x0,8
tick,0x7ffad1f6fb64,144549603,0,0x0,8
tick,0x7ffad1f6fb64,144565633,0,0x0,8
tick,0x7ffad1f6fb64,144580648,0,0x0,8
tick,0x7ffad1f6fb64,144595648,0,0x0,8
tick,0x7ffad1f6fb64,144610658,0,0x0,8
tick,0x7ffad1f6fb64,144625701,0,0x0,8
tick,0x7ffad1f6fb64,144640696,0,0x0,8
tick,0x7ffad1f6fb64,144656723,0,0x0,8
tick,0x7ffad1f6fb64,144671723,0,0x0,8
tick,0x7ffad1f6fb64,144686763,0,0x0,8
tick,0x7ffad1f6fb64,144702776,0,0x0,8
tick,0x7ffad1f6fb64,144717768,0,0x0,8
tick,0x7ffad1f6fb64,144733807,0,0x0,8
tick,0x7ffad1f6fb64,144749796,0,0x0,8
tick,0x7ffad1f6fb64,144766021,0,0x0,8
tick,0x7ffad1f6fb64,144780832,0,0x0,8
tick,0x7ffad1f6fb64,144795867,0,0x0,8
tick,0x7ffad1f6fb64,144811874,0,0x0,8
tick,0x7ffad1f6fb64,144826897,0,0x0,8
tick,0x7ffad1f6fb64,144842904,0,0x0,8
tick,0x7ffad1f6fb64,144858878,0,0x0,8
tick,0x7ffad1f6fb64,144874960,0,0x0,8
tick,0x7ffad1f6fb64,144889984,0,0x0,8
tick,0x7ffad1f6fb64,144905949,0,0x0,8
tick,0x7ffad1f6fb64,144921944,0,0x0,8
tick,0x7ffad1f6fb64,144936980,0,0x0,8
tick,0x7ffad1f6fb64,144953037,0,0x0,8
tick,0x7ffad1f6fb64,144968025,0,0x0,8
tick,0x7ffad1f6fb64,144984003,0,0x0,8
tick,0x7ffad1f6fb64,144999030,0,0x0,8
tick,0x7ffad1f6fb64,145015030,0,0x0,8
tick,0x7ffad1f6fb64,145031060,0,0x0,8
tick,0x7ffad1f6fb64,145047081,0,0x0,8
tick,0x7ffad1f6fb64,145062117,0,0x0,8
tick,0x7ffad1f6fb64,145077098,0,0x0,8
tick,0x7ffad1f6fb64,145093130,0,0x0,8
tick,0x7ffad1f6fb64,145108128,0,0x0,8
tick,0x7ffad1f6fb64,145123152,0,0x0,8
tick,0x7ffad1f6fb64,145138149,0,0x0,8
tick,0x7ffad1f6fb64,145154173,0,0x0,8
tick,0x7ffad1f6fb64,145169197,0,0x0,8
tick,0x7ffad1f6fb64,145185234,0,0x0,8
tick,0x7ffad1f6fb64,145201213,0,0x0,8
tick,0x7ffad1f6fb64,145217262,0,0x0,8
tick,0x7ffad1f6fb64,145232279,0,0x0,8
tick,0x7ffad1f6fb64,145248283,0,0x0,8
tick,0x7ffad1f6fb64,145264301,0,0x0,8
tick,0x7ffad1f6fb64,145280328,0,0x0,8
tick,0x7ffad1f6fb64,145295278,0,0x0,8
tick,0x7ffad1f6fb64,145311341,0,0x0,8
tick,0x7ffad1f6fb64,145326377,0,0x0,8
tick,0x7ffad1f6fb64,145342320,0,0x0,8
tick,0x7ffad1f6fb64,145358341,0,0x0,8
tick,0x7ffad1f6fb64,145374378,0,0x0,8
tick,0x7ffad1f6fb64,145390377,0,0x0,8
tick,0x7ffad1f6fb64,145405414,0,0x0,8
tick,0x7ffad1f6fb64,145420397,0,0x0,8
tick,0x7ffad1f6fb64,145436415,0,0x0,8
tick,0x7ffad1f6fb64,145452440,0,0x0,8
tick,0x7ffad1f6fb64,145467448,0,0x0,8
tick,0x7ffad1f6fb64,145482450,0,0x0,8
tick,0x7ffad1f6fb64,145498508,0,0x0,8
tick,0x7ffad1f6fb64,145514499,0,0x0,8
tick,0x7ffad1f6fb64,145529505,0,0x0,8
tick,0x7ffad1f6fb64,145545516,0,0x0,8
tick,0x7ffad1f6fb64,145561548,0,0x0,8
tick,0x7ffad1f6fb64,145576555,0,0x0,8
tick,0x7ffad1f6fb64,145591550,0,0x0,8
tick,0x7ffad1f6fb64,145606655,0,0x0,8
tick,0x7ffad1f6fb64,145621624,0,0x0,8
tick,0x7ffad1f6fb64,145637634,0,0x0,8
tick,0x7ffad1f6fb64,145652603,0,0x0,8
tick,0x7ffad1f6fb64,145667620,0,0x0,8
tick,0x7ffad1f6fb64,145683647,0,0x0,8
tick,0x7ffad1f6fb64,145699712,0,0x0,8
tick,0x7ffad1f6fb64,145715715,0,0x0,8
tick,0x7ffad1f6fb64,145730684,0,0x0,8
tick,0x7ffad1f6fb64,145746705,0,0x0,8
tick,0x7ffad1f6fb64,145762728,0,0x0,8
tick,0x7ffad1f6fb64,145777708,0,0x0,8
tick,0x7ffad1f6fb64,145793732,0,0x0,8
tick,0x7ffad1f6fb64,145809757,0,0x0,8
tick,0x7ffad1f6fb64,145825781,0,0x0,8
tick,0x7ffad1f6fb64,145840798,0,0x0,8
tick,0x7ffad1f6fb64,145856790,0,0x0,8
tick,0x7ffad1f6fb64,145873070,0,0x0,8
tick,0x7ffad1f6fb64,145888855,0,0x0,8
tick,0x7ffad1f6fb64,145903853,0,0x0,8
tick,0x7ffad1f6fb64,145918878,0,0x0,8
tick,0x7ffad1f6fb64,145934875,0,0x0,8
tick,0x7ffad1f6fb64,145949877,0,0x0,8
tick,0x7ffad1f6fb64,145965915,0,0x0,8
tick,0x7ffad1f6fb64,145981917,0,0x0,8
tick,0x7ffad1f6fb64,145997929,0,0x0,8
tick,0x7ffad1f6fb64,146012939,0,0x0,8
tick,0x7ffad1f6fb64,146028952,0,0x0,8
tick,0x7ffad1f6fb64,146043973,0,0x0,8
tick,0x7ffad1f6fb64,146059987,0,0x0,8
tick,0x7ffad1f6fb64,146075106,0,0x0,8
tick,0x7ffad1f6fb64,146091039,0,0x0,8
tick,0x7ffad1f6fb64,146106026,0,0x0,8
tick,0x7ffad1f6fb64,146121119,0,0x0,8
tick,0x7ffad1f6fb64,146137044,0,0x0,8
tick,0x7ffad1f6fb64,146152054,0,0x0,8
tick,0x7ffad1f6fb64,146167089,0,0x0,8
tick,0x7ffad1f6fb64,146182091,0,0x0,8
tick,0x7ffad1f6fb64,146198106,0,0x0,8
tick,0x7ffad1f6fb64,146214133,0,0x0,8
tick,0x7ffad1f6fb64,146230146,0,0x0,8
tick,0x7ffad1f6fb64,146245156,0,0x0,8
tick,0x7ffad1f6fb64,146261185,0,0x0,8
tick,0x7ffad1f6fb64,146276173,0,0x0,8
tick,0x7ffad1f6fb64,146291204,0,0x0,8
tick,0x7ffad1f6fb64,146306211,0,0x0,8
tick,0x7ffad1f6fb64,146321229,0,0x0,8
tick,0x7ffad1f6fb64,146336226,0,0x0,8
tick,0x7ffad1f6fb64,146352272,0,0x0,8
tick,0x7ffad1f6fb64,146367280,0,0x0,8
tick,0x7ffad1f6fb64,146382290,0,0x0,8
tick,0x7ffad1f6fb64,146398301,0,0x0,8
tick,0x7ffad1f6fb64,146414315,0,0x0,8
tick,0x7ffad1f6fb64,146430375,0,0x0,8
tick,0x7ffad1f6fb64,146446587,0,0x0,8
tick,0x7ffad1f6fb64,146461372,0,0x0,8
tick,0x7ffad1f6fb64,146477379,0,0x0,8
tick,0x7ffad1f6fb64,146493373,0,0x0,8
tick,0x7ffad1f6fb64,146509392,0,0x0,8
tick,0x7ffad1f6fb64,146524408,0,0x0,8
tick,0x7ffad1f6fb64,146540423,0,0x0,8
tick,0x7ffad1f6fb64,146556413,0,0x0,8
tick,0x7ffad1f6fb64,146572459,0,0x0,8
tick,0x7ffad1f6fb64,146588465,0,0x0,8
tick,0x7ffad1f6fb64,146604477,0,0x0,8
tick,0x7ffad1f6fb64,146619509,0,0x0,8
tick,0x7ffad1f6fb64,146635577,0,0x0,8
tick,0x7ffad1f6fb64,146650542,0,0x0,8
tick,0x7ffad1f6fb64,146665531,0,0x0,8
tick,0x7ffad1f6fb64,146681566,0,0x0,8
tick,0x7ffad1f6fb64,146696593,0,0x0,8
tick,0x7ffad1f6fb64,146711588,0,0x0,8
tick,0x7ffad1f6fb64,146726698,0,0x0,8
tick,0x7ffad1f6fb64,146741629,0,0x0,8
tick,0x7ffad1f6fb64,146757614,0,0x0,8
tick,0x7ffad1f6fb64,146773629,0,0x0,8
tick,0x7ffad1f6fb64,146788657,0,0x0,8
tick,0x7ffad1f6fb64,146804674,0,0x0,8
tick,0x7ffad1f6fb64,146820668,0,0x0,8
tick,0x7ffad1f6fb64,146835705,0,0x0,8
tick,0x7ffad1f6fb64,146851706,0,0x0,8
tick,0x7ffad1f6fb64,146866738,0,0x0,8
tick,0x7ffad1f6fb64,146881728,0,0x0,8
tick,0x7ffad1f6fb64,146897734,0,0x0,8
tick,0x7ffad1f6fb64,146913766,0,0x0,8
tick,0x7ffad1f6fb64,146929772,0,0x0,8
tick,0x7ffad1f6fb64,146944817,0,0x0,8
tick,0x7ffad1f6fb64,146959807,0,0x0,8
tick,0x7ffad1f6fb64,146975833,0,0x0,8
tick,0x7ffad1f6fb64,146990838,0,0x0,8
tick,0x7ffad1f6fb64,147005841,0,0x0,8
tick,0x7ffad1f6fb64,147020869,0,0x0,8
tick,0x7ffad1f6fb64,147036866,0,0x0,8
tick,0x7ffad1f6fb64,147052867,0,0x0,8
tick,0x7ffad1f6fb64,147067911,0,0x0,8
tick,0x7ffad1f6fb64,147083903,0,0x0,8
tick,0x7ffad1f6fb64,147098938,0,0x0,8
tick,0x7ffad1f6fb64,147114958,0,0x0,8
tick,0x7ffad1f6fb64,147130983,0,0x0,8
tick,0x7ffad1f6fb64,147145992,0,0x0,8
tick,0x7ffad1f6fb64,147160987,0,0x0,8
tick,0x7ffad1f6fb64,147177029,0,0x0,8
tick,0x7ffad1f6fb64,147193018,0,0x0,8
tick,0x7ffad1f6fb64,147208087,0,0x0,8
tick,0x7ffad1f6fb64,147224044,0,0x0,8
tick,0x7ffad1f6fb64,147240083,0,0x0,8
tick,0x7ffad1f6fb64,147256069,0,0x0,8
tick,0x7ffad1f6fb64,147271085,0,0x0,8
tick,0x7ffad1f6fb64,147287133,0,0x0,8
tick,0x7ffad1f6fb64,147303136,0,0x0,8
tick,0x7ffad1f6fb64,147318142,0,0x0,8
tick,0x7ffad1f6fb64,147334144,0,0x0,8
tick,0x7ffad1f6fb64,147350166,0,0x0,8
tick,0x7ffad1f6fb64,147365181,0,0x0,8
tick,0x7ffad1f6fb64,147380299,0,0x0,8
tick,0x7ffad1f6fb64,147395217,0,0x0,8
tick,0x7ffad1f6fb64,147410245,0,0x0,8
tick,0x7ffad1f6fb64,147426281,0,0x0,8
tick,0x7ffad1f6fb64,147441244,0,0x0,8
tick,0x7ffad1f6fb64,147456343,0,0x0,8
tick,0x7ffad1f6fb64,147472274,0,0x0,8
tick,0x7ffad1f6fb64,147488310,0,0x0,8
tick,0x7ffad1f6fb64,147503295,0,0x0,8
tick,0x7ffad1f6fb64,147519303,0,0x0,8
tick,0x7ffad1f6fb64,147535341,0,0x0,8
tick,0x7ffad1f6fb64,147550340,0,0x0,8
tick,0x7ffad1f6fb64,147566397,0,0x0,8
tick,0x7ffad1f6fb64,147581414,0,0x0,8
tick,0x7ffad1f6fb64,147597398,0,0x0,8
tick,0x7ffad1f6fb64,147612421,0,0x0,8
tick,0x7ffad1f6fb64,147627451,0,0x0,8
tick,0x7ffad1f6fb64,147643418,0,0x0,8
tick,0x7ffad1f6fb64,147658455,0,0x0,8
tick,0x7ffad1f6fb64,147674498,0,0x0,8
tick,0x7ffad1f6fb64,147690469,0,0x0,8
tick,0x7ffad1f6fb64,147706492,0,0x0,8
tick,0x7ffad1f6fb64,147721494,0,0x0,8
tick,0x7ffad1f6fb64,147737508,0,0x0,8
tick,0x7ffad1f6fb64,147752523,0,0x0,8
tick,0x7ffad1f6fb64,147767533,0,0x0,8
tick,0x7ffad1f6fb64,147783545,0,0x0,8
tick,0x7ffad1f6fb64,147799556,0,0x0,8
tick,0x7ffad1f6fb64,147815585,0,0x0,8
tick,0x7ffad1f6fb64,147830691,0,0x0,8
tick,0x7ffad1f6fb64,147846607,0,0x0,8
tick,0x7ffad1f6fb64,147862683,0,0x0,8
tick,0x7ffad1f6fb64,147877637,0,0x0,8
tick,0x7ffad1f6fb64,147893672,0,0x0,8
tick,0x7ffad1f6fb64,147909659,0,0x0,8
tick,0x7ffad1f6fb64,147925710,0,0x0,8
tick,0x7ffad1f6fb64,147940710,0,0x0,8
tick,0x7ffad1f6fb64,147956714,0,0x0,8
tick,0x7ffad1f6fb64,147971754,0,0x0,8
tick,0x7ffad1f6fb64,147987766,0,0x0,8
tick,0x7ffad1f6fb64,148002753,0,0x0,8
tick,0x7ffad1f6fb64,148017792,0,0x0,8
tick,0x7ffad1f6fb64,148033836,0,0x0,8
tick,0x7ffad1f6fb64,148049789,0,0x0,8
tick,0x7ffad1f6fb64,148065804,0,0x0,8
tick,0x7ffad1f6fb64,148081839,0,0x0,8
tick,0x7ffad1f6fb64,148096841,0,0x0,8
tick,0x7ffad1f6fb64,148112882,0,0x0,8
tick,0x7ffad1f6fb64,148128884,0,0x0,8
tick,0x7ffad1f6fb64,148144885,0,0x0,8
tick,0x7ffad1f6fb64,148159910,0,0x0,8
tick,0x7ffad1f6fb64,148174923,0,0x0,8
tick,0x7ffad1f6fb64,148189937,0,0x0,8
tick,0x7ffad1f6fb64,148204949,0,0x0,8
tick,0x7ffad1f6fb64,148220985,0,0x0,8
tick,0x7ffad1f6fb64,148235963,0,0x0,8
tick,0x7ffad1f6fb64,148251962,0,0x0,8
tick,0x7ffad1f6fb64,148267052,0,0x0,8
tick,0x7ffad1f6fb64,148283003,0,0x0,8
tick,0x7ffad1f6fb64,148298014,0,0x0,8
tick,0x7ffad1f6fb64,148314061,0,0x0,8
tick,0x7ffad1f6fb64,148330063,0,0x0,8
tick,0x7ffad1f6fb64,148346076,0,0x0,8
tick,0x7ffad1f6fb64,148362102,0,0x0,8
tick,0x7ffad1f6fb64,148377106,0,0x0,8
tick,0x7ffad1f6fb64,148393129,0,0x0,8
tick,0x7ffad1f6fb64,148408172,0,0x0,8
tick,0x7ffad1f6fb64,148424124,0,0x0,8
tick,0x7ffad1f6fb64,148440157,0,0x0,8
tick,0x7ffad1f6fb64,148456156,0,0x0,8
tick,0x7ffad1f6fb64,148471169,0,0x0,8
tick,0x7ffad1f6fb64,148487298,0,0x0,8
tick,0x7ffad1f6fb64,148503194,0,0x0,8
tick,0x7ffad1f6fb64,148519217,0,0x0,8
tick,0x7ffad1f6fb64,148534227,0,0x0,8
tick,0x7ffad1f6fb64,148549257,0,0x0,8
tick,0x7ffad1f6fb64,148565260,0,0x0,8
tick,0x7ffad1f6fb64,148580267,0,0x0,8
tick,0x7ffad1f6fb64,148595317,0,0x0,8
tick,0x7ffad1f6fb64,148610332,0,0x0,8
tick,0x7ffad1f6fb64,148626322,0,0x0,8
tick,0x7ffad1f6fb64,148641376,0,0x0,8
tick,0x7ffad1f6fb64,148656362,0,0x0,8
tick,0x7ffad1f6fb64,148672363,0,0x0,8
tick,0x7ffad1f6fb64,148688366,0,0x0,8
tick,0x7ffad1f6fb64,148704394,0,0x0,8
tick,0x7ffad1f6fb64,148719401,0,0x0,8
tick,0x7ffad1f6fb64,148735410,0,0x0,8
tick,0x7ffad1f6fb64,148750446,0,0x0,8
tick,0x7ffad1f6fb64,148766464,0,0x0,8
tick,0x7ffad1f6fb64,148781453,0,0x0,8
tick,0x7ffad1f6fb64,148797469,0,0x0,8
tick,0x7ffad1f6fb64,148812484,0,0x0,8
tick,0x7ffad1f6fb64,148827510,0,0x0,8
tick,0x7ffad1f6fb64,148843522,0,0x0,8
tick,0x7ffad1f6fb64,148858512,0,0x0,8
tick,0x7ffad1f6fb64,148874541,0,0x0,8
tick,0x7ffad1f6fb64,148890549,0,0x0,8
tick,0x7ffad1f6fb64,148905565,0,0x0,8
tick,0x7ffad1f6fb64,148921594,0,0x0,8
tick,0x7ffad1f6fb64,148937600,0,0x0,8
tick,0x7ffad1f6fb64,148952607,0,0x0,8
tick,0x7ffad1f6fb64,148968628,0,0x0,8
tick,0x7ffad1f6fb64,148984648,0,0x0,8
tick,0x7ffad1f6fb64,148999681,0,0x0,8
tick,0x7ffad1f6fb64,149015672,0,0x0,8
tick,0x7ffad1f6fb64,149031685,0,0x0,8
tick,0x7ffad1f6fb64,149046687,0,0x0,8
tick,0x7ffad1f6fb64,149062705,0,0x0,8
tick,0x7ffad1f6fb64,149078717,0,0x0,8
tick,0x7ffad1f6fb64,149093747,0,0x0,8
tick,0x7ffad1f6fb64,149108753,0,0x0,8
tick,0x7ffad1f6fb64,149124796,0,0x0,8
tick,0x7ffad1f6fb64,149139785,0,0x0,8
tick,0x7ffad1f6fb64,149155806,0,0x0,8
tick,0x7ffad1f6fb64,149171818,0,0x0,8
tick,0x7ffad1f6fb64,149186826,0,0x0,8
tick,0x7ffad1f6fb64,149202841,0,0x0,8
tick,0x7ffad1f6fb64,149217864,0,0x0,8
tick,0x7ffad1f6fb64,149232872,0,0x0,8
tick,0x7ffad1f6fb64,149248885,0,0x0,8
tick,0x7ffad1f6fb64,149264886,0,0x0,8
tick,0x7ffad1f6fb64,149279910,0,0x0,8
tick,0x7ffad1f6fb64,149295937,0,0x0,8
tick,0x7ffad1f6fb64,149310956,0,0x0,8
tick,0x7ffad1f6fb64,149326956,0,0x0,8
tick,0x7ffad1f6fb64,149342971,0,0x0,8
tick,0x7ffad1f6fb64,149358987,0,0x0,8
tick,0x7ffad1f6fb64,149374997,0,0x0,8
tick,0x7ffad1f6fb64,149391011,0,0x0,8
tick,0x7ffad1f6fb64,149406031,0,0x0,8
tick,0x7ffad1f6fb64,149421082,0,0x0,8
tick,0x7ffad1f6fb64,149437067,0,0x0,8
tick,0x7ffad1f6fb64,149453068,0,0x0,8
tick,0x7ffad1f6fb64,149469082,0,0x0,8
tick,0x7ffad1f6fb64,149485088,0,0x0,8
tick,0x7ffad1f6fb64,149501155,0,0x0,8
tick,0x7ffad1f6fb64,149517111,0,0x0,8
tick,0x7ffad1f6fb64,149532143,0,0x0,8
tick,0x7ffad1f6fb64,149548147,0,0x0,8
tick,0x7ffad1f6fb64,149564176,0,0x0,8
tick,0x7ffad1f6fb64,149580191,0,0x0,8
tick,0x7ffad1f6fb64,149595193,0,0x0,8
tick,0x7ffad1f6fb64,149610226,0,0x0,8
tick,0x7ffad1f6fb64,149625241,0,0x0,8
tick,0x7ffad1f6fb64,149640270,0,0x0,8
tick,0x7ffad1f6fb64,149655263,0,0x0,8
tick,0x7ffad1f6fb64,149670280,0,0x0,8
tick,0x7ffad1f6fb64,149685307,0,0x0,8
tick,0x7ffad1f6fb64,149701329,0,0x0,8
tick,0x7ffad1f6fb64,149717319,0,0x0,8
tick,0x7ffad1f6fb64,149733335,0,0x0,8
tick,0x7ffad1f6fb64,149748356,0,0x0,8
tick,0x7ffad1f6fb64,149764374,0,0x0,8
tick,0x7ffad1f6fb64,149779366,0,0x0,8
tick,0x7ffad1f6fb64,149794535,0,0x0,8
tick,0x7ffad1f6fb64,149809432,0,0x0,8
tick,0x7ffad1f6fb64,149824440,0,0x0,8
tick,0x7ffad1f6fb64,149840464,0,0x0,8
tick,0x7ffad1f6fb64,149855441,0,0x0,8
tick,0x7ffad1f6fb64,149871445,0,0x0,8
tick,0x7ffad1f6fb64,149886461,0,0x0,8
tick,0x7ffad1f6fb64,149902577,0,0x0,8
tick,0x7ffad1f6fb64,149917513,0,0x0,8
tick,0x7ffad1f6fb64,149932519,0,0x0,8
tick,0x7ffad1f6fb64,149947543,0,0x0,8
tick,0x7ffad1f6fb64,149963617,0,0x0,8
tick,0x7ffad1f6fb64,149978552,0,0x0,8
tick,0x7ffad1f6fb64,149993559,0,0x0,8
tick,0x7ffad1f6fb64,150008601,0,0x0,8
tick,0x7ffad1f6fb64,150024613,0,0x0,8
tick,0x7ffad1f6fb64,150039618,0,0x0,8
tick,0x7ffad1f6fb64,150054604,0,0x0,8
tick,0x7ffad1f6fb64,150069650,0,0x0,8
tick,0x7ffad1f6fb64,150085642,0,0x0,8
tick,0x7ffad1f6fb64,150101677,0,0x0,8
tick,0x7ffad1f6fb64,150116703,0,0x0,8
tick,0x7ffad1f6fb64,150132705,0,0x0,8
tick,0x7ffad1f6fb64,150148705,0,0x0,8
tick,0x7ffad1f6fb64,150164736,0,0x0,8
tick,0x7ffad1f6fb64,150180747,0,0x0,8
tick,0x7ffad1f6fb64,150195770,0,0x0,8
tick,0x7ffad1f6fb64,150211779,0,0x0,8
tick,0x7ffad1f6fb64,150227807,0,0x0,8
tick,0x7ffad1f6fb64,150243788,0,0x0,8
tick,0x7ffad1f6fb64,150259806,0,0x0,8
tick,0x7ffad1f6fb64,150275879,0,0x0,8
tick,0x7ffad1f6fb64,150290875,0,0x0,8
tick,0x7ffad1f6fb64,150305874,0,0x0,8
tick,0x7ffad1f6fb64,150321885,0,0x0,8
tick,0x7ffad1f6fb64,150337877,0,0x0,8
tick,0x7ffad1f6fb64,150353884,0,0x0,8
tick,0x7ffad1f6fb64,150369944,0,0x0,8
tick,0x7ffad1f6fb64,150385928,0,0x0,8
tick,0x7ffad1f6fb64,150401955,0,0x0,8
tick,0x7ffad1f6fb64,150417945,0,0x0,8
tick,0x7ffad1f6fb64,150433951,0,0x0,8
tick,0x7ffad1f6fb64,150449026,0,0x0,8
tick,0x7ffad1f6fb64,150464012,0,0x0,8
tick,0x7ffad1f6fb64,150480022,0,0x0,8
tick,0x7ffad1f6fb64,150495021,0,0x0,8
tick,0x7ffad1f6fb64,150511078,0,0x0,8
tick,0x7ffad1f6fb64,150527041,0,0x0,8
tick,0x7ffad1f6fb64,150543113,0,0x0,8
tick,0x7ffad1f6fb64,150558085,0,0x0,8
tick,0x7ffad1f6fb64,150574094,0,0x0,8
tick,0x7ffad1f6fb64,150590112,0,0x0,8
tick,0x7ffad1f6fb64,150606140,0,0x0,8
tick,0x7ffad1f6fb64,150621161,0,0x0,8
tick,0x7ffad1f6fb64,150637168,0,0x0,8
tick,0x7ffad1f6fb64,150653178,0,0x0,8
tick,0x7ffad1f6fb64,150668190,0,0x0,8
tick,0x7ffad1f6fb64,150684177,0,0x0,8
tick,0x7ffad1f6fb64,150699200,0,0x0,8
tick,0x7ffad1f6fb64,150715225,0,0x0,8
tick,0x7ffad1f6fb64,150731254,0,0x0,8
tick,0x7ffad1f6fb64,150747253,0,0x0,8
tick,0x7ffad1f6fb64,150763268,0,0x0,8
tick,0x7ffad1f6fb64,150778275,0,0x0,8
tick,0x7ffad1f6fb64,150794289,0,0x0,8
tick,0x7ffad1f6fb64,150809301,0,0x0,8
tick,0x7ffad1f6fb64,150825333,0,0x0,8
tick,0x7ffad1f6fb64,150840343,0,0x0,8
tick,0x7ffad1f6fb64,150856346,0,0x0,8
tick,0x7ffad1f6fb64,150872379,0,0x0,8
tick,0x7ffad1f6fb64,150888376,0,0x0,8
tick,0x7ffad1f6fb64,150903424,0,0x0,8
tick,0x7ffad1f6fb64,150919424,0,0x0,8
tick,0x7ffad1f6fb64,150935423,0,0x0,8
tick,0x7ffad1f6fb64,150951445,0,0x0,8
tick,0x7ffad1f6fb64,150967449,0,0x0,8
tick,0x7ffad1f6fb64,150982480,0,0x0,8
tick,0x7ffad1f6fb64,150998491,0,0x0,8
tick,0x7ffad1f6fb64,151014572,0,0x0,8
tick,0x7ffad1f6fb64,151030526,0,0x0,8
tick,0x7ffad1f6fb64,151046544,0,0x0,8
tick,0x7ffad1f6fb64,151061673,0,0x0,8
tick,0x7ffad1f6fb64,151076551,0,0x0,8
tick,0x7ffad1f6fb64,151091568,0,0x0,8
tick,0x7ffad1f6fb64,151107586,0,0x0,8
tick,0x7ffad1f6fb64,151123599,0,0x0,8
tick,0x7ffad1f6fb64,151139593,0,0x0,8
tick,0x7ffad1f6fb64,151155621,0,0x0,8
tick,0x7ffad1f6fb64,151171645,0,0x0,8
tick,0x7ffad1f6fb64,151187649,0,0x0,8
tick,0x7ffad1f6fb64,151202672,0,0x0,8
tick,0x7ffad1f6fb64,151217676,0,0x0,8
tick,0x7ffad1f6fb64,151233716,0,0x0,8
tick,0x7ffad1f6fb64,151248714,0,0x0,8
tick,0x7ffad1f6fb64,151264716,0,0x0,8
tick,0x7ffad1f6fb64,151280748,0,0x0,8
tick,0x7ffad1f6fb64,151295757,0,0x0,8
tick,0x7ffad1f6fb64,151311765,0,0x0,8
tick,0x7ffad1f6fb64,151327769,0,0x0,8
tick,0x7ffad1f6fb64,151342780,0,0x0,8
tick,0x7ffad1f6fb64,151358811,0,0x0,8
tick,0x7ffad1f6fb64,151374816,0,0x0,8
tick,0x7ffad1f6fb64,151389831,0,0x0,8
tick,0x7ffad1f6fb64,151405887,0,0x0,8
tick,0x7ffad1f6fb64,151421894,0,0x0,8
tick,0x7ffad1f6fb64,151437882,0,0x0,8
tick,0x7ffad1f6fb64,151452920,0,0x0,8
tick,0x7ffad1f6fb64,151468939,0,0x0,8
tick,0x7ffad1f6fb64,151483915,0,0x0,8
tick,0x7ffad1f6fb64,151498965,0,0x0,8
tick,0x7ffad1f6fb64,151513962,0,0x0,8
tick,0x7ffad1f6fb64,151530008,0,0x0,8
tick,0x7ffad1f6fb64,151544977,0,0x0,8
tick,0x7ffad1f6fb64,151560989,0,0x0,8
tick,0x7ffad1f6fb64,151577001,0,0x0,8
tick,0x7ffad1f6fb64,151593009,0,0x0,8
tick,0x7ffad1f6fb64,151609047,0,0x0,8
tick,0x7ffad1f6fb64,151624046,0,0x0,8
tick,0x7ffad1f6fb64,151640069,0,0x0,8
tick,0x7ffad1f6fb64,151655077,0,0x0,8
tick,0x7ffad1f6fb64,151670106,0,0x0,8
tick,0x7ffad1f6fb64,151686097,0,0x0,8
tick,0x7ffad1f6fb64,151702123,0,0x0,8
tick,0x7ffad1f6fb64,151717153,0,0x0,8
tick,0x7ffad1f6fb64,151732148,0,0x0,8
tick,0x7ffad1f6fb64,151748146,0,0x0,8
tick,0x7ffad1f6fb64,151764176,0,0x0,8
tick,0x7ffad1f6fb64,151780187,0,0x0,8
tick,0x7ffad1f6fb64,151795224,0,0x0,8
tick,0x7ffad1f6fb64,151810214,0,0x0,8
tick,0x7ffad1f6fb64,151825249,0,0x0,8
tick,0x7ffad1f6fb64,151840263,0,0x0,8
tick,0x7ffad1f6fb64,151856280,0,0x0,8
tick,0x7ffad1f6fb64,151872291,0,0x0,8
tick,0x7ffad1f6fb64,151887295,0,0x0,8
tick,0x7ffad1f6fb64,151903302,0,0x0,8
tick,0x7ffad1f6fb64,151918331,0,0x0,8
tick,0x7ffad1f6fb64,151934352,0,0x0,8
tick,0x7ffad1f6fb64,151949353,0,0x0,8
tick,0x7ffad1f6fb64,151965394,0,0x0,8
tick,0x7ffad1f6fb64,151980394,0,0x0,8
tick,0x7ffad1f6fb64,151995396,0,0x0,8
tick,0x7ffad1f6fb64,152011408,0,0x0,8
tick,0x7ffad1f6fb64,152027423,0,0x0,8
tick,0x7ffad1f6fb64,152042470,0,0x0,8
tick,0x7ffad1f6fb64,152057446,0,0x0,8
tick,0x7ffad1f6fb64,152073471,0,0x0,8
tick,0x7ffad1f6fb64,152089501,0,0x0,8
tick,0x7ffad1f6fb64,152105500,0,0x0,8
tick,0x7ffad1f6fb64,152121504,0,0x0,8
tick,0x7ffad1f6fb64,152136516,0,0x0,8
tick,0x7ffad1f6fb64,152151558,0,0x0,8
tick,0x7ffad1f6fb64,152166573,0,0x0,8
tick,0x7ffad1f6fb64,152181569,0,0x0,8
tick,0x7ffad1f6fb64,152197578,0,0x0,8
tick,0x7ffad1f6fb64,152213594,0,0x0,8
tick,0x7ffad1f6fb64,152229613,0,0x0,8
tick,0x7ffad1f6fb64,152244643,0,0x0,8
tick,0x7ffad1f6fb64,152260649,0,0x0,8
tick,0x7ffad1f6fb64,152275651,0,0x0,8
tick,0x7ffad1f6fb64,152290681,0,0x0,8
tick,0x7ffad1f6fb64,152306694,0,0x0,8
tick,0x7ffad1f6fb64,152321686,0,0x0,8
tick,0x7ffad1f6fb64,152337712,0,0x0,8
tick,0x7ffad1f6fb64,152352727,0,0x0,8
tick,0x7ffad1f6fb64,152367736,0,0x0,8
tick,0x7ffad1f6fb64,152383737,0,0x0,8
tick,0x7ffad1f6fb64,152398762,0,0x0,8
tick,0x7ffad1f6fb64,152413774,0,0x0,8
tick,0x7ffad1f6fb64,152429778,0,0x0,8
tick,0x7ffad1f6fb64,152445788,0,0x0,8
tick,0x7ffad1f6fb64,152460805,0,0x0,8
tick,0x7ffad1f6fb64,152475844,0,0x0,8
tick,0x7ffad1f6fb64,152491840,0,0x0,8
tick,0x7ffad1f6fb64,152507854,0,0x0,8
tick,0x7ffad1f6fb64,152523904,0,0x0,8
tick,0x7ffad1f6fb64,152539874,0,0x0,8
tick,0x7ffad1f6fb64,152555889,0,0x0,8
tick,0x7ffad1f6fb64,152571904,0,0x0,8
tick,0x7ffad1f6fb64,152586934,0,0x0,8
tick,0x7ffad1f6fb64,152601947,0,0x0,8
tick,0x7ffad1f6fb64,152616977,0,0x0,8
tick,0x7ffad1f6fb64,152631961,0,0x0,8
tick,0x7ffad1f6fb64,152647979,0,0x0,8
tick,0x7ffad1f6fb64,152663001,0,0x0,8
tick,0x7ffad1f6fb64,152679014,0,0x0,8
tick,0x7ffad1f6fb64,152695040,0,0x0,8
tick,0x7ffad1f6fb64,152710041,0,0x0,8
tick,0x7ffad1f6fb64,152725066,0,0x0,8
tick,0x7ffad1f6fb64,152740055,0,0x0,8
tick,0x7ffad1f6fb64,152756073,0,0x0,8
tick,0x7ffad1f6fb64,152771091,0,0x0,8
tick,0x7ffad1f6fb64,152787100,0,0x0,8
tick,0x7ffad1f6fb64,152802125,0,0x0,8
tick,0x7ffad1f6fb64,152818130,0,0x0,8
tick,0x7ffad1f6fb64,152833155,0,0x0,8
tick,0x7ffad1f6fb64,152849175,0,0x0,8
tick,0x7ffad1f6fb64,152865215,0,0x0,8
tick,0x7ffad1f6fb64,152880190,0,0x0,8
tick,0x7ffad1f6fb64,152895205,0,0x0,8
tick,0x7ffad1f6fb64,152910224,0,0x0,8
tick,0x7ffad1f6fb64,152925230,0,0x0,8
tick,0x7ffad1f6fb64,152940240,0,0x0,8
tick,0x7ffad1f6fb64,152955247,0,0x0,8
tick,0x7ffad1f6fb64,152970273,0,0x0,8
tick,0x7ffad1f6fb64,152986286,0,0x0,8
tick,0x7ffad1f6fb64,153002289,0,0x0,8
tick,0x7ffad1f6fb64,153017320,0,0x0,8
tick,0x7ffad1f6fb64,153032347,0,0x0,8
tick,0x7ffad1f6fb64,153048341,0,0x0,8
tick,0x7ffad1f6fb64,153063406,0,0x0,8
tick,0x7ffad1f6fb64,153078366,0,0x0,8
tick,0x7ffad1f6fb64,153094382,0,0x0,8
tick,0x7ffad1f6fb64,153110403,0,0x0,8
tick,0x7ffad1f6fb64,153125426,0,0x0,8
tick,0x7ffad1f6fb64,153140429,0,0x0,8
tick,0x7ffad1f6fb64,153156454,0,0x0,8
tick,0x7ffad1f6fb64,153171451,0,0x0,8
tick,0x7ffad1f6fb64,153187469,0,0x0,8
tick,0x7ffad1f6fb64,153203472,0,0x0,8
tick,0x7ffad1f6fb64,153219491,0,0x0,8
tick,0x7ffad1f6fb64,153235521,0,0x0,8
tick,0x7ffad1f6fb64,153251551,0,0x0,8
tick,0x7ffad1f6fb64,153267558,0,0x0,8
tick,0x7ffad1f6fb64,153283564,0,0x0,8
tick,0x7ffad1f6fb64,153299568,0,0x0,8
tick,0x7ffad1f6fb64,153315734,0,0x0,8
tick,0x7ffad1f6fb64,153331602,0,0x0,8
tick,0x7ffad1f6fb64,153347646,0,0x0,8
tick,0x7ffad1f6fb64,153363623,0,0x0,8
tick,0x7ffad1f6fb64,153379640,0,0x0,8
tick,0x7ffad1f6fb64,153395669,0,0x0,8
tick,0x7ffad1f6fb64,153411665,0,0x0,8
tick,0x7ffad1f6fb64,153427681,0,0x0,8
tick,0x7ffad1f6fb64,153442701,0,0x0,8
tick,0x7ffad1f6fb64,153458707,0,0x0,8
tick,0x7ffad1f6fb64,153474728,0,0x0,8
tick,0x7ffad1f6fb64,153490759,0,0x0,8
tick,0x7ffad1f6fb64,153506762,0,0x0,8
tick,0x7ffad1f6fb64,153522790,0,0x0,8
tick,0x7ffad1f6fb64,153537799,0,0x0,8
tick,0x7ffad1f6fb64,153553785,0,0x0,8
tick,0x7ffad1f6fb64,153569837,0,0x0,8
tick,0x7ffad1f6fb64,153585813,0,0x0,8
tick,0x7ffad1f6fb64,153600858,0,0x0,8
tick,0x7ffad1f6fb64,153616893,0,0x0,8
tick,0x7ffad1f6fb64,153632873,0,0x0,8
tick,0x7ffad1f6fb64,153647882,0,0x0,8
tick,0x7ffad1f6fb64,153663926,0,0x0,8
tick,0x7ffad1f6fb64,153678921,0,0x0,8
tick,0x7ffad1f6fb64,153693927,0,0x0,8
tick,0x7ffad1f6fb64,153709946,0,0x0,8
tick,0x7ffad1f6fb64,153725985,0,0x0,8
tick,0x7ffad1f6fb64,153740974,0,0x0,8
tick,0x7ffad1f6fb64,153757000,0,0x0,8
tick,0x7ffad1f6fb64,153773001,0,0x0,8
tick,0x7ffad1f6fb64,153789033,0,0x0,8
tick,0x7ffad1f6fb64,153805019,0,0x0,8
tick,0x7ffad1f6fb64,153820047,0,0x0,8
tick,0x7ffad1f6fb64,153836088,0,0x0,8
tick,0x7ffad1f6fb64,153852095,0,0x0,8
tick,0x7ffad1f6fb64,153868080,0,0x0,8
tick,0x7ffad1f6fb64,153884106,0,0x0,8
tick,0x7ffad1f6fb64,153900116,0,0x0,8
tick,0x7ffad1f6fb64,153916126,0,0x0,8
tick,0x7ffad1f6fb64,153932145,0,0x0,8
tick,0x7ffad1f6fb64,153948155,0,0x0,8
tick,0x7ffad1f6fb64,153964163,0,0x0,8
tick,0x7ffad1f6fb64,153980191,0,0x0,8
tick,0x7ffad1f6fb64,153995210,0,0x0,8
tick,0x7ffad1f6fb64,154011218,0,0x0,8
tick,0x7ffad1f6fb64,154027226,0,0x0,8
tick,0x7ffad1f6fb64,154043262,0,0x0,8
tick,0x7ffad1f6fb64,154058251,0,0x0,8
tick,0x7ffad1f6fb64,154074288,0,0x0,8
tick,0x7ffad1f6fb64,154090281,0,0x0,8
tick,0x7ffad1f6fb64,154106310,0,0x0,8
tick,0x7ffad1f6fb64,154121338,0,0x0,8
tick,0x7ffad1f6fb64,154136327,0,0x0,8
tick,0x7ffad1f6fb64,154152351,0,0x0,8
tick,0x7ffad1f6fb64,154167370,0,0x0,8
tick,0x7ffad1f6fb64,154182370,0,0x0,8
tick,0x7ffad1f6fb64,154198391,0,0x0,8
tick,0x7ffad1f6fb64,154214393,0,0x0,8
tick,0x7ffad1f6fb64,154230416,0,0x0,8
tick,0x7ffad1f6fb64,154246428,0,0x0,8
tick,0x7ffad1f6fb64,154261455,0,0x0,8
tick,0x7ffad1f6fb64,154277457,0,0x0,8
tick,0x7ffad1f6fb64,154293480,0,0x0,8
tick,0x7ffad1f6fb64,154308488,0,0x0,8
tick,0x7ffad1f6fb64,154324492,0,0x0,8
tick,0x7ffad1f6fb64,154340508,0,0x0,8
tick,0x7ffad1f6fb64,154356607,0,0x0,8
tick,0x7ffad1f6fb64,154371576,0,0x0,8
tick,0x7ffad1f6fb64,154387576,0,0x0,8
tick,0x7ffad1f6fb64,154403568,0,0x0,8
tick,0x7ffad1f6fb64,154419582,0,0x0,8
tick,0x7ffad1f6fb64,154435606,0,0x0,8
tick,0x7ffad1f6fb64,154451616,0,0x0,8
tick,0x7ffad1f6fb64,154466625,0,0x0,8
tick,0x7ffad1f6fb64,154481658,0,0x0,8
tick,0x7ffad1f6fb64,154497710,0,0x0,8
tick,0x7ffad1f6fb64,154513673,0,0x0,8
tick,0x7ffad1f6fb64,154529689,0,0x0,8
tick,0x7ffad1f6fb64,154544707,0,0x0,8
tick,0x7ffad1f6fb64,154559731,0,0x0,8
tick,0x7ffad1f6fb64,154575767,0,0x0,8
tick,0x7ffad1f6fb64,154590736,0,0x0,8
tick,0x7ffad1f6fb64,154605766,0,0x0,8
tick,0x7ffad1f6fb64,154621779,0,0x0,8
tick,0x7ffad1f6fb64,154636809,0,0x0,8
tick,0x7ffad1f6fb64,154652809,0,0x0,8
tick,0x7ffad1f6fb64,154667853,0,0x0,8
tick,0x7ffad1f6fb64,154682832,0,0x0,8
tick,0x7ffad1f6fb64,154697867,0,0x0,8
tick,0x7ffad1f6fb64,154713854,0,0x0,8
tick,0x7ffad1f6fb64,154729871,0,0x0,8
tick,0x7ffad1f6fb64,154745905,0,0x0,8
tick,0x7ffad1f6fb64,154760920,0,0x0,8
tick,0x7ffad1f6fb64,154775924,0,0x0,8
tick,0x7ffad1f6fb64,154791929,0,0x0,8
tick,0x7ffad1f6fb64,154806952,0,0x0,8
tick,0x7ffad1f6fb64,154822957,0,0x0,8
tick,0x7ffad1f6fb64,154838976,0,0x0,8
tick,0x7ffad1f6fb64,154854998,0,0x0,8
tick,0x7ffad1f6fb64,154870997,0,0x0,8
tick,0x7ffad1f6fb64,154887037,0,0x0,8
tick,0x7ffad1f6fb64,154902032,0,0x0,8
tick,0x7ffad1f6fb64,154917046,0,0x0,8
tick,0x7ffad1f6fb64,154933059,0,0x0,8
tick,0x7ffad1f6fb64,154949059,0,0x0,8
tick,0x7ffad1f6fb64,154964110,0,0x0,8
tick,0x7ffad1f6fb64,154979101,0,0x0,8
tick,0x7ffad1f6fb64,154994125,0,0x0,8
tick,0x7ffad1f6fb64,155010131,0,0x0,8
tick,0x7ffad1f6fb64,155025138,0,0x0,8
tick,0x7ffad1f6fb64,155040184,0,0x0,8
tick,0x7ffad1f6fb64,155056149,0,0x0,8
tick,0x7ffad1f6fb64,155072173,0,0x0,8
tick,0x7ffad1f6fb64,155088210,0,0x0,8
tick,0x7ffad1f6fb64,155103217,0,0x0,8
tick,0x7ffad1f6fb64,155119217,0,0x0,8
tick,0x7ffad1f6fb64,155135258,0,0x0,8
tick,0x7ffad1f6fb64,155150255,0,0x0,8
tick,0x7ffad1f6fb64,155166281,0,0x0,8
tick,0x7ffad1f6fb64,155182291,0,0x0,8
tick,0x7ffad1f6fb64,155197303,0,0x0,8
tick,0x7ffad1f6fb64,155213334,0,0x0,8
tick,0x7ffad1f6fb64,155229361,0,0x0,8
tick,0x7ffad1f6fb64,155245375,0,0x0,8
tick,0x7ffad1f6fb64,155260378,0,0x0,8
tick,0x7ffad1f6fb64,155276487,0,0x0,8
tick,0x7ffad1f6fb64,155292447,0,0x0,8
tick,0x7ffad1f6fb64,155308399,0,0x0,8
tick,0x7ffad1f6fb64,155324425,0,0x0,8
tick,0x7ffad1f6fb64,155339423,0,0x0,8
tick,0x7ffad1f6fb64,155355455,0,0x0,8
tick,0x7ffad1f6fb64,155370459,0,0x0,8
tick,0x7ffad1f6fb64,155385475,0,0x0,8
tick,0x7ffad1f6fb64,155401493,0,0x0,8
tick,0x7ffad1f6fb64,155416517,0,0x0,8
tick,0x7ffad1f6fb64,155432531,0,0x0,8
tick,0x7ffad1f6fb64,155447556,0,0x0,8
tick,0x7ffad1f6fb64,155463548,0,0x0,8
tick,0x7ffad1f6fb64,155479588,0,0x0,8
tick,0x7ffad1f6fb64,155494567,0,0x0,8
tick,0x7ffad1f6fb64,155510601,0,0x0,8
tick,0x7ffad1f6fb64,155525631,0,0x0,8
tick,0x7ffad1f6fb64,155540635,0,0x0,8
tick,0x7ffad1f6fb64,155555629,0,0x0,8
tick,0x7ffad1f6fb64,155570704,0,0x0,8
tick,0x7ffad1f6fb64,155586659,0,0x0,8
tick,0x7ffad1f6fb64,155602663,0,0x0,8
tick,0x7ffad1f6fb64,155617695,0,0x0,8
tick,0x7ffad1f6fb64,155632707,0,0x0,8
tick,0x7ffad1f6fb64,155648726,0,0x0,8
tick,0x7ffad1f6fb64,155664727,0,0x0,8
tick,0x7ffad1f6fb64,155679744,0,0x0,8
tick,0x7ffad1f6fb64,155694784,0,0x0,8
tick,0x7ffad1f6fb64,155709767,0,0x0,8
tick,0x7ffad1f6fb64,155725775,0,0x0,8
tick,0x7ffad1f6fb64,155740785,0,0x0,8
tick,0x7ffad1f6fb64,155756819,0,0x0,8
tick,0x7ffad1f6fb64,155772835,0,0x0,8
tick,0x7ffad1f6fb64,155787844,0,0x0,8
tick,0x7ffad1f6fb64,155802852,0,0x0,8
tick,0x7ffad1f6fb64,155817880,0,0x0,8
tick,0x7ffad1f6fb64,155833895,0,0x0,8
tick,0x7ffad1f6fb64,155850002,0,0x0,8
tick,0x7ffad1f6fb64,155865916,0,0x0,8
tick,0x7ffad1f6fb64,155881923,0,0x0,8
tick,0x7ffad1f6fb64,155897992,0,0x0,8
tick,0x7ffad1f6fb64,155912980,0,0x0,8
tick,0x7ffad1f6fb64,155928000,0,0x0,8
tick,0x7ffad1f6fb64,155943993,0,0x0,8
tick,0x7ffad1f6fb64,155959004,0,0x0,8
tick,0x7ffad1f6fb64,155974054,0,0x0,8
tick,0x7ffad1f6fb64,155990028,0,0x0,8
tick,0x7ffad1f6fb64,156005041,0,0x0,8
tick,0x7ffad1f6fb64,156020048,0,0x0,8
tick,0x7ffad1f6fb64,156036087,0,0x0,8
tick,0x7ffad1f6fb64,156052070,0,0x0,8
tick,0x7ffad1f6fb64,156068124,0,0x0,8
tick,0x7ffad1f6fb64,156084102,0,0x0,8
tick,0x7ffad1f6fb64,156100129,0,0x0,8
tick,0x7ffad1f6fb64,156115167,0,0x0,8
tick,0x7ffad1f6fb64,156131145,0,0x0,8
tick,0x7ffad1f6fb64,156147156,0,0x0,8
tick,0x7ffad1f6fb64,156162170,0,0x0,8
tick,0x7ffad1f6fb64,156177352,0,0x0,8
tick,0x7ffad1f6fb64,156193224,0,0x0,8
tick,0x7ffad1f6fb64,156208239,0,0x0,8
tick,0x7ffad1f6fb64,156223443,0,0x0,8
tick,0x7ffad1f6fb64,156239283,0,0x0,8
tick,0x7ffad1f6fb64,156255268,0,0x0,8
tick,0x7ffad1f6fb64,156271284,0,0x0,8
tick,0x7ffad1f6fb64,156287318,0,0x0,8
tick,0x7ffad1f6fb64,156302314,0,0x0,8
tick,0x7ffad1f6fb64,156317323,0,0x0,8
tick,0x7ffad1f6fb64,156332361,0,0x0,8
tick,0x7ffad1f6fb64,156348351,0,0x0,8
tick,0x7ffad1f6fb64,156364379,0,0x0,8
tick,0x7ffad1f6fb64,156380377,0,0x0,8
tick,0x7ffad1f6fb64,156395418,0,0x0,8
tick,0x7ffad1f6fb64,156410446,0,0x0,8
tick,0x7ffad1f6fb64,156425450,0,0x0,8
tick,0x7ffad1f6fb64,156440460,0,0x0,8
tick,0x7ffad1f6fb64,156455459,0,0x0,8
tick,0x7ffad1f6fb64,156471460,0,0x0,8
tick,0x7ffad1f6fb64,156487472,0,0x0,8
tick,0x7ffad1f6fb64,156502505,0,0x0,8
tick,0x7ffad1f6fb64,156517511,0,0x0,8
tick,0x7ffad1f6fb64,156533509,0,0x0,8
tick,0x7ffad1f6fb64,156549619,0,0x0,8
tick,0x7ffad1f6fb64,156565571,0,0x0,8
tick,0x7ffad1f6fb64,156581554,0,0x0,8
tick,0x7ffad1f6fb64,156596653,0,0x0,8
tick,0x7ffad1f6fb64,156611585,0,0x0,8
tick,0x7ffad1f6fb64,156626648,0,0x0,8
tick,0x7ffad1f6fb64,156642676,0,0x0,8
tick,0x7ffad1f6fb64,156658640,0,0x0,8
tick,0x7ffad1f6fb64,156673653,0,0x0,8
tick,0x7ffad1f6fb64,156689660,0,0x0,8
tick,0x7ffad1f6fb64,156705669,0,0x0,8
tick,0x7ffad1f6fb64,156721711,0,0x0,8
tick,0x7ffad1f6fb64,156737741,0,0x0,8
tick,0x7ffad1f6fb64,156752705,0,0x0,8
tick,0x7ffad1f6fb64,156768728,0,0x0,8
tick,0x7ffad1f6fb64,156784756,0,0x0,8
tick,0x7ffad1f6fb64,156799759,0,0x0,8
tick,0x7ffad1f6fb64,156815771,0,0x0,8
tick,0x7ffad1f6fb64,156830798,0,0x0,8
tick,0x7ffad1f6fb64,156846814,0,0x0,8
tick,0x7ffad1f6fb64,156861822,0,0x0,8
tick,0x7ffad1f6fb64,156877836,0,0x0,8
tick,0x7ffad1f6fb64,156893851,0,0x0,8
tick,0x7ffad1f6fb64,156909853,0,0x0,8
tick,0x7ffad1f6fb64,156925890,0,0x0,8
tick,0x7ffad1f6fb64,156940865,0,0x0,8
tick,0x7ffad1f6fb64,156955912,0,0x0,8
tick,0x7ffad1f6fb64,156970907,0,0x0,8
tick,0x7ffad1f6fb64,156986930,0,0x0,8
tick,0x7ffad1f6fb64,157001971,0,0x0,8
tick,0x7ffad1f6fb64,157016973,0,0x0,8
tick,0x7ffad1f6fb64,157032987,0,0x0,8
tick,0x7ffad1f6fb64,157047975,0,0x0,8
tick,0x7ffad1f6fb64,157064047,0,0x0,8
tick,0x7ffad1f6fb64,157079041,0,0x0,8
tick,0x7ffad1f6fb64,157095061,0,0x0,8
tick,0x7ffad1f6fb64,157110030,0,0x0,8
tick,0x7ffad1f6fb64,157126032,0,0x0,8
tick,0x7ffad1f6fb64,157142098,0,0x0,8
tick,0x7ffad1f6fb64,157157104,0,0x0,8
tick,0x7ffad1f6fb64,157173161,0,0x0,8
tick,0x7ffad1f6fb64,157188122,0,0x0,8
tick,0x7ffad1f6fb64,157204138,0,0x0,8
tick,0x7ffad1f6fb64,157219163,0,0x0,8
tick,0x7ffad1f6fb64,157235165,0,0x0,8
tick,0x7ffad1f6fb64,157250164,0,0x0,8
tick,0x7ffad1f6fb64,157266206,0,0x0,8
tick,0x7ffad1f6fb64,157281233,0,0x0,8
tick,0x7ffad1f6fb64,157297246,0,0x0,8
tick,0x7ffad1f6fb64,157312252,0,0x0,8
tick,0x7ffad1f6fb64,157327258,0,0x0,8
tick,0x7ffad1f6fb64,157342262,0,0x0,8
tick,0x7ffad1f6fb64,157357295,0,0x0,8
tick,0x7ffad1f6fb64,157373298,0,0x0,8
tick,0x7ffad1f6fb64,157389294,0,0x0,8
tick,0x7ffad1f6fb64,157404350,0,0x0,8
tick,0x7ffad1f6fb64,157419312,0,0x0,8
tick,0x7ffad1f6fb64,157435356,0,0x0,8
tick,0x7ffad1f6fb64,157450551,0,0x0,8
tick,0x7ffad1f6fb64,157466437,0,0x0,8
tick,0x7ffad1f6fb64,157481387,0,0x0,8
tick,0x7ffad1f6fb64,157497411,0,0x0,8
tick,0x7ffad1f6fb64,157512402,0,0x0,8
tick,0x7ffad1f6fb64,157527460,0,0x0,8
tick,0x7ffad1f6fb64,157542422,0,0x0,8
tick,0x7ffad1f6fb64,157558496,0,0x0,8
tick,0x7ffad1f6fb64,157573495,0,0x0,8
tick,0x7ffad1f6fb64,157588489,0,0x0,8
tick,0x7ffad1f6fb64,157604530,0,0x0,8
tick,0x7ffad1f6fb64,157619502,0,0x0,8
tick,0x7ffad1f6fb64,157635534,0,0x0,8
tick,0x7ffad1f6fb64,157650644,0,0x0,8
tick,0x7ffad1f6fb64,157665584,0,0x0,8
tick,0x7ffad1f6fb64,157680564,0,0x0,8
tick,0x7ffad1f6fb64,157695579,0,0x0,8
tick,0x7ffad1f6fb64,157710600,0,0x0,8
tick,0x7ffad1f6fb64,157725605,0,0x0,8
tick,0x7ffad1f6fb64,157740617,0,0x0,8
tick,0x7ffad1f6fb64,157756635,0,0x0,8
tick,0x7ffad1f6fb64,157771763,0,0x0,8
tick,0x7ffad1f6fb64,157787693,0,0x0,8
tick,0x7ffad1f6fb64,157802687,0,0x0,8
tick,0x7ffad1f6fb64,157817682,0,0x0,8
tick,0x7ffad1f6fb64,157833720,0,0x0,8
tick,0x7ffad1f6fb64,157848715,0,0x0,8
tick,0x7ffad1f6fb64,157864799,0,0x0,8
tick,0x7ffad1f6fb64,157879786,0,0x0,8
tick,0x7ffad1f6fb64,157895810,0,0x0,8
tick,0x7ffad1f6fb64,157910787,0,0x0,8
tick,0x7ffad1f6fb64,157926807,0,0x0,8
tick,0x7ffad1f6fb64,157942792,0,0x0,8
tick,0x7ffad1f6fb64,157958834,0,0x0,8
tick,0x7ffad1f6fb64,157974819,0,0x0,8
tick,0x7ffad1f6fb64,157989831,0,0x0,8
tick,0x7ffad1f6fb64,158005865,0,0x0,8
tick,0x7ffad1f6fb64,158020879,0,0x0,8
tick,0x7ffad1f6fb64,158036895,0,0x0,8
tick,0x7ffad1f6fb64,158052893,0,0x0,8
tick,0x7ffad1f6fb64,158068924,0,0x0,8
tick,0x7ffad1f6fb64,158083953,0,0x0,8
tick,0x7ffad1f6fb64,158098932,0,0x0,8
tick,0x7ffad1f6fb64,158114969,0,0x0,8
tick,0x7ffad1f6fb64,158130984,0,0x0,8
tick,0x7ffad1f6fb64,158147039,0,0x0,8
tick,0x7ffad1f6fb64,158162038,0,0x0,8
tick,0x7ffad1f6fb64,158177024,0,0x0,8
tick,0x7ffad1f6fb64,158193039,0,0x0,8
tick,0x7ffad1f6fb64,158209052,0,0x0,8
tick,0x7ffad1f6fb64,158225069,0,0x0,8
tick,0x7ffad1f6fb64,158240068,0,0x0,8
tick,0x7ffad1f6fb64,158255098,0,0x0,8
tick,0x7ffad1f6fb64,158271098,0,0x0,8
tick,0x7ffad1f6fb64,158287153,0,0x0,8
tick,0x7ffad1f6fb64,158302135,0,0x0,8
tick,0x7ffad1f6fb64,158317139,0,0x0,8
tick,0x7ffad1f6fb64,158333155,0,0x0,8
tick,0x7ffad1f6fb64,158349181,0,0x0,8
tick,0x7ffad1f6fb64,158365222,0,0x0,8
tick,0x7ffad1f6fb64,158380186,0,0x0,8
tick,0x7ffad1f6fb64,158395222,0,0x0,8
tick,0x7ffad1f6fb64,158410219,0,0x0,8
tick,0x7ffad1f6fb64,158426231,0,0x0,8
tick,0x7ffad1f6fb64,158441253,0,0x0,8
tick,0x7ffad1f6fb64,158457274,0,0x0,8
tick,0x7ffad1f6fb64,158473309,0,0x0,8
tick,0x7ffad1f6fb64,158488296,0,0x0,8
tick,0x7ffad1f6fb64,158504348,0,0x0,8
tick,0x7ffad1f6fb64,158520361,0,0x0,8
tick,0x7ffad1f6fb64,158535340,0,0x0,8
tick,0x7ffad1f6fb64,158550347,0,0x0,8
tick,0x7ffad1f6fb64,158566367,0,0x0,8
tick,0x7ffad1f6fb64,158581435,0,0x0,8
tick,0x7ffad1f6fb64,158597584,0,0x0,8
tick,0x7ffad1f6fb64,158613412,0,0x0,8
tick,0x7ffad1f6fb64,158628415,0,0x0,8
tick,0x7ffad1f6fb64,158644425,0,0x0,8
tick,0x7ffad1f6fb64,158660486,0,0x0,8
tick,0x7ffad1f6fb64,158675721,0,0x0,8
tick,0x7ffad1f6fb64,158691502,0,0x0,8
tick,0x7ffad1f6fb64,158706497,0,0x0,8
tick,0x7ffad1f6fb64,158722510,0,0x0,8
tick,0x7ffad1f6fb64,158737538,0,0x0,8
tick,0x7ffad1f6fb64,158752529,0,0x0,8
tick,0x7ffad1f6fb64,158768572,0,0x0,8
tick,0x7ffad1f6fb64,158783560,0,0x0,8
tick,0x7ffad1f6fb64,158799611,0,0x0,8
tick,0x7ffad1f6fb64,158815582,0,0x0,8
tick,0x7ffad1f6fb64,158831635,0,0x0,8
tick,0x7ffad1f6fb64,158846635,0,0x0,8
tick,0x7ffad1f6fb64,158861636,0,0x0,8
tick,0x7ffad1f6fb64,158877636,0,0x0,8
tick,0x7ffad1f6fb64,158893654,0,0x0,8
tick,0x7ffad1f6fb64,158909689,0,0x0,8
tick,0x7ffad1f6fb64,158924706,0,0x0,8
tick,0x7ffad1f6fb64,158939703,0,0x0,8
tick,0x7ffad1f6fb64,158955721,0,0x0,8
tick,0x7ffad1f6fb64,158971740,0,0x0,8
tick,0x7ffad1f6fb64,158987759,0,0x0,8
tick,0x7ffad1f6fb64,159002775,0,0x0,8
tick,0x7ffad1f6fb64,159018809,0,0x0,8
tick,0x7ffad1f6fb64,159033808,0,0x0,8
tick,0x7ffad1f6fb64,159049820,0,0x0,8
tick,0x7ffad1f6fb64,159064830,0,0x0,8
tick,0x7ffad1f6fb64,159079869,0,0x0,8
tick,0x7ffad1f6fb64,159094879,0,0x0,8
tick,0x7ffad1f6fb64,159109891,0,0x0,8
tick,0x7ffad1f6fb64,159124898,0,0x0,8
tick,0x7ffad1f6fb64,159139903,0,0x0,8
tick,0x7ffad1f6fb64,159154917,0,0x0,8
tick,0x7ffad1f6fb64,159171143,0,0x0,8
tick,0x7ffad1f6fb64,159185969,0,0x0,8
tick,0x7ffad1f6fb64,159201153,0,0x0,8
tick,0x7ffad1f6fb64,159216961,0,0x0,8
tick,0x7ffad1f6fb64,159233030,0,0x0,8
tick,0x7ffad1f6fb64,159247996,0,0x0,8
tick,0x7ffad1f6fb64,159264001,0,0x0,8
tick,0x7ffad1f6fb64,159279105,0,0x0,8
tick,0x7ffad1f6fb64,159295039,0,0x0,8
tick,0x7ffad1f6fb64,159310050,0,0x0,8
tick,0x7ffad1f6fb64,159325093,0,0x0,8
tick,0x7ffad1f6fb64,159340089,0,0x0,8
tick,0x7ffad1f6fb64,159356092,0,0x0,8
tick,0x7ffad1f6fb64,159372191,0,0x0,8
tick,0x7ffad1f6fb64,159388138,0,0x0,8
tick,0x7ffad1f6fb64,159403139,0,0x0,8
tick,0x7ffad1f6fb64,159419165,0,0x0,8
tick,0x7ffad1f6fb64,159434162,0,0x0,8
tick,0x7ffad1f6fb64,159450198,0,0x0,8
tick,0x7ffad1f6fb64,159465198,0,0x0,8
tick,0x7ffad1f6fb64,159480210,0,0x0,8
tick,0x7ffad1f6fb64,159495221,0,0x0,8
tick,0x7ffad1f6fb64,159511231,0,0x0,8
tick,0x7ffad1f6fb64,159526248,0,0x0,8
tick,0x7ffad1f6fb64,159542245,0,0x0,8
tick,0x7ffad1f6fb64,159558280,0,0x0,8
tick,0x7ffad1f6fb64,159574286,0,0x0,8
tick,0x7ffad1f6fb64,159590315,0,0x0,8
tick,0x7ffad1f6fb64,159605351,0,0x0,8
tick,0x7ffad1f6fb64,159620374,0,0x0,8
tick,0x7ffad1f6fb64,159636347,0,0x0,8
tick,0x7ffad1f6fb64,159651415,0,0x0,8
tick,0x7ffad1f6fb64,159666495,0,0x0,8
tick,0x7ffad1f6fb64,159681392,0,0x0,8
tick,0x7ffad1f6fb64,159697454,0,0x0,8
tick,0x7ffad1f6fb64,159713429,0,0x0,8
tick,0x7ffad1f6fb64,159729423,0,0x0,8
tick,0x7ffad1f6fb64,159744613,0,0x0,8
tick,0x7ffad1f6fb64,159759460,0,0x0,8
tick,0x7ffad1f6fb64,159774506,0,0x0,8
tick,0x7ffad1f6fb64,159790494,0,0x0,8
tick,0x7ffad1f6fb64,159806499,0,0x0,8
tick,0x7ffad1f6fb64,159822520,0,0x0,8
tick,0x7ffad1f6fb64,159837529,0,0x0,8
tick,0x7ffad1f6fb64,159853540,0,0x0,8
tick,0x7ffad1f6fb64,159869551,0,0x0,8
tick,0x7ffad1f6fb64,159885606,0,0x0,8
tick,0x7ffad1f6fb64,159900614,0,0x0,8
tick,0x7ffad1f6fb64,159916596,0,0x0,8
tick,0x7ffad1f6fb64,159932622,0,0x0,8
tick,0x7ffad1f6fb64,159948636,0,0x0,8
tick,0x7ffad1f6fb64,159963681,0,0x0,8
tick,0x7ffad1f6fb64,159978672,0,0x0,8
tick,0x7ffad1f6fb64,159994698,0,0x0,8
tick,0x7ffad1f6fb64,160009683,0,0x0,8
tick,0x7ffad1f6fb64,160024764,0,0x0,8
tick,0x7ffad1f6fb64,160039719,0,0x0,8
tick,0x7ffad1f6fb64,160054705,0,0x0,8
tick,0x7ffad1f6fb64,160070742,0,0x0,8
tick,0x7ffad1f6fb64,160085745,0,0x0,8
tick,0x7ffad1f6fb64,160100794,0,0x0,8
tick,0x7ffad1f6fb64,160115775,0,0x0,8
tick,0x7ffad1f6fb64,160131784,0,0x0,8
tick,0x7ffad1f6fb64,160146797,0,0x0,8
tick,0x7ffad1f6fb64,160161814,0,0x0,8
tick,0x7ffad1f6fb64,160176836,0,0x0,8
tick,0x7ffad1f6fb64,160191853,0,0x0,8
tick,0x7ffad1f6fb64,160206895,0,0x0,8
tick,0x7ffad1f6fb64,160222884,0,0x0,8
tick,0x7ffad1f6fb64,160237922,0,0x0,8
tick,0x7ffad1f6fb64,160253943,0,0x0,8
tick,0x7ffad1f6fb64,160268931,0,0x0,8
tick,0x7ffad1f6fb64,160283942,0,0x0,8
tick,0x7ffad1f6fb64,160298964,0,0x0,8
tick,0x7ffad1f6fb64,160314986,0,0x0,8
tick,0x7ffad1f6fb64,160330991,0,0x0,8
tick,0x7ffad1f6fb64,160345991,0,0x0,8
tick,0x7ffad1f6fb64,160361004,0,0x0,8
tick,0x7ffad1f6fb64,160376020,0,0x0,8
tick,0x7ffad1f6fb64,160391030,0,0x0,8
tick,0x7ffad1f6fb64,160406046,0,0x0,8
tick,0x7ffad1f6fb64,160421057,0,0x0,8
tick,0x7ffad1f6fb64,160436074,0,0x0,8
tick,0x7ffad1f6fb64,160452131,0,0x0,8
tick,0x7ffad1f6fb64,160467160,0,0x0,8
tick,0x7ffad1f6fb64,160482177,0,0x0,8
tick,0x7ffad1f6fb64,160497155,0,0x0,8
tick,0x7ffad1f6fb64,160513151,0,0x0,8
tick,0x7ffad1f6fb64,160529177,0,0x0,8
tick,0x7ffad1f6fb64,160545183,0,0x0,8
tick,0x7ffad1f6fb64,160561200,0,0x0,8
tick,0x7ffad1f6fb64,160577203,0,0x0,8
tick,0x7ffad1f6fb64,160592225,0,0x0,8
tick,0x7ffad1f6fb64,160608227,0,0x0,8
tick,0x7ffad1f6fb64,160624249,0,0x0,8
tick,0x7ffad1f6fb64,160640280,0,0x0,8
tick,0x7ffad1f6fb64,160655268,0,0x0,8
tick,0x7ffad1f6fb64,160671301,0,0x0,8
tick,0x7ffad1f6fb64,160687297,0,0x0,8
tick,0x7ffad1f6fb64,160703313,0,0x0,8
tick,0x7ffad1f6fb64,160718374,0,0x0,8
tick,0x7ffad1f6fb64,160734338,0,0x0,8
tick,0x7ffad1f6fb64,160750361,0,0x0,8
tick,0x7ffad1f6fb64,160766400,0,0x0,8
tick,0x7ffad1f6fb64,160781384,0,0x0,8
tick,0x7ffad1f6fb64,160797400,0,0x0,8
tick,0x7ffad1f6fb64,160813441,0,0x0,8
tick,0x7ffad1f6fb64,160828427,0,0x0,8
tick,0x7ffad1f6fb64,160844441,0,0x0,8
tick,0x7ffad1f6fb64,160859466,0,0x0,8
tick,0x7ffad1f6fb64,160875467,0,0x0,8
tick,0x7ffad1f6fb64,160891489,0,0x0,8
tick,0x7ffad1f6fb64,160907497,0,0x0,8
tick,0x7ffad1f6fb64,160922499,0,0x0,8
tick,0x7ffad1f6fb64,160937536,0,0x0,8
tick,0x7ffad1f6fb64,160953533,0,0x0,8
tick,0x7ffad1f6fb64,160969574,0,0x0,8
tick,0x7ffad1f6fb64,160985572,0,0x0,8
tick,0x7ffad1f6fb64,161001578,0,0x0,8
tick,0x7ffad1f6fb64,161016606,0,0x0,8
tick,0x7ffad1f6fb64,161032608,0,0x0,8
tick,0x7ffad1f6fb64,161048617,0,0x0,8
tick,0x7ffad1f6fb64,161063656,0,0x0,8
tick,0x7ffad1f6fb64,161079659,0,0x0,8
tick,0x7ffad1f6fb64,161094679,0,0x0,8
tick,0x7ffad1f6fb64,161109680,0,0x0,8
tick,0x7ffad1f6fb64,161124692,0,0x0,8
tick,0x7ffad1f6fb64,161140698,0,0x0,8
tick,0x7ffad1f6fb64,161155783,0,0x0,8
tick,0x7ffad1f6fb64,161171728,0,0x0,8
tick,0x7ffad1f6fb64,161186763,0,0x0,8
tick,0x7ffad1f6fb64,161202767,0,0x0,8
tick,0x7ffad1f6fb64,161218791,0,0x0,8
tick,0x7ffad1f6fb64,161233864,0,0x0,8
tick,0x7ffad1f6fb64,161249804,0,0x0,8
tick,0x7ffad1f6fb64,161264812,0,0x0,8
tick,0x7ffad1f6fb64,161280844,0,0x0,8
tick,0x7ffad1f6fb64,161295879,0,0x0,8
tick,0x7ffad1f6fb64,161310869,0,0x0,8
tick,0x7ffad1f6fb64,161326886,0,0x0,8
tick,0x7ffad1f6fb64,161341959,0,0x0,8
tick,0x7ffad1f6fb64,161357903,0,0x0,8
tick,0x7ffad1f6fb64,161372934,0,0x0,8
tick,0x7ffad1f6fb64,161387927,0,0x0,8
tick,0x7ffad1f6fb64,161402961,0,0x0,8
tick,0x7ffad1f6fb64,161418961,0,0x0,8
tick,0x7ffad1f6fb64,161434973,0,0x0,8
tick,0x7ffad1f6fb64,161451003,0,0x0,8
tick,0x7ffad1f6fb64,161467043,0,0x0,8
tick,0x7ffad1f6fb64,161482023,0,0x0,8
tick,0x7ffad1f6fb64,161497035,0,0x0,8
tick,0x7ffad1f6fb64,161512044,0,0x0,8
tick,0x7ffad1f6fb64,161528069,0,0x0,8
tick,0x7ffad1f6fb64,161544079,0,0x0,8
tick,0x7ffad1f6fb64,161559092,0,0x0,8
tick,0x7ffad1f6fb64,161575105,0,0x0,8
tick,0x7ffad1f6fb64,161590109,0,0x0,8
tick,0x7ffad1f6fb64,161606131,0,0x0,8
tick,0x7ffad1f6fb64,161621135,0,0x0,8
tick,0x7ffad1f6fb64,161637165,0,0x0,8
tick,0x7ffad1f6fb64,161652216,0,0x0,8
tick,0x7ffad1f6fb64,161667229,0,0x0,8
tick,0x7ffad1f6fb64,161682203,0,0x0,8
tick,0x7ffad1f6fb64,161698224,0,0x0,8
tick,0x7ffad1f6fb64,161714236,0,0x0,8
tick,0x7ffad1f6fb64,161730253,0,0x0,8
tick,0x7ffad1f6fb64,161746266,0,0x0,8
tick,0x7ffad1f6fb64,161761304,0,0x0,8
tick,0x7ffad1f6fb64,161777335,0,0x0,8
tick,0x7ffad1f6fb64,161792319,0,0x0,8
tick,0x7ffad1f6fb64,161807337,0,0x0,8
tick,0x7ffad1f6fb64,161822341,0,0x0,8
tick,0x7ffad1f6fb64,161837362,0,0x0,8
tick,0x7ffad1f6fb64,161853353,0,0x0,8
tick,0x7ffad1f6fb64,161869380,0,0x0,8
tick,0x7ffad1f6fb64,161885380,0,0x0,8
tick,0x7ffad1f6fb64,161901392,0,0x0,8
tick,0x7ffad1f6fb64,161917422,0,0x0,8
tick,0x7ffad1f6fb64,161932422,0,0x0,8
tick,0x7ffad1f6fb64,161948452,0,0x0,8
tick,0x7ffad1f6fb64,161964504,0,0x0,8
tick,0x7ffad1f6fb64,161979474,0,0x0,8
tick,0x7ffad1f6fb64,161995488,0,0x0,8
tick,0x7ffad1f6fb64,162011500,0,0x0,8
tick,0x7ffad1f6fb64,162026517,0,0x0,8
tick,0x7ffad1f6fb64,162041567,0,0x0,8
tick,0x7ffad1f6fb64,162057561,0,0x0,8
tick,0x7ffad1f6fb64,162072560,0,0x0,8
tick,0x7ffad1f6fb64,162088589,0,0x0,8
tick,0x7ffad1f6fb64,162103586,0,0x0,8
tick,0x7ffad1f6fb64,162119645,0,0x0,8
tick,0x7ffad1f6fb64,162135620,0,0x0,8
tick,0x7ffad1f6fb64,162151640,0,0x0,8
tick,0x7ffad1f6fb64,162166713,0,0x0,8
tick,0x7ffad1f6fb64,162181711,0,0x0,8
tick,0x7ffad1f6fb64,162197724,0,0x0,8
tick,0x7ffad1f6fb64,162213709,0,0x0,8
tick,0x7ffad1f6fb64,162229720,0,0x0,8
tick,0x7ffad1f6fb64,162244752,0,0x0,8
tick,0x7ffad1f6fb64,162260793,0,0x0,8
tick,0x7ffad1f6fb64,162275817,0,0x0,8
tick,0x7ffad1f6fb64,162291788,0,0x0,8
tick,0x7ffad1f6fb64,162307813,0,0x0,8
tick,0x7ffad1f6fb64,162322791,0,0x0,8
tick,0x7ffad1f6fb64,162338812,0,0x0,8
tick,0x7ffad1f6fb64,162354886,0,0x0,8
tick,0x7ffad1f6fb64,162370852,0,0x0,8
tick,0x7ffad1f6fb64,162386866,0,0x0,8
tick,0x7ffad1f6fb64,162401894,0,0x0,8
tick,0x7ffad1f6fb64,162417895,0,0x0,8
tick,0x7ffad1f6fb64,162433916,0,0x0,8
tick,0x7ffad1f6fb64,162448922,0,0x0,8
tick,0x7ffad1f6fb64,162464946,0,0x0,8
tick,0x7ffad1f6fb64,162479975,0,0x0,8
tick,0x7ffad1f6fb64,162494993,0,0x0,8
tick,0x7ffad1f6fb64,162510998,0,0x0,8
tick,0x7ffad1f6fb64,162527000,0,0x0,8
tick,0x7ffad1f6fb64,162542021,0,0x0,8
tick,0x7ffad1f6fb64,162558057,0,0x0,8
tick,0x7ffad1f6fb64,162574027,0,0x0,8
tick,0x7ffad1f6fb64,162589045,0,0x0,8
tick,0x7ffad1f6fb64,162605086,0,0x0,8
tick,0x7ffad1f6fb64,162620091,0,0x0,8
tick,0x7ffad1f6fb64,162635111,0,0x0,8
tick,0x7ffad1f6fb64,162650117,0,0x0,8
tick,0x7ffad1f6fb64,162665107,0,0x0,8
tick,0x7ffad1f6fb64,162680142,0,0x0,8
tick,0x7ffad1f6fb64,162695162,0,0x0,8
tick,0x7ffad1f6fb64,162711190,0,0x0,8
tick,0x7ffad1f6fb64,162727158,0,0x0,8
tick,0x7ffad1f6fb64,162743184,0,0x0,8
tick,0x7ffad1f6fb64,162758190,0,0x0,8
tick,0x7ffad1f6fb64,162774226,0,0x0,8
tick,0x7ffad1f6fb64,162790236,0,0x0,8
tick,0x7ffad1f6fb64,162806231,0,0x0,8
tick,0x7ffad1f6fb64,162821268,0,0x0,8
tick,0x7ffad1f6fb64,162836254,0,0x0,8
tick,0x7ffad1f6fb64,162852523,0,0x0,8
tick,0x7ffad1f6fb64,162868343,0,0x0,8
tick,0x7ffad1f6fb64,162883328,0,0x0,8
tick,0x7ffad1f6fb64,162898335,0,0x0,8
tick,0x7ffad1f6fb64,162913337,0,0x0,8
tick,0x7ffad1f6fb64,162928373,0,0x0,8
tick,0x7ffad1f6fb64,162943357,0,0x0,8
tick,0x7ffad1f6fb64,162959401,0,0x0,8
tick,0x7ffad1f6fb64,162974413,0,0x0,8
tick,0x7ffad1f6fb64,162990425,0,0x0,8
tick,0x7ffad1f6fb64,163006426,0,0x0,8
tick,0x7ffad1f6fb64,163021430,0,0x0,8
tick,0x7ffad1f6fb64,163037468,0,0x0,8
tick,0x7ffad1f6fb64,163053492,0,0x0,8
tick,0x7ffad1f6fb64,163068490,0,0x0,8
tick,0x7ffad1f6fb64,163084514,0,0x0,8
tick,0x7ffad1f6fb64,163099535,0,0x0,8
tick,0x7ffad1f6fb64,163115532,0,0x0,8
tick,0x7ffad1f6fb64,163131638,0,0x0,8
tick,0x7ffad1f6fb64,163147608,0,0x0,8
tick,0x7ffad1f6fb64,163163563,0,0x0,8
tick,0x7ffad1f6fb64,163179586,0,0x0,8
tick,0x7ffad1f6fb64,163195598,0,0x0,8
tick,0x7ffad1f6fb64,163210597,0,0x0,8
tick,0x7ffad1f6fb64,163225634,0,0x0,8
tick,0x7ffad1f6fb64,163240727,0,0x0,8
tick,0x7ffad1f6fb64,163256677,0,0x0,8
tick,0x7ffad1f6fb64,163272655,0,0x0,8
tick,0x7ffad1f6fb64,163287705,0,0x0,8
tick,0x7ffad1f6fb64,163302689,0,0x0,8
tick,0x7ffad1f6fb64,163317698,0,0x0,8
tick,0x7ffad1f6fb64,163332753,0,0x0,8
tick,0x7ffad1f6fb64,163349078,0,0x0,8
tick,0x7ffad1f6fb64,163364771,0,0x0,8
tick,0x7ffad1f6fb64,163379773,0,0x0,8
tick,0x7ffad1f6fb64,163394776,0,0x0,8
tick,0x7ffad1f6fb64,163410774,0,0x0,8
tick,0x7ffad1f6fb64,163426849,0,0x0,8
tick,0x7ffad1f6fb64,163442830,0,0x0,8
tick,0x7ffad1f6fb64,163457833,0,0x0,8
tick,0x7ffad1f6fb64,163473860,0,0x0,8
tick,0x7ffad1f6fb64,163489846,0,0x0,8
tick,0x7ffad1f6fb64,163505880,0,0x0,8
tick,0x7ffad1f6fb64,163520921,0,0x0,8
tick,0x7ffad1f6fb64,163536904,0,0x0,8
tick,0x7ffad1f6fb64,163551913,0,0x0,8
tick,0x7ffad1f6fb64,163566964,0,0x0,8
tick,0x7ffad1f6fb64,163581953,0,0x0,8
tick,0x7ffad1f6fb64,163596953,0,0x0,8
tick,0x7ffad1f6fb64,163613027,0,0x0,8
tick,0x7ffad1f6fb64,163629030,0,0x0,8
tick,0x7ffad1f6fb64,163644991,0,0x0,8
tick,0x7ffad1f6fb64,163660006,0,0x0,8
tick,0x7ffad1f6fb64,163676028,0,0x0,8
tick,0x7ffad1f6fb64,163691057,0,0x0,8
tick,0x7ffad1f6fb64,163706182,0,0x0,8
tick,0x7ffad1f6fb64,163721128,0,0x0,8
tick,0x7ffad1f6fb64,163737088,0,0x0,8
tick,0x7ffad1f6fb64,163752096,0,0x0,8
tick,0x7ffad1f6fb64,163768099,0,0x0,8
tick,0x7ffad1f6fb64,163783109,0,0x0,8
tick,0x7ffad1f6fb64,163798251,0,0x0,8
tick,0x7ffad1f6fb64,163813145,0,0x0,8
tick,0x7ffad1f6fb64,163828257,0,0x0,8
tick,0x7ffad1f6fb64,163843179,0,0x0,8
tick,0x7ffad1f6fb64,163858206,0,0x0,8
tick,0x7ffad1f6fb64,163874220,0,0x0,8
tick,0x7ffad1f6fb64,163890220,0,0x0,8
tick,0x7ffad1f6fb64,163905229,0,0x0,8
tick,0x7ffad1f6fb64,163920291,0,0x0,8
tick,0x7ffad1f6fb64,163935289,0,0x0,8
tick,0x7ffad1f6fb64,163950283,0,0x0,8
tick,0x7ffad1f6fb64,163965324,0,0x0,8
tick,0x7ffad1f6fb64,163980308,0,0x0,8
tick,0x7ffad1f6fb64,163995310,0,0x0,8
tick,0x7ffad1f6fb64,164011338,0,0x0,8
tick,0x7ffad1f6fb64,164027358,0,0x0,8
tick,0x7ffad1f6fb64,164043339,0,0x0,8
tick,0x7ffad1f6fb64,164059361,0,0x0,8
tick,0x7ffad1f6fb64,164074397,0,0x0,8
tick,0x7ffad1f6fb64,164090406,0,0x0,8
tick,0x7ffad1f6fb64,164106414,0,0x0,8
tick,0x7ffad1f6fb64,164121422,0,0x0,8
tick,0x7ffad1f6fb64,164137444,0,0x0,8
tick,0x7ffad1f6fb64,164153457,0,0x0,8
tick,0x7ffad1f6fb64,164168519,0,0x0,8
tick,0x7ffad1f6fb64,164184481,0,0x0,8
tick,0x7ffad1f6fb64,164199663,0,0x0,8
tick,0x7ffad1f6fb64,164214514,0,0x0,8
tick,0x7ffad1f6fb64,164230559,0,0x0,8
tick,0x7ffad1f6fb64,164245539,0,0x0,8
tick,0x7ffad1f6fb64,164261561,0,0x0,8
tick,0x7ffad1f6fb64,164277582,0,0x0,8
tick,0x7ffad1f6fb64,164293602,0,0x0,8
tick,0x7ffad1f6fb64,164309629,0,0x0,8
tick,0x7ffad1f6fb64,164324617,0,0x0,8
tick,0x7ffad1f6fb64,164339649,0,0x0,8
tick,0x7ffad1f6fb64,164355652,0,0x0,8
tick,0x7ffad1f6fb64,164370660,0,0x0,8
tick,0x7ffad1f6fb64,164385681,0,0x0,8
tick,0x7ffad1f6fb64,164401714,0,0x0,8
tick,0x7ffad1f6fb64,164416709,0,0x0,8
tick,0x7ffad1f6fb64,164432722,0,0x0,8
tick,0x7ffad1f6fb64,164448747,0,0x0,8
tick,0x7ffad1f6fb64,164463737,0,0x0,8
tick,0x7ffad1f6fb64,164478753,0,0x0,8
tick,0x7ffad1f6fb64,164493763,0,0x0,8
tick,0x7ffad1f6fb64,164509805,0,0x0,8
tick,0x7ffad1f6fb64,164524784,0,0x0,8
tick,0x7ffad1f6fb64,164539804,0,0x0,8
tick,0x7ffad1f6fb64,164554803,0,0x0,8
tick,0x7ffad1f6fb64,164569838,0,0x0,8
tick,0x7ffad1f6fb64,164584860,0,0x0,8
tick,0x7ffad1f6fb64,164599864,0,0x0,8
tick,0x7ffad1f6fb64,164615866,0,0x0,8
tick,0x7ffad1f6fb64,164630907,0,0x0,8
tick,0x7ffad1f6fb64,164646904,0,0x0,8
tick,0x7ffad1f6fb64,164662937,0,0x0,8
tick,0x7ffad1f6fb64,164678918,0,0x0,8
tick,0x7ffad1f6fb64,164693959,0,0x0,8
tick,0x7ffad1f6fb64,164710033,0,0x0,8
tick,0x7ffad1f6fb64,164725996,0,0x0,8
tick,0x7ffad1f6fb64,164741044,0,0x0,8
tick,0x7ffad1f6fb64,164757013,0,0x0,8
tick,0x7ffad1f6fb64,164773161,0,0x0,8
tick,0x7ffad1f6fb64,164789047,0,0x0,8
tick,0x7ffad1f6fb64,164805086,0,0x0,8
tick,0x7ffad1f6fb64,164820111,0,0x0,8
tick,0x7ffad1f6fb64,164835077,0,0x0,8
tick,0x7ffad1f6fb64,164850090,0,0x0,8
tick,0x7ffad1f6fb64,164866105,0,0x0,8
tick,0x7ffad1f6fb64,164881156,0,0x0,8
tick,0x7ffad1f6fb64,164896129,0,0x0,8
tick,0x7ffad1f6fb64,164911182,0,0x0,8
tick,0x7ffad1f6fb64,164926133,0,0x0,8
tick,0x7ffad1f6fb64,164941162,0,0x0,8
tick,0x7ffad1f6fb64,164957185,0,0x0,8
tick,0x7ffad1f6fb64,164972210,0,0x0,8
tick,0x7ffad1f6fb64,164988229,0,0x0,8
tick,0x7ffad1f6fb64,165004285,0,0x0,8
tick,0x7ffad1f6fb64,165019236,0,0x0,8
tick,0x7ffad1f6fb64,165035299,0,0x0,8
tick,0x7ffad1f6fb64,165050263,0,0x0,8
tick,0x7ffad1f6fb64,165066284,0,0x0,8
tick,0x7ffad1f6fb64,165081311,0,0x0,8
tick,0x7ffad1f6fb64,165097354,0,0x0,8
tick,0x7ffad1f6fb64,165113307,0,0x0,8
tick,0x7ffad1f6fb64,165129359,0,0x0,8
tick,0x7ffad1f6fb64,165145357,0,0x0,8
tick,0x7ffad1f6fb64,165161377,0,0x0,8
tick,0x7ffad1f6fb64,165177383,0,0x0,8
tick,0x7ffad1f6fb64,165192395,0,0x0,8
tick,0x7ffad1f6fb64,165208419,0,0x0,8
tick,0x7ffad1f6fb64,165224419,0,0x0,8
tick,0x7ffad1f6fb64,165239438,0,0x0,8
tick,0x7ffad1f6fb64,165254490,0,0x0,8
tick,0x7ffad1f6fb64,165270495,0,0x0,8
tick,0x7ffad1f6fb64,165286524,0,0x0,8
tick,0x7ffad1f6fb64,165301520,0,0x0,8
tick,0x7ffad1f6fb64,165317541,0,0x0,8
tick,0x7ffad1f6fb64,165332542,0,0x0,8
tick,0x7ffad1f6fb64,165347562,0,0x0,8
tick,0x7ffad1f6fb64,165363570,0,0x0,8
tick,0x7ffad1f6fb64,165378592,0,0x0,8
tick,0x7ffad1f6fb64,165393594,0,0x0,8
tick,0x7ffad1f6fb64,165409609,0,0x0,8
tick,0x7ffad1f6fb64,165425603,0,0x0,8
tick,0x7ffad1f6fb64,165440667,0,0x0,8
tick,0x7ffad1f6fb64,165456655,0,0x0,8
tick,0x7ffad1f6fb64,165472669,0,0x0,8
tick,0x7ffad1f6fb64,165488683,0,0x0,8
tick,0x7ffad1f6fb64,165504698,0,0x0,8
tick,0x7ffad1f6fb64,165520738,0,0x0,8
tick,0x7ffad1f6fb64,165535724,0,0x0,8
tick,0x7ffad1f6fb64,165551713,0,0x0,8
tick,0x7ffad1f6fb64,165566747,0,0x0,8
tick,0x7ffad1f6fb64,165581754,0,0x0,8
tick,0x7ffad1f6fb64,165597792,0,0x0,8
tick,0x7ffad1f6fb64,165613797,0,0x0,8
tick,0x7ffad1f6fb64,165628802,0,0x0,8
tick,0x7ffad1f6fb64,165644827,0,0x0,8
tick,0x7ffad1f6fb64,165660841,0,0x0,8
tick,0x7ffad1f6fb64,165676886,0,0x0,8
tick,0x7ffad1f6fb64,165692891,0,0x0,8
tick,0x7ffad1f6fb64,165707885,0,0x0,8
tick,0x7ffad1f6fb64,165723892,0,0x0,8
tick,0x7ffad1f6fb64,165738898,0,0x0,8
tick,0x7ffad1f6fb64,165754935,0,0x0,8
tick,0x7ffad1f6fb64,165769957,0,0x0,8
tick,0x7ffad1f6fb64,165785949,0,0x0,8
tick,0x7ffad1f6fb64,165800996,0,0x0,8
tick,0x7ffad1f6fb64,165816968,0,0x0,8
tick,0x7ffad1f6fb64,165833002,0,0x0,8
tick,0x7ffad1f6fb64,165849048,0,0x0,8
tick,0x7ffad1f6fb64,165865043,0,0x0,8
tick,0x7ffad1f6fb64,165881041,0,0x0,8
tick,0x7ffad1f6fb64,165896056,0,0x0,8
tick,0x7ffad1f6fb64,165911067,0,0x0,8
tick,0x7ffad1f6fb64,165927083,0,0x0,8
tick,0x7ffad1f6fb64,165942082,0,0x0,8
tick,0x7ffad1f6fb64,165957084,0,0x0,8
tick,0x7ffad1f6fb64,165973145,0,0x0,8
tick,0x7ffad1f6fb64,165989126,0,0x0,8
tick,0x7ffad1f6fb64,166004137,0,0x0,8
tick,0x7ffad1f6fb64,166019151,0,0x0,8
tick,0x7ffad1f6fb64,166034168,0,0x0,8
tick,0x7ffad1f6fb64,166050161,0,0x0,8
tick,0x7ffad1f6fb64,166066198,0,0x0,8
tick,0x7ffad1f6fb64,166082230,0,0x0,8
tick,0x7ffad1f6fb64,166098241,0,0x0,8
tick,0x7ffad1f6fb64,166114235,0,0x0,8
tick,0x7ffad1f6fb64,166130261,0,0x0,8
tick,0x7ffad1f6fb64,166145250,0,0x0,8
tick,0x7ffad1f6fb64,166160337,0,0x0,8
tick,0x7ffad1f6fb64,166176280,0,0x0,8
tick,0x7ffad1f6fb64,166192349,0,0x0,8
tick,0x7ffad1f6fb64,166207318,0,0x0,8
tick,0x7ffad1f6fb64,166222326,0,0x0,8
tick,0x7ffad1f6fb64,166237342,0,0x0,8
tick,0x7ffad1f6fb64,166253355,0,0x0,8
tick,0x7ffad1f6fb64,166268378,0,0x0,8
tick,0x7ffad1f6fb64,166284411,0,0x0,8
tick,0x7ffad1f6fb64,166299423,0,0x0,8
tick,0x7ffad1f6fb64,166315423,0,0x0,8
tick,0x7ffad1f6fb64,166331436,0,0x0,8
tick,0x7ffad1f6fb64,166347478,0,0x0,8
tick,0x7ffad1f6fb64,166362479,0,0x0,8
tick,0x7ffad1f6fb64,166377498,0,0x0,8
tick,0x7ffad1f6fb64,166393499,0,0x0,8
tick,0x7ffad1f6fb64,166409517,0,0x0,8
tick,0x7ffad1f6fb64,166425530,0,0x0,8
tick,0x7ffad1f6fb64,166440534,0,0x0,8
tick,0x7ffad1f6fb64,166456541,0,0x0,8
tick,0x7ffad1f6fb64,166472552,0,0x0,8
tick,0x7ffad1f6fb64,166487578,0,0x0,8
tick,0x7ffad1f6fb64,166503593,0,0x0,8
tick,0x7ffad1f6fb64,166519618,0,0x0,8
tick,0x7ffad1f6fb64,166534638,0,0x0,8
tick,0x7ffad1f6fb64,166550632,0,0x0,8
tick,0x7ffad1f6fb64,166565646,0,0x0,8
tick,0x7ffad1f6fb64,166580647,0,0x0,8
tick,0x7ffad1f6fb64,166596690,0,0x0,8
tick,0x7ffad1f6fb64,166611705,0,0x0,8
tick,0x7ffad1f6fb64,166626717,0,0x0,8
tick,0x7ffad1f6fb64,166641719,0,0x0,8
tick,0x7ffad1f6fb64,166656760,0,0x0,8
tick,0x7ffad1f6fb64,166672764,0,0x0,8
tick,0x7ffad1f6fb64,166688784,0,0x0,8
tick,0x7ffad1f6fb64,166704772,0,0x0,8
tick,0x7ffad1f6fb64,166720806,0,0x0,8
tick,0x7ffad1f6fb64,166736817,0,0x0,8
tick,0x7ffad1f6fb64,166751811,0,0x0,8
tick,0x7ffad1f6fb64,166766833,0,0x0,8
tick,0x7ffad1f6fb64,166781858,0,0x0,8
tick,0x7ffad1f6fb64,166797900,0,0x0,8
tick,0x7ffad1f6fb64,166813866,0,0x0,8
tick,0x7ffad1f6fb64,166829882,0,0x0,8
tick,0x7ffad1f6fb64,166845928,0,0x0,8
tick,0x7ffad1f6fb64,166861913,0,0x0,8
tick,0x7ffad1f6fb64,166877968,0,0x0,8
tick,0x7ffad1f6fb64,166892946,0,0x0,8
tick,0x7ffad1f6fb64,166907973,0,0x0,8
tick,0x7ffad1f6fb64,166923970,0,0x0,8
tick,0x7ffad1f6fb64,166939997,0,0x0,8
tick,0x7ffad1f6fb64,166956070,0,0x0,8
tick,0x7ffad1f6fb64,166971041,0,0x0,8
tick,0x7ffad1f6fb64,166987042,0,0x0,8
tick,0x7ffad1f6fb64,167002046,0,0x0,8
tick,0x7ffad1f6fb64,167017050,0,0x0,8
tick,0x7ffad1f6fb64,167032069,0,0x0,8
tick,0x7ffad1f6fb64,167048075,0,0x0,8
tick,0x7ffad1f6fb64,167063102,0,0x0,8
tick,0x7ffad1f6fb64,167078112,0,0x0,8
tick,0x7ffad1f6fb64,167094148,0,0x0,8
tick,0x7ffad1f6fb64,167109148,0,0x0,8
tick,0x7ffad1f6fb64,167125164,0,0x0,8
tick,0x7ffad1f6fb64,167140164,0,0x0,8
tick,0x7ffad1f6fb64,167155191,0,0x0,8
tick,0x7ffad1f6fb64,167170210,0,0x0,8
tick,0x7ffad1f6fb64,167185224,0,0x0,8
tick,0x7ffad1f6fb64,167201233,0,0x0,8
tick,0x7ffad1f6fb64,167217247,0,0x0,8
tick,0x7ffad1f6fb64,167232260,0,0x0,8
tick,0x7ffad1f6fb64,167248271,0,0x0,8
tick,0x7ffad1f6fb64,167264277,0,0x0,8
tick,0x7ffad1f6fb64,167280324,0,0x0,8
tick,0x7ffad1f6fb64,167295311,0,0x0,8
tick,0x7ffad1f6fb64,167311372,0,0x0,8
tick,0x7ffad1f6fb64,167327341,0,0x0,8
tick,0x7ffad1f6fb64,167343364,0,0x0,8
tick,0x7ffad1f6fb64,167359366,0,0x0,8
tick,0x7ffad1f6fb64,167374368,0,0x0,8
tick,0x7ffad1f6fb64,167390438,0,0x0,8
tick,0x7ffad1f6fb64,167406419,0,0x0,8
tick,0x7ffad1f6fb64,167422451,0,0x0,8
tick,0x7ffad1f6fb64,167437446,0,0x0,8
tick,0x7ffad1f6fb64,167453450,0,0x0,8
tick,0x7ffad1f6fb64,167468531,0,0x0,8
tick,0x7ffad1f6fb64,167483505,0,0x0,8
tick,0x7ffad1f6fb64,167499523,0,0x0,8
tick,0x7ffad1f6fb64,167515548,0,0x0,8
tick,0x7ffad1f6fb64,167530533,0,0x0,8
tick,0x7ffad1f6fb64,167546538,0,0x0,8
tick,0x7ffad1f6fb64,167562562,0,0x0,8
tick,0x7ffad1f6fb64,167578569,0,0x0,8
tick,0x7ffad1f6fb64,167594588,0,0x0,8
tick,0x7ffad1f6fb64,167610601,0,0x0,8
tick,0x7ffad1f6fb64,167625623,0,0x0,8
tick,0x7ffad1f6fb64,167640636,0,0x0,8
tick,0x7ffad1f6fb64,167656689,0,0x0,8
tick,0x7ffad1f6fb64,167671641,0,0x0,8
tick,0x7ffad1f6fb64,167686669,0,0x0,8
tick,0x7ffad1f6fb64,167702684,0,0x0,8
tick,0x7ffad1f6fb64,167717721,0,0x0,8
tick,0x7ffad1f6fb64,167733695,0,0x0,8
tick,0x7ffad1f6fb64,167749733,0,0x0,8
tick,0x7ffad1f6fb64,167764766,0,0x0,8
tick,0x7ffad1f6fb64,167780752,0,0x0,8
tick,0x7ffad1f6fb64,167795763,0,0x0,8
tick,0x7ffad1f6fb64,167811775,0,0x0,8
tick,0x7ffad1f6fb64,167826932,0,0x0,8
tick,0x7ffad1f6fb64,167842819,0,0x0,8
tick,0x7ffad1f6fb64,167857830,0,0x0,8
tick,0x7ffad1f6fb64,167872844,0,0x0,8
tick,0x7ffad1f6fb64,167887848,0,0x0,8
tick,0x7ffad1f6fb64,167902907,0,0x0,8
tick,0x7ffad1f6fb64,167918881,0,0x0,8
tick,0x7ffad1f6fb64,167934940,0,0x0,8
tick,0x7ffad1f6fb64,167950933,0,0x0,8
tick,0x7ffad1f6fb64,167966981,0,0x0,8
tick,0x7ffad1f6fb64,167981942,0,0x0,8
tick,0x7ffad1f6fb64,167997955,0,0x0,8
tick,0x7ffad1f6fb64,168013973,0,0x0,8
tick,0x7ffad1f6fb64,168030030,0,0x0,8
tick,0x7ffad1f6fb64,168046063,0,0x0,8
tick,0x7ffad1f6fb64,168061000,0,0x0,8
tick,0x7ffad1f6fb64,168077066,0,0x0,8
tick,0x7ffad1f6fb64,168093065,0,0x0,8
tick,0x7ffad1f6fb64,168108086,0,0x0,8
tick,0x7ffad1f6fb64,168123110,0,0x0,8
tick,0x7ffad1f6fb64,168139107,0,0x0,8
tick,0x7ffad1f6fb64,168154153,0,0x0,8
tick,0x7ffad1f6fb64,168170118,0,0x0,8
tick,0x7ffad1f6fb64,168186185,0,0x0,8
tick,0x7ffad1f6fb64,168202200,0,0x0,8
tick,0x7ffad1f6fb64,168218181,0,0x0,8
tick,0x7ffad1f6fb64,168234201,0,0x0,8
tick,0x7ffad1f6fb64,168249223,0,0x0,8
tick,0x7ffad1f6fb64,168265219,0,0x0,8
tick,0x7ffad1f6fb64,168280299,0,0x0,8
tick,0x7ffad1f6fb64,168295275,0,0x0,8
tick,0x7ffad1f6fb64,168311239,0,0x0,8
tick,0x7ffad1f6fb64,168326275,0,0x0,8
tick,0x7ffad1f6fb64,168341298,0,0x0,8
tick,0x7ffad1f6fb64,168357293,0,0x0,8
tick,0x7ffad1f6fb64,168373338,0,0x0,8
tick,0x7ffad1f6fb64,168389342,0,0x0,8
tick,0x7ffad1f6fb64,168405370,0,0x0,8
tick,0x7ffad1f6fb64,168420347,0,0x0,8
tick,0x7ffad1f6fb64,168436355,0,0x0,8
tick,0x7ffad1f6fb64,168451360,0,0x0,8
tick,0x7ffad1f6fb64,168467404,0,0x0,8
tick,0x7ffad1f6fb64,168482435,0,0x0,8
tick,0x7ffad1f6fb64,168497433,0,0x0,8
tick,0x7ffad1f6fb64,168512430,0,0x0,8
tick,0x7ffad1f6fb64,168527441,0,0x0,8
tick,0x7ffad1f6fb64,168542464,0,0x0,8
tick,0x7ffad1f6fb64,168558476,0,0x0,8
tick,0x7ffad1f6fb64,168573481,0,0x0,8
tick,0x7ffad1f6fb64,168589522,0,0x0,8
tick,0x7ffad1f6fb64,168604515,0,0x0,8
tick,0x7ffad1f6fb64,168619533,0,0x0,8
tick,0x7ffad1f6fb64,168634544,0,0x0,8
tick,0x7ffad1f6fb64,168649569,0,0x0,8
tick,0x7ffad1f6fb64,168664561,0,0x0,8
tick,0x7ffad1f6fb64,168679597,0,0x0,8
tick,0x7ffad1f6fb64,168695658,0,0x0,8
tick,0x7ffad1f6fb64,168711613,0,0x0,8
tick,0x7ffad1f6fb64,168727628,0,0x0,8
tick,0x7ffad1f6fb64,168742634,0,0x0,8
tick,0x7ffad1f6fb64,168757654,0,0x0,8
tick,0x7ffad1f6fb64,168773696,0,0x0,8
tick,0x7ffad1f6fb64,168788711,0,0x0,8
tick,0x7ffad1f6fb64,168804695,0,0x0,8
tick,0x7ffad1f6fb64,168819696,0,0x0,8
tick,0x7ffad1f6fb64,168835809,0,0x0,8
tick,0x7ffad1f6fb64,168850757,0,0x0,8
tick,0x7ffad1f6fb64,168866759,0,0x0,8
tick,0x7ffad1f6fb64,168881793,0,0x0,8
tick,0x7ffad1f6fb64,168897787,0,0x0,8
tick,0x7ffad1f6fb64,168914060,0,0x0,8
tick,0x7ffad1f6fb64,168929819,0,0x0,8
tick,0x7ffad1f6fb64,168944818,0,0x0,8
tick,0x7ffad1f6fb64,168960888,0,0x0,8
tick,0x7ffad1f6fb64,168976891,0,0x0,8
tick,0x7ffad1f6fb64,168992865,0,0x0,8
tick,0x7ffad1f6fb64,169008870,0,0x0,8
tick,0x7ffad1f6fb64,169024897,0,0x0,8
tick,0x7ffad1f6fb64,169040899,0,0x0,8
tick,0x7ffad1f6fb64,169056981,0,0x0,8
tick,0x7ffad1f6fb64,169072975,0,0x0,8
tick,0x7ffad1f6fb64,169087958,0,0x0,8
tick,0x7ffad1f6fb64,169102981,0,0x0,8
tick,0x7ffad1f6fb64,169118991,0,0x0,8
tick,0x7ffad1f6fb64,169133998,0,0x0,8
tick,0x7ffad1f6fb64,169150066,0,0x0,8
tick,0x7ffad1f6fb64,169166043,0,0x0,8
tick,0x7ffad1f6fb64,169182117,0,0x0,8
tick,0x7ffad1f6fb64,169197042,0,0x0,8
tick,0x7ffad1f6fb64,169213075,0,0x0,8
tick,0x7ffad1f6fb64,169228162,0,0x0,8
tick,0x7ffad1f6fb64,169244190,0,0x0,8
tick,0x7ffad1f6fb64,169260117,0,0x0,8
tick,0x7ffad1f6fb64,169276150,0,0x0,8
tick,0x7ffad1f6fb64,169292118,0,0x0,8
tick,0x7ffad1f6fb64,169307165,0,0x0,8
tick,0x7ffad1f6fb64,169322213,0,0x0,8
tick,0x7ffad1f6fb64,169338218,0,0x0,8
tick,0x7ffad1f6fb64,169353259,0,0x0,8
tick,0x7ffad1f6fb64,169368219,0,0x0,8
tick,0x7ffad1f6fb64,169384245,0,0x0,8
tick,0x7ffad1f6fb64,169399221,0,0x0,8
tick,0x7ffad1f6fb64,169415297,0,0x0,8
tick,0x7ffad1f6fb64,169430388,0,0x0,8
tick,0x7ffad1f6fb64,169445295,0,0x0,8
tick,0x7ffad1f6fb64,169461328,0,0x0,8
tick,0x7ffad1f6fb64,169476301,0,0x0,8
tick,0x7ffad1f6fb64,169491371,0,0x0,8
tick,0x7ffad1f6fb64,169506356,0,0x0,8
tick,0x7ffad1f6fb64,169521489,0,0x0,8
tick,0x7ffad1f6fb64,169536436,0,0x0,8
tick,0x7ffad1f6fb64,169551396,0,0x0,8
tick,0x7ffad1f6fb64,169566414,0,0x0,8
tick,0x7ffad1f6fb64,169581409,0,0x0,8
tick,0x7ffad1f6fb64,169597430,0,0x0,8
tick,0x7ffad1f6fb64,169612427,0,0x0,8
tick,0x7ffad1f6fb64,169627448,0,0x0,8
tick,0x7ffad1f6fb64,169643496,0,0x0,8
tick,0x7ffad1f6fb64,169659503,0,0x0,8
tick,0x7ffad1f6fb64,169674529,0,0x0,8
tick,0x7ffad1f6fb64,169690523,0,0x0,8
tick,0x7ffad1f6fb64,169706538,0,0x0,8
tick,0x7ffad1f6fb64,169721690,0,0x0,8
tick,0x7ffad1f6fb64,169737573,0,0x0,8
tick,0x7ffad1f6fb64,169752580,0,0x0,8
tick,0x7ffad1f6fb64,169768579,0,0x0,8
tick,0x7ffad1f6fb64,169784584,0,0x0,8
tick,0x7ffad1f6fb64,169799599,0,0x0,8
tick,0x7ffad1f6fb64,169815652,0,0x0,8
tick,0x7ffad1f6fb64,169830643,0,0x0,8
tick,0x7ffad1f6fb64,169846661,0,0x0,8
tick,0x7ffad1f6fb64,169861693,0,0x0,8
tick,0x7ffad1f6fb64,169877662,0,0x0,8
tick,0x7ffad1f6fb64,169893713,0,0x0,8
tick,0x7ffad1f6fb64,169908715,0,0x0,8
tick,0x7ffad1f6fb64,169924729,0,0x0,8
tick,0x7ffad1f6fb64,169939749,0,0x0,8
tick,0x7ffad1f6fb64,169955778,0,0x0,8
tick,0x7ffad1f6fb64,169971755,0,0x0,8
tick,0x7ffad1f6fb64,169986772,0,0x0,8
tick,0x7ffad1f6fb64,170002813,0,0x0,8
tick,0x7ffad1f6fb64,170018793,0,0x0,8
tick,0x7ffad1f6fb64,170034822,0,0x0,8
tick,0x7ffad1f6fb64,170049836,0,0x0,8
tick,0x7ffad1f6fb64,170064828,0,0x0,8
tick,0x7ffad1f6fb64,170079874,0,0x0,8
tick,0x7ffad1f6fb64,170095102,0,0x0,8
tick,0x7ffad1f6fb64,170110957,0,0x0,8
tick,0x7ffad1f6fb64,170126917,0,0x0,8
tick,0x7ffad1f6fb64,170141919,0,0x0,8
tick,0x7ffad1f6fb64,170156936,0,0x0,8
tick,0x7ffad1f6fb64,170172961,0,0x0,8
tick,0x7ffad1f6fb64,170188979,0,0x0,8
tick,0x7ffad1f6fb64,170205004,0,0x0,8
tick,0x7ffad1f6fb64,170220994,0,0x0,8
tick,0x7ffad1f6fb64,170235992,0,0x0,8
tick,0x7ffad1f6fb64,170251036,0,0x0,8
tick,0x7ffad1f6fb64,170266032,0,0x0,8
tick,0x7ffad1f6fb64,170281055,0,0x0,8
tick,0x7ffad1f6fb64,170296106,0,0x0,8
tick,0x7ffad1f6fb64,170312116,0,0x0,8
tick,0x7ffad1f6fb64,170328107,0,0x0,8
tick,0x7ffad1f6fb64,170344140,0,0x0,8
tick,0x7ffad1f6fb64,170359112,0,0x0,8
tick,0x7ffad1f6fb64,170374171,0,0x0,8
tick,0x7ffad1f6fb64,170390165,0,0x0,8
tick,0x7ffad1f6fb64,170405176,0,0x0,8
tick,0x7ffad1f6fb64,170420193,0,0x0,8
tick,0x7ffad1f6fb64,170435247,0,0x0,8
tick,0x7ffad1f6fb64,170450271,0,0x0,8
tick,0x7ffad1f6fb64,170465218,0,0x0,8
tick,0x7ffad1f6fb64,170480235,0,0x0,8
tick,0x7ffad1f6fb64,170495424,0,0x0,8
tick,0x7ffad1f6fb64,170511297,0,0x0,8
tick,0x7ffad1f6fb64,170526276,0,0x0,8
tick,0x7ffad1f6fb64,170541330,0,0x0,8
tick,0x7ffad1f6fb64,170556358,0,0x0,8
tick,0x7ffad1f6fb64,170572376,0,0x0,8
tick,0x7ffad1f6fb64,170588412,0,0x0,8
tick,0x7ffad1f6fb64,170603365,0,0x0,8
tick,0x7ffad1f6fb64,170618367,0,0x0,8
tick,0x7ffad1f6fb64,170633362,0,0x0,8
tick,0x7ffad1f6fb64,170648400,0,0x0,8
tick,0x7ffad1f6fb64,170663375,0,0x0,8
tick,0x7ffad1f6fb64,170678417,0,0x0,8
tick,0x7ffad1f6fb64,170693409,0,0x0,8
tick,0x7ffad1f6fb64,170709416,0,0x0,8
tick,0x7ffad1f6fb64,170725439,0,0x0,8
tick,0x7ffad1f6fb64,170740450,0,0x0,8
tick,0x7ffad1f6fb64,170756510,0,0x0,8
tick,0x7ffad1f6fb64,170771473,0,0x0,8
tick,0x7ffad1f6fb64,170786497,0,0x0,8
tick,0x7ffad1f6fb64,170802556,0,0x0,8
tick,0x7ffad1f6fb64,170817534,0,0x0,8
tick,0x7ffad1f6fb64,170833545,0,0x0,8
tick,0x7ffad1f6fb64,170848565,0,0x0,8
tick,0x7ffad1f6fb64,170863574,0,0x0,8
tick,0x7ffad1f6fb64,170879608,0,0x0,8
tick,0x7ffad1f6fb64,170895609,0,0x0,8
tick,0x7ffad1f6fb64,170911628,0,0x0,8
tick,0x7ffad1f6fb64,170927622,0,0x0,8
tick,0x7ffad1f6fb64,170943645,0,0x0,8
tick,0x7ffad1f6fb64,170959654,0,0x0,8
tick,0x7ffad1f6fb64,170975714,0,0x0,8
tick,0x7ffad1f6fb64,170990693,0,0x0,8
tick,0x7ffad1f6fb64,171006718,0,0x0,8
tick,0x7ffad1f6fb64,171022731,0,0x0,8
tick,0x7ffad1f6fb64,171037731,0,0x0,8
tick,0x7ffad1f6fb64,171053726,0,0x0,8
tick,0x7ffad1f6fb64,171068773,0,0x0,8
tick,0x7ffad1f6fb64,171084831,0,0x0,8
tick,0x7ffad1f6fb64,171099787,0,0x0,8
tick,0x7ffad1f6fb64,171115828,0,0x0,8
tick,0x7ffad1f6fb64,171130822,0,0x0,8
tick,0x7ffad1f6fb64,171146837,0,0x0,8
tick,0x7ffad1f6fb64,171162850,0,0x0,8
tick,0x7ffad1f6fb64,171177854,0,0x0,8
tick,0x7ffad1f6fb64,171192905,0,0x0,8
tick,0x7ffad1f6fb64,171208882,0,0x0,8
tick,0x7ffad1f6fb64,171223895,0,0x0,8
tick,0x7ffad1f6fb64,171239917,0,0x0,8
tick,0x7ffad1f6fb64,171255936,0,0x0,8
tick,0x7ffad1f6fb64,171270935,0,0x0,8
tick,0x7ffad1f6fb64,171286967,0,0x0,8
tick,0x7ffad1f6fb64,171302982,0,0x0,8
tick,0x7ffad1f6fb64,171318975,0,0x0,8
tick,0x7ffad1f6fb64,171333996,0,0x0,8
tick,0x7ffad1f6fb64,171350037,0,0x0,8
tick,0x7ffad1f6fb64,171366034,0,0x0,8
tick,0x7ffad1f6fb64,171382076,0,0x0,8
tick,0x7ffad1f6fb64,171398086,0,0x0,8
tick,0x7ffad1f6fb64,171414090,0,0x0,8
tick,0x7ffad1f6fb64,171430088,0,0x0,8
tick,0x7ffad1f6fb64,171445116,0,0x0,8
tick,0x7ffad1f6fb64,171461134,0,0x0,8
tick,0x7ffad1f6fb64,171476113,0,0x0,8
tick,0x7ffad1f6fb64,171491131,0,0x0,8
tick,0x7ffad1f6fb64,171506156,0,0x0,8
tick,0x7ffad1f6fb64,171521185,0,0x0,8
tick,0x7ffad1f6fb64,171536236,0,0x0,8
tick,0x7ffad1f6fb64,171551196,0,0x0,8
tick,0x7ffad1f6fb64,171567238,0,0x0,8
tick,0x7ffad1f6fb64,171582221,0,0x0,8
tick,0x7ffad1f6fb64,171598247,0,0x0,8
tick,0x7ffad1f6fb64,171613276,0,0x0,8
tick,0x7ffad1f6fb64,171629299,0,0x0,8
tick,0x7ffad1f6fb64,171645299,0,0x0,8
tick,0x7ffad1f6fb64,171661324,0,0x0,8
tick,0x7ffad1f6fb64,171676315,0,0x0,8
tick,0x7ffad1f6fb64,171692321,0,0x0,8
tick,0x7ffad1f6fb64,171707344,0,0x0,8
tick,0x7ffad1f6fb64,171722485,0,0x0,8
tick,0x7ffad1f6fb64,171737405,0,0x0,8
tick,0x7ffad1f6fb64,171753395,0,0x0,8
tick,0x7ffad1f6fb64,171768422,0,0x0,8
tick,0x7ffad1f6fb64,171784422,0,0x0,8
tick,0x7ffad1f6fb64,171799416,0,0x0,8
tick,0x7ffad1f6fb64,171814442,0,0x0,8
tick,0x7ffad1f6fb64,171829457,0,0x0,8
tick,0x7ffad1f6fb64,171845499,0,0x0,8
tick,0x7ffad1f6fb64,171861472,0,0x0,8
tick,0x7ffad1f6fb64,171877481,0,0x0,8
tick,0x7ffad1f6fb64,171893530,0,0x0,8
tick,0x7ffad1f6fb64,171909574,0,0x0,8
tick,0x7ffad1f6fb64,171925524,0,0x0,8
tick,0x7ffad1f6fb64,171940560,0,0x0,8
tick,0x7ffad1f6fb64,171955582,0,0x0,8
tick,0x7ffad1f6fb64,171971611,0,0x0,8
tick,0x7ffad1f6fb64,171987596,0,0x0,8
tick,0x7ffad1f6fb64,172003658,0,0x0,8
tick,0x7ffad1f6fb64,172019618,0,0x0,8
tick,0x7ffad1f6fb64,172034627,0,0x0,8
tick,0x7ffad1f6fb64,172049650,0,0x0,8
tick,0x7ffad1f6fb64,172064681,0,0x0,8
tick,0x7ffad1f6fb64,172080684,0,0x0,8
tick,0x7ffad1f6fb64,172096720,0,0x0,8
tick,0x7ffad1f6fb64,172112724,0,0x0,8
tick,0x7ffad1f6fb64,172127727,0,0x0,8
tick,0x7ffad1f6fb64,172142739,0,0x0,8
tick,0x7ffad1f6fb64,172158743,0,0x0,8
tick,0x7ffad1f6fb64,172174771,0,0x0,8
tick,0x7ffad1f6fb64,172190795,0,0x0,8
tick,0x7ffad1f6fb64,172206836,0,0x0,8
tick,0x7ffad1f6fb64,172222833,0,0x0,8
tick,0x7ffad1f6fb64,172238833,0,0x0,8
tick,0x7ffad1f6fb64,172254843,0,0x0,8
tick,0x7ffad1f6fb64,172270872,0,0x0,8
tick,0x7ffad1f6fb64,172286874,0,0x0,8
tick,0x7ffad1f6fb64,172302903,0,0x0,8
tick,0x7ffad1f6fb64,172317894,0,0x0,8
tick,0x7ffad1f6fb64,172333914,0,0x0,8
tick,0x7ffad1f6fb64,172349944,0,0x0,8
tick,0x7ffad1f6fb64,172364946,0,0x0,8
tick,0x7ffad1f6fb64,172379967,0,0x0,8
tick,0x7ffad1f6fb64,172395998,0,0x0,8
tick,0x7ffad1f6fb64,172412000,0,0x0,8
tick,0x7ffad1f6fb64,172427998,0,0x0,8
tick,0x7ffad1f6fb64,172444045,0,0x0,8
tick,0x7ffad1f6fb64,172459022,0,0x0,8
tick,0x7ffad1f6fb64,172474048,0,0x0,8
tick,0x7ffad1f6fb64,172490052,0,0x0,8
tick,0x7ffad1f6fb64,172506080,0,0x0,8
tick,0x7ffad1f6fb64,172521093,0,0x0,8
tick,0x7ffad1f6fb64,172537156,0,0x0,8
tick,0x7ffad1f6fb64,172553099,0,0x0,8
tick,0x7ffad1f6fb64,172568285,0,0x0,8
tick,0x7ffad1f6fb64,172584149,0,0x0,8
tick,0x7ffad1f6fb64,172599194,0,0x0,8
tick,0x7ffad1f6fb64,172615190,0,0x0,8
tick,0x7ffad1f6fb64,172631278,0,0x0,8
tick,0x7ffad1f6fb64,172646188,0,0x0,8
tick,0x7ffad1f6fb64,172661206,0,0x0,8
tick,0x7ffad1f6fb64,172676210,0,0x0,8
tick,0x7ffad1f6fb64,172691237,0,0x0,8
tick,0x7ffad1f6fb64,172707262,0,0x0,8
tick,0x7ffad1f6fb64,172722278,0,0x0,8
tick,0x7ffad1f6fb64,172737271,0,0x0,8
tick,0x7ffad1f6fb64,172752324,0,0x0,8
tick,0x7ffad1f6fb64,172768318,0,0x0,8
tick,0x7ffad1f6fb64,172783318,0,0x0,8
tick,0x7ffad1f6fb64,172798337,0,0x0,8
tick,0x7ffad1f6fb64,172814354,0,0x0,8
tick,0x7ffad1f6fb64,172829502,0,0x0,8
tick,0x7ffad1f6fb64,172845387,0,0x0,8
tick,0x7ffad1f6fb64,172861423,0,0x0,8
tick,0x7ffad1f6fb64,172876425,0,0x0,8
tick,0x7ffad1f6fb64,172891431,0,0x0,8
tick,0x7ffad1f6fb64,172907462,0,0x0,8
tick,0x7ffad1f6fb64,172922442,0,0x0,8
tick,0x7ffad1f6fb64,172937479,0,0x0,8
tick,0x7ffad1f6fb64,172953461,0,0x0,8
tick,0x7ffad1f6fb64,172969485,0,0x0,8
tick,0x7ffad1f6fb64,172985549,0,0x0,8
tick,0x7ffad1f6fb64,173001527,0,0x0,8
tick,0x7ffad1f6fb64,173016555,0,0x0,8
tick,0x7ffad1f6fb64,173031560,0,0x0,8
tick,0x7ffad1f6fb64,173046568,0,0x0,8
tick,0x7ffad1f6fb64,173061573,0,0x0,8
tick,0x7ffad1f6fb64,173077636,0,0x0,8
tick,0x7ffad1f6fb64,173093598,0,0x0,8
tick,0x7ffad1f6fb64,173108603,0,0x0,8
tick,0x7ffad1f6fb64,173124657,0,0x0,8
tick,0x7ffad1f6fb64,173139638,0,0x0,8
tick,0x7ffad1f6fb64,173154654,0,0x0,8
tick,0x7ffad1f6fb64,173170665,0,0x0,8
tick,0x7ffad1f6fb64,173185685,0,0x0,8
tick,0x7ffad1f6fb64,173201699,0,0x0,8
tick,0x7ffad1f6fb64,173217717,0,0x0,8
tick,0x7ffad1f6fb64,173233723,0,0x0,8
tick,0x7ffad1f6fb64,173249777,0,0x0,8
tick,0x7ffad1f6fb64,173265763,0,0x0,8
tick,0x7ffad1f6fb64,173281778,0,0x0,8
tick,0x7ffad1f6fb64,173297796,0,0x0,8
tick,0x7ffad1f6fb64,173312795,0,0x0,8
tick,0x7ffad1f6fb64,173327822,0,0x0,8
tick,0x7ffad1f6fb64,173342823,0,0x0,8
tick,0x7ffad1f6fb64,173357825,0,0x0,8
tick,0x7ffad1f6fb64,173372871,0,0x0,8
tick,0x7ffad1f6fb64,173387857,0,0x0,8
tick,0x7ffad1f6fb64,173402940,0,0x0,8
tick,0x7ffad1f6fb64,173417907,0,0x0,8
tick,0x7ffad1f6fb64,173432894,0,0x0,8
tick,0x7ffad1f6fb64,173447951,0,0x0,8
tick,0x7ffad1f6fb64,173462945,0,0x0,8
tick,0x7ffad1f6fb64,173478971,0,0x0,8
tick,0x7ffad1f6fb64,173495075,0,0x0,8
tick,0x7ffad1f6fb64,173510982,0,0x0,8
tick,0x7ffad1f6fb64,173525998,0,0x0,8
tick,0x7ffad1f6fb64,173542020,0,0x0,8
tick,0x7ffad1f6fb64,173557033,0,0x0,8
tick,0x7ffad1f6fb64,173573035,0,0x0,8
tick,0x7ffad1f6fb64,173589059,0,0x0,8
tick,0x7ffad1f6fb64,173605069,0,0x0,8
tick,0x7ffad1f6fb64,173620173,0,0x0,8
tick,0x7ffad1f6fb64,173635140,0,0x0,8
tick,0x7ffad1f6fb64,173650154,0,0x0,8
tick,0x7ffad1f6fb64,173666116,0,0x0,8
tick,0x7ffad1f6fb64,173681165,0,0x0,8
tick,0x7ffad1f6fb64,173697248,0,0x0,8
tick,0x7ffad1f6fb64,173713182,0,0x0,8
tick,0x7ffad1f6fb64,173729189,0,0x0,8
tick,0x7ffad1f6fb64,173745195,0,0x0,8
tick,0x7ffad1f6fb64,173761213,0,0x0,8
tick,0x7ffad1f6fb64,173777221,0,0x0,8
tick,0x7ffad1f6fb64,173793242,0,0x0,8
tick,0x7ffad1f6fb64,173809267,0,0x0,8
tick,0x7ffad1f6fb64,173824275,0,0x0,8
tick,0x7ffad1f6fb64,173840309,0,0x0,8
tick,0x7ffad1f6fb64,173856426,0,0x0,8
tick,0x7ffad1f6fb64,173872311,0,0x0,8
tick,0x7ffad1f6fb64,173888340,0,0x0,8
tick,0x7ffad1f6fb64,173903334,0,0x0,8
tick,0x7ffad1f6fb64,173919363,0,0x0,8
tick,0x7ffad1f6fb64,173935379,0,0x0,8
tick,0x7ffad1f6fb64,173950392,0,0x0,8
tick,0x7ffad1f6fb64,173966401,0,0x0,8
tick,0x7ffad1f6fb64,173982411,0,0x0,8
tick,0x7ffad1f6fb64,173998470,0,0x0,8
tick,0x7ffad1f6fb64,174014424,0,0x0,8
tick,0x7ffad1f6fb64,174030490,0,0x0,8
tick,0x7ffad1f6fb64,174045445,0,0x0,8
tick,0x7ffad1f6fb64,174060487,0,0x0,8
tick,0x7ffad1f6fb64,174075501,0,0x0,8
tick,0x7ffad1f6fb64,174091506,0,0x0,8
tick,0x7ffad1f6fb64,174106514,0,0x0,8
tick,0x7ffad1f6fb64,174122536,0,0x0,8
tick,0x7ffad1f6fb64,174137564,0,0x0,8
tick,0x7ffad1f6fb64,174153566,0,0x0,8
tick,0x7ffad1f6fb64,174168632,0,0x0,8
tick,0x7ffad1f6fb64,174183588,0,0x0,8
tick,0x7ffad1f6fb64,174198617,0,0x0,8
tick,0x7ffad1f6fb64,174213617,0,0x0,8
tick,0x7ffad1f6fb64,174229628,0,0x0,8
tick,0x7ffad1f6fb64,174245662,0,0x0,8
tick,0x7ffad1f6fb64,174260656,0,0x0,8
tick,0x7ffad1f6fb64,174275693,0,0x0,8
tick,0x7ffad1f6fb64,174290681,0,0x0,8
tick,0x7ffad1f6fb64,174306693,0,0x0,8
tick,0x7ffad1f6fb64,174322712,0,0x0,8
tick,0x7ffad1f6fb64,174338748,0,0x0,8
tick,0x7ffad1f6fb64,174354746,0,0x0,8
tick,0x7ffad1f6fb64,174370758,0,0x0,8
tick,0x7ffad1f6fb64,174386779,0,0x0,8
tick,0x7ffad1f6fb64,174402793,0,0x0,8
tick,0x7ffad1f6fb64,174417813,0,0x0,8
tick,0x7ffad1f6fb64,174433857,0,0x0,8
tick,0x7ffad1f6fb64,174448832,0,0x0,8
tick,0x7ffad1f6fb64,174463856,0,0x0,8
tick,0x7ffad1f6fb64,174479872,0,0x0,8
tick,0x7ffad1f6fb64,174494880,0,0x0,8
tick,0x7ffad1f6fb64,174510029,0,0x0,8
tick,0x7ffad1f6fb64,174525894,0,0x0,8
tick,0x7ffad1f6fb64,174540909,0,0x0,8
tick,0x7ffad1f6fb64,174555920,0,0x0,8
tick,0x7ffad1f6fb64,174571959,0,0x0,8
tick,0x7ffad1f6fb64,174586950,0,0x0,8
tick,0x7ffad1f6fb64,174602962,0,0x0,8
tick,0x7ffad1f6fb64,174618990,0,0x0,8
tick,0x7ffad1f6fb64,174635000,0,0x0,8
tick,0x7ffad1f6fb64,174650049,0,0x0,8
tick,0x7ffad1f6fb64,174666024,0,0x0,8
tick,0x7ffad1f6fb64,174682054,0,0x0,8
tick,0x7ffad1f6fb64,174697067,0,0x0,8
tick,0x7ffad1f6fb64,174713079,0,0x0,8
tick,0x7ffad1f6fb64,174728096,0,0x0,8
tick,0x7ffad1f6fb64,174744122,0,0x0,8
tick,0x7ffad1f6fb64,174760125,0,0x0,8
tick,0x7ffad1f6fb64,174776149,0,0x0,8
tick,0x7ffad1f6fb64,174792149,0,0x0,8
tick,0x7ffad1f6fb64,174807155,0,0x0,8
tick,0x7ffad1f6fb64,174822206,0,0x0,8
tick,0x7ffad1f6fb64,174838193,0,0x0,8
tick,0x7ffad1f6fb64,174853192,0,0x0,8
tick,0x7ffad1f6fb64,174869226,0,0x0,8
tick,0x7ffad1f6fb64,174884231,0,0x0,8
tick,0x7ffad1f6fb64,174899253,0,0x0,8
tick,0x7ffad1f6fb64,174914247,0,0x0,8
tick,0x7ffad1f6fb64,174929270,0,0x0,8
tick,0x7ffad1f6fb64,174945356,0,0x0,8
tick,0x7ffad1f6fb64,174960284,0,0x0,8
tick,0x7ffad1f6fb64,174975319,0,0x0,8
tick,0x7ffad1f6fb64,174991327,0,0x0,8
tick,0x7ffad1f6fb64,175006344,0,0x0,8
tick,0x7ffad1f6fb64,175022360,0,0x0,8
tick,0x7ffad1f6fb64,175037363,0,0x0,8
tick,0x7ffad1f6fb64,175052382,0,0x0,8
tick,0x7ffad1f6fb64,175067396,0,0x0,8
tick,0x7ffad1f6fb64,175082418,0,0x0,8
tick,0x7ffad1f6fb64,175098411,0,0x0,8
tick,0x7ffad1f6fb64,175114444,0,0x0,8
tick,0x7ffad1f6fb64,175129451,0,0x0,8
tick,0x7ffad1f6fb64,175145463,0,0x0,8
tick,0x7ffad1f6fb64,175160514,0,0x0,8
tick,0x7ffad1f6fb64,175175497,0,0x0,8
tick,0x7ffad1f6fb64,175190508,0,0x0,8
tick,0x7ffad1f6fb64,175206508,0,0x0,8
tick,0x7ffad1f6fb64,175221547,0,0x0,8
tick,0x7ffad1f6fb64,175237556,0,0x0,8
tick,0x7ffad1f6fb64,175253568,0,0x0,8
tick,0x7ffad1f6fb64,175269572,0,0x0,8
tick,0x7ffad1f6fb64,175285602,0,0x0,8
tick,0x7ffad1f6fb64,175300617,0,0x0,8
tick,0x7ffad1f6fb64,175316620,0,0x0,8
tick,0x7ffad1f6fb64,175331638,0,0x0,8
tick,0x7ffad1f6fb64,175347644,0,0x0,8
tick,0x7ffad1f6fb64,175363688,0,0x0,8
tick,0x7ffad1f6fb64,175378674,0,0x0,8
tick,0x7ffad1f6fb64,175393697,0,0x0,8
tick,0x7ffad1f6fb64,175409706,0,0x0,8
tick,0x7ffad1f6fb64,175425719,0,0x0,8
tick,0x7ffad1f6fb64,175440731,0,0x0,8
tick,0x7ffad1f6fb64,175456788,0,0x0,8
tick,0x7ffad1f6fb64,175472762,0,0x0,8
tick,0x7ffad1f6fb64,175488789,0,0x0,8
tick,0x7ffad1f6fb64,175503781,0,0x0,8
tick,0x7ffad1f6fb64,175519802,0,0x0,8
tick,0x7ffad1f6fb64,175535847,0,0x0,8
tick,0x7ffad1f6fb64,175551852,0,0x0,8
tick,0x7ffad1f6fb64,175566839,0,0x0,8
tick,0x7ffad1f6fb64,175581868,0,0x0,8
tick,0x7ffad1f6fb64,175596905,0,0x0,8
tick,0x7ffad1f6fb64,175611900,0,0x0,8
tick,0x7ffad1f6fb64,175627904,0,0x0,8
tick,0x7ffad1f6fb64,175642918,0,0x0,8
tick,0x7ffad1f6fb64,175658951,0,0x0,8
tick,0x7ffad1f6fb64,175674969,0,0x0,8
tick,0x7ffad1f6fb64,175690029,0,0x0,8
tick,0x7ffad1f6fb64,175704979,0,0x0,8
tick,0x7ffad1f6fb64,175719980,0,0x0,8
tick,0x7ffad1f6fb64,175735002,0,0x0,8
tick,0x7ffad1f6fb64,175750030,0,0x0,8
tick,0x7ffad1f6fb64,175766014,0,0x0,8
tick,0x7ffad1f6fb64,175782046,0,0x0,8
tick,0x7ffad1f6fb64,175797073,0,0x0,8
tick,0x7ffad1f6fb64,175813094,0,0x0,8
tick,0x7ffad1f6fb64,175829093,0,0x0,8
tick,0x7ffad1f6fb64,175845104,0,0x0,8
tick,0x7ffad1f6fb64,175860150,0,0x0,8
tick,0x7ffad1f6fb64,175875156,0,0x0,8
tick,0x7ffad1f6fb64,175891138,0,0x0,8
tick,0x7ffad1f6fb64,175906159,0,0x0,8
tick,0x7ffad1f6fb64,175921172,0,0x0,8
tick,0x7ffad1f6fb64,175937196,0,0x0,8
tick,0x7ffad1f6fb64,175952198,0,0x0,8
tick,0x7ffad1f6fb64,175968233,0,0x0,8
tick,0x7ffad1f6fb64,175984244,0,0x0,8
tick,0x7ffad1f6fb64,176000306,0,0x0,8
tick,0x7ffad1f6fb64,176015253,0,0x0,8
tick,0x7ffad1f6fb64,176031264,0,0x0,8
tick,0x7ffad1f6fb64,176047307,0,0x0,8
tick,0x7ffad1f6fb64,176062336,0,0x0,8
tick,0x7ffad1f6fb64,176077313,0,0x0,8
tick,0x7ffad1f6fb64,176092346,0,0x0,8
tick,0x7ffad1f6fb64,176107342,0,0x0,8
tick,0x7ffad1f6fb64,176122373,0,0x0,8
tick,0x7ffad1f6fb64,176137376,0,0x0,8
tick,0x7ffad1f6fb64,176153383,0,0x0,8
tick,0x7ffad1f6fb64,176169419,0,0x0,8
tick,0x7ffad1f6fb64,176185407,0,0x0,8
tick,0x7ffad1f6fb64,176201437,0,0x0,8
tick,0x7ffad1f6fb64,176217455,0,0x0,8
tick,0x7ffad1f6fb64,176233478,0,0x0,8
tick,0x7ffad1f6fb64,176249482,0,0x0,8
tick,0x7ffad1f6fb64,176265511,0,0x0,8
tick,0x7ffad1f6fb64,176281514,0,0x0,8
tick,0x7ffad1f6fb64,176297575,0,0x0,8
tick,0x7ffad1f6fb64,176312538,0,0x0,8
tick,0x7ffad1f6fb64,176327529,0,0x0,8
tick,0x7ffad1f6fb64,176342562,0,0x0,8
tick,0x7ffad1f6fb64,176358566,0,0x0,8
tick,0x7ffad1f6fb64,176374582,0,0x0,8
tick,0x7ffad1f6fb64,176389592,0,0x0,8
tick,0x7ffad1f6fb64,176405635,0,0x0,8
tick,0x7ffad1f6fb64,176421635,0,0x0,8
tick,0x7ffad1f6fb64,176437638,0,0x0,8
tick,0x7ffad1f6fb64,176453656,0,0x0,8
tick,0x7ffad1f6fb64,176469680,0,0x0,8
tick,0x7ffad1f6fb64,176485678,0,0x0,8
tick,0x7ffad1f6fb64,176500687,0,0x0,8
tick,0x7ffad1f6fb64,176516703,0,0x0,8
tick,0x7ffad1f6fb64,176531717,0,0x0,8
tick,0x7ffad1f6fb64,176547730,0,0x0,8
tick,0x7ffad1f6fb64,176563772,0,0x0,8
tick,0x7ffad1f6fb64,176579758,0,0x0,8
tick,0x7ffad1f6fb64,176595771,0,0x0,8
tick,0x7ffad1f6fb64,176611804,0,0x0,8
tick,0x7ffad1f6fb64,176626815,0,0x0,8
tick,0x7ffad1f6fb64,176642839,0,0x0,8
tick,0x7ffad1f6fb64,176658869,0,0x0,8
tick,0x7ffad1f6fb64,176673911,0,0x0,8
tick,0x7ffad1f6fb64,176689881,0,0x0,8
tick,0x7ffad1f6fb64,176705888,0,0x0,8
tick,0x7ffad1f6fb64,176720897,0,0x0,8
tick,0x7ffad1f6fb64,176736911,0,0x0,8
tick,0x7ffad1f6fb64,176751944,0,0x0,8
tick,0x7ffad1f6fb64,176766943,0,0x0,8
tick,0x7ffad1f6fb64,176781940,0,0x0,8
tick,0x7ffad1f6fb64,176798041,0,0x0,8
tick,0x7ffad1f6fb64,176813983,0,0x0,8
tick,0x7ffad1f6fb64,176830001,0,0x0,8
tick,0x7ffad1f6fb64,176846005,0,0x0,8
tick,0x7ffad1f6fb64,176862042,0,0x0,8
tick,0x7ffad1f6fb64,176877042,0,0x0,8
tick,0x7ffad1f6fb64,176893058,0,0x0,8
tick,0x7ffad1f6fb64,176909078,0,0x0,8
tick,0x7ffad1f6fb64,176925114,0,0x0,8
tick,0x7ffad1f6fb64,176940091,0,0x0,8
tick,0x7ffad1f6fb64,176956100,0,0x0,8
tick,0x7ffad1f6fb64,176972194,0,0x0,8
tick,0x7ffad1f6fb64,176987134,0,0x0,8
tick,0x7ffad1f6fb64,177002156,0,0x0,8
tick,0x7ffad1f6fb64,177018179,0,0x0,8
tick,0x7ffad1f6fb64,177034166,0,0x0,8
tick,0x7ffad1f6fb64,177050186,0,0x0,8
tick,0x7ffad1f6fb64,177066236,0,0x0,8
tick,0x7ffad1f6fb64,177082230,0,0x0,8
tick,0x7ffad1f6fb64,177098248,0,0x0,8
tick,0x7ffad1f6fb64,177113248,0,0x0,8
tick,0x7ffad1f6fb64,177129276,0,0x0,8
tick,0x7ffad1f6fb64,177144283,0,0x0,8
tick,0x7ffad1f6fb64,177160281,0,0x0,8
tick,0x7ffad1f6fb64,177176312,0,0x0,8
tick,0x7ffad1f6fb64,177191342,0,0x0,8
tick,0x7ffad1f6fb64,177207339,0,0x0,8
tick,0x7ffad1f6fb64,177222340,0,0x0,8
tick,0x7ffad1f6fb64,177237380,0,0x0,8
tick,0x7ffad1f6fb64,177253382,0,0x0,8
tick,0x7ffad1f6fb64,177269407,0,0x0,8
tick,0x7ffad1f6fb64,177285426,0,0x0,8
tick,0x7ffad1f6fb64,177301439,0,0x0,8
tick,0x7ffad1f6fb64,177317440,0,0x0,8
tick,0x7ffad1f6fb64,177333449,0,0x0,8
tick,0x7ffad1f6fb64,177349468,0,0x0,8
tick,0x7ffad1f6fb64,177365501,0,0x0,8
tick,0x7ffad1f6fb64,177380502,0,0x0,8
tick,0x7ffad1f6fb64,177395498,0,0x0,8
tick,0x7ffad1f6fb64,177411526,0,0x0,8
tick,0x7ffad1f6fb64,177427549,0,0x0,8
tick,0x7ffad1f6fb64,177442559,0,0x0,8
tick,0x7ffad1f6fb64,177458553,0,0x0,8
tick,0x7ffad1f6fb64,177473600,0,0x0,8
tick,0x7ffad1f6fb64,177489597,0,0x0,8
tick,0x7ffad1f6fb64,177505617,0,0x0,8
tick,0x7ffad1f6fb64,177521627,0,0x0,8
tick,0x7ffad1f6fb64,177537741,0,0x0,8
tick,0x7ffad1f6fb64,177553653,0,0x0,8
tick,0x7ffad1f6fb64,177569724,0,0x0,8
tick,0x7ffad1f6fb64,177585667,0,0x0,8
tick,0x7ffad1f6fb64,177601688,0,0x0,8
tick,0x7ffad1f6fb64,177617796,0,0x0,8
tick,0x7ffad1f6fb64,177632734,0,0x0,8
tick,0x7ffad1f6fb64,177648739,0,0x0,8
tick,0x7ffad1f6fb64,177664771,0,0x0,8
tick,0x7ffad1f6fb64,177679767,0,0x0,8
tick,0x7ffad1f6fb64,177695834,0,0x0,8
tick,0x7ffad1f6fb64,177711813,0,0x0,8
tick,0x7ffad1f6fb64,177727819,0,0x0,8
tick,0x7ffad1f6fb64,177743835,0,0x0,8
tick,0x7ffad1f6fb64,177759857,0,0x0,8
tick,0x7ffad1f6fb64,177774856,0,0x0,8
tick,0x7ffad1f6fb64,177790864,0,0x0,8
tick,0x7ffad1f6fb64,177805936,0,0x0,8
tick,0x7ffad1f6fb64,177820897,0,0x0,8
tick,0x7ffad1f6fb64,177835920,0,0x0,8
tick,0x7ffad1f6fb64,177851919,0,0x0,8
tick,0x7ffad1f6fb64,177866960,0,0x0,8
tick,0x7ffad1f6fb64,177881963,0,0x0,8
tick,0x7ffad1f6fb64,177898012,0,0x0,8
tick,0x7ffad1f6fb64,177912980,0,0x0,8
tick,0x7ffad1f6fb64,177927998,0,0x0,8
tick,0x7ffad1f6fb64,177944023,0,0x0,8
tick,0x7ffad1f6fb64,177960029,0,0x0,8
tick,0x7ffad1f6fb64,177976062,0,0x0,8
tick,0x7ffad1f6fb64,177992053,0,0x0,8
tick,0x7ffad1f6fb64,178007054,0,0x0,8
tick,0x7ffad1f6fb64,178023082,0,0x0,8
tick,0x7ffad1f6fb64,178038098,0,0x0,8
tick,0x7ffad1f6fb64,178054101,0,0x0,8
tick,0x7ffad1f6fb64,178070139,0,0x0,8
tick,0x7ffad1f6fb64,178086159,0,0x0,8
tick,0x7ffad1f6fb64,178102141,0,0x0,8
tick,0x7ffad1f6fb64,178118166,0,0x0,8
tick,0x7ffad1f6fb64,178133185,0,0x0,8
tick,0x7ffad1f6fb64,178148197,0,0x0,8
tick,0x7ffad1f6fb64,178164208,0,0x0,8
tick,0x7ffad1f6fb64,178180269,0,0x0,8
tick,0x7ffad1f6fb64,178195342,0,0x0,8
tick,0x7ffad1f6fb64,178210257,0,0x0,8
tick,0x7ffad1f6fb64,178226271,0,0x0,8
tick,0x7ffad1f6fb64,178242278,0,0x0,8
tick,0x7ffad1f6fb64,178257305,0,0x0,8
tick,0x7ffad1f6fb64,178273344,0,0x0,8
tick,0x7ffad1f6fb64,178288337,0,0x0,8
tick,0x7ffad1f6fb64,178304343,0,0x0,8
tick,0x7ffad1f6fb64,178320363,0,0x0,8
tick,0x7ffad1f6fb64,178336371,0,0x0,8
tick,0x7ffad1f6fb64,178351379,0,0x0,8
tick,0x7ffad1f6fb64,178367404,0,0x0,8
tick,0x7ffad1f6fb64,178382412,0,0x0,8
tick,0x7ffad1f6fb64,178397429,0,0x0,8
tick,0x7ffad1f6fb64,178413448,0,0x0,8
tick,0x7ffad1f6fb64,178429466,0,0x0,8
tick,0x7ffad1f6fb64,178444467,0,0x0,8
tick,0x7ffad1f6fb64,178459471,0,0x0,8
tick,0x7ffad1f6fb64,178475501,0,0x0,8
tick,0x7ffad1f6fb64,178491521,0,0x0,8
tick,0x7ffad1f6fb64,178506534,0,0x0,8
tick,0x7ffad1f6fb64,178522533,0,0x0,8
tick,0x7ffad1f6fb64,178537554,0,0x0,8
tick,0x7ffad1f6fb64,178553580,0,0x0,8
tick,0x7ffad1f6fb64,178568569,0,0x0,8
tick,0x7ffad1f6fb64,178584583,0,0x0,8
tick,0x7ffad1f6fb64,178599641,0,0x0,8
tick,0x7ffad1f6fb64,178615625,0,0x0,8
tick,0x7ffad1f6fb64,178631637,0,0x0,8
tick,0x7ffad1f6fb64,178647661,0,0x0,8
tick,0x7ffad1f6fb64,178663672,0,0x0,8
tick,0x7ffad1f6fb64,178678671,0,0x0,8
tick,0x7ffad1f6fb64,178693676,0,0x0,8
tick,0x7ffad1f6fb64,178709726,0,0x0,8
tick,0x7ffad1f6fb64,178724892,0,0x0,8
tick,0x7ffad1f6fb64,178739735,0,0x0,8
tick,0x7ffad1f6fb64,178755757,0,0x0,8
tick,0x7ffad1f6fb64,178771770,0,0x0,8
tick,0x7ffad1f6fb64,178787774,0,0x0,8
tick,0x7ffad1f6fb64,178802788,0,0x0,8
tick,0x7ffad1f6fb64,178818825,0,0x0,8
tick,0x7ffad1f6fb64,178834841,0,0x0,8
tick,0x7ffad1f6fb64,178850835,0,0x0,8
tick,0x7ffad1f6fb64,178866873,0,0x0,8
tick,0x7ffad1f6fb64,178881857,0,0x0,8
tick,0x7ffad1f6fb64,178896861,0,0x0,8
tick,0x7ffad1f6fb64,178911885,0,0x0,8
tick,0x7ffad1f6fb64,178927922,0,0x0,8
tick,0x7ffad1f6fb64,178942932,0,0x0,8
tick,0x7ffad1f6fb64,178958922,0,0x0,8
tick,0x7ffad1f6fb64,178973947,0,0x0,8
tick,0x7ffad1f6fb64,178989956,0,0x0,8
tick,0x7ffad1f6fb64,179005998,0,0x0,8
tick,0x7ffad1f6fb64,179020985,0,0x0,8
tick,0x7ffad1f6fb64,179037008,0,0x0,8
tick,0x7ffad1f6fb64,179052009,0,0x0,8
tick,0x7ffad1f6fb64,179067031,0,0x0,8
tick,0x7ffad1f6fb64,179083052,0,0x0,8
tick,0x7ffad1f6fb64,179098338,0,0x0,8
tick,0x7ffad1f6fb64,179113137,0,0x0,8
tick,0x7ffad1f6fb64,179129088,0,0x0,8
tick,0x7ffad1f6fb64,179145105,0,0x0,8
tick,0x7ffad1f6fb64,179161126,0,0x0,8
tick,0x7ffad1f6fb64,179176132,0,0x0,8
tick,0x7ffad1f6fb64,179191147,0,0x0,8
tick,0x7ffad1f6fb64,179206152,0,0x0,8
tick,0x7ffad1f6fb64,179221170,0,0x0,8
tick,0x7ffad1f6fb64,179237219,0,0x0,8
tick,0x7ffad1f6fb64,179252204,0,0x0,8
tick,0x7ffad1f6fb64,179267227,0,0x0,8
tick,0x7ffad1f6fb64,179282221,0,0x0,8
tick,0x7ffad1f6fb64,179298402,0,0x0,8
tick,0x7ffad1f6fb64,179314256,0,0x0,8
tick,0x7ffad1f6fb64,179330262,0,0x0,8
tick,0x7ffad1f6fb64,179345276,0,0x0,8
tick,0x7ffad1f6fb64,179361303,0,0x0,8
tick,0x7ffad1f6fb64,179377334,0,0x0,8
tick,0x7ffad1f6fb64,179393323,0,0x0,8
tick,0x7ffad1f6fb64,179409331,0,0x0,8
tick,0x7ffad1f6fb64,179425362,0,0x0,8
tick,0x7ffad1f6fb64,179440368,0,0x0,8
tick,0x7ffad1f6fb64,179456383,0,0x0,8
tick,0x7ffad1f6fb64,179472402,0,0x0,8
tick,0x7ffad1f6fb64,179488437,0,0x0,8
tick,0x7ffad1f6fb64,179504415,0,0x0,8
tick,0x7ffad1f6fb64,179520509,0,0x0,8
tick,0x7ffad1f6fb64,179535449,0,0x0,8
tick,0x7ffad1f6fb64,179550467,0,0x0,8
tick,0x7ffad1f6fb64,179566482,0,0x0,8
tick,0x7ffad1f6fb64,179582498,0,0x0,8
tick,0x7ffad1f6fb64,179598539,0,0x0,8
tick,0x7ffad1f6fb64,179613525,0,0x0,8
tick,0x7ffad1f6fb64,179629583,0,0x0,8
tick,0x7ffad1f6fb64,179645579,0,0x0,8
tick,0x7ffad1f6fb64,179661570,0,0x0,8
tick,0x7ffad1f6fb64,179676582,0,0x0,8
tick,0x7ffad1f6fb64,179692612,0,0x0,8
tick,0x7ffad1f6fb64,179707622,0,0x0,8
tick,0x7ffad1f6fb64,179722627,0,0x0,8
tick,0x7ffad1f6fb64,179737650,0,0x0,8
tick,0x7ffad1f6fb64,179753669,0,0x0,8
tick,0x7ffad1f6fb64,179769666,0,0x0,8
tick,0x7ffad1f6fb64,179784689,0,0x0,8
tick,0x7ffad1f6fb64,179799699,0,0x0,8
tick,0x7ffad1f6fb64,179814735,0,0x0,8
tick,0x7ffad1f6fb64,179830716,0,0x0,8
tick,0x7ffad1f6fb64,179846756,0,0x0,8
tick,0x7ffad1f6fb64,179862743,0,0x0,8
tick,0x7ffad1f6fb64,179878766,0,0x0,8
tick,0x7ffad1f6fb64,179894777,0,0x0,8
tick,0x7ffad1f6fb64,179910793,0,0x0,8
tick,0x7ffad1f6fb64,179926825,0,0x0,8
tick,0x7ffad1f6fb64,179942827,0,0x0,8
tick,0x7ffad1f6fb64,179958862,0,0x0,8
tick,0x7ffad1f6fb64,179973858,0,0x0,8
tick,0x7ffad1f6fb64,179988869,0,0x0,8
tick,0x7ffad1f6fb64,180004897,0,0x0,8
tick,0x7ffad1f6fb64,180020902,0,0x0,8
tick,0x7ffad1f6fb64,180035974,0,0x0,8
tick,0x7ffad1f6fb64,180050921,0,0x0,8
tick,0x7ffad1f6fb64,180066948,0,0x0,8
tick,0x7ffad1f6fb64,180081950,0,0x0,8
tick,0x7ffad1f6fb64,180097964,0,0x0,8
tick,0x7ffad1f6fb64,180113987,0,0x0,8
tick,0x7ffad1f6fb64,180129998,0,0x0,8
tick,0x7ffad1f6fb64,180146033,0,0x0,8
tick,0x7ffad1f6fb64,180162023,0,0x0,8
tick,0x7ffad1f6fb64,180178049,0,0x0,8
tick,0x7ffad1f6fb64,180193055,0,0x0,8
tick,0x7ffad1f6fb64,180209066,0,0x0,8
tick,0x7ffad1f6fb64,180224105,0,0x0,8
tick,0x7ffad1f6fb64,180239111,0,0x0,8
tick,0x7ffad1f6fb64,180255133,0,0x0,8
tick,0x7ffad1f6fb64,180271137,0,0x0,8
tick,0x7ffad1f6fb64,180287147,0,0x0,8
tick,0x7ffad1f6fb64,180303172,0,0x0,8
tick,0x7ffad1f6fb64,180319165,0,0x0,8
tick,0x7ffad1f6fb64,180335189,0,0x0,8
tick,0x7ffad1f6fb64,180350209,0,0x0,8
tick,0x7ffad1f6fb64,180365475,0,0x0,8
tick,0x7ffad1f6fb64,180380234,0,0x0,8
tick,0x7ffad1f6fb64,180395240,0,0x0,8
tick,0x7ffad1f6fb64,180411292,0,0x0,8
tick,0x7ffad1f6fb64,180427268,0,0x0,8
tick,0x7ffad1f6fb64,180443266,0,0x0,8
tick,0x7ffad1f6fb64,180459303,0,0x0,8
tick,0x7ffad1f6fb64,180474316,0,0x0,8
tick,0x7ffad1f6fb64,180490338,0,0x0,8
tick,0x7ffad1f6fb64,180505338,0,0x0,8
tick,0x7ffad1f6fb64,180520357,0,0x0,8
tick,0x7ffad1f6fb64,180535361,0,0x0,8
tick,0x7ffad1f6fb64,180550384,0,0x0,8
tick,0x7ffad1f6fb64,180565616,0,0x0,8
tick,0x7ffad1f6fb64,180580449,0,0x0,8
tick,0x7ffad1f6fb64,180595417,0,0x0,8
tick,0x7ffad1f6fb64,180611454,0,0x0,8
tick,0x7ffad1f6fb64,180626472,0,0x0,8
tick,0x7ffad1f6fb64,180642465,0,0x0,8
tick,0x7ffad1f6fb64,180658536,0,0x0,8
tick,0x7ffad1f6fb64,180673508,0,0x0,8
tick,0x7ffad1f6fb64,180688538,0,0x0,8
tick,0x7ffad1f6fb64,180703516,0,0x0,8
tick,0x7ffad1f6fb64,180719522,0,0x0,8
tick,0x7ffad1f6fb64,180735566,0,0x0,8
tick,0x7ffad1f6fb64,180750553,0,0x0,8
tick,0x7ffad1f6fb64,180766585,0,0x0,8
tick,0x7ffad1f6fb64,180781601,0,0x0,8
tick,0x7ffad1f6fb64,180796634,0,0x0,8
tick,0x7ffad1f6fb64,180812627,0,0x0,8
tick,0x7ffad1f6fb64,180828647,0,0x0,8
tick,0x7ffad1f6fb64,180844655,0,0x0,8
tick,0x7ffad1f6fb64,180860688,0,0x0,8
tick,0x7ffad1f6fb64,180875695,0,0x0,8
tick,0x7ffad1f6fb64,180891717,0,0x0,8
tick,0x7ffad1f6fb64,180906715,0,0x0,8
tick,0x7ffad1f6fb64,180922719,0,0x0,8
tick,0x7ffad1f6fb64,180938998,0,0x0,8
tick,0x7ffad1f6fb64,180954752,0,0x0,8
tick,0x7ffad1f6fb64,180970762,0,0x0,8
tick,0x7ffad1f6fb64,180985785,0,0x0,8
tick,0x7ffad1f6fb64,181001805,0,0x0,8
tick,0x7ffad1f6fb64,181017830,0,0x0,8
tick,0x7ffad1f6fb64,181032831,0,0x0,8
tick,0x7ffad1f6fb64,181048855,0,0x0,8
tick,0x7ffad1f6fb64,181064875,0,0x0,8
tick,0x7ffad1f6fb64,181079864,0,0x0,8
tick,0x7ffad1f6fb64,181094876,0,0x0,8
tick,0x7ffad1f6fb64,181110891,0,0x0,8
tick,0x7ffad1f6fb64,181125941,0,0x0,8
tick,0x7ffad1f6fb64,181141919,0,0x0,8
tick,0x7ffad1f6fb64,181157937,0,0x0,8
tick,0x7ffad1f6fb64,181173969,0,0x0,8
tick,0x7ffad1f6fb64,181189963,0,0x0,8
tick,0x7ffad1f6fb64,181206000,0,0x0,8
tick,0x7ffad1f6fb64,181221006,0,0x0,8
tick,0x7ffad1f6fb64,181237031,0,0x0,8
tick,0x7ffad1f6fb64,181253014,0,0x0,8
tick,0x7ffad1f6fb64,181268039,0,0x0,8
tick,0x7ffad1f6fb64,181284054,0,0x0,8
tick,0x7ffad1f6fb64,181300074,0,0x0,8
tick,0x7ffad1f6fb64,181316095,0,0x0,8
tick,0x7ffad1f6fb64,181332093,0,0x0,8
tick,0x7ffad1f6fb64,181347114,0,0x0,8
tick,0x7ffad1f6fb64,181362134,0,0x0,8
tick,0x7ffad1f6fb64,181377149,0,0x0,8
tick,0x7ffad1f6fb64,181393177,0,0x0,8
tick,0x7ffad1f6fb64,181409176,0,0x0,8
tick,0x7ffad1f6fb64,181424177,0,0x0,8
tick,0x7ffad1f6fb64,181440194,0,0x0,8
tick,0x7ffad1f6fb64,181456206,0,0x0,8
tick,0x7ffad1f6fb64,181471217,0,0x0,8
tick,0x7ffad1f6fb64,181487240,0,0x0,8
tick,0x7ffad1f6fb64,181503250,0,0x0,8
tick,0x7ffad1f6fb64,181518260,0,0x0,8
tick,0x7ffad1f6fb64,181533282,0,0x0,8
tick,0x7ffad1f6fb64,181549314,0,0x0,8
tick,0x7ffad1f6fb64,181564329,0,0x0,8
tick,0x7ffad1f6fb64,181579375,0,0x0,8
tick,0x7ffad1f6fb64,181594335,0,0x0,8
tick,0x7ffad1f6fb64,181610349,0,0x0,8
tick,0x7ffad1f6fb64,181625359,0,0x0,8
tick,0x7ffad1f6fb64,181640387,0,0x0,8
tick,0x7ffad1f6fb64,181655375,0,0x0,8
tick,0x7ffad1f6fb64,181670428,0,0x0,8
tick,0x7ffad1f6fb64,181685461,0,0x0,8
tick,0x7ffad1f6fb64,181701425,0,0x0,8
tick,0x7ffad1f6fb64,181717441,0,0x0,8
tick,0x7ffad1f6fb64,181733453,0,0x0,8
tick,0x7ffad1f6fb64,181749473,0,0x0,8
tick,0x7ffad1f6fb64,181765485,0,0x0,8
tick,0x7ffad1f6fb64,181780504,0,0x0,8
tick,0x7ffad1f6fb64,181796535,0,0x0,8
tick,0x7ffad1f6fb64,181811536,0,0x0,8
tick,0x7ffad1f6fb64,181827560,0,0x0,8
tick,0x7ffad1f6fb64,181842553,0,0x0,8
tick,0x7ffad1f6fb64,181858583,0,0x0,8
tick,0x7ffad1f6fb64,181873604,0,0x0,8
tick,0x7ffad1f6fb64,181889609,0,0x0,8
tick,0x7ffad1f6fb64,181905629,0,0x0,8
tick,0x7ffad1f6fb64,181920639,0,0x0,8
tick,0x7ffad1f6fb64,181935653,0,0x0,8
tick,0x7ffad1f6fb64,181951650,0,0x0,8
tick,0x7ffad1f6fb64,181966683,0,0x0,8
tick,0x7ffad1f6fb64,181981690,0,0x0,8
tick,0x7ffad1f6fb64,181997717,0,0x0,8
tick,0x7ffad1f6fb64,182012703,0,0x0,8
tick,0x7ffad1f6fb64,182028732,0,0x0,8
tick,0x7ffad1f6fb64,182043740,0,0x0,8
tick,0x7ffad1f6fb64,182059792,0,0x0,8
tick,0x7ffad1f6fb64,182075783,0,0x0,8
tick,0x7ffad1f6fb64,182091801,0,0x0,8
tick,0x7ffad1f6fb64,182107839,0,0x0,8
tick,0x7ffad1f6fb64,182123826,0,0x0,8
tick,0x7ffad1f6fb64,182139868,0,0x0,8
tick,0x7ffad1f6fb64,182154859,0,0x0,8
tick,0x7ffad1f6fb64,182170902,0,0x0,8
tick,0x7ffad1f6fb64,182186938,0,0x0,8
tick,0x7ffad1f6fb64,182201878,0,0x0,8
tick,0x7ffad1f6fb64,182217904,0,0x0,8
tick,0x7ffad1f6fb64,182232925,0,0x0,8
tick,0x7ffad1f6fb64,182247933,0,0x0,8
tick,0x7ffad1f6fb64,182263940,0,0x0,8
tick,0x7ffad1f6fb64,182279960,0,0x0,8
tick,0x7ffad1f6fb64,182295972,0,0x0,8
tick,0x7ffad1f6fb64,182311982,0,0x0,8
tick,0x7ffad1f6fb64,182327009,0,0x0,8
tick,0x7ffad1f6fb64,182343014,0,0x0,8
tick,0x7ffad1f6fb64,182359031,0,0x0,8
tick,0x7ffad1f6fb64,182375053,0,0x0,8
tick,0x7ffad1f6fb64,182391049,0,0x0,8
tick,0x7ffad1f6fb64,182406179,0,0x0,8
tick,0x7ffad1f6fb64,182421131,0,0x0,8
tick,0x7ffad1f6fb64,182436118,0,0x0,8
tick,0x7ffad1f6fb64,182452108,0,0x0,8
tick,0x7ffad1f6fb64,182468159,0,0x0,8
tick,0x7ffad1f6fb64,182484161,0,0x0,8
tick,0x7ffad1f6fb64,182500151,0,0x0,8
tick,0x7ffad1f6fb64,182516171,0,0x0,8
tick,0x7ffad1f6fb64,182532186,0,0x0,8
tick,0x7ffad1f6fb64,182548212,0,0x0,8
tick,0x7ffad1f6fb64,182564213,0,0x0,8
tick,0x7ffad1f6fb64,182580247,0,0x0,8
tick,0x7ffad1f6fb64,182596265,0,0x0,8
tick,0x7ffad1f6fb64,182612262,0,0x0,8
tick,0x7ffad1f6fb64,182627277,0,0x0,8
tick,0x7ffad1f6fb64,182643282,0,0x0,8
tick,0x7ffad1f6fb64,182659309,0,0x0,8
tick,0x7ffad1f6fb64,182674327,0,0x0,8
tick,0x7ffad1f6fb64,182689384,0,0x0,8
tick,0x7ffad1f6fb64,182705388,0,0x0,8
tick,0x7ffad1f6fb64,182720393,0,0x0,8
tick,0x7ffad1f6fb64,182736381,0,0x0,8
tick,0x7ffad1f6fb64,182752384,0,0x0,8
tick,0x7ffad1f6fb64,182768421,0,0x0,8
tick,0x7ffad1f6fb64,182783418,0,0x0,8
tick,0x7ffad1f6fb64,182799431,0,0x0,8
tick,0x7ffad1f6fb64,182814463,0,0x0,8
tick,0x7ffad1f6fb64,182829471,0,0x0,8
tick,0x7ffad1f6fb64,182844460,0,0x0,8
tick,0x7ffad1f6fb64,182859673,0,0x0,8
tick,0x7ffad1f6fb64,182875504,0,0x0,8
tick,0x7ffad1f6fb64,182891520,0,0x0,8
tick,0x7ffad1f6fb64,182907524,0,0x0,8
tick,0x7ffad1f6fb64,182923550,0,0x0,8
tick,0x7ffad1f6fb64,182939717,0,0x0,8
tick,0x7ffad1f6fb64,182954569,0,0x0,8
tick,0x7ffad1f6fb64,182970595,0,0x0,8
tick,0x7ffad1f6fb64,182985614,0,0x0,8
tick,0x7ffad1f6fb64,183001608,0,0x0,8
tick,0x7ffad1f6fb64,183017634,0,0x0,8
tick,0x7ffad1f6fb64,183033651,0,0x0,8
tick,0x7ffad1f6fb64,183049640,0,0x0,8
tick,0x7ffad1f6fb64,183065667,0,0x0,8
tick,0x7ffad1f6fb64,183081691,0,0x0,8
tick,0x7ffad1f6fb64,183097717,0,0x0,8
tick,0x7ffad1f6fb64,183113717,0,0x0,8
tick,0x7ffad1f6fb64,183128744,0,0x0,8
tick,0x7ffad1f6fb64,183144737,0,0x0,8
tick,0x7ffad1f6fb64,183159792,0,0x0,8
tick,0x7ffad1f6fb64,183174771,0,0x0,8
tick,0x7ffad1f6fb64,183190812,0,0x0,8
tick,0x7ffad1f6fb64,183206816,0,0x0,8
tick,0x7ffad1f6fb64,183221815,0,0x0,8
tick,0x7ffad1f6fb64,183236819,0,0x0,8
tick,0x7ffad1f6fb64,183251852,0,0x0,8
tick,0x7ffad1f6fb64,183266852,0,0x0,8
tick,0x7ffad1f6fb64,183281869,0,0x0,8
tick,0x7ffad1f6fb64,183297896,0,0x0,8
tick,0x7ffad1f6fb64,183313917,0,0x0,8
tick,0x7ffad1f6fb64,183329936,0,0x0,8
tick,0x7ffad1f6fb64,183345928,0,0x0,8
tick,0x7ffad1f6fb64,183360943,0,0x0,8
tick,0x7ffad1f6fb64,183376972,0,0x0,8
tick,0x7ffad1f6fb64,183393201,0,0x0,8
tick,0x7ffad1f6fb64,183408001,0,0x0,8
tick,0x7ffad1f6fb64,183423997,0,0x0,8
tick,0x7ffad1f6fb64,183440011,0,0x0,8
tick,0x7ffad1f6fb64,183456061,0,0x0,8
tick,0x7ffad1f6fb64,183472041,0,0x0,8
tick,0x7ffad1f6fb64,183487052,0,0x0,8
tick,0x7ffad1f6fb64,183503063,0,0x0,8
tick,0x7ffad1f6fb64,183518078,0,0x0,8
tick,0x7ffad1f6fb64,183534104,0,0x0,8
tick,0x7ffad1f6fb64,183550096,0,0x0,8
tick,0x7ffad1f6fb64,183566157,0,0x0,8
tick,0x7ffad1f6fb64,183581135,0,0x0,8
tick,0x7ffad1f6fb64,183597149,0,0x0,8
tick,0x7ffad1f6fb64,183613195,0,0x0,8
tick,0x7ffad1f6fb64,183629189,0,0x0,8
tick,0x7ffad1f6fb64,183644199,0,0x0,8
tick,0x7ffad1f6fb64,183659211,0,0x0,8
tick,0x7ffad1f6fb64,183675240,0,0x0,8
tick,0x7ffad1f6fb64,183690242,0,0x0,8
tick,0x7ffad1f6fb64,183706278,0,0x0,8
tick,0x7ffad1f6fb64,183721259,0,0x0,8
tick,0x7ffad1f6fb64,183736276,0,0x0,8
tick,0x7ffad1f6fb64,183751300,0,0x0,8
tick,0x7ffad1f6fb64,183767325,0,0x0,8
tick,0x7ffad1f6fb64,183782319,0,0x0,8
tick,0x7ffad1f6fb64,183797345,0,0x0,8
tick,0x7ffad1f6fb64,183813347,0,0x0,8
tick,0x7ffad1f6fb64,183829391,0,0x0,8
tick,0x7ffad1f6fb64,183845387,0,0x0,8
tick,0x7ffad1f6fb64,183860439,0,0x0,8
tick,0x7ffad1f6fb64,183876424,0,0x0,8
tick,0x7ffad1f6fb64,183892455,0,0x0,8
tick,0x7ffad1f6fb64,183908438,0,0x0,8
tick,0x7ffad1f6fb64,183924448,0,0x0,8
tick,0x7ffad1f6fb64,183939465,0,0x0,8
tick,0x7ffad1f6fb64,183955482,0,0x0,8
tick,0x7ffad1f6fb64,183971534,0,0x0,8
tick,0x7ffad1f6fb64,183986515,0,0x0,8
tick,0x7ffad1f6fb64,184002522,0,0x0,8
tick,0x7ffad1f6fb64,184017534,0,0x0,8
tick,0x7ffad1f6fb64,184032541,0,0x0,8
tick,0x7ffad1f6fb64,184048564,0,0x0,8
tick,0x7ffad1f6fb64,184064612,0,0x0,8
tick,0x7ffad1f6fb64,184080651,0,0x0,8
tick,0x7ffad1f6fb64,184095604,0,0x0,8
tick,0x7ffad1f6fb64,184111634,0,0x0,8
tick,0x7ffad1f6fb64,184127665,0,0x0,8
tick,0x7ffad1f6fb64,184142646,0,0x0,8
tick,0x7ffad1f6fb64,184157656,0,0x0,8
tick,0x7ffad1f6fb64,184173686,0,0x0,8
tick,0x7ffad1f6fb64,184189708,0,0x0,8
tick,0x7ffad1f6fb64,184204701,0,0x0,8
tick,0x7ffad1f6fb64,184220745,0,0x0,8
tick,0x7ffad1f6fb64,184235789,0,0x0,8
tick,0x7ffad1f6fb64,184250773,0,0x0,8
tick,0x7ffad1f6fb64,184266788,0,0x0,8
tick,0x7ffad1f6fb64,184281795,0,0x0,8
tick,0x7ffad1f6fb64,184296835,0,0x0,8
tick,0x7ffad1f6fb64,184312822,0,0x0,8
tick,0x7ffad1f6fb64,184328851,0,0x0,8
tick,0x7ffad1f6fb64,184344834,0,0x0,8
tick,0x7ffad1f6fb64,184359850,0,0x0,8
tick,0x7ffad1f6fb64,184375878,0,0x0,8
tick,0x7ffad1f6fb64,184391877,0,0x0,8
tick,0x7ffad1f6fb64,184406927,0,0x0,8
tick,0x7ffad1f6fb64,184422918,0,0x0,8
tick,0x7ffad1f6fb64,184437928,0,0x0,8
tick,0x7ffad1f6fb64,184453936,0,0x0,8
tick,0x7ffad1f6fb64,184469945,0,0x0,8
tick,0x7ffad1f6fb64,184485974,0,0x0,8
tick,0x7ffad1f6fb64,184501983,0,0x0,8
tick,0x7ffad1f6fb64,184518019,0,0x0,8
tick,0x7ffad1f6fb64,184533017,0,0x0,8
tick,0x7ffad1f6fb64,184548021,0,0x0,8
tick,0x7ffad1f6fb64,184563048,0,0x0,8
tick,0x7ffad1f6fb64,184579048,0,0x0,8
tick,0x7ffad1f6fb64,184595072,0,0x0,8
tick,0x7ffad1f6fb64,184611141,0,0x0,8
tick,0x7ffad1f6fb64,184627122,0,0x0,8
tick,0x7ffad1f6fb64,184642129,0,0x0,8
tick,0x7ffad1f6fb64,184658155,0,0x0,8
tick,0x7ffad1f6fb64,184673135,0,0x0,8
tick,0x7ffad1f6fb64,184689168,0,0x0,8
tick,0x7ffad1f6fb64,184705164,0,0x0,8
tick,0x7ffad1f6fb64,184720176,0,0x0,8
tick,0x7ffad1f6fb64,184735224,0,0x0,8
tick,0x7ffad1f6fb64,184750220,0,0x0,8
tick,0x7ffad1f6fb64,184766208,0,0x0,8
tick,0x7ffad1f6fb64,184782246,0,0x0,8
tick,0x7ffad1f6fb64,184798255,0,0x0,8
tick,0x7ffad1f6fb64,184814257,0,0x0,8
tick,0x7ffad1f6fb64,184830291,0,0x0,8
tick,0x7ffad1f6fb64,184846294,0,0x0,8
tick,0x7ffad1f6fb64,184862307,0,0x0,8
tick,0x7ffad1f6fb64,184877332,0,0x0,8
tick,0x7ffad1f6fb64,184893345,0,0x0,8
tick,0x7ffad1f6fb64,184909404,0,0x0,8
tick,0x7ffad1f6fb64,184924404,0,0x0,8
tick,0x7ffad1f6fb64,184940453,0,0x0,8
tick,0x7ffad1f6fb64,184956430,0,0x0,8
tick,0x7ffad1f6fb64,184972413,0,0x0,8
tick,0x7ffad1f6fb64,184987425,0,0x0,8
tick,0x7ffad1f6fb64,185003453,0,0x0,8
tick,0x7ffad1f6fb64,185019442,0,0x0,8
tick,0x7ffad1f6fb64,185035513,0,0x0,8
tick,0x7ffad1f6fb64,185050476,0,0x0,8
tick,0x7ffad1f6fb64,185066507,0,0x0,8
tick,0x7ffad1f6fb64,185082492,0,0x0,8
tick,0x7ffad1f6fb64,185098516,0,0x0,8
tick,0x7ffad1f6fb64,185113545,0,0x0,8
tick,0x7ffad1f6fb64,185129592,0,0x0,8
tick,0x7ffad1f6fb64,185144581,0,0x0,8
tick,0x7ffad1f6fb64,185160574,0,0x0,8
tick,0x7ffad1f6fb64,185175607,0,0x0,8
tick,0x7ffad1f6fb64,185190611,0,0x0,8
tick,0x7ffad1f6fb64,185206618,0,0x0,8
tick,0x7ffad1f6fb64,185222622,0,0x0,8
tick,0x7ffad1f6fb64,185237672,0,0x0,8
tick,0x7ffad1f6fb64,185253686,0,0x0,8
tick,0x7ffad1f6fb64,185269673,0,0x0,8
tick,0x7ffad1f6fb64,185285703,0,0x0,8
tick,0x7ffad1f6fb64,185301714,0,0x0,8
tick,0x7ffad1f6fb64,185317729,0,0x0,8
tick,0x7ffad1f6fb64,185333754,0,0x0,8
tick,0x7ffad1f6fb64,185349760,0,0x0,8
tick,0x7ffad1f6fb64,185365773,0,0x0,8
tick,0x7ffad1f6fb64,185381775,0,0x0,8
tick,0x7ffad1f6fb64,185397856,0,0x0,8
tick,0x7ffad1f6fb64,185413824,0,0x0,8
tick,0x7ffad1f6fb64,185429837,0,0x0,8
tick,0x7ffad1f6fb64,185445839,0,0x0,8
tick,0x7ffad1f6fb64,185461843,0,0x0,8
tick,0x7ffad1f6fb64,185477869,0,0x0,8
tick,0x7ffad1f6fb64,185493888,0,0x0,8
tick,0x7ffad1f6fb64,185508900,0,0x0,8
tick,0x7ffad1f6fb64,185524897,0,0x0,8
tick,0x7ffad1f6fb64,185540941,0,0x0,8
tick,0x7ffad1f6fb64,185556953,0,0x0,8
tick,0x7ffad1f6fb64,185571956,0,0x0,8
tick,0x7ffad1f6fb64,185586964,0,0x0,8
tick,0x7ffad1f6fb64,185602976,0,0x0,8
tick,0x7ffad1f6fb64,185619013,0,0x0,8
tick,0x7ffad1f6fb64,185635024,0,0x0,8
tick,0x7ffad1f6fb64,185650056,0,0x0,8
tick,0x7ffad1f6fb64,185666049,0,0x0,8
tick,0x7ffad1f6fb64,185682101,0,0x0,8
tick,0x7ffad1f6fb64,185698081,0,0x0,8
tick,0x7ffad1f6fb64,185714113,0,0x0,8
tick,0x7ffad1f6fb64,185730133,0,0x0,8
tick,0x7ffad1f6fb64,185746132,0,0x0,8
tick,0x7ffad1f6fb64,185762140,0,0x0,8
tick,0x7ffad1f6fb64,185777149,0,0x0,8
tick,0x7ffad1f6fb64,185793179,0,0x0,8
tick,0x7ffad1f6fb64,185809182,0,0x0,8
tick,0x7ffad1f6fb64,185825202,0,0x0,8
tick,0x7ffad1f6fb64,185840223,0,0x0,8
tick,0x7ffad1f6fb64,185856209,0,0x0,8
tick,0x7ffad1f6fb64,185872302,0,0x0,8
tick,0x7ffad1f6fb64,185888269,0,0x0,8
tick,0x7ffad1f6fb64,185904259,0,0x0,8
tick,0x7ffad1f6fb64,185919289,0,0x0,8
tick,0x7ffad1f6fb64,185934306,0,0x0,8
tick,0x7ffad1f6fb64,185950304,0,0x0,8
tick,0x7ffad1f6fb64,185966306,0,0x0,8
tick,0x7ffad1f6fb64,185982342,0,0x0,8
tick,0x7ffad1f6fb64,185997346,0,0x0,8
tick,0x7ffad1f6fb64,186013378,0,0x0,8
tick,0x7ffad1f6fb64,186029365,0,0x0,8
tick,0x7ffad1f6fb64,186045378,0,0x0,8
tick,0x7ffad1f6fb64,186060411,0,0x0,8
tick,0x7ffad1f6fb64,186076420,0,0x0,8
tick,0x7ffad1f6fb64,186092449,0,0x0,8
tick,0x7ffad1f6fb64,186108450,0,0x0,8
tick,0x7ffad1f6fb64,186124470,0,0x0,8
tick,0x7ffad1f6fb64,186140491,0,0x0,8
tick,0x7ffad1f6fb64,186155512,0,0x0,8
tick,0x7ffad1f6fb64,186170527,0,0x0,8
tick,0x7ffad1f6fb64,186186527,0,0x0,8
tick,0x7ffad1f6fb64,186202563,0,0x0,8
tick,0x7ffad1f6fb64,186217548,0,0x0,8
tick,0x7ffad1f6fb64,186233563,0,0x0,8
tick,0x7ffad1f6fb64,186248659,0,0x0,8
tick,0x7ffad1f6fb64,186264645,0,0x0,8
tick,0x7ffad1f6fb64,186280607,0,0x0,8
tick,0x7ffad1f6fb64,186296629,0,0x0,8
tick,0x7ffad1f6fb64,186311632,0,0x0,8
tick,0x7ffad1f6fb64,186327685,0,0x0,8
tick,0x7ffad1f6fb64,186343668,0,0x0,8
tick,0x7ffad1f6fb64,186359658,0,0x0,8
tick,0x7ffad1f6fb64,186375690,0,0x0,8
tick,0x7ffad1f6fb64,186390703,0,0x0,8
tick,0x7ffad1f6fb64,186406738,0,0x0,8
tick,0x7ffad1f6fb64,186421763,0,0x0,8
tick,0x7ffad1f6fb64,186436757,0,0x0,8
tick,0x7ffad1f6fb64,186451741,0,0x0,8
tick,0x7ffad1f6fb64,186466760,0,0x0,8
tick,0x7ffad1f6fb64,186481785,0,0x0,8
tick,0x7ffad1f6fb64,186497933,0,0x0,8
tick,0x7ffad1f6fb64,186512817,0,0x0,8
tick,0x7ffad1f6fb64,186528832,0,0x0,8
tick,0x7ffad1f6fb64,186544861,0,0x0,8
tick,0x7ffad1f6fb64,186560883,0,0x0,8
tick,0x7ffad1f6fb64,186575876,0,0x0,8
tick,0x7ffad1f6fb64,186591887,0,0x0,8
tick,0x7ffad1f6fb64,186606908,0,0x0,8
tick,0x7ffad1f6fb64,186622914,0,0x0,8
tick,0x7ffad1f6fb64,186638935,0,0x0,8
tick,0x7ffad1f6fb64,186653945,0,0x0,8
tick,0x7ffad1f6fb64,186669968,0,0x0,8
tick,0x7ffad1f6fb64,186685966,0,0x0,8
tick,0x7ffad1f6fb64,186701983,0,0x0,8
tick,0x7ffad1f6fb64,186717994,0,0x0,8
tick,0x7ffad1f6fb64,186734000,0,0x0,8
tick,0x7ffad1f6fb64,186750065,0,0x0,8
tick,0x7ffad1f6fb64,186765041,0,0x0,8
tick,0x7ffad1f6fb64,186780054,0,0x0,8
tick,0x7ffad1f6fb64,186796056,0,0x0,8
tick,0x7ffad1f6fb64,186812093,0,0x0,8
tick,0x7ffad1f6fb64,186828134,0,0x0,8
tick,0x7ffad1f6fb64,186844136,0,0x0,8
tick,0x7ffad1f6fb64,186860128,0,0x0,8
tick,0x7ffad1f6fb64,186875176,0,0x0,8
tick,0x7ffad1f6fb64,186891171,0,0x0,8
tick,0x7ffad1f6fb64,186906181,0,0x0,8
tick,0x7ffad1f6fb64,186921198,0,0x0,8
tick,0x7ffad1f6fb64,186936235,0,0x0,8
tick,0x7ffad1f6fb64,186951230,0,0x0,8
tick,0x7ffad1f6fb64,186967227,0,0x0,8
tick,0x7ffad1f6fb64,186982239,0,0x0,8
tick,0x7ffad1f6fb64,186997262,0,0x0,8
tick,0x7ffad1f6fb64,187012257,0,0x0,8
tick,0x7ffad1f6fb64,187027278,0,0x0,8
tick,0x7ffad1f6fb64,187042315,0,0x0,8
tick,0x7ffad1f6fb64,187057313,0,0x0,8
tick,0x7ffad1f6fb64,187073332,0,0x0,8
tick,0x7ffad1f6fb64,187089351,0,0x0,8
tick,0x7ffad1f6fb64,187105346,0,0x0,8
tick,0x7ffad1f6fb64,187120363,0,0x0,8
tick,0x7ffad1f6fb64,187136385,0,0x0,8
tick,0x7ffad1f6fb64,187152421,0,0x0,8
tick,0x7ffad1f6fb64,187168439,0,0x0,8
tick,0x7ffad1f6fb64,187184470,0,0x0,8
tick,0x7ffad1f6fb64,187199441,0,0x0,8
tick,0x7ffad1f6fb64,187215447,0,0x0,8
tick,0x7ffad1f6fb64,187231464,0,0x0,8
tick,0x7ffad1f6fb64,187247486,0,0x0,8
tick,0x7ffad1f6fb64,187263522,0,0x0,8
tick,0x7ffad1f6fb64,187278501,0,0x0,8
tick,0x7ffad1f6fb64,187293536,0,0x0,8
tick,0x7ffad1f6fb64,187309541,0,0x0,8
tick,0x7ffad1f6fb64,187325558,0,0x0,8
tick,0x7ffad1f6fb64,187340567,0,0x0,8
tick,0x7ffad1f6fb64,187356605,0,0x0,8
tick,0x7ffad1f6fb64,187372611,0,0x0,8
tick,0x7ffad1f6fb64,187387602,0,0x0,8
tick,0x7ffad1f6fb64,187403624,0,0x0,8
tick,0x7ffad1f6fb64,187419634,0,0x0,8
tick,0x7ffad1f6fb64,187435660,0,0x0,8
tick,0x7ffad1f6fb64,187451666,0,0x0,8
tick,0x7ffad1f6fb64,187466677,0,0x0,8
tick,0x7ffad1f6fb64,187481693,0,0x0,8
tick,0x7ffad1f6fb64,187496706,0,0x0,8
tick,0x7ffad1f6fb64,187511731,0,0x0,8
tick,0x7ffad1f6fb64,187527729,0,0x0,8
tick,0x7ffad1f6fb64,187543752,0,0x0,8
tick,0x7ffad1f6fb64,187559765,0,0x0,8
tick,0x7ffad1f6fb64,187575776,0,0x0,8
tick,0x7ffad1f6fb64,187591796,0,0x0,8
tick,0x7ffad1f6fb64,187607807,0,0x0,8
tick,0x7ffad1f6fb64,187622863,0,0x0,8
tick,0x7ffad1f6fb64,187637847,0,0x0,8
tick,0x7ffad1f6fb64,187653857,0,0x0,8
tick,0x7ffad1f6fb64,187668870,0,0x0,8
tick,0x7ffad1f6fb64,187684893,0,0x0,8
tick,0x7ffad1f6fb64,187699922,0,0x0,8
tick,0x7ffad1f6fb64,187715911,0,0x0,8
tick,0x7ffad1f6fb64,187731923,0,0x0,8
tick,0x7ffad1f6fb64,187747928,0,0x0,8
tick,0x7ffad1f6fb64,187763981,0,0x0,8
tick,0x7ffad1f6fb64,187779969,0,0x0,8
tick,0x7ffad1f6fb64,187795005,0,0x0,8
tick,0x7ffad1f6fb64,187810002,0,0x0,8
tick,0x7ffad1f6fb64,187826032,0,0x0,8
tick,0x7ffad1f6fb64,187842033,0,0x0,8
tick,0x7ffad1f6fb64,187858068,0,0x0,8
tick,0x7ffad1f6fb64,187873050,0,0x0,8
tick,0x7ffad1f6fb64,187889071,0,0x0,8
tick,0x7ffad1f6fb64,187905077,0,0x0,8
tick,0x7ffad1f6fb64,187920095,0,0x0,8
tick,0x7ffad1f6fb64,187936120,0,0x0,8
tick,0x7ffad1f6fb64,187952131,0,0x0,8
tick,0x7ffad1f6fb64,187968154,0,0x0,8
tick,0x7ffad1f6fb64,187983150,0,0x0,8
tick,0x7ffad1f6fb64,187998161,0,0x0,8
tick,0x7ffad1f6fb64,188013171,0,0x0,8
tick,0x7ffad1f6fb64,188029187,0,0x0,8
tick,0x7ffad1f6fb64,188045200,0,0x0,8
tick,0x7ffad1f6fb64,188061242,0,0x0,8
tick,0x7ffad1f6fb64,188077249,0,0x0,8
tick,0x7ffad1f6fb64,188093240,0,0x0,8
tick,0x7ffad1f6fb64,188109259,0,0x0,8
tick,0x7ffad1f6fb64,188124279,0,0x0,8
tick,0x7ffad1f6fb64,188140298,0,0x0,8
tick,0x7ffad1f6fb64,188156307,0,0x0,8
tick,0x7ffad1f6fb64,188171337,0,0x0,8
tick,0x7ffad1f6fb64,188186337,0,0x0,8
tick,0x7ffad1f6fb64,188202374,0,0x0,8
tick,0x7ffad1f6fb64,188217357,0,0x0,8
tick,0x7ffad1f6fb64,188233377,0,0x0,8
tick,0x7ffad1f6fb64,188249402,0,0x0,8
tick,0x7ffad1f6fb64,188264425,0,0x0,8
tick,0x7ffad1f6fb64,188279449,0,0x0,8
tick,0x7ffad1f6fb64,188295671,0,0x0,8
tick,0x7ffad1f6fb64,188311473,0,0x0,8
tick,0x7ffad1f6fb64,188327470,0,0x0,8
tick,0x7ffad1f6fb64,188343519,0,0x0,8
tick,0x7ffad1f6fb64,188359486,0,0x0,8
tick,0x7ffad1f6fb64,188375534,0,0x0,8
tick,0x7ffad1f6fb64,188391521,0,0x0,8
tick,0x7ffad1f6fb64,188406534,0,0x0,8
tick,0x7ffad1f6fb64,188421620,0,0x0,8
tick,0x7ffad1f6fb64,188436624,0,0x0,8
tick,0x7ffad1f6fb64,188452588,0,0x0,8
tick,0x7ffad1f6fb64,188468597,0,0x0,8
tick,0x7ffad1f6fb64,188484616,0,0x0,8
tick,0x7ffad1f6fb64,188499622,0,0x0,8
tick,0x7ffad1f6fb64,188514641,0,0x0,8
tick,0x7ffad1f6fb64,188530648,0,0x0,8
tick,0x7ffad1f6fb64,188546663,0,0x0,8
tick,0x7ffad1f6fb64,188562690,0,0x0,8
tick,0x7ffad1f6fb64,188578710,0,0x0,8
tick,0x7ffad1f6fb64,188594701,0,0x0,8
tick,0x7ffad1f6fb64,188610716,0,0x0,8
tick,0x7ffad1f6fb64,188626741,0,0x0,8
tick,0x7ffad1f6fb64,188642746,0,0x0,8
tick,0x7ffad1f6fb64,188658768,0,0x0,8
tick,0x7ffad1f6fb64,188674781,0,0x0,8
tick,0x7ffad1f6fb64,188690811,0,0x0,8
tick,0x7ffad1f6fb64,188705819,0,0x0,8
tick,0x7ffad1f6fb64,188721856,0,0x0,8
tick,0x7ffad1f6fb64,188736844,0,0x0,8
tick,0x7ffad1f6fb64,188752862,0,0x0,8
tick,0x7ffad1f6fb64,188768902,0,0x0,8
tick,0x7ffad1f6fb64,188784910,0,0x0,8
tick,0x7ffad1f6fb64,188800911,0,0x0,8
tick,0x7ffad1f6fb64,188815905,0,0x0,8
tick,0x7ffad1f6fb64,188831938,0,0x0,8
tick,0x7ffad1f6fb64,188847933,0,0x0,8
tick,0x7ffad1f6fb64,188863967,0,0x0,8
tick,0x7ffad1f6fb64,188879010,0,0x0,8
tick,0x7ffad1f6fb64,188893977,0,0x0,8
tick,0x7ffad1f6fb64,188910000,0,0x0,8
tick,0x7ffad1f6fb64,188926008,0,0x0,8
tick,0x7ffad1f6fb64,188942038,0,0x0,8
tick,0x7ffad1f6fb64,188958051,0,0x0,8
tick,0x7ffad1f6fb64,188973035,0,0x0,8
tick,0x7ffad1f6fb64,188989066,0,0x0,8
tick,0x7ffad1f6fb64,189005091,0,0x0,8
tick,0x7ffad1f6fb64,189020121,0,0x0,8
tick,0x7ffad1f6fb64,189035199,0,0x0,8
tick,0x7ffad1f6fb64,189050118,0,0x0,8
tick,0x7ffad1f6fb64,189066175,0,0x0,8
tick,0x7ffad1f6fb64,189082154,0,0x0,8
tick,0x7ffad1f6fb64,189098166,0,0x0,8
tick,0x7ffad1f6fb64,189114208,0,0x0,8
tick,0x7ffad1f6fb64,189129200,0,0x0,8
tick,0x7ffad1f6fb64,189145199,0,0x0,8
tick,0x7ffad1f6fb64,189161223,0,0x0,8
tick,0x7ffad1f6fb64,189176221,0,0x0,8
tick,0x7ffad1f6fb64,189191264,0,0x0,8
tick,0x7ffad1f6fb64,189207294,0,0x0,8
tick,0x7ffad1f6fb64,189222274,0,0x0,8
tick,0x7ffad1f6fb64,189238349,0,0x0,8
tick,0x7ffad1f6fb64,189254327,0,0x0,8
tick,0x7ffad1f6fb64,189270347,0,0x0,8
tick,0x7ffad1f6fb64,189286354,0,0x0,8
tick,0x7ffad1f6fb64,189302387,0,0x0,8
tick,0x7ffad1f6fb64,189317431,0,0x0,8
tick,0x7ffad1f6fb64,189333389,0,0x0,8
tick,0x7ffad1f6fb64,189349441,0,0x0,8
tick,0x7ffad1f6fb64,189364414,0,0x0,8
tick,0x7ffad1f6fb64,189379453,0,0x0,8
tick,0x7ffad1f6fb64,189395535,0,0x0,8
tick,0x7ffad1f6fb64,189411473,0,0x0,8
tick,0x7ffad1f6fb64,189426499,0,0x0,8
tick,0x7ffad1f6fb64,189441518,0,0x0,8
tick,0x7ffad1f6fb64,189456505,0,0x0,8
tick,0x7ffad1f6fb64,189472551,0,0x0,8
tick,0x7ffad1f6fb64,189488692,0,0x0,8
tick,0x7ffad1f6fb64,189503573,0,0x0,8
tick,0x7ffad1f6fb64,189519551,0,0x0,8
tick,0x7ffad1f6fb64,189534573,0,0x0,8
tick,0x7ffad1f6fb64,189550565,0,0x0,8
tick,0x7ffad1f6fb64,189565608,0,0x0,8
tick,0x7ffad1f6fb64,189581604,0,0x0,8
tick,0x7ffad1f6fb64,189597618,0,0x0,8
tick,0x7ffad1f6fb64,189613663,0,0x0,8
tick,0x7ffad1f6fb64,189628645,0,0x0,8
tick,0x7ffad1f6fb64,189644657,0,0x0,8
tick,0x7ffad1f6fb64,189660681,0,0x0,8
tick,0x7ffad1f6fb64,189675723,0,0x0,8
tick,0x7ffad1f6fb64,189691762,0,0x0,8
tick,0x7ffad1f6fb64,189706724,0,0x0,8
tick,0x7ffad1f6fb64,189722818,0,0x0,8
tick,0x7ffad1f6fb64,189738753,0,0x0,8
tick,0x7ffad1f6fb64,189754768,0,0x0,8
tick,0x7ffad1f6fb64,189769797,0,0x0,8
tick,0x7ffad1f6fb64,189784804,0,0x0,8
tick,0x7ffad1f6fb64,189800797,0,0x0,8
tick,0x7ffad1f6fb64,189815833,0,0x0,8
tick,0x7ffad1f6fb64,189831847,0,0x0,8
tick,0x7ffad1f6fb64,189847850,0,0x0,8
tick,0x7ffad1f6fb64,189862890,0,0x0,8
tick,0x7ffad1f6fb64,189878895,0,0x0,8
tick,0x7ffad1f6fb64,189893894,0,0x0,8
tick,0x7ffad1f6fb64,189909894,0,0x0,8
tick,0x7ffad1f6fb64,189924919,0,0x0,8
tick,0x7ffad1f6fb64,189940938,0,0x0,8
tick,0x7ffad1f6fb64,189956948,0,0x0,8
tick,0x7ffad1f6fb64,189971945,0,0x0,8
tick,0x7ffad1f6fb64,189986978,0,0x0,8
tick,0x7ffad1f6fb64,190003020,0,0x0,8
tick,0x7ffad1f6fb64,190019030,0,0x0,8
tick,0x7ffad1f6fb64,190035023,0,0x0,8
tick,0x7ffad1f6fb64,190050035,0,0x0,8
tick,0x7ffad1f6fb64,190066076,0,0x0,8
tick,0x7ffad1f6fb64,190081075,0,0x0,8
tick,0x7ffad1f6fb64,190096102,0,0x0,8
tick,0x7ffad1f6fb64,190111113,0,0x0,8
tick,0x7ffad1f6fb64,190127110,0,0x0,8
tick,0x7ffad1f6fb64,190143104,0,0x0,8
tick,0x7ffad1f6fb64,190159124,0,0x0,8
tick,0x7ffad1f6fb64,190174141,0,0x0,8
tick,0x7ffad1f6fb64,190190157,0,0x0,8
tick,0x7ffad1f6fb64,190206172,0,0x0,8
tick,0x7ffad1f6fb64,190221200,0,0x0,8
tick,0x7ffad1f6fb64,190236217,0,0x0,8
tick,0x7ffad1f6fb64,190252214,0,0x0,8
tick,0x7ffad1f6fb64,190267266,0,0x0,8
tick,0x7ffad1f6fb64,190282279,0,0x0,8
tick,0x7ffad1f6fb64,190298264,0,0x0,8
tick,0x7ffad1f6fb64,190314309,0,0x0,8
tick,0x7ffad1f6fb64,190330351,0,0x0,8
tick,0x7ffad1f6fb64,190345321,0,0x0,8
tick,0x7ffad1f6fb64,190361345,0,0x0,8
tick,0x7ffad1f6fb64,190376339,0,0x0,8
tick,0x7ffad1f6fb64,190392340,0,0x0,8
tick,0x7ffad1f6fb64,190408353,0,0x0,8
tick,0x7ffad1f6fb64,190423366,0,0x0,8
tick,0x7ffad1f6fb64,190438383,0,0x0,8
tick,0x7ffad1f6fb64,190454386,0,0x0,8
tick,0x7ffad1f6fb64,190470413,0,0x0,8
tick,0x7ffad1f6fb64,190486435,0,0x0,8
tick,0x7ffad1f6fb64,190501453,0,0x0,8
tick,0x7ffad1f6fb64,190516475,0,0x0,8
tick,0x7ffad1f6fb64,190532468,0,0x0,8
tick,0x7ffad1f6fb64,190547482,0,0x0,8
tick,0x7ffad1f6fb64,190563495,0,0x0,8
tick,0x7ffad1f6fb64,190579521,0,0x0,8
tick,0x7ffad1f6fb64,190595809,0,0x0,8
tick,0x7ffad1f6fb64,190611544,0,0x0,8
tick,0x7ffad1f6fb64,190627562,0,0x0,8
tick,0x7ffad1f6fb64,190643561,0,0x0,8
tick,0x7ffad1f6fb64,190659588,0,0x0,8
tick,0x7ffad1f6fb64,190675809,0,0x0,8
tick,0x7ffad1f6fb64,190690628,0,0x0,8
tick,0x7ffad1f6fb64,190706641,0,0x0,8
tick,0x7ffad1f6fb64,190721650,0,0x0,8
tick,0x7ffad1f6fb64,190736661,0,0x0,8
tick,0x7ffad1f6fb64,190752720,0,0x0,8
tick,0x7ffad1f6fb64,190768715,0,0x0,8
tick,0x7ffad1f6fb64,190784776,0,0x0,8
tick,0x7ffad1f6fb64,190799714,0,0x0,8
tick,0x7ffad1f6fb64,190815738,0,0x0,8
tick,0x7ffad1f6fb64,190830747,0,0x0,8
tick,0x7ffad1f6fb64,190846786,0,0x0,8
tick,0x7ffad1f6fb64,190861773,0,0x0,8
tick,0x7ffad1f6fb64,190877803,0,0x0,8
tick,0x7ffad1f6fb64,190893808,0,0x0,8
tick,0x7ffad1f6fb64,190909808,0,0x0,8
tick,0x7ffad1f6fb64,190925838,0,0x0,8
tick,0x7ffad1f6fb64,190940833,0,0x0,8
tick,0x7ffad1f6fb64,190955909,0,0x0,8
tick,0x7ffad1f6fb64,190971860,0,0x0,8
tick,0x7ffad1f6fb64,190986953,0,0x0,8
tick,0x7ffad1f6fb64,191002908,0,0x0,8
tick,0x7ffad1f6fb64,191018954,0,0x0,8
tick,0x7ffad1f6fb64,191033934,0,0x0,8
tick,0x7ffad1f6fb64,191049947,0,0x0,8
tick,0x7ffad1f6fb64,191065959,0,0x0,8
tick,0x7ffad1f6fb64,191081979,0,0x0,8
tick,0x7ffad1f6fb64,191097000,0,0x0,8
tick,0x7ffad1f6fb64,191113015,0,0x0,8
tick,0x7ffad1f6fb64,191129030,0,0x0,8
tick,0x7ffad1f6fb64,191145032,0,0x0,8
tick,0x7ffad1f6fb64,191161028,0,0x0,8
tick,0x7ffad1f6fb64,191177056,0,0x0,8
tick,0x7ffad1f6fb64,191193087,0,0x0,8
tick,0x7ffad1f6fb64,191208110,0,0x0,8
tick,0x7ffad1f6fb64,191224112,0,0x0,8
tick,0x7ffad1f6fb64,191239117,0,0x0,8
tick,0x7ffad1f6fb64,191254163,0,0x0,8
tick,0x7ffad1f6fb64,191270142,0,0x0,8
tick,0x7ffad1f6fb64,191286162,0,0x0,8
tick,0x7ffad1f6fb64,191302169,0,0x0,8
tick,0x7ffad1f6fb64,191318209,0,0x0,8
tick,0x7ffad1f6fb64,191334196,0,0x0,8
tick,0x7ffad1f6fb64,191350242,0,0x0,8
tick,0x7ffad1f6fb64,191365242,0,0x0,8
tick,0x7ffad1f6fb64,191380239,0,0x0,8
tick,0x7ffad1f6fb64,191395246,0,0x0,8
tick,0x7ffad1f6fb64,191410261,0,0x0,8
tick,0x7ffad1f6fb64,191426295,0,0x0,8
tick,0x7ffad1f6fb64,191442301,0,0x0,8
tick,0x7ffad1f6fb64,191458328,0,0x0,8
tick,0x7ffad1f6fb64,191473320,0,0x0,8
tick,0x7ffad1f6fb64,191488329,0,0x0,8
tick,0x7ffad1f6fb64,191504375,0,0x0,8
tick,0x7ffad1f6fb64,191520375,0,0x0,8
tick,0x7ffad1f6fb64,191536390,0,0x0,8
tick,0x7ffad1f6fb64,191551458,0,0x0,8
tick,0x7ffad1f6fb64,191566411,0,0x0,8
tick,0x7ffad1f6fb64,191582453,0,0x0,8
tick,0x7ffad1f6fb64,191597444,0,0x0,8
tick,0x7ffad1f6fb64,191613459,0,0x0,8
tick,0x7ffad1f6fb64,191628461,0,0x0,8
tick,0x7ffad1f6fb64,191644475,0,0x0,8
tick,0x7ffad1f6fb64,191660486,0,0x0,8
tick,0x7ffad1f6fb64,191675505,0,0x0,8
tick,0x7ffad1f6fb64,191691571,0,0x0,8
tick,0x7ffad1f6fb64,191707558,0,0x0,8
tick,0x7ffad1f6fb64,191723557,0,0x0,8
tick,0x7ffad1f6fb64,191739573,0,0x0,8
tick,0x7ffad1f6fb64,191754596,0,0x0,8
tick,0x7ffad1f6fb64,191769653,0,0x0,8
tick,0x7ffad1f6fb64,191785616,0,0x0,8
tick,0x7ffad1f6fb64,191800621,0,0x0,8
tick,0x7ffad1f6fb64,191815649,0,0x0,8
tick,0x7ffad1f6fb64,191830666,0,0x0,8
tick,0x7ffad1f6fb64,191845671,0,0x0,8
tick,0x7ffad1f6fb64,191861701,0,0x0,8
tick,0x7ffad1f6fb64,191877759,0,0x0,8
tick,0x7ffad1f6fb64,191893745,0,0x0,8
tick,0x7ffad1f6fb64,191908765,0,0x0,8
tick,0x7ffad1f6fb64,191923741,0,0x0,8
tick,0x7ffad1f6fb64,191938767,0,0x0,8
tick,0x7ffad1f6fb64,191953752,0,0x0,8
tick,0x7ffad1f6fb64,191969816,0,0x0,8
tick,0x7ffad1f6fb64,191984795,0,0x0,8
tick,0x7ffad1f6fb64,192000824,0,0x0,8
tick,0x7ffad1f6fb64,192015825,0,0x0,8
tick,0x7ffad1f6fb64,192031848,0,0x0,8
tick,0x7ffad1f6fb64,192046869,0,0x0,8
tick,0x7ffad1f6fb64,192061886,0,0x0,8
tick,0x7ffad1f6fb64,192077905,0,0x0,8
tick,0x7ffad1f6fb64,192093900,0,0x0,8
tick,0x7ffad1f6fb64,192108917,0,0x0,8
tick,0x7ffad1f6fb64,192124928,0,0x0,8
tick,0x7ffad1f6fb64,192139936,0,0x0,8
tick,0x7ffad1f6fb64,192154962,0,0x0,8
tick,0x7ffad1f6fb64,192169964,0,0x0,8
tick,0x7ffad1f6fb64,192185006,0,0x0,8
tick,0x7ffad1f6fb64,192200991,0,0x0,8
tick,0x7ffad1f6fb64,192216013,0,0x0,8
tick,0x7ffad1f6fb64,192232047,0,0x0,8
tick,0x7ffad1f6fb64,192247062,0,0x0,8
tick,0x7ffad1f6fb64,192262065,0,0x0,8
tick,0x7ffad1f6fb64,192278111,0,0x0,8
tick,0x7ffad1f6fb64,192294096,0,0x0,8
tick,0x7ffad1f6fb64,192310107,0,0x0,8
tick,0x7ffad1f6fb64,192326135,0,0x0,8
tick,0x7ffad1f6fb64,192341116,0,0x0,8
tick,0x7ffad1f6fb64,192357135,0,0x0,8
tick,0x7ffad1f6fb64,192373171,0,0x0,8
tick,0x7ffad1f6fb64,192389190,0,0x0,8
tick,0x7ffad1f6fb64,192405205,0,0x0,8
tick,0x7ffad1f6fb64,192420193,0,0x0,8
tick,0x7ffad1f6fb64,192436486,0,0x0,8
tick,0x7ffad1f6fb64,192451338,0,0x0,8
tick,0x7ffad1f6fb64,192466268,0,0x0,8
tick,0x7ffad1f6fb64,192481265,0,0x0,8
tick,0x7ffad1f6fb64,192497266,0,0x0,8
tick,0x7ffad1f6fb64,192512292,0,0x0,8
tick,0x7ffad1f6fb64,192527303,0,0x0,8
tick,0x7ffad1f6fb64,192542324,0,0x0,8
tick,0x7ffad1f6fb64,192558368,0,0x0,8
tick,0x7ffad1f6fb64,192573372,0,0x0,8
tick,0x7ffad1f6fb64,192588336,0,0x0,8
tick,0x7ffad1f6fb64,192604363,0,0x0,8
tick,0x7ffad1f6fb64,192619390,0,0x0,8
tick,0x7ffad1f6fb64,192634428,0,0x0,8
tick,0x7ffad1f6fb64,192650415,0,0x0,8
tick,0x7ffad1f6fb64,192665421,0,0x0,8
tick,0x7ffad1f6fb64,192680436,0,0x0,8
tick,0x7ffad1f6fb64,192695456,0,0x0,8
tick,0x7ffad1f6fb64,192711460,0,0x0,8
tick,0x7ffad1f6fb64,192726514,0,0x0,8
tick,0x7ffad1f6fb64,192741501,0,0x0,8
tick,0x7ffad1f6fb64,192757528,0,0x0,8
tick,0x7ffad1f6fb64,192772544,0,0x0,8
tick,0x7ffad1f6fb64,192787609,0,0x0,8
tick,0x7ffad1f6fb64,192802594,0,0x0,8
tick,0x7ffad1f6fb64,192817584,0,0x0,8
tick,0x7ffad1f6fb64,192833594,0,0x0,8
tick,0x7ffad1f6fb64,192848601,0,0x0,8
tick,0x7ffad1f6fb64,192864648,0,0x0,8
tick,0x7ffad1f6fb64,192879638,0,0x0,8
tick,0x7ffad1f6fb64,192895659,0,0x0,8
tick,0x7ffad1f6fb64,192910659,0,0x0,8
tick,0x7ffad1f6fb64,192925675,0,0x0,8
tick,0x7ffad1f6fb64,192940672,0,0x0,8
tick,0x7ffad1f6fb64,192955682,0,0x0,8
tick,0x7ffad1f6fb64,192971706,0,0x0,8
tick,0x7ffad1f6fb64,192986723,0,0x0,8
tick,0x7ffad1f6fb64,193001717,0,0x0,8
tick,0x7ffad1f6fb64,193017728,0,0x0,8
tick,0x7ffad1f6fb64,193032767,0,0x0,8
tick,0x7ffad1f6fb64,193047789,0,0x0,8
tick,0x7ffad1f6fb64,193063790,0,0x0,8
tick,0x7ffad1f6fb64,193078794,0,0x0,8
tick,0x7ffad1f6fb64,193093805,0,0x0,8
tick,0x7ffad1f6fb64,193108819,0,0x0,8
tick,0x7ffad1f6fb64,193123837,0,0x0,8
tick,0x7ffad1f6fb64,193139837,0,0x0,8
tick,0x7ffad1f6fb64,193154865,0,0x0,8
tick,0x7ffad1f6fb64,193170907,0,0x0,8
tick,0x7ffad1f6fb64,193186885,0,0x0,8
tick,0x7ffad1f6fb64,193202894,0,0x0,8
tick,0x7ffad1f6fb64,193218918,0,0x0,8
tick,0x7ffad1f6fb64,193233946,0,0x0,8
tick,0x7ffad1f6fb64,193250070,0,0x0,8
tick,0x7ffad1f6fb64,193265970,0,0x0,8
tick,0x7ffad1f6fb64,193280990,0,0x0,8
tick,0x7ffad1f6fb64,193296021,0,0x0,8
tick,0x7ffad1f6fb64,193312009,0,0x0,8
tick,0x7ffad1f6fb64,193328024,0,0x0,8
tick,0x7ffad1f6fb64,193344032,0,0x0,8
tick,0x7ffad1f6fb64,193359055,0,0x0,8
tick,0x7ffad1f6fb64,193375085,0,0x0,8
tick,0x7ffad1f6fb64,193391090,0,0x0,8
tick,0x7ffad1f6fb64,193406092,0,0x0,8
tick,0x7ffad1f6fb64,193421139,0,0x0,8
tick,0x7ffad1f6fb64,193437129,0,0x0,8
tick,0x7ffad1f6fb64,193453145,0,0x0,8
tick,0x7ffad1f6fb64,193469145,0,0x0,8
tick,0x7ffad1f6fb64,193484185,0,0x0,8
tick,0x7ffad1f6fb64,193499166,0,0x0,8
tick,0x7ffad1f6fb64,193515189,0,0x0,8
tick,0x7ffad1f6fb64,193531204,0,0x0,8
tick,0x7ffad1f6fb64,193547231,0,0x0,8
tick,0x7ffad1f6fb64,193562239,0,0x0,8
tick,0x7ffad1f6fb64,193577247,0,0x0,8
tick,0x7ffad1f6fb64,193593275,0,0x0,8
tick,0x7ffad1f6fb64,193609288,0,0x0,8
tick,0x7ffad1f6fb64,193625303,0,0x0,8
tick,0x7ffad1f6fb64,193640305,0,0x0,8
tick,0x7ffad1f6fb64,193656321,0,0x0,8
tick,0x7ffad1f6fb64,193672334,0,0x0,8
tick,0x7ffad1f6fb64,193688392,0,0x0,8
tick,0x7ffad1f6fb64,193703540,0,0x0,8
tick,0x7ffad1f6fb64,193718418,0,0x0,8
tick,0x7ffad1f6fb64,193734404,0,0x0,8
tick,0x7ffad1f6fb64,193750408,0,0x0,8
tick,0x7ffad1f6fb64,193766404,0,0x0,8
tick,0x7ffad1f6fb64,193781420,0,0x0,8
tick,0x7ffad1f6fb64,193797476,0,0x0,8
tick,0x7ffad1f6fb64,193812488,0,0x0,8
tick,0x7ffad1f6fb64,193827496,0,0x0,8
tick,0x7ffad1f6fb64,193842474,0,0x0,8
tick,0x7ffad1f6fb64,193857497,0,0x0,8
tick,0x7ffad1f6fb64,193872511,0,0x0,8
tick,0x7ffad1f6fb64,193888515,0,0x0,8
tick,0x7ffad1f6fb64,193904556,0,0x0,8
tick,0x7ffad1f6fb64,193920604,0,0x0,8
tick,0x7ffad1f6fb64,193935589,0,0x0,8
tick,0x7ffad1f6fb64,193950590,0,0x0,8
tick,0x7ffad1f6fb64,193966591,0,0x0,8
tick,0x7ffad1f6fb64,193981621,0,0x0,8
tick,0x7ffad1f6fb64,193997635,0,0x0,8
tick,0x7ffad1f6fb64,194013621,0,0x0,8
tick,0x7ffad1f6fb64,194029664,0,0x0,8
tick,0x7ffad1f6fb64,194045697,0,0x0,8
tick,0x7ffad1f6fb64,194060707,0,0x0,8
tick,0x7ffad1f6fb64,194075698,0,0x0,8
tick,0x7ffad1f6fb64,194091711,0,0x0,8
tick,0x7ffad1f6fb64,194107736,0,0x0,8
tick,0x7ffad1f6fb64,194123740,0,0x0,8
tick,0x7ffad1f6fb64,194138770,0,0x0,8
tick,0x7ffad1f6fb64,194154762,0,0x0,8
tick,0x7ffad1f6fb64,194169778,0,0x0,8
tick,0x7ffad1f6fb64,194185793,0,0x0,8
tick,0x7ffad1f6fb64,194201827,0,0x0,8
tick,0x7ffad1f6fb64,194217821,0,0x0,8
tick,0x7ffad1f6fb64,194233834,0,0x0,8
tick,0x7ffad1f6fb64,194248866,0,0x0,8
tick,0x7ffad1f6fb64,194264873,0,0x0,8
tick,0x7ffad1f6fb64,194279901,0,0x0,8
tick,0x7ffad1f6fb64,194294899,0,0x0,8
tick,0x7ffad1f6fb64,194310953,0,0x0,8
tick,0x7ffad1f6fb64,194325933,0,0x0,8
tick,0x7ffad1f6fb64,194341948,0,0x0,8
tick,0x7ffad1f6fb64,194357145,0,0x0,8
tick,0x7ffad1f6fb64,194372980,0,0x0,8
tick,0x7ffad1f6fb64,194388985,0,0x0,8
tick,0x7ffad1f6fb64,194405005,0,0x0,8
tick,0x7ffad1f6fb64,194421024,0,0x0,8
tick,0x7ffad1f6fb64,194436033,0,0x0,8
tick,0x7ffad1f6fb64,194452025,0,0x0,8
tick,0x7ffad1f6fb64,194468080,0,0x0,8
tick,0x7ffad1f6fb64,194483065,0,0x0,8
tick,0x7ffad1f6fb64,194498078,0,0x0,8
tick,0x7ffad1f6fb64,194514096,0,0x0,8
tick,0x7ffad1f6fb64,194530102,0,0x0,8
tick,0x7ffad1f6fb64,194546136,0,0x0,8
tick,0x7ffad1f6fb64,194561187,0,0x0,8
tick,0x7ffad1f6fb64,194577168,0,0x0,8
tick,0x7ffad1f6fb64,194593175,0,0x0,8
tick,0x7ffad1f6fb64,194608192,0,0x0,8
tick,0x7ffad1f6fb64,194623219,0,0x0,8
tick,0x7ffad1f6fb64,194638251,0,0x0,8
tick,0x7ffad1f6fb64,194653234,0,0x0,8
tick,0x7ffad1f6fb64,194669270,0,0x0,8
tick,0x7ffad1f6fb64,194685311,0,0x0,8
tick,0x7ffad1f6fb64,194700311,0,0x0,8
tick,0x7ffad1f6fb64,194716288,0,0x0,8
tick,0x7ffad1f6fb64,194731355,0,0x0,8
tick,0x7ffad1f6fb64,194746318,0,0x0,8
tick,0x7ffad1f6fb64,194762337,0,0x0,8
tick,0x7ffad1f6fb64,194777359,0,0x0,8
tick,0x7ffad1f6fb64,194793389,0,0x0,8
tick,0x7ffad1f6fb64,194808379,0,0x0,8
tick,0x7ffad1f6fb64,194824439,0,0x0,8
tick,0x7ffad1f6fb64,194839418,0,0x0,8
tick,0x7ffad1f6fb64,194855456,0,0x0,8
tick,0x7ffad1f6fb64,194870458,0,0x0,8
tick,0x7ffad1f6fb64,194886469,0,0x0,8
tick,0x7ffad1f6fb64,194901462,0,0x0,8
tick,0x7ffad1f6fb64,194917512,0,0x0,8
tick,0x7ffad1f6fb64,194933548,0,0x0,8
tick,0x7ffad1f6fb64,194948504,0,0x0,8
tick,0x7ffad1f6fb64,194963533,0,0x0,8
tick,0x7ffad1f6fb64,194978513,0,0x0,8
tick,0x7ffad1f6fb64,194993549,0,0x0,8
tick,0x7ffad1f6fb64,195008547,0,0x0,8
tick,0x7ffad1f6fb64,195024604,0,0x0,8
tick,0x7ffad1f6fb64,195039598,0,0x0,8
tick,0x7ffad1f6fb64,195054586,0,0x0,8
tick,0x7ffad1f6fb64,195069613,0,0x0,8
tick,0x7ffad1f6fb64,195084634,0,0x0,8
tick,0x7ffad1f6fb64,195099629,0,0x0,8
tick,0x7ffad1f6fb64,195115646,0,0x0,8
tick,0x7ffad1f6fb64,195130703,0,0x0,8
tick,0x7ffad1f6fb64,195145733,0,0x0,8
tick,0x7ffad1f6fb64,195160698,0,0x0,8
tick,0x7ffad1f6fb64,195175702,0,0x0,8
tick,0x7ffad1f6fb64,195190708,0,0x0,8
tick,0x7ffad1f6fb64,195206730,0,0x0,8
tick,0x7ffad1f6fb64,195222784,0,0x0,8
tick,0x7ffad1f6fb64,195237769,0,0x0,8
tick,0x7ffad1f6fb64,195253758,0,0x0,8
tick,0x7ffad1f6fb64,195269787,0,0x0,8
tick,0x7ffad1f6fb64,195285856,0,0x0,8
tick,0x7ffad1f6fb64,195300805,0,0x0,8
tick,0x7ffad1f6fb64,195315820,0,0x0,8
tick,0x7ffad1f6fb64,195331846,0,0x0,8
tick,0x7ffad1f6fb64,195346861,0,0x0,8
tick,0x7ffad1f6fb64,195361881,0,0x0,8
tick,0x7ffad1f6fb64,195377903,0,0x0,8
tick,0x7ffad1f6fb64,195393899,0,0x0,8
tick,0x7ffad1f6fb64,195408922,0,0x0,8
tick,0x7ffad1f6fb64,195424926,0,0x0,8
tick,0x7ffad1f6fb64,195440966,0,0x0,8
tick,0x7ffad1f6fb64,195455960,0,0x0,8
tick,0x7ffad1f6fb64,195470982,0,0x0,8
tick,0x7ffad1f6fb64,195486982,0,0x0,8
tick,0x7ffad1f6fb64,195502013,0,0x0,8
tick,0x7ffad1f6fb64,195518013,0,0x0,8
tick,0x7ffad1f6fb64,195534022,0,0x0,8
tick,0x7ffad1f6fb64,195550045,0,0x0,8
tick,0x7ffad1f6fb64,195565054,0,0x0,8
tick,0x7ffad1f6fb64,195580078,0,0x0,8
tick,0x7ffad1f6fb64,195596080,0,0x0,8
tick,0x7ffad1f6fb64,195612153,0,0x0,8
tick,0x7ffad1f6fb64,195627114,0,0x0,8
tick,0x7ffad1f6fb64,195643124,0,0x0,8
tick,0x7ffad1f6fb64,195658161,0,0x0,8
tick,0x7ffad1f6fb64,195674175,0,0x0,8
tick,0x7ffad1f6fb64,195690175,0,0x0,8
tick,0x7ffad1f6fb64,195706191,0,0x0,8
tick,0x7ffad1f6fb64,195721201,0,0x0,8
tick,0x7ffad1f6fb64,195737225,0,0x0,8
tick,0x7ffad1f6fb64,195753220,0,0x0,8
tick,0x7ffad1f6fb64,195769255,0,0x0,8
tick,0x7ffad1f6fb64,195784289,0,0x0,8
tick,0x7ffad1f6fb64,195799310,0,0x0,8
tick,0x7ffad1f6fb64,195815310,0,0x0,8
tick,0x7ffad1f6fb64,195830321,0,0x0,8
tick,0x7ffad1f6fb64,195845332,0,0x0,8
tick,0x7ffad1f6fb64,195861330,0,0x0,8
tick,0x7ffad1f6fb64,195877349,0,0x0,8
tick,0x7ffad1f6fb64,195892357,0,0x0,8
tick,0x7ffad1f6fb64,195908367,0,0x0,8
tick,0x7ffad1f6fb64,195923374,0,0x0,8
tick,0x7ffad1f6fb64,195939396,0,0x0,8
tick,0x7ffad1f6fb64,195955439,0,0x0,8
tick,0x7ffad1f6fb64,195971460,0,0x0,8
tick,0x7ffad1f6fb64,195986445,0,0x0,8
tick,0x7ffad1f6fb64,196002448,0,0x0,8
tick,0x7ffad1f6fb64,196017492,0,0x0,8
tick,0x7ffad1f6fb64,196033476,0,0x0,8
tick,0x7ffad1f6fb64,196049480,0,0x0,8
tick,0x7ffad1f6fb64,196064522,0,0x0,8
tick,0x7ffad1f6fb64,196079523,0,0x0,8
tick,0x7ffad1f6fb64,196094564,0,0x0,8
tick,0x7ffad1f6fb64,196110550,0,0x0,8
tick,0x7ffad1f6fb64,196125564,0,0x0,8
tick,0x7ffad1f6fb64,196140575,0,0x0,8
tick,0x7ffad1f6fb64,196156597,0,0x0,8
tick,0x7ffad1f6fb64,196172609,0,0x0,8
tick,0x7ffad1f6fb64,196187615,0,0x0,8
tick,0x7ffad1f6fb64,196203653,0,0x0,8
tick,0x7ffad1f6fb64,196219662,0,0x0,8
tick,0x7ffad1f6fb64,196234665,0,0x0,8
tick,0x7ffad1f6fb64,196249672,0,0x0,8
tick,0x7ffad1f6fb64,196265685,0,0x0,8
tick,0x7ffad1f6fb64,196281720,0,0x0,8
tick,0x7ffad1f6fb64,196297741,0,0x0,8
tick,0x7ffad1f6fb64,196312817,0,0x0,8
tick,0x7ffad1f6fb64,196327772,0,0x0,8
tick,0x7ffad1f6fb64,196342803,0,0x0,8
tick,0x7ffad1f6fb64,196357846,0,0x0,8
tick,0x7ffad1f6fb64,196373816,0,0x0,8
tick,0x7ffad1f6fb64,196388820,0,0x0,8
tick,0x7ffad1f6fb64,196403842,0,0x0,8
tick,0x7ffad1f6fb64,196418872,0,0x0,8
tick,0x7ffad1f6fb64,196434856,0,0x0,8
tick,0x7ffad1f6fb64,196449865,0,0x0,8
tick,0x7ffad1f6fb64,196464951,0,0x0,8
tick,0x7ffad1f6fb64,196479910,0,0x0,8
tick,0x7ffad1f6fb64,196494935,0,0x0,8
tick,0x7ffad1f6fb64,196509923,0,0x0,8
tick,0x7ffad1f6fb64,196526058,0,0x0,8
tick,0x7ffad1f6fb64,196540963,0,0x0,8
tick,0x7ffad1f6fb64,196555988,0,0x0,8
tick,0x7ffad1f6fb64,196571218,0,0x0,8
tick,0x7ffad1f6fb64,196586010,0,0x0,8
tick,0x7ffad1f6fb64,196601028,0,0x0,8
tick,0x7ffad1f6fb64,196616057,0,0x0,8
tick,0x7ffad1f6fb64,196631059,0,0x0,8
tick,0x7ffad1f6fb64,196646066,0,0x0,8
tick,0x7ffad1f6fb64,196662054,0,0x0,8
tick,0x7ffad1f6fb64,196677072,0,0x0,8
tick,0x7ffad1f6fb64,196693117,0,0x0,8
tick,0x7ffad1f6fb64,196709144,0,0x0,8
tick,0x7ffad1f6fb64,196725135,0,0x0,8
tick,0x7ffad1f6fb64,196740198,0,0x0,8
tick,0x7ffad1f6fb64,196755147,0,0x0,8
tick,0x7ffad1f6fb64,196771314,0,0x0,8
tick,0x7ffad1f6fb64,196786178,0,0x0,8
tick,0x7ffad1f6fb64,196801193,0,0x0,8
tick,0x7ffad1f6fb64,196817188,0,0x0,8
tick,0x7ffad1f6fb64,196832221,0,0x0,8
tick,0x7ffad1f6fb64,196847218,0,0x0,8
tick,0x7ffad1f6fb64,196863264,0,0x0,8
tick,0x7ffad1f6fb64,196878262,0,0x0,8
tick,0x7ffad1f6fb64,196894264,0,0x0,8
tick,0x7ffad1f6fb64,196910280,0,0x0,8
tick,0x7ffad1f6fb64,196926322,0,0x0,8
tick,0x7ffad1f6fb64,196941328,0,0x0,8
tick,0x7ffad1f6fb64,196957335,0,0x0,8
tick,0x7ffad1f6fb64,196973366,0,0x0,8
tick,0x7ffad1f6fb64,196988388,0,0x0,8
tick,0x7ffad1f6fb64,197003377,0,0x0,8
tick,0x7ffad1f6fb64,197018386,0,0x0,8
tick,0x7ffad1f6fb64,197034397,0,0x0,8
tick,0x7ffad1f6fb64,197049391,0,0x0,8
tick,0x7ffad1f6fb64,197064437,0,0x0,8
tick,0x7ffad1f6fb64,197079422,0,0x0,8
tick,0x7ffad1f6fb64,197094448,0,0x0,8
tick,0x7ffad1f6fb64,197110476,0,0x0,8
tick,0x7ffad1f6fb64,197125466,0,0x0,8
tick,0x7ffad1f6fb64,197140484,0,0x0,8
tick,0x7ffad1f6fb64,197155495,0,0x0,8
tick,0x7ffad1f6fb64,197171549,0,0x0,8
tick,0x7ffad1f6fb64,197187512,0,0x0,8
tick,0x7ffad1f6fb64,197202535,0,0x0,8
tick,0x7ffad1f6fb64,197217561,0,0x0,8
tick,0x7ffad1f6fb64,197232576,0,0x0,8
tick,0x7ffad1f6fb64,197248575,0,0x0,8
tick,0x7ffad1f6fb64,197263620,0,0x0,8
tick,0x7ffad1f6fb64,197278635,0,0x0,8
tick,0x7ffad1f6fb64,197294632,0,0x0,8
tick,0x7ffad1f6fb64,197310671,0,0x0,8
tick,0x7ffad1f6fb64,197325716,0,0x0,8
tick,0x7ffad1f6fb64,197340688,0,0x0,8
tick,0x7ffad1f6fb64,197356692,0,0x0,8
tick,0x7ffad1f6fb64,197371714,0,0x0,8
tick,0x7ffad1f6fb64,197387744,0,0x0,8
tick,0x7ffad1f6fb64,197402741,0,0x0,8
tick,0x7ffad1f6fb64,197418755,0,0x0,8
tick,0x7ffad1f6fb64,197433756,0,0x0,8
tick,0x7ffad1f6fb64,197448770,0,0x0,8
tick,0x7ffad1f6fb64,197464904,0,0x0,8
tick,0x7ffad1f6fb64,197479815,0,0x0,8
tick,0x7ffad1f6fb64,197494831,0,0x0,8
tick,0x7ffad1f6fb64,197510827,0,0x0,8
tick,0x7ffad1f6fb64,197526842,0,0x0,8
tick,0x7ffad1f6fb64,197541854,0,0x0,8
tick,0x7ffad1f6fb64,197557860,0,0x0,8
tick,0x7ffad1f6fb64,197573895,0,0x0,8
tick,0x7ffad1f6fb64,197588898,0,0x0,8
tick,0x7ffad1f6fb64,197604918,0,0x0,8
tick,0x7ffad1f6fb64,197620937,0,0x0,8
tick,0x7ffad1f6fb64,197635958,0,0x0,8
tick,0x7ffad1f6fb64,197650950,0,0x0,8
tick,0x7ffad1f6fb64,197665976,0,0x0,8
tick,0x7ffad1f6fb64,197680980,0,0x0,8
tick,0x7ffad1f6fb64,197695986,0,0x0,8
tick,0x7ffad1f6fb64,197711020,0,0x0,8
tick,0x7ffad1f6fb64,197727023,0,0x0,8
tick,0x7ffad1f6fb64,197743041,0,0x0,8
tick,0x7ffad1f6fb64,197758055,0,0x0,8
tick,0x7ffad1f6fb64,197774072,0,0x0,8
tick,0x7ffad1f6fb64,197790078,0,0x0,8
tick,0x7ffad1f6fb64,197805083,0,0x0,8
tick,0x7ffad1f6fb64,197820123,0,0x0,8
tick,0x7ffad1f6fb64,197836134,0,0x0,8
tick,0x7ffad1f6fb64,197851133,0,0x0,8
tick,0x7ffad1f6fb64,197866157,0,0x0,8
tick,0x7ffad1f6fb64,197881210,0,0x0,8
tick,0x7ffad1f6fb64,197897193,0,0x0,8
tick,0x7ffad1f6fb64,197913201,0,0x0,8
tick,0x7ffad1f6fb64,197929227,0,0x0,8
tick,0x7ffad1f6fb64,197945278,0,0x0,8
tick,0x7ffad1f6fb64,197961271,0,0x0,8
tick,0x7ffad1f6fb64,197976287,0,0x0,8
tick,0x7ffad1f6fb64,197991292,0,0x0,8
tick,0x7ffad1f6fb64,198006295,0,0x0,8
tick,0x7ffad1f6fb64,198021308,0,0x0,8
tick,0x7ffad1f6fb64,198037337,0,0x0,8
tick,0x7ffad1f6fb64,198052309,0,0x0,8
tick,0x7ffad1f6fb64,198067373,0,0x0,8
tick,0x7ffad1f6fb64,198082361,0,0x0,8
tick,0x7ffad1f6fb64,198098362,0,0x0,8
tick,0x7ffad1f6fb64,198114384,0,0x0,8
tick,0x7ffad1f6fb64,198130398,0,0x0,8
tick,0x7ffad1f6fb64,198145421,0,0x0,8
tick,0x7ffad1f6fb64,198160426,0,0x0,8
tick,0x7ffad1f6fb64,198175498,0,0x0,8
tick,0x7ffad1f6fb64,198190443,0,0x0,8
tick,0x7ffad1f6fb64,198206449,0,0x0,8
tick,0x7ffad1f6fb64,198222472,0,0x0,8
tick,0x7ffad1f6fb64,198237490,0,0x0,8
tick,0x7ffad1f6fb64,198252531,0,0x0,8
tick,0x7ffad1f6fb64,198268540,0,0x0,8
tick,0x7ffad1f6fb64,198284547,0,0x0,8
tick,0x7ffad1f6fb64,198299543,0,0x0,8
tick,0x7ffad1f6fb64,198315560,0,0x0,8
tick,0x7ffad1f6fb64,198331569,0,0x0,8
tick,0x7ffad1f6fb64,198347587,0,0x0,8
tick,0x7ffad1f6fb64,198363645,0,0x0,8
tick,0x7ffad1f6fb64,198378705,0,0x0,8
tick,0x7ffad1f6fb64,198393657,0,0x0,8
tick,0x7ffad1f6fb64,198409647,0,0x0,8
tick,0x7ffad1f6fb64,198425658,0,0x0,8
tick,0x7ffad1f6fb64,198440765,0,0x0,8
tick,0x7ffad1f6fb64,198456682,0,0x0,8
tick,0x7ffad1f6fb64,198472716,0,0x0,8
tick,0x7ffad1f6fb64,198488713,0,0x0,8
tick,0x7ffad1f6fb64,198504748,0,0x0,8
tick,0x7ffad1f6fb64,198519752,0,0x0,8
tick,0x7ffad1f6fb64,198535757,0,0x0,8
tick,0x7ffad1f6fb64,198550758,0,0x0,8
tick,0x7ffad1f6fb64,198566782,0,0x0,8
tick,0x7ffad1f6fb64,198581809,0,0x0,8
tick,0x7ffad1f6fb64,198597810,0,0x0,8
tick,0x7ffad1f6fb64,198613841,0,0x0,8
tick,0x7ffad1f6fb64,198628885,0,0x0,8
tick,0x7ffad1f6fb64,198644864,0,0x0,8
tick,0x7ffad1f6fb64,198659861,0,0x0,8
tick,0x7ffad1f6fb64,198675898,0,0x0,8
tick,0x7ffad1f6fb64,198690907,0,0x0,8
tick,0x7ffad1f6fb64,198705941,0,0x0,8
tick,0x7ffad1f6fb64,198721957,0,0x0,8
tick,0x7ffad1f6fb64,198736940,0,0x0,8
tick,0x7ffad1f6fb64,198751964,0,0x0,8
tick,0x7ffad1f6fb64,198767992,0,0x0,8
tick,0x7ffad1f6fb64,198783981,0,0x0,8
tick,0x7ffad1f6fb64,198799026,0,0x0,8
tick,0x7ffad1f6fb64,198815015,0,0x0,8
tick,0x7ffad1f6fb64,198830064,0,0x0,8
tick,0x7ffad1f6fb64,198846060,0,0x0,8
tick,0x7ffad1f6fb64,198862051,0,0x0,8
tick,0x7ffad1f6fb64,198877082,0,0x0,8
tick,0x7ffad1f6fb64,198893149,0,0x0,8
tick,0x7ffad1f6fb64,198909122,0,0x0,8
tick,0x7ffad1f6fb64,198925110,0,0x0,8
tick,0x7ffad1f6fb64,198940126,0,0x0,8
tick,0x7ffad1f6fb64,198955159,0,0x0,8
tick,0x7ffad1f6fb64,198971149,0,0x0,8
tick,0x7ffad1f6fb64,198987169,0,0x0,8
tick,0x7ffad1f6fb64,199003184,0,0x0,8
tick,0x7ffad1f6fb64,199018257,0,0x0,8
tick,0x7ffad1f6fb64,199034199,0,0x0,8
tick,0x7ffad1f6fb64,199050216,0,0x0,8
tick,0x7ffad1f6fb64,199066248,0,0x0,8
tick,0x7ffad1f6fb64,199081257,0,0x0,8
tick,0x7ffad1f6fb64,199097263,0,0x0,8
tick,0x7ffad1f6fb64,199112282,0,0x0,8
tick,0x7ffad1f6fb64,199127306,0,0x0,8
tick,0x7ffad1f6fb64,199143310,0,0x0,8
tick,0x7ffad1f6fb64,199158340,0,0x0,8
tick,0x7ffad1f6fb64,199174346,0,0x0,8
tick,0x7ffad1f6fb64,199190368,0,0x0,8
tick,0x7ffad1f6fb64,199205376,0,0x0,8
tick,0x7ffad1f6fb64,199220404,0,0x0,8
tick,0x7ffad1f6fb64,199235402,0,0x0,8
tick,0x7ffad1f6fb64,199250397,0,0x0,8
tick,0x7ffad1f6fb64,199266474,0,0x0,8
tick,0x7ffad1f6fb64,199281468,0,0x0,8
tick,0x7ffad1f6fb64,199297465,0,0x0,8
tick,0x7ffad1f6fb64,199312470,0,0x0,8
tick,0x7ffad1f6fb64,199327517,0,0x0,8
tick,0x7ffad1f6fb64,199342511,0,0x0,8
tick,0x7ffad1f6fb64,199358529,0,0x0,8
tick,0x7ffad1f6fb64,199373550,0,0x0,8
tick,0x7ffad1f6fb64,199389585,0,0x0,8
tick,0x7ffad1f6fb64,199404575,0,0x0,8
tick,0x7ffad1f6fb64,199419584,0,0x0,8
tick,0x7ffad1f6fb64,199434581,0,0x0,8
tick,0x7ffad1f6fb64,199449608,0,0x0,8
tick,0x7ffad1f6fb64,199464610,0,0x0,8
tick,0x7ffad1f6fb64,199479672,0,0x0,8
tick,0x7ffad1f6fb64,199495680,0,0x0,8
tick,0x7ffad1f6fb64,199510656,0,0x0,8
tick,0x7ffad1f6fb64,199525808,0,0x0,8
tick,0x7ffad1f6fb64,199540668,0,0x0,8
tick,0x7ffad1f6fb64,199555717,0,0x0,8
tick,0x7ffad1f6fb64,199570706,0,0x0,8
tick,0x7ffad1f6fb64,199586922,0,0x0,8
tick,0x7ffad1f6fb64,199601739,0,0x0,8
tick,0x7ffad1f6fb64,199616783,0,0x0,8
tick,0x7ffad1f6fb64,199631781,0,0x0,8
tick,0x7ffad1f6fb64,199646756,0,0x0,8
tick,0x7ffad1f6fb64,199662790,0,0x0,8
tick,0x7ffad1f6fb64,199677794,0,0x0,8
tick,0x7ffad1f6fb64,199693880,0,0x0,8
tick,0x7ffad1f6fb64,199708820,0,0x0,8
tick,0x7ffad1f6fb64,199724852,0,0x0,8
tick,0x7ffad1f6fb64,199739861,0,0x0,8
tick,0x7ffad1f6fb64,199754877,0,0x0,8
tick,0x7ffad1f6fb64,199769883,0,0x0,8
tick,0x7ffad1f6fb64,199784900,0,0x0,8
tick,0x7ffad1f6fb64,199799943,0,0x0,8
tick,0x7ffad1f6fb64,199815973,0,0x0,8
tick,0x7ffad1f6fb64,199830950,0,0x0,8
tick,0x7ffad1f6fb64,199845954,0,0x0,8
tick,0x7ffad1f6fb64,199860969,0,0x0,8
tick,0x7ffad1f6fb64,199876997,0,0x0,8
tick,0x7ffad1f6fb64,199893023,0,0x0,8
tick,0x7ffad1f6fb64,199908017,0,0x0,8
tick,0x7ffad1f6fb64,199923048,0,0x0,8
tick,0x7ffad1f6fb64,199938024,0,0x0,8
tick,0x7ffad1f6fb64,199954058,0,0x0,8
tick,0x7ffad1f6fb64,199969070,0,0x0,8
tick,0x7ffad1f6fb64,199985106,0,0x0,8
tick,0x7ffad1f6fb64,200000267,0,0x0,8
tick,0x7ffad1f6fb64,200016139,0,0x0,8
tick,0x7ffad1f6fb64,200031156,0,0x0,8
tick,0x7ffad1f6fb64,200047157,0,0x0,8
tick,0x7ffad1f6fb64,200062148,0,0x0,8
tick,0x7ffad1f6fb64,200077178,0,0x0,8
tick,0x7ffad1f6fb64,200092176,0,0x0,8
tick,0x7ffad1f6fb64,200108179,0,0x0,8
tick,0x7ffad1f6fb64,200124250,0,0x0,8
tick,0x7ffad1f6fb64,200139209,0,0x0,8
tick,0x7ffad1f6fb64,200155232,0,0x0,8
tick,0x7ffad1f6fb64,200170248,0,0x0,8
tick,0x7ffad1f6fb64,200186326,0,0x0,8
tick,0x7ffad1f6fb64,200201296,0,0x0,8
tick,0x7ffad1f6fb64,200217288,0,0x0,8
tick,0x7ffad1f6fb64,200232310,0,0x0,8
tick,0x7ffad1f6fb64,200247348,0,0x0,8
tick,0x7ffad1f6fb64,200262330,0,0x0,8
tick,0x7ffad1f6fb64,200277363,0,0x0,8
tick,0x7ffad1f6fb64,200292356,0,0x0,8
tick,0x7ffad1f6fb64,200308393,0,0x0,8
tick,0x7ffad1f6fb64,200324406,0,0x0,8
tick,0x7ffad1f6fb64,200340406,0,0x0,8
tick,0x7ffad1f6fb64,200356449,0,0x0,8
tick,0x7ffad1f6fb64,200371416,0,0x0,8
tick,0x7ffad1f6fb64,200386450,0,0x0,8
tick,0x7ffad1f6fb64,200402448,0,0x0,8
tick,0x7ffad1f6fb64,200417484,0,0x0,8
tick,0x7ffad1f6fb64,200433527,0,0x0,8
tick,0x7ffad1f6fb64,200449514,0,0x0,8
tick,0x7ffad1f6fb64,200464520,0,0x0,8
tick,0x7ffad1f6fb64,200479554,0,0x0,8
tick,0x7ffad1f6fb64,200495545,0,0x0,8
tick,0x7ffad1f6fb64,200511550,0,0x0,8
tick,0x7ffad1f6fb64,200527594,0,0x0,8
tick,0x7ffad1f6fb64,200543625,0,0x0,8
tick,0x7ffad1f6fb64,200558603,0,0x0,8
tick,0x7ffad1f6fb64,200574604,0,0x0,8
tick,0x7ffad1f6fb64,200590631,0,0x0,8
tick,0x7ffad1f6fb64,200605641,0,0x0,8
tick,0x7ffad1f6fb64,200621659,0,0x0,8
tick,0x7ffad1f6fb64,200637699,0,0x0,8
tick,0x7ffad1f6fb64,200652678,0,0x0,8
tick,0x7ffad1f6fb64,200668694,0,0x0,8
tick,0x7ffad1f6fb64,200684747,0,0x0,8
tick,0x7ffad1f6fb64,200699740,0,0x0,8
tick,0x7ffad1f6fb64,200715742,0,0x0,8
tick,0x7ffad1f6fb64,200731754,0,0x0,8
tick,0x7ffad1f6fb64,200747788,0,0x0,8
tick,0x7ffad1f6fb64,200763791,0,0x0,8
tick,0x7ffad1f6fb64,200778788,0,0x0,8
tick,0x7ffad1f6fb64,200793856,0,0x0,8
tick,0x7ffad1f6fb64,200808847,0,0x0,8
tick,0x7ffad1f6fb64,200823844,0,0x0,8
tick,0x7ffad1f6fb64,200839849,0,0x0,8
tick,0x7ffad1f6fb64,200855885,0,0x0,8
tick,0x7ffad1f6fb64,200871892,0,0x0,8
tick,0x7ffad1f6fb64,200886917,0,0x0,8
tick,0x7ffad1f6fb64,200902922,0,0x0,8
tick,0x7ffad1f6fb64,200917941,0,0x0,8
tick,0x7ffad1f6fb64,200933982,0,0x0,8
tick,0x7ffad1f6fb64,200948989,0,0x0,8
tick,0x7ffad1f6fb64,200964057,0,0x0,8
tick,0x7ffad1f6fb64,200980031,0,0x0,8
tick,0x7ffad1f6fb64,200996019,0,0x0,8
tick,0x7ffad1f6fb64,201012016,0,0x0,8
tick,0x7ffad1f6fb64,201027028,0,0x0,8
tick,0x7ffad1f6fb64,201042067,0,0x0,8
tick,0x7ffad1f6fb64,201058093,0,0x0,8
tick,0x7ffad1f6fb64,201073115,0,0x0,8
tick,0x7ffad1f6fb64,201089110,0,0x0,8
tick,0x7ffad1f6fb64,201105140,0,0x0,8
tick,0x7ffad1f6fb64,201120154,0,0x0,8
tick,0x7ffad1f6fb64,201135204,0,0x0,8
tick,0x7ffad1f6fb64,201150175,0,0x0,8
tick,0x7ffad1f6fb64,201166204,0,0x0,8
tick,0x7ffad1f6fb64,201181204,0,0x0,8
tick,0x7ffad1f6fb64,201197219,0,0x0,8
tick,0x7ffad1f6fb64,201213229,0,0x0,8
tick,0x7ffad1f6fb64,201228298,0,0x0,8
tick,0x7ffad1f6fb64,201244214,0,0x0,8
tick,0x7ffad1f6fb64,201259252,0,0x0,8
tick,0x7ffad1f6fb64,201275275,0,0x0,8
tick,0x7ffad1f6fb64,201291306,0,0x0,8
tick,0x7ffad1f6fb64,201307312,0,0x0,8
tick,0x7ffad1f6fb64,201322313,0,0x0,8
tick,0x7ffad1f6fb64,201337347,0,0x0,8
tick,0x7ffad1f6fb64,201353366,0,0x0,8
tick,0x7ffad1f6fb64,201369369,0,0x0,8
tick,0x7ffad1f6fb64,201385363,0,0x0,8
tick,0x7ffad1f6fb64,201400394,0,0x0,8
tick,0x7ffad1f6fb64,201415399,0,0x0,8
tick,0x7ffad1f6fb64,201430427,0,0x0,8
tick,0x7ffad1f6fb64,201445421,0,0x0,8
tick,0x7ffad1f6fb64,201461458,0,0x0,8
tick,0x7ffad1f6fb64,201476456,0,0x0,8
tick,0x7ffad1f6fb64,201491459,0,0x0,8
tick,0x7ffad1f6fb64,201507486,0,0x0,8
tick,0x7ffad1f6fb64,201522499,0,0x0,8
tick,0x7ffad1f6fb64,201537527,0,0x0,8
tick,0x7ffad1f6fb64,201553536,0,0x0,8
tick,0x7ffad1f6fb64,201569548,0,0x0,8
tick,0x7ffad1f6fb64,201585558,0,0x0,8
tick,0x7ffad1f6fb64,201600561,0,0x0,8
tick,0x7ffad1f6fb64,201616647,0,0x0,8
tick,0x7ffad1f6fb64,201631592,0,0x0,8
tick,0x7ffad1f6fb64,201647603,0,0x0,8
tick,0x7ffad1f6fb64,201663646,0,0x0,8
tick,0x7ffad1f6fb64,201678626,0,0x0,8
tick,0x7ffad1f6fb64,201694647,0,0x0,8
tick,0x7ffad1f6fb64,201710664,0,0x0,8
tick,0x7ffad1f6fb64,201725678,0,0x0,8
tick,0x7ffad1f6fb64,201740681,0,0x0,8
tick,0x7ffad1f6fb64,201755719,0,0x0,8
tick,0x7ffad1f6fb64,201770713,0,0x0,8
tick,0x7ffad1f6fb64,201785729,0,0x0,8
tick,0x7ffad1f6fb64,201801740,0,0x0,8
tick,0x7ffad1f6fb64,201817748,0,0x0,8
tick,0x7ffad1f6fb64,201833779,0,0x0,8
tick,0x7ffad1f6fb64,201848780,0,0x0,8
tick,0x7ffad1f6fb64,201864818,0,0x0,8
tick,0x7ffad1f6fb64,201879918,0,0x0,8
tick,0x7ffad1f6fb64,201895865,0,0x0,8
tick,0x7ffad1f6fb64,201910860,0,0x0,8
tick,0x7ffad1f6fb64,201926872,0,0x0,8
tick,0x7ffad1f6fb64,201942876,0,0x0,8
tick,0x7ffad1f6fb64,201957869,0,0x0,8
tick,0x7ffad1f6fb64,201973911,0,0x0,8
tick,0x7ffad1f6fb64,201989925,0,0x0,8
tick,0x7ffad1f6fb64,202005961,0,0x0,8
tick,0x7ffad1f6fb64,202021957,0,0x0,8
tick,0x7ffad1f6fb64,202036978,0,0x0,8
tick,0x7ffad1f6fb64,202052962,0,0x0,8
tick,0x7ffad1f6fb64,202068056,0,0x0,8
tick,0x7ffad1f6fb64,202084061,0,0x0,8
tick,0x7ffad1f6fb64,202099050,0,0x0,8
tick,0x7ffad1f6fb64,202114112,0,0x0,8
tick,0x7ffad1f6fb64,202130040,0,0x0,8
tick,0x7ffad1f6fb64,202146070,0,0x0,8
tick,0x7ffad1f6fb64,202161077,0,0x0,8
tick,0x7ffad1f6fb64,202177077,0,0x0,8
tick,0x7ffad1f6fb64,202193092,0,0x0,8
tick,0x7ffad1f6fb64,202209125,0,0x0,8
tick,0x7ffad1f6fb64,202225134,0,0x0,8
tick,0x7ffad1f6fb64,202240139,0,0x0,8
tick,0x7ffad1f6fb64,202256166,0,0x0,8
tick,0x7ffad1f6fb64,202271172,0,0x0,8
tick,0x7ffad1f6fb64,202287180,0,0x0,8
tick,0x7ffad1f6fb64,202303199,0,0x0,8
tick,0x7ffad1f6fb64,202318226,0,0x0,8
tick,0x7ffad1f6fb64,202334269,0,0x0,8
tick,0x7ffad1f6fb64,202349252,0,0x0,8
tick,0x7ffad1f6fb64,202365262,0,0x0,8
tick,0x7ffad1f6fb64,202380285,0,0x0,8
tick,0x7ffad1f6fb64,202395273,0,0x0,8
tick,0x7ffad1f6fb64,202411308,0,0x0,8
tick,0x7ffad1f6fb64,202427323,0,0x0,8
tick,0x7ffad1f6fb64,202443305,0,0x0,8
tick,0x7ffad1f6fb64,202459325,0,0x0,8
tick,0x7ffad1f6fb64,202474348,0,0x0,8
tick,0x7ffad1f6fb64,202489390,0,0x0,8
tick,0x7ffad1f6fb64,202504365,0,0x0,8
tick,0x7ffad1f6fb64,202519379,0,0x0,8
tick,0x7ffad1f6fb64,202535402,0,0x0,8
tick,0x7ffad1f6fb64,202551416,0,0x0,8
tick,0x7ffad1f6fb64,202566433,0,0x0,8
tick,0x7ffad1f6fb64,202581464,0,0x0,8
tick,0x7ffad1f6fb64,202596494,0,0x0,8
tick,0x7ffad1f6fb64,202611490,0,0x0,8
tick,0x7ffad1f6fb64,202626493,0,0x0,8
tick,0x7ffad1f6fb64,202642480,0,0x0,8
tick,0x7ffad1f6fb64,202658528,0,0x0,8
tick,0x7ffad1f6fb64,202674536,0,0x0,8
tick,0x7ffad1f6fb64,202690543,0,0x0,8
tick,0x7ffad1f6fb64,202706758,0,0x0,8
tick,0x7ffad1f6fb64,202722566,0,0x0,8
tick,0x7ffad1f6fb64,202737617,0,0x0,8
tick,0x7ffad1f6fb64,202753611,0,0x0,8
tick,0x7ffad1f6fb64,202769644,0,0x0,8
tick,0x7ffad1f6fb64,202784639,0,0x0,8
tick,0x7ffad1f6fb64,202799651,0,0x0,8
tick,0x7ffad1f6fb64,202815675,0,0x0,8
tick,0x7ffad1f6fb64,202831683,0,0x0,8
tick,0x7ffad1f6fb64,202847690,0,0x0,8
tick,0x7ffad1f6fb64,202862700,0,0x0,8
tick,0x7ffad1f6fb64,202877715,0,0x0,8
tick,0x7ffad1f6fb64,202892732,0,0x0,8
tick,0x7ffad1f6fb64,202908746,0,0x0,8
tick,0x7ffad1f6fb64,202924774,0,0x0,8
tick,0x7ffad1f6fb64,202939759,0,0x0,8
tick,0x7ffad1f6fb64,202954778,0,0x0,8
tick,0x7ffad1f6fb64,202970817,0,0x0,8
tick,0x7ffad1f6fb64,202986901,0,0x0,8
tick,0x7ffad1f6fb64,203002855,0,0x0,8
tick,0x7ffad1f6fb64,203017843,0,0x0,8
tick,0x7ffad1f6fb64,203033875,0,0x0,8
tick,0x7ffad1f6fb64,203049859,0,0x0,8
tick,0x7ffad1f6fb64,203065888,0,0x0,8
tick,0x7ffad1f6fb64,203080898,0,0x0,8
tick,0x7ffad1f6fb64,203095925,0,0x0,8
tick,0x7ffad1f6fb64,203110948,0,0x0,8
tick,0x7ffad1f6fb64,203125937,0,0x0,8
tick,0x7ffad1f6fb64,203140963,0,0x0,8
tick,0x7ffad1f6fb64,203156976,0,0x0,8
tick,0x7ffad1f6fb64,203172989,0,0x0,8
tick,0x7ffad1f6fb64,203189011,0,0x0,8
tick,0x7ffad1f6fb64,203205005,0,0x0,8
tick,0x7ffad1f6fb64,203220028,0,0x0,8
tick,0x7ffad1f6fb64,203236088,0,0x0,8
tick,0x7ffad1f6fb64,203251069,0,0x0,8
tick,0x7ffad1f6fb64,203266074,0,0x0,8
tick,0x7ffad1f6fb64,203281092,0,0x0,8
tick,0x7ffad1f6fb64,203297124,0,0x0,8
tick,0x7ffad1f6fb64,203313105,0,0x0,8
tick,0x7ffad1f6fb64,203329111,0,0x0,8
tick,0x7ffad1f6fb64,203345131,0,0x0,8
tick,0x7ffad1f6fb64,203360365,0,0x0,8
tick,0x7ffad1f6fb64,203376176,0,0x0,8
tick,0x7ffad1f6fb64,203392201,0,0x0,8
tick,0x7ffad1f6fb64,203407202,0,0x0,8
tick,0x7ffad1f6fb64,203422215,0,0x0,8
tick,0x7ffad1f6fb64,203437221,0,0x0,8
tick,0x7ffad1f6fb64,203453223,0,0x0,8
tick,0x7ffad1f6fb64,203469269,0,0x0,8
tick,0x7ffad1f6fb64,203485263,0,0x0,8
tick,0x7ffad1f6fb64,203500286,0,0x0,8
tick,0x7ffad1f6fb64,203516309,0,0x0,8
tick,0x7ffad1f6fb64,203532301,0,0x0,8
tick,0x7ffad1f6fb64,203547325,0,0x0,8
tick,0x7ffad1f6fb64,203563335,0,0x0,8
tick,0x7ffad1f6fb64,203578355,0,0x0,8
tick,0x7ffad1f6fb64,203594369,0,0x0,8
tick,0x7ffad1f6fb64,203610397,0,0x0,8
tick,0x7ffad1f6fb64,203625412,0,0x0,8
tick,0x7ffad1f6fb64,203640436,0,0x0,8
tick,0x7ffad1f6fb64,203656408,0,0x0,8
tick,0x7ffad1f6fb64,203671435,0,0x0,8
tick,0x7ffad1f6fb64,203687460,0,0x0,8
tick,0x7ffad1f6fb64,203703452,0,0x0,8
tick,0x7ffad1f6fb64,203719488,0,0x0,8
tick,0x7ffad1f6fb64,203734490,0,0x0,8
tick,0x7ffad1f6fb64,203750558,0,0x0,8
tick,0x7ffad1f6fb64,203765514,0,0x0,8
tick,0x7ffad1f6fb64,203780550,0,0x0,8
tick,0x7ffad1f6fb64,203795567,0,0x0,8
tick,0x7ffad1f6fb64,203811566,0,0x0,8
tick,0x7ffad1f6fb64,203827610,0,0x0,8
tick,0x7ffad1f6fb64,203843596,0,0x0,8
tick,0x7ffad1f6fb64,203858605,0,0x0,8
tick,0x7ffad1f6fb64,203874619,0,0x0,8
tick,0x7ffad1f6fb64,203890626,0,0x0,8
tick,0x7ffad1f6fb64,203906666,0,0x0,8
tick,0x7ffad1f6fb64,203921667,0,0x0,8
tick,0x7ffad1f6fb64,203937673,0,0x0,8
tick,0x7ffad1f6fb64,203953685,0,0x0,8
tick,0x7ffad1f6fb64,203969713,0,0x0,8
tick,0x7ffad1f6fb64,203984712,0,0x0,8
tick,0x7ffad1f6fb64,203999722,0,0x0,8
tick,0x7ffad1f6fb64,204015789,0,0x0,8
tick,0x7ffad1f6fb64,204031774,0,0x0,8
tick,0x7ffad1f6fb64,204047817,0,0x0,8
tick,0x7ffad1f6fb64,204062819,0,0x0,8
tick,0x7ffad1f6fb64,204078800,0,0x0,8
tick,0x7ffad1f6fb64,204094819,0,0x0,8
tick,0x7ffad1f6fb64,204110838,0,0x0,8
tick,0x7ffad1f6fb64,204125884,0,0x0,8
tick,0x7ffad1f6fb64,204140878,0,0x0,8
tick,0x7ffad1f6fb64,204156866,0,0x0,8
tick,0x7ffad1f6fb64,204171899,0,0x0,8
tick,0x7ffad1f6fb64,204187900,0,0x0,8
tick,0x7ffad1f6fb64,204202913,0,0x0,8
tick,0x7ffad1f6fb64,204218941,0,0x0,8
tick,0x7ffad1f6fb64,204233963,0,0x0,8
tick,0x7ffad1f6fb64,204249962,0,0x0,8
tick,0x7ffad1f6fb64,204264975,0,0x0,8
tick,0x7ffad1f6fb64,204280010,0,0x0,8
tick,0x7ffad1f6fb64,204296016,0,0x0,8
tick,0x7ffad1f6fb64,204312020,0,0x0,8
tick,0x7ffad1f6fb64,204327089,0,0x0,8
tick,0x7ffad1f6fb64,204343062,0,0x0,8
tick,0x7ffad1f6fb64,204359062,0,0x0,8
tick,0x7ffad1f6fb64,204375088,0,0x0,8
tick,0x7ffad1f6fb64,204390100,0,0x0,8
tick,0x7ffad1f6fb64,204406119,0,0x0,8
tick,0x7ffad1f6fb64,204421127,0,0x0,8
tick,0x7ffad1f6fb64,204436150,0,0x0,8
tick,0x7ffad1f6fb64,204451156,0,0x0,8
tick,0x7ffad1f6fb64,204466154,0,0x0,8
tick,0x7ffad1f6fb64,204481178,0,0x0,8
tick,0x7ffad1f6fb64,204497190,0,0x0,8
tick,0x7ffad1f6fb64,204513193,0,0x0,8
tick,0x7ffad1f6fb64,204528232,0,0x0,8
tick,0x7ffad1f6fb64,204544286,0,0x0,8
tick,0x7ffad1f6fb64,204559260,0,0x0,8
tick,0x7ffad1f6fb64,204575268,0,0x0,8
tick,0x7ffad1f6fb64,204591284,0,0x0,8
tick,0x7ffad1f6fb64,204607293,0,0x0,8
tick,0x7ffad1f6fb64,204622307,0,0x0,8
tick,0x7ffad1f6fb64,204637326,0,0x0,8
tick,0x7ffad1f6fb64,204653432,0,0x0,8
tick,0x7ffad1f6fb64,204669355,0,0x0,8
tick,0x7ffad1f6fb64,204685356,0,0x0,8
tick,0x7ffad1f6fb64,204701380,0,0x0,8
tick,0x7ffad1f6fb64,204717401,0,0x0,8
tick,0x7ffad1f6fb64,204732425,0,0x0,8
tick,0x7ffad1f6fb64,204748594,0,0x0,8
tick,0x7ffad1f6fb64,204763471,0,0x0,8
tick,0x7ffad1f6fb64,204778465,0,0x0,8
tick,0x7ffad1f6fb64,204793493,0,0x0,8
tick,0x7ffad1f6fb64,204808470,0,0x0,8
tick,0x7ffad1f6fb64,204824496,0,0x0,8
tick,0x7ffad1f6fb64,204840492,0,0x0,8
tick,0x7ffad1f6fb64,204856532,0,0x0,8
tick,0x7ffad1f6fb64,204872527,0,0x0,8
tick,0x7ffad1f6fb64,204888544,0,0x0,8
tick,0x7ffad1f6fb64,204904553,0,0x0,8
tick,0x7ffad1f6fb64,204920574,0,0x0,8
tick,0x7ffad1f6fb64,204936632,0,0x0,8
tick,0x7ffad1f6fb64,204951584,0,0x0,8
tick,0x7ffad1f6fb64,204966617,0,0x0,8
tick,0x7ffad1f6fb64,204981636,0,0x0,8
tick,0x7ffad1f6fb64,204997662,0,0x0,8
tick,0x7ffad1f6fb64,205012659,0,0x0,8
tick,0x7ffad1f6fb64,205027725,0,0x0,8
tick,0x7ffad1f6fb64,205042711,0,0x0,8
tick,0x7ffad1f6fb64,205058722,0,0x0,8
tick,0x7ffad1f6fb64,205073716,0,0x0,8
tick,0x7ffad1f6fb64,205089739,0,0x0,8
tick,0x7ffad1f6fb64,205105746,0,0x0,8
tick,0x7ffad1f6fb64,205121776,0,0x0,8
tick,0x7ffad1f6fb64,205137771,0,0x0,8
tick,0x7ffad1f6fb64,205152780,0,0x0,8
tick,0x7ffad1f6fb64,205167819,0,0x0,8
tick,0x7ffad1f6fb64,205183812,0,0x0,8
tick,0x7ffad1f6fb64,205198812,0,0x0,8
tick,0x7ffad1f6fb64,205213848,0,0x0,8
tick,0x7ffad1f6fb64,205229851,0,0x0,8
tick,0x7ffad1f6fb64,205245869,0,0x0,8
tick,0x7ffad1f6fb64,205261877,0,0x0,8
tick,0x7ffad1f6fb64,205276899,0,0x0,8
tick,0x7ffad1f6fb64,205291922,0,0x0,8
tick,0x7ffad1f6fb64,205307987,0,0x0,8
tick,0x7ffad1f6fb64,205322980,0,0x0,8
tick,0x7ffad1f6fb64,205337954,0,0x0,8
tick,0x7ffad1f6fb64,205353972,0,0x0,8
tick,0x7ffad1f6fb64,205369982,0,0x0,8
tick,0x7ffad1f6fb64,205386019,0,0x0,8
tick,0x7ffad1f6fb64,205401066,0,0x0,8
tick,0x7ffad1f6fb64,205417032,0,0x0,8
tick,0x7ffad1f6fb64,205433047,0,0x0,8
tick,0x7ffad1f6fb64,205449050,0,0x0,8
tick,0x7ffad1f6fb64,205465076,0,0x0,8
tick,0x7ffad1f6fb64,205480070,0,0x0,8
tick,0x7ffad1f6fb64,205496104,0,0x0,8
tick,0x7ffad1f6fb64,205511122,0,0x0,8
tick,0x7ffad1f6fb64,205526139,0,0x0,8
tick,0x7ffad1f6fb64,205542165,0,0x0,8
tick,0x7ffad1f6fb64,205558194,0,0x0,8
tick,0x7ffad1f6fb64,205573209,0,0x0,8
tick,0x7ffad1f6fb64,205589197,0,0x0,8
tick,0x7ffad1f6fb64,205605187,0,0x0,8
tick,0x7ffad1f6fb64,205620220,0,0x0,8
tick,0x7ffad1f6fb64,205635241,0,0x0,8
tick,0x7ffad1f6fb64,205650298,0,0x0,8
tick,0x7ffad1f6fb64,205665262,0,0x0,8
tick,0x7ffad1f6fb64,205680265,0,0x0,8
tick,0x7ffad1f6fb64,205695287,0,0x0,8
tick,0x7ffad1f6fb64,205710307,0,0x0,8
tick,0x7ffad1f6fb64,205726315,0,0x0,8
tick,0x7ffad1f6fb64,205742313,0,0x0,8
tick,0x7ffad1f6fb64,205758337,0,0x0,8
tick,0x7ffad1f6fb64,205773344,0,0x0,8
tick,0x7ffad1f6fb64,205789373,0,0x0,8
tick,0x7ffad1f6fb64,205805367,0,0x0,8
tick,0x7ffad1f6fb64,205820402,0,0x0,8
tick,0x7ffad1f6fb64,205836415,0,0x0,8
tick,0x7ffad1f6fb64,205852418,0,0x0,8
tick,0x7ffad1f6fb64,205867447,0,0x0,8
tick,0x7ffad1f6fb64,205882440,0,0x0,8
tick,0x7ffad1f6fb64,205898462,0,0x0,8
tick,0x7ffad1f6fb64,205914479,0,0x0,8
tick,0x7ffad1f6fb64,205930493,0,0x0,8
tick,0x7ffad1f6fb64,205946506,0,0x0,8
tick,0x7ffad1f6fb64,205962519,0,0x0,8
tick,0x7ffad1f6fb64,205977540,0,0x0,8
tick,0x7ffad1f6fb64,205993560,0,0x0,8
tick,0x7ffad1f6fb64,206009573,0,0x0,8
tick,0x7ffad1f6fb64,206025600,0,0x0,8
tick,0x7ffad1f6fb64,206040599,0,0x0,8
tick,0x7ffad1f6fb64,206056607,0,0x0,8
tick,0x7ffad1f6fb64,206072637,0,0x0,8
tick,0x7ffad1f6fb64,206088702,0,0x0,8
tick,0x7ffad1f6fb64,206104651,0,0x0,8
tick,0x7ffad1f6fb64,206120677,0,0x0,8
tick,0x7ffad1f6fb64,206136676,0,0x0,8
tick,0x7ffad1f6fb64,206151704,0,0x0,8
tick,0x7ffad1f6fb64,206166725,0,0x0,8
tick,0x7ffad1f6fb64,206181769,0,0x0,8
tick,0x7ffad1f6fb64,206196738,0,0x0,8
tick,0x7ffad1f6fb64,206212740,0,0x0,8
tick,0x7ffad1f6fb64,206227766,0,0x0,8
tick,0x7ffad1f6fb64,206243773,0,0x0,8
tick,0x7ffad1f6fb64,206258783,0,0x0,8
tick,0x7ffad1f6fb64,206274815,0,0x0,8
tick,0x7ffad1f6fb64,206290815,0,0x0,8
tick,0x7ffad1f6fb64,206305849,0,0x0,8
tick,0x7ffad1f6fb64,206320928,0,0x0,8
tick,0x7ffad1f6fb64,206336037,0,0x0,8
tick,0x7ffad1f6fb64,206350887,0,0x0,8
tick,0x7ffad1f6fb64,206365888,0,0x0,8
tick,0x7ffad1f6fb64,206381893,0,0x0,8
tick,0x7ffad1f6fb64,206397923,0,0x0,8
tick,0x7ffad1f6fb64,206413958,0,0x0,8
tick,0x7ffad1f6fb64,206429934,0,0x0,8
tick,0x7ffad1f6fb64,206445950,0,0x0,8
tick,0x7ffad1f6fb64,206462013,0,0x0,8
tick,0x7ffad1f6fb64,206477009,0,0x0,8
tick,0x7ffad1f6fb64,206492009,0,0x0,8
tick,0x7ffad1f6fb64,206507013,0,0x0,8
tick,0x7ffad1f6fb64,206522053,0,0x0,8
tick,0x7ffad1f6fb64,206538040,0,0x0,8
tick,0x7ffad1f6fb64,206554044,0,0x0,8
tick,0x7ffad1f6fb64,206570079,0,0x0,8
tick,0x7ffad1f6fb64,206585098,0,0x0,8
tick,0x7ffad1f6fb64,206601148,0,0x0,8
tick,0x7ffad1f6fb64,206617112,0,0x0,8
tick,0x7ffad1f6fb64,206633154,0,0x0,8
tick,0x7ffad1f6fb64,206649181,0,0x0,8
tick,0x7ffad1f6fb64,206664175,0,0x0,8
tick,0x7ffad1f6fb64,206680188,0,0x0,8
tick,0x7ffad1f6fb64,206695207,0,0x0,8
tick,0x7ffad1f6fb64,206710209,0,0x0,8
tick,0x7ffad1f6fb64,206725222,0,0x0,8
tick,0x7ffad1f6fb64,206740231,0,0x0,8
tick,0x7ffad1f6fb64,206756242,0,0x0,8
tick,0x7ffad1f6fb64,206772264,0,0x0,8
tick,0x7ffad1f6fb64,206788304,0,0x0,8
tick,0x7ffad1f6fb64,206804306,0,0x0,8
tick,0x7ffad1f6fb64,206820330,0,0x0,8
tick,0x7ffad1f6fb64,206835355,0,0x0,8
tick,0x7ffad1f6fb64,206850342,0,0x0,8
tick,0x7ffad1f6fb64,206866333,0,0x0,8
tick,0x7ffad1f6fb64,206881358,0,0x0,8
tick,0x7ffad1f6fb64,206897382,0,0x0,8
tick,0x7ffad1f6fb64,206913388,0,0x0,8
tick,0x7ffad1f6fb64,206929399,0,0x0,8
tick,0x7ffad1f6fb64,206944439,0,0x0,8
tick,0x7ffad1f6fb64,206960459,0,0x0,8
tick,0x7ffad1f6fb64,206975461,0,0x0,8
tick,0x7ffad1f6fb64,206991467,0,0x0,8
tick,0x7ffad1f6fb64,207007473,0,0x0,8
tick,0x7ffad1f6fb64,207022487,0,0x0,8
tick,0x7ffad1f6fb64,207037510,0,0x0,8
tick,0x7ffad1f6fb64,207052545,0,0x0,8
tick,0x7ffad1f6fb64,207067568,0,0x0,8
tick,0x7ffad1f6fb64,207082595,0,0x0,8
tick,0x7ffad1f6fb64,207098606,0,0x0,8
tick,0x7ffad1f6fb64,207113594,0,0x0,8
tick,0x7ffad1f6fb64,207129586,0,0x0,8
tick,0x7ffad1f6fb64,207145602,0,0x0,8
tick,0x7ffad1f6fb64,207160610,0,0x0,8
tick,0x7ffad1f6fb64,207175647,0,0x0,8
tick,0x7ffad1f6fb64,207190628,0,0x0,8
tick,0x7ffad1f6fb64,207205673,0,0x0,8
tick,0x7ffad1f6fb64,207221686,0,0x0,8
tick,0x7ffad1f6fb64,207237687,0,0x0,8
tick,0x7ffad1f6fb64,207252702,0,0x0,8
tick,0x7ffad1f6fb64,207267731,0,0x0,8
tick,0x7ffad1f6fb64,207283786,0,0x0,8
tick,0x7ffad1f6fb64,207298742,0,0x0,8
tick,0x7ffad1f6fb64,207313758,0,0x0,8
tick,0x7ffad1f6fb64,207329781,0,0x0,8
tick,0x7ffad1f6fb64,207345788,0,0x0,8
tick,0x7ffad1f6fb64,207361810,0,0x0,8
tick,0x7ffad1f6fb64,207377827,0,0x0,8
tick,0x7ffad1f6fb64,207392852,0,0x0,8
tick,0x7ffad1f6fb64,207407836,0,0x0,8
tick,0x7ffad1f6fb64,207422852,0,0x0,8
tick,0x7ffad1f6fb64,207438875,0,0x0,8
tick,0x7ffad1f6fb64,207454880,0,0x0,8
tick,0x7ffad1f6fb64,207469928,0,0x0,8
tick,0x7ffad1f6fb64,207485918,0,0x0,8
tick,0x7ffad1f6fb64,207501917,0,0x0,8
tick,0x7ffad1f6fb64,207517964,0,0x0,8
tick,0x7ffad1f6fb64,207533960,0,0x0,8
tick,0x7ffad1f6fb64,207549992,0,0x0,8
tick,0x7ffad1f6fb64,207565012,0,0x0,8
tick,0x7ffad1f6fb64,207580005,0,0x0,8
tick,0x7ffad1f6fb64,207596018,0,0x0,8
tick,0x7ffad1f6fb64,207612042,0,0x0,8
tick,0x7ffad1f6fb64,207627050,0,0x0,8
tick,0x7ffad1f6fb64,207643074,0,0x0,8
tick,0x7ffad1f6fb64,207659082,0,0x0,8
tick,0x7ffad1f6fb64,207675087,0,0x0,8
tick,0x7ffad1f6fb64,207690107,0,0x0,8
tick,0x7ffad1f6fb64,207706099,0,0x0,8
tick,0x7ffad1f6fb64,207721181,0,0x0,8
tick,0x7ffad1f6fb64,207737177,0,0x0,8
tick,0x7ffad1f6fb64,207753178,0,0x0,8
tick,0x7ffad1f6fb64,207768178,0,0x0,8
tick,0x7ffad1f6fb64,207783190,0,0x0,8
tick,0x7ffad1f6fb64,207798182,0,0x0,8
tick,0x7ffad1f6fb64,207814201,0,0x0,8
tick,0x7ffad1f6fb64,207830242,0,0x0,8
tick,0x7ffad1f6fb64,207846259,0,0x0,8
tick,0x7ffad1f6fb64,207862242,0,0x0,8
tick,0x7ffad1f6fb64,207877277,0,0x0,8
tick,0x7ffad1f6fb64,207893290,0,0x0,8
tick,0x7ffad1f6fb64,207909307,0,0x0,8
tick,0x7ffad1f6fb64,207925311,0,0x0,8
tick,0x7ffad1f6fb64,207940337,0,0x0,8
tick,0x7ffad1f6fb64,207956327,0,0x0,8
tick,0x7ffad1f6fb64,207972368,0,0x0,8
tick,0x7ffad1f6fb64,207988357,0,0x0,8
tick,0x7ffad1f6fb64,208003375,0,0x0,8
tick,0x7ffad1f6fb64,208019404,0,0x0,8
tick,0x7ffad1f6fb64,208035414,0,0x0,8
tick,0x7ffad1f6fb64,208050450,0,0x0,8
tick,0x7ffad1f6fb64,208066470,0,0x0,8
tick,0x7ffad1f6fb64,208081477,0,0x0,8
tick,0x7ffad1f6fb64,208096467,0,0x0,8
tick,0x7ffad1f6fb64,208111471,0,0x0,8
tick,0x7ffad1f6fb64,208126505,0,0x0,8
tick,0x7ffad1f6fb64,208142562,0,0x0,8
tick,0x7ffad1f6fb64,208158526,0,0x0,8
tick,0x7ffad1f6fb64,208174553,0,0x0,8
tick,0x7ffad1f6fb64,208190618,0,0x0,8
tick,0x7ffad1f6fb64,208205576,0,0x0,8
tick,0x7ffad1f6fb64,208220598,0,0x0,8
tick,0x7ffad1f6fb64,208236602,0,0x0,8
tick,0x7ffad1f6fb64,208251602,0,0x0,8
tick,0x7ffad1f6fb64,208266631,0,0x0,8
tick,0x7ffad1f6fb64,208281646,0,0x0,8
tick,0x7ffad1f6fb64,208297659,0,0x0,8
tick,0x7ffad1f6fb64,208312671,0,0x0,8
tick,0x7ffad1f6fb64,208327687,0,0x0,8
tick,0x7ffad1f6fb64,208343715,0,0x0,8
tick,0x7ffad1f6fb64,208359720,0,0x0,8
tick,0x7ffad1f6fb64,208375740,0,0x0,8
tick,0x7ffad1f6fb64,208390732,0,0x0,8
tick,0x7ffad1f6fb64,208406753,0,0x0,8
tick,0x7ffad1f6fb64,208422774,0,0x0,8
tick,0x7ffad1f6fb64,208437794,0,0x0,8
tick,0x7ffad1f6fb64,208453804,0,0x0,8
tick,0x7ffad1f6fb64,208469826,0,0x0,8
tick,0x7ffad1f6fb64,208485833,0,0x0,8
tick,0x7ffad1f6fb64,208500866,0,0x0,8
tick,0x7ffad1f6fb64,208516861,0,0x0,8
tick,0x7ffad1f6fb64,208532875,0,0x0,8
tick,0x7ffad1f6fb64,208547880,0,0x0,8
tick,0x7ffad1f6fb64,208563894,0,0x0,8
tick,0x7ffad1f6fb64,208579909,0,0x0,8
tick,0x7ffad1f6fb64,208595939,0,0x0,8
tick,0x7ffad1f6fb64,208611939,0,0x0,8
tick,0x7ffad1f6fb64,208627975,0,0x0,8
tick,0x7ffad1f6fb64,208642988,0,0x0,8
tick,0x7ffad1f6fb64,208658006,0,0x0,8
tick,0x7ffad1f6fb64,208673988,0,0x0,8
tick,0x7ffad1f6fb64,208689003,0,0x0,8
tick,0x7ffad1f6fb64,208704047,0,0x0,8
tick,0x7ffad1f6fb64,208720043,0,0x0,8
tick,0x7ffad1f6fb64,208735122,0,0x0,8
tick,0x7ffad1f6fb64,208750096,0,0x0,8
tick,0x7ffad1f6fb64,208765134,0,0x0,8
tick,0x7ffad1f6fb64,208780151,0,0x0,8
tick,0x7ffad1f6fb64,208795115,0,0x0,8
tick,0x7ffad1f6fb64,208810143,0,0x0,8
tick,0x7ffad1f6fb64,208826193,0,0x0,8
tick,0x7ffad1f6fb64,208842334,0,0x0,8
tick,0x7ffad1f6fb64,208857152,0,0x0,8
tick,0x7ffad1f6fb64,208873198,0,0x0,8
tick,0x7ffad1f6fb64,208889194,0,0x0,8
tick,0x7ffad1f6fb64,208905203,0,0x0,8
tick,0x7ffad1f6fb64,208920240,0,0x0,8
tick,0x7ffad1f6fb64,208936242,0,0x0,8
tick,0x7ffad1f6fb64,208952252,0,0x0,8
tick,0x7ffad1f6fb64,208968266,0,0x0,8
tick,0x7ffad1f6fb64,208984270,0,0x0,8
tick,0x7ffad1f6fb64,208999282,0,0x0,8
tick,0x7ffad1f6fb64,209014325,0,0x0,8
tick,0x7ffad1f6fb64,209029366,0,0x0,8
tick,0x7ffad1f6fb64,209044316,0,0x0,8
tick,0x7ffad1f6fb64,209060342,0,0x0,8
tick,0x7ffad1f6fb64,209076400,0,0x0,8
tick,0x7ffad1f6fb64,209092379,0,0x0,8
tick,0x7ffad1f6fb64,209108391,0,0x0,8
tick,0x7ffad1f6fb64,209123400,0,0x0,8
tick,0x7ffad1f6fb64,209139454,0,0x0,8
tick,0x7ffad1f6fb64,209155425,0,0x0,8
tick,0x7ffad1f6fb64,209171467,0,0x0,8
tick,0x7ffad1f6fb64,209187445,0,0x0,8
tick,0x7ffad1f6fb64,209202536,0,0x0,8
tick,0x7ffad1f6fb64,209217483,0,0x0,8
tick,0x7ffad1f6fb64,209232499,0,0x0,8
tick,0x7ffad1f6fb64,209248520,0,0x0,8
tick,0x7ffad1f6fb64,209264564,0,0x0,8
tick,0x7ffad1f6fb64,209279556,0,0x0,8
tick,0x7ffad1f6fb64,209295555,0,0x0,8
tick,0x7ffad1f6fb64,209311568,0,0x0,8
tick,0x7ffad1f6fb64,209327580,0,0x0,8
tick,0x7ffad1f6fb64,209342601,0,0x0,8
tick,0x7ffad1f6fb64,209358616,0,0x0,8
tick,0x7ffad1f6fb64,209373646,0,0x0,8
tick,0x7ffad1f6fb64,209389656,0,0x0,8
tick,0x7ffad1f6fb64,209405659,0,0x0,8
tick,0x7ffad1f6fb64,209421668,0,0x0,8
tick,0x7ffad1f6fb64,209436696,0,0x0,8
tick,0x7ffad1f6fb64,209451698,0,0x0,8
tick,0x7ffad1f6fb64,209466725,0,0x0,8
tick,0x7ffad1f6fb64,209481726,0,0x0,8
tick,0x7ffad1f6fb64,209496750,0,0x0,8
tick,0x7ffad1f6fb64,209512762,0,0x0,8
tick,0x7ffad1f6fb64,209528767,0,0x0,8
tick,0x7ffad1f6fb64,209543795,0,0x0,8
tick,0x7ffad1f6fb64,209559798,0,0x0,8
tick,0x7ffad1f6fb64,209575965,0,0x0,8
tick,0x7ffad1f6fb64,209591832,0,0x0,8
tick,0x7ffad1f6fb64,209607842,0,0x0,8
tick,0x7ffad1f6fb64,209622839,0,0x0,8
tick,0x7ffad1f6fb64,209638877,0,0x0,8
tick,0x7ffad1f6fb64,209653887,0,0x0,8
tick,0x7ffad1f6fb64,209669916,0,0x0,8
tick,0x7ffad1f6fb64,209685951,0,0x0,8
tick,0x7ffad1f6fb64,209700947,0,0x0,8
tick,0x7ffad1f6fb64,209716954,0,0x0,8
tick,0x7ffad1f6fb64,209731950,0,0x0,8
tick,0x7ffad1f6fb64,209747969,0,0x0,8
tick,0x7ffad1f6fb64,209763003,0,0x0,8
tick,0x7ffad1f6fb64,209779024,0,0x0,8
tick,0x7ffad1f6fb64,209794035,0,0x0,8
tick,0x7ffad1f6fb64,209810021,0,0x0,8
tick,0x7ffad1f6fb64,209825120,0,0x0,8
tick,0x7ffad1f6fb64,209840052,0,0x0,8
tick,0x7ffad1f6fb64,209856092,0,0x0,8
tick,0x7ffad1f6fb64,209872095,0,0x0,8
tick,0x7ffad1f6fb64,209888123,0,0x0,8
tick,0x7ffad1f6fb64,209903139,0,0x0,8
tick,0x7ffad1f6fb64,209919142,0,0x0,8
tick,0x7ffad1f6fb64,209935145,0,0x0,8
tick,0x7ffad1f6fb64,209950175,0,0x0,8
tick,0x7ffad1f6fb64,209965226,0,0x0,8
tick,0x7ffad1f6fb64,209980192,0,0x0,8
tick,0x7ffad1f6fb64,209995209,0,0x0,8
tick,0x7ffad1f6fb64,210011222,0,0x0,8
tick,0x7ffad1f6fb64,210027230,0,0x0,8
tick,0x7ffad1f6fb64,210043241,0,0x0,8
tick,0x7ffad1f6fb64,210058294,0,0x0,8
tick,0x7ffad1f6fb64,210073276,0,0x0,8
tick,0x7ffad1f6fb64,210088296,0,0x0,8
tick,0x7ffad1f6fb64,210104287,0,0x0,8
tick,0x7ffad1f6fb64,210119335,0,0x0,8
tick,0x7ffad1f6fb64,210135322,0,0x0,8
tick,0x7ffad1f6fb64,210150344,0,0x0,8
tick,0x7ffad1f6fb64,210165354,0,0x0,8
tick,0x7ffad1f6fb64,210180376,0,0x0,8
tick,0x7ffad1f6fb64,210195425,0,0x0,8
tick,0x7ffad1f6fb64,210211379,0,0x0,8
tick,0x7ffad1f6fb64,210226413,0,0x0,8
tick,0x7ffad1f6fb64,210241430,0,0x0,8
tick,0x7ffad1f6fb64,210256471,0,0x0,8
tick,0x7ffad1f6fb64,210271477,0,0x0,8
tick,0x7ffad1f6fb64,210287476,0,0x0,8
tick,0x7ffad1f6fb64,210303475,0,0x0,8
tick,0x7ffad1f6fb64,210318522,0,0x0,8
tick,0x7ffad1f6fb64,210333516,0,0x0,8
tick,0x7ffad1f6fb64,210349546,0,0x0,8
tick,0x7ffad1f6fb64,210365563,0,0x0,8
tick,0x7ffad1f6fb64,210380610,0,0x0,8
tick,0x7ffad1f6fb64,210395595,0,0x0,8
tick,0x7ffad1f6fb64,210411568,0,0x0,8
tick,0x7ffad1f6fb64,210426585,0,0x0,8
tick,0x7ffad1f6fb64,210442615,0,0x0,8
tick,0x7ffad1f6fb64,210457617,0,0x0,8
tick,0x7ffad1f6fb64,210472628,0,0x0,8
tick,0x7ffad1f6fb64,210488660,0,0x0,8
tick,0x7ffad1f6fb64,210504668,0,0x0,8
tick,0x7ffad1f6fb64,210520679,0,0x0,8
tick,0x7ffad1f6fb64,210535685,0,0x0,8
tick,0x7ffad1f6fb64,210551685,0,0x0,8
tick,0x7ffad1f6fb64,210566772,0,0x0,8
tick,0x7ffad1f6fb64,210581741,0,0x0,8
tick,0x7ffad1f6fb64,210597743,0,0x0,8
tick,0x7ffad1f6fb64,210613768,0,0x0,8
tick,0x7ffad1f6fb64,210629816,0,0x0,8
tick,0x7ffad1f6fb64,210644804,0,0x0,8
tick,0x7ffad1f6fb64,210660824,0,0x0,8
tick,0x7ffad1f6fb64,210675819,0,0x0,8
tick,0x7ffad1f6fb64,210690903,0,0x0,8
tick,0x7ffad1f6fb64,210706873,0,0x0,8
tick,0x7ffad1f6fb64,210722975,0,0x0,8
tick,0x7ffad1f6fb64,210737880,0,0x0,8
tick,0x7ffad1f6fb64,210752917,0,0x0,8
tick,0x7ffad1f6fb64,210768923,0,0x0,8
tick,0x7ffad1f6fb64,210783924,0,0x0,8
tick,0x7ffad1f6fb64,210798944,0,0x0,8
tick,0x7ffad1f6fb64,210814986,0,0x0,8
tick,0x7ffad1f6fb64,210831002,0,0x0,8
tick,0x7ffad1f6fb64,210846005,0,0x0,8
tick,0x7ffad1f6fb64,210860983,0,0x0,8
tick,0x7ffad1f6fb64,210877032,0,0x0,8
tick,0x7ffad1f6fb64,210893020,0,0x0,8
tick,0x7ffad1f6fb64,210909047,0,0x0,8
tick,0x7ffad1f6fb64,210924055,0,0x0,8
tick,0x7ffad1f6fb64,210940091,0,0x0,8
tick,0x7ffad1f6fb64,210956090,0,0x0,8
tick,0x7ffad1f6fb64,210972092,0,0x0,8
tick,0x7ffad1f6fb64,210988137,0,0x0,8
tick,0x7ffad1f6fb64,211003329,0,0x0,8
tick,0x7ffad1f6fb64,211018184,0,0x0,8
tick,0x7ffad1f6fb64,211033165,0,0x0,8
tick,0x7ffad1f6fb64,211048148,0,0x0,8
tick,0x7ffad1f6fb64,211063179,0,0x0,8
tick,0x7ffad1f6fb64,211078211,0,0x0,8
tick,0x7ffad1f6fb64,211094242,0,0x0,8
tick,0x7ffad1f6fb64,211109228,0,0x0,8
tick,0x7ffad1f6fb64,211125255,0,0x0,8
tick,0x7ffad1f6fb64,211140256,0,0x0,8
tick,0x7ffad1f6fb64,211156252,0,0x0,8
tick,0x7ffad1f6fb64,211172266,0,0x0,8
tick,0x7ffad1f6fb64,211188293,0,0x0,8
tick,0x7ffad1f6fb64,211203313,0,0x0,8
tick,0x7ffad1f6fb64,211219318,0,0x0,8
tick,0x7ffad1f6fb64,211235328,0,0x0,8
tick,0x7ffad1f6fb64,211250375,0,0x0,8
tick,0x7ffad1f6fb64,211266454,0,0x0,8
tick,0x7ffad1f6fb64,211281361,0,0x0,8
tick,0x7ffad1f6fb64,211296638,0,0x0,8
tick,0x7ffad1f6fb64,211312448,0,0x0,8
tick,0x7ffad1f6fb64,211327422,0,0x0,8
tick,0x7ffad1f6fb64,211342453,0,0x0,8
tick,0x7ffad1f6fb64,211358455,0,0x0,8
tick,0x7ffad1f6fb64,211373489,0,0x0,8
tick,0x7ffad1f6fb64,211389470,0,0x0,8
tick,0x7ffad1f6fb64,211404476,0,0x0,8
tick,0x7ffad1f6fb64,211419522,0,0x0,8
tick,0x7ffad1f6fb64,211435532,0,0x0,8
tick,0x7ffad1f6fb64,211451533,0,0x0,8
tick,0x7ffad1f6fb64,211466535,0,0x0,8
tick,0x7ffad1f6fb64,211481547,0,0x0,8
tick,0x7ffad1f6fb64,211496639,0,0x0,8
tick,0x7ffad1f6fb64,211511574,0,0x0,8
tick,0x7ffad1f6fb64,211527600,0,0x0,8
tick,0x7ffad1f6fb64,211543621,0,0x0,8
tick,0x7ffad1f6fb64,211559629,0,0x0,8
tick,0x7ffad1f6fb64,211575663,0,0x0,8
tick,0x7ffad1f6fb64,211591659,0,0x0,8
tick,0x7ffad1f6fb64,211607667,0,0x0,8
tick,0x7ffad1f6fb64,211622691,0,0x0,8
tick,0x7ffad1f6fb64,211637764,0,0x0,8
tick,0x7ffad1f6fb64,211653722,0,0x0,8
tick,0x7ffad1f6fb64,211669938,0,0x0,8
tick,0x7ffad1f6fb64,211684758,0,0x0,8
tick,0x7ffad1f6fb64,211699749,0,0x0,8
tick,0x7ffad1f6fb64,211715755,0,0x0,8
tick,0x7ffad1f6fb64,211731793,0,0x0,8
tick,0x7ffad1f6fb64,211747799,0,0x0,8
tick,0x7ffad1f6fb64,211762820,0,0x0,8
tick,0x7ffad1f6fb64,211777826,0,0x0,8
tick,0x7ffad1f6fb64,211792833,0,0x0,8
tick,0x7ffad1f6fb64,211807861,0,0x0,8
tick,0x7ffad1f6fb64,211823884,0,0x0,8
tick,0x7ffad1f6fb64,211839906,0,0x0,8
tick,0x7ffad1f6fb64,211854908,0,0x0,8
tick,0x7ffad1f6fb64,211870958,0,0x0,8
tick,0x7ffad1f6fb64,211886932,0,0x0,8
tick,0x7ffad1f6fb64,211901970,0,0x0,8
tick,0x7ffad1f6fb64,211917995,0,0x0,8
tick,0x7ffad1f6fb64,211934007,0,0x0,8
tick,0x7ffad1f6fb64,211948977,0,0x0,8
tick,0x7ffad1f6fb64,211964999,0,0x0,8
tick,0x7ffad1f6fb64,211980010,0,0x0,8
tick,0x7ffad1f6fb64,211995069,0,0x0,8
tick,0x7ffad1f6fb64,212010053,0,0x0,8
tick,0x7ffad1f6fb64,212025041,0,0x0,8
tick,0x7ffad1f6fb64,212040072,0,0x0,8
tick,0x7ffad1f6fb64,212056063,0,0x0,8
tick,0x7ffad1f6fb64,212071105,0,0x0,8
tick,0x7ffad1f6fb64,212087115,0,0x0,8
tick,0x7ffad1f6fb64,212103141,0,0x0,8
tick,0x7ffad1f6fb64,212119146,0,0x0,8
tick,0x7ffad1f6fb64,212135154,0,0x0,8
tick,0x7ffad1f6fb64,212150164,0,0x0,8
tick,0x7ffad1f6fb64,212166175,0,0x0,8
tick,0x7ffad1f6fb64,212181206,0,0x0,8
tick,0x7ffad1f6fb64,212197201,0,0x0,8
tick,0x7ffad1f6fb64,212213217,0,0x0,8
tick,0x7ffad1f6fb64,212228224,0,0x0,8
tick,0x7ffad1f6fb64,212243321,0,0x0,8
tick,0x7ffad1f6fb64,212259253,0,0x0,8
tick,0x7ffad1f6fb64,212275268,0,0x0,8
tick,0x7ffad1f6fb64,212291291,0,0x0,8
tick,0x7ffad1f6fb64,212306303,0,0x0,8
tick,0x7ffad1f6fb64,212321332,0,0x0,8
tick,0x7ffad1f6fb64,212336385,0,0x0,8
tick,0x7ffad1f6fb64,212351353,0,0x0,8
tick,0x7ffad1f6fb64,212366369,0,0x0,8
tick,0x7ffad1f6fb64,212381368,0,0x0,8
tick,0x7ffad1f6fb64,212397393,0,0x0,8
tick,0x7ffad1f6fb64,212413397,0,0x0,8
tick,0x7ffad1f6fb64,212428415,0,0x0,8
tick,0x7ffad1f6fb64,212444459,0,0x0,8
tick,0x7ffad1f6fb64,212459432,0,0x0,8
tick,0x7ffad1f6fb64,212475453,0,0x0,8
tick,0x7ffad1f6fb64,212491477,0,0x0,8
tick,0x7ffad1f6fb64,212507494,0,0x0,8
tick,0x7ffad1f6fb64,212522491,0,0x0,8
tick,0x7ffad1f6fb64,212537518,0,0x0,8
tick,0x7ffad1f6fb64,212552524,0,0x0,8
tick,0x7ffad1f6fb64,212567552,0,0x0,8
tick,0x7ffad1f6fb64,212582556,0,0x0,8
tick,0x7ffad1f6fb64,212598567,0,0x0,8
tick,0x7ffad1f6fb64,212613599,0,0x0,8
tick,0x7ffad1f6fb64,212629625,0,0x0,8
tick,0x7ffad1f6fb64,212645661,0,0x0,8
tick,0x7ffad1f6fb64,212660633,0,0x0,8
tick,0x7ffad1f6fb64,212675664,0,0x0,8
tick,0x7ffad1f6fb64,212690680,0,0x0,8
tick,0x7ffad1f6fb64,212706675,0,0x0,8
tick,0x7ffad1f6fb64,212721703,0,0x0,8
tick,0x7ffad1f6fb64,212736694,0,0x0,8
tick,0x7ffad1f6fb64,212751721,0,0x0,8
tick,0x7ffad1f6fb64,212766739,0,0x0,8
tick,0x7ffad1f6fb64,212781731,0,0x0,8
tick,0x7ffad1f6fb64,212797766,0,0x0,8
tick,0x7ffad1f6fb64,212813762,0,0x0,8
tick,0x7ffad1f6fb64,212828810,0,0x0,8
tick,0x7ffad1f6fb64,212844811,0,0x0,8
tick,0x7ffad1f6fb64,212860816,0,0x0,8
tick,0x7ffad1f6fb64,212875819,0,0x0,8
tick,0x7ffad1f6fb64,212890828,0,0x0,8
tick,0x7ffad1f6fb64,212906848,0,0x0,8
tick,0x7ffad1f6fb64,212922897,0,0x0,8
tick,0x7ffad1f6fb64,212937940,0,0x0,8
tick,0x7ffad1f6fb64,212952888,0,0x0,8
tick,0x7ffad1f6fb64,212968924,0,0x0,8
tick,0x7ffad1f6fb64,212984928,0,0x0,8
tick,0x7ffad1f6fb64,213000937,0,0x0,8
tick,0x7ffad1f6fb64,213015948,0,0x0,8
tick,0x7ffad1f6fb64,213031989,0,0x0,8
tick,0x7ffad1f6fb64,213048068,0,0x0,8
tick,0x7ffad1f6fb64,213064006,0,0x0,8
tick,0x7ffad1f6fb64,213080057,0,0x0,8
tick,0x7ffad1f6fb64,213095029,0,0x0,8
tick,0x7ffad1f6fb64,213110050,0,0x0,8
tick,0x7ffad1f6fb64,213126050,0,0x0,8
tick,0x7ffad1f6fb64,213142071,0,0x0,8
tick,0x7ffad1f6fb64,213157100,0,0x0,8
tick,0x7ffad1f6fb64,213173101,0,0x0,8
tick,0x7ffad1f6fb64,213189116,0,0x0,8
tick,0x7ffad1f6fb64,213205141,0,0x0,8
tick,0x7ffad1f6fb64,213220117,0,0x0,8
tick,0x7ffad1f6fb64,213236192,0,0x0,8
tick,0x7ffad1f6fb64,213252151,0,0x0,8
tick,0x7ffad1f6fb64,213267446,0,0x0,8
tick,0x7ffad1f6fb64,213282193,0,0x0,8
tick,0x7ffad1f6fb64,213297298,0,0x0,8
tick,0x7ffad1f6fb64,213312227,0,0x0,8
tick,0x7ffad1f6fb64,213328227,0,0x0,8
tick,0x7ffad1f6fb64,213343251,0,0x0,8
tick,0x7ffad1f6fb64,213359287,0,0x0,8
tick,0x7ffad1f6fb64,213374286,0,0x0,8
tick,0x7ffad1f6fb64,213390291,0,0x0,8
tick,0x7ffad1f6fb64,213405306,0,0x0,8
tick,0x7ffad1f6fb64,213420321,0,0x0,8
tick,0x7ffad1f6fb64,213436340,0,0x0,8
tick,0x7ffad1f6fb64,213452338,0,0x0,8
tick,0x7ffad1f6fb64,213467366,0,0x0,8
tick,0x7ffad1f6fb64,213482398,0,0x0,8
tick,0x7ffad1f6fb64,213498441,0,0x0,8
tick,0x7ffad1f6fb64,213514419,0,0x0,8
tick,0x7ffad1f6fb64,213529410,0,0x0,8
tick,0x7ffad1f6fb64,213545432,0,0x0,8
tick,0x7ffad1f6fb64,213561422,0,0x0,8
tick,0x7ffad1f6fb64,213576456,0,0x0,8
tick,0x7ffad1f6fb64,213591486,0,0x0,8
tick,0x7ffad1f6fb64,213606496,0,0x0,8
tick,0x7ffad1f6fb64,213622501,0,0x0,8
tick,0x7ffad1f6fb64,213637525,0,0x0,8
tick,0x7ffad1f6fb64,213652525,0,0x0,8
tick,0x7ffad1f6fb64,213668545,0,0x0,8
tick,0x7ffad1f6fb64,213684593,0,0x0,8
tick,0x7ffad1f6fb64,213699588,0,0x0,8
tick,0x7ffad1f6fb64,213715590,0,0x0,8
tick,0x7ffad1f6fb64,213731608,0,0x0,8
tick,0x7ffad1f6fb64,213747630,0,0x0,8
tick,0x7ffad1f6fb64,213762626,0,0x0,8
tick,0x7ffad1f6fb64,213778676,0,0x0,8
tick,0x7ffad1f6fb64,213793666,0,0x0,8
tick,0x7ffad1f6fb64,213808690,0,0x0,8
tick,0x7ffad1f6fb64,213824682,0,0x0,8
tick,0x7ffad1f6fb64,213839697,0,0x0,8
tick,0x7ffad1f6fb64,213855717,0,0x0,8
tick,0x7ffad1f6fb64,213870894,0,0x0,8
tick,0x7ffad1f6fb64,213886731,0,0x0,8
tick,0x7ffad1f6fb64,213901746,0,0x0,8
tick,0x7ffad1f6fb64,213917839,0,0x0,8
tick,0x7ffad1f6fb64,213932802,0,0x0,8
tick,0x7ffad1f6fb64,213947818,0,0x0,8
tick,0x7ffad1f6fb64,213963819,0,0x0,8
tick,0x7ffad1f6fb64,213979820,0,0x0,8
tick,0x7ffad1f6fb64,213994912,0,0x0,8
tick,0x7ffad1f6fb64,214010870,0,0x0,8
tick,0x7ffad1f6fb64,214025948,0,0x0,8
tick,0x7ffad1f6fb64,214044350,0,0x0,8
tick,0x7ffad1f6fb64,214057090,0,0x0,8
tick,0x7ffad1f6fb64,214071913,0,0x0,8
tick,0x7ffad1f6fb64,214087940,0,0x0,8
tick,0x7ffad1f6fb64,214102973,0,0x0,8
tick,0x7ffad1f6fb64,214118997,0,0x0,8
tick,0x7ffad1f6fb64,214135038,0,0x0,8
tick,0x7ffad1f6fb64,214150010,0,0x0,8
tick,0x7ffad1f6fb64,214165059,0,0x0,8
tick,0x7ffad1f6fb64,214180036,0,0x0,8
tick,0x7ffad1f6fb64,214195037,0,0x0,8
tick,0x7ffad1f6fb64,214211062,0,0x0,8
tick,0x7ffad1f6fb64,214226065,0,0x0,8
tick,0x7ffad1f6fb64,214241133,0,0x0,8
tick,0x7ffad1f6fb64,214257134,0,0x0,8
tick,0x7ffad1f6fb64,214273143,0,0x0,8
tick,0x7ffad1f6fb64,214288166,0,0x0,8
tick,0x7ffad1f6fb64,214303138,0,0x0,8
tick,0x7ffad1f6fb64,214319145,0,0x0,8
tick,0x7ffad1f6fb64,214335196,0,0x0,8
tick,0x7ffad1f6fb64,214350193,0,0x0,8
tick,0x7ffad1f6fb64,214365195,0,0x0,8
tick,0x7ffad1f6fb64,214380243,0,0x0,8
tick,0x7ffad1f6fb64,214395216,0,0x0,8
tick,0x7ffad1f6fb64,214410256,0,0x0,8
tick,0x7ffad1f6fb64,214426255,0,0x0,8
tick,0x7ffad1f6fb64,214441289,0,0x0,8
tick,0x7ffad1f6fb64,214457280,0,0x0,8
tick,0x7ffad1f6fb64,214472298,0,0x0,8
tick,0x7ffad1f6fb64,214487335,0,0x0,8
tick,0x7ffad1f6fb64,214502325,0,0x0,8
tick,0x7ffad1f6fb64,214518355,0,0x0,8
tick,0x7ffad1f6fb64,214534362,0,0x0,8
tick,0x7ffad1f6fb64,214549349,0,0x0,8
tick,0x7ffad1f6fb64,214564422,0,0x0,8
tick,0x7ffad1f6fb64,214579392,0,0x0,8
tick,0x7ffad1f6fb64,214594487,0,0x0,8
tick,0x7ffad1f6fb64,214610411,0,0x0,8
tick,0x7ffad1f6fb64,214625420,0,0x0,8
tick,0x7ffad1f6fb64,214640451,0,0x0,8
tick,0x7ffad1f6fb64,214656450,0,0x0,8
tick,0x7ffad1f6fb64,214672465,0,0x0,8
tick,0x7ffad1f6fb64,214688494,0,0x0,8
tick,0x7ffad1f6fb64,214704504,0,0x0,8
tick,0x7ffad1f6fb64,214719529,0,0x0,8
tick,0x7ffad1f6fb64,214735562,0,0x0,8
tick,0x7ffad1f6fb64,214751554,0,0x0,8
tick,0x7ffad1f6fb64,214766554,0,0x0,8
tick,0x7ffad1f6fb64,214781563,0,0x0,8
tick,0x7ffad1f6fb64,214797606,0,0x0,8
tick,0x7ffad1f6fb64,214813597,0,0x0,8
tick,0x7ffad1f6fb64,214828664,0,0x0,8
tick,0x7ffad1f6fb64,214844645,0,0x0,8
tick,0x7ffad1f6fb64,214860639,0,0x0,8
tick,0x7ffad1f6fb64,214875638,0,0x0,8
tick,0x7ffad1f6fb64,214890767,0,0x0,8
tick,0x7ffad1f6fb64,214905693,0,0x0,8
tick,0x7ffad1f6fb64,214920727,0,0x0,8
tick,0x7ffad1f6fb64,214936728,0,0x0,8
tick,0x7ffad1f6fb64,214951705,0,0x0,8
tick,0x7ffad1f6fb64,214966743,0,0x0,8
tick,0x7ffad1f6fb64,214981759,0,0x0,8
tick,0x7ffad1f6fb64,214996819,0,0x0,8
tick,0x7ffad1f6fb64,215011776,0,0x0,8
tick,0x7ffad1f6fb64,215027803,0,0x0,8
tick,0x7ffad1f6fb64,215043799,0,0x0,8
tick,0x7ffad1f6fb64,215058812,0,0x0,8
tick,0x7ffad1f6fb64,215074836,0,0x0,8
tick,0x7ffad1f6fb64,215090888,0,0x0,8
tick,0x7ffad1f6fb64,215105906,0,0x0,8
tick,0x7ffad1f6fb64,215120949,0,0x0,8
tick,0x7ffad1f6fb64,215136897,0,0x0,8
tick,0x7ffad1f6fb64,215152915,0,0x0,8
tick,0x7ffad1f6fb64,215168920,0,0x0,8
tick,0x7ffad1f6fb64,215185002,0,0x0,8
tick,0x7ffad1f6fb64,215199946,0,0x0,8
tick,0x7ffad1f6fb64,215216007,0,0x0,8
tick,0x7ffad1f6fb64,215231972,0,0x0,8
tick,0x7ffad1f6fb64,215247010,0,0x0,8
tick,0x7ffad1f6fb64,215262002,0,0x0,8
tick,0x7ffad1f6fb64,215278009,0,0x0,8
tick,0x7ffad1f6fb64,215294060,0,0x0,8
tick,0x7ffad1f6fb64,215310058,0,0x0,8
tick,0x7ffad1f6fb64,215326093,0,0x0,8
tick,0x7ffad1f6fb64,215341090,0,0x0,8
tick,0x7ffad1f6fb64,215357103,0,0x0,8
tick,0x7ffad1f6fb64,215373128,0,0x0,8
tick,0x7ffad1f6fb64,215388115,0,0x0,8
tick,0x7ffad1f6fb64,215404162,0,0x0,8
tick,0x7ffad1f6fb64,215419159,0,0x0,8
tick,0x7ffad1f6fb64,215435183,0,0x0,8
tick,0x7ffad1f6fb64,215450176,0,0x0,8
tick,0x7ffad1f6fb64,215466209,0,0x0,8
tick,0x7ffad1f6fb64,215481215,0,0x0,8
tick,0x7ffad1f6fb64,215497236,0,0x0,8
tick,0x7ffad1f6fb64,215513232,0,0x0,8
tick,0x7ffad1f6fb64,215528257,0,0x0,8
tick,0x7ffad1f6fb64,215544285,0,0x0,8
tick,0x7ffad1f6fb64,215560282,0,0x0,8
tick,0x7ffad1f6fb64,215576305,0,0x0,8
tick,0x7ffad1f6fb64,215591475,0,0x0,8
tick,0x7ffad1f6fb64,215607332,0,0x0,8
tick,0x7ffad1f6fb64,215622340,0,0x0,8
tick,0x7ffad1f6fb64,215637343,0,0x0,8
tick,0x7ffad1f6fb64,215653377,0,0x0,8
tick,0x7ffad1f6fb64,215668371,0,0x0,8
tick,0x7ffad1f6fb64,215684388,0,0x0,8
tick,0x7ffad1f6fb64,215699464,0,0x0,8
tick,0x7ffad1f6fb64,215714454,0,0x0,8
tick,0x7ffad1f6fb64,215730420,0,0x0,8
tick,0x7ffad1f6fb64,215746449,0,0x0,8
tick,0x7ffad1f6fb64,215761460,0,0x0,8
tick,0x7ffad1f6fb64,215777487,0,0x0,8
tick,0x7ffad1f6fb64,215792534,0,0x0,8
tick,0x7ffad1f6fb64,215808674,0,0x0,8
tick,0x7ffad1f6fb64,215824563,0,0x0,8
tick,0x7ffad1f6fb64,215839530,0,0x0,8
tick,0x7ffad1f6fb64,215855555,0,0x0,8
tick,0x7ffad1f6fb64,215870638,0,0x0,8
tick,0x7ffad1f6fb64,215886589,0,0x0,8
tick,0x7ffad1f6fb64,215902610,0,0x0,8
tick,0x7ffad1f6fb64,215917682,0,0x0,8
tick,0x7ffad1f6fb64,215933612,0,0x0,8
tick,0x7ffad1f6fb64,215949633,0,0x0,8
tick,0x7ffad1f6fb64,215965675,0,0x0,8
tick,0x7ffad1f6fb64,215981685,0,0x0,8
tick,0x7ffad1f6fb64,215996691,0,0x0,8
tick,0x7ffad1f6fb64,216011717,0,0x0,8
tick,0x7ffad1f6fb64,216027709,0,0x0,8
tick,0x7ffad1f6fb64,216043720,0,0x0,8
tick,0x7ffad1f6fb64,216059742,0,0x0,8
tick,0x7ffad1f6fb64,216075734,0,0x0,8
tick,0x7ffad1f6fb64,216090811,0,0x0,8
tick,0x7ffad1f6fb64,216106781,0,0x0,8
tick,0x7ffad1f6fb64,216122807,0,0x0,8
tick,0x7ffad1f6fb64,216138810,0,0x0,8
tick,0x7ffad1f6fb64,216153836,0,0x0,8
tick,0x7ffad1f6fb64,216169848,0,0x0,8
tick,0x7ffad1f6fb64,216185868,0,0x0,8
tick,0x7ffad1f6fb64,216200858,0,0x0,8
tick,0x7ffad1f6fb64,216216889,0,0x0,8
tick,0x7ffad1f6fb64,216232892,0,0x0,8
tick,0x7ffad1f6fb64,216248894,0,0x0,8
tick,0x7ffad1f6fb64,216264919,0,0x0,8
tick,0x7ffad1f6fb64,216279957,0,0x0,8
tick,0x7ffad1f6fb64,216295963,0,0x0,8
tick,0x7ffad1f6fb64,216310987,0,0x0,8
tick,0x7ffad1f6fb64,216325983,0,0x0,8
tick,0x7ffad1f6fb64,216341009,0,0x0,8
tick,0x7ffad1f6fb64,216356017,0,0x0,8
tick,0x7ffad1f6fb64,216372033,0,0x0,8
tick,0x7ffad1f6fb64,216388079,0,0x0,8
tick,0x7ffad1f6fb64,216403046,0,0x0,8
tick,0x7ffad1f6fb64,216418113,0,0x0,8
tick,0x7ffad1f6fb64,216433076,0,0x0,8
tick,0x7ffad1f6fb64,216449083,0,0x0,8
tick,0x7ffad1f6fb64,216465172,0,0x0,8
tick,0x7ffad1f6fb64,216480121,0,0x0,8
tick,0x7ffad1f6fb64,216495122,0,0x0,8
tick,0x7ffad1f6fb64,216511151,0,0x0,8
tick,0x7ffad1f6fb64,216526210,0,0x0,8
tick,0x7ffad1f6fb64,216542172,0,0x0,8
tick,0x7ffad1f6fb64,216558191,0,0x0,8
tick,0x7ffad1f6fb64,216574194,0,0x0,8
tick,0x7ffad1f6fb64,216589213,0,0x0,8
tick,0x7ffad1f6fb64,216605269,0,0x0,8
tick,0x7ffad1f6fb64,216620226,0,0x0,8
tick,0x7ffad1f6fb64,216636276,0,0x0,8
tick,0x7ffad1f6fb64,216652318,0,0x0,8
tick,0x7ffad1f6fb64,216667290,0,0x0,8
tick,0x7ffad1f6fb64,216682290,0,0x0,8
tick,0x7ffad1f6fb64,216698495,0,0x0,8
tick,0x7ffad1f6fb64,216713355,0,0x0,8
tick,0x7ffad1f6fb64,216728394,0,0x0,8
tick,0x7ffad1f6fb64,216744364,0,0x0,8
tick,0x7ffad1f6fb64,216760367,0,0x0,8
tick,0x7ffad1f6fb64,216776404,0,0x0,8
tick,0x7ffad1f6fb64,216791408,0,0x0,8
tick,0x7ffad1f6fb64,216807498,0,0x0,8
tick,0x7ffad1f6fb64,216822446,0,0x0,8
tick,0x7ffad1f6fb64,216837468,0,0x0,8
tick,0x7ffad1f6fb64,216852494,0,0x0,8
tick,0x7ffad1f6fb64,216867478,0,0x0,8
tick,0x7ffad1f6fb64,216882483,0,0x0,8
tick,0x7ffad1f6fb64,216897493,0,0x0,8
tick,0x7ffad1f6fb64,216913511,0,0x0,8
tick,0x7ffad1f6fb64,216929560,0,0x0,8
tick,0x7ffad1f6fb64,216944602,0,0x0,8
tick,0x7ffad1f6fb64,216960573,0,0x0,8
tick,0x7ffad1f6fb64,216975562,0,0x0,8
tick,0x7ffad1f6fb64,216990607,0,0x0,8
tick,0x7ffad1f6fb64,217005603,0,0x0,8
tick,0x7ffad1f6fb64,217020615,0,0x0,8
tick,0x7ffad1f6fb64,217036656,0,0x0,8
tick,0x7ffad1f6fb64,217051610,0,0x0,8
tick,0x7ffad1f6fb64,217066672,0,0x0,8
tick,0x7ffad1f6fb64,217081680,0,0x0,8
tick,0x7ffad1f6fb64,217097726,0,0x0,8
tick,0x7ffad1f6fb64,217113745,0,0x0,8
tick,0x7ffad1f6fb64,217128720,0,0x0,8
tick,0x7ffad1f6fb64,217143747,0,0x0,8
tick,0x7ffad1f6fb64,217159720,0,0x0,8
tick,0x7ffad1f6fb64,217175760,0,0x0,8
tick,0x7ffad1f6fb64,217190760,0,0x0,8
tick,0x7ffad1f6fb64,217206822,0,0x0,8
tick,0x7ffad1f6fb64,217222774,0,0x0,8
tick,0x7ffad1f6fb64,217237794,0,0x0,8
tick,0x7ffad1f6fb64,217253824,0,0x0,8
tick,0x7ffad1f6fb64,217268831,0,0x0,8
tick,0x7ffad1f6fb64,217283849,0,0x0,8
tick,0x7ffad1f6fb64,217298958,0,0x0,8
tick,0x7ffad1f6fb64,217313878,0,0x0,8
tick,0x7ffad1f6fb64,217329893,0,0x0,8
tick,0x7ffad1f6fb64,217344922,0,0x0,8
tick,0x7ffad1f6fb64,217359942,0,0x0,8
tick,0x7ffad1f6fb64,217375963,0,0x0,8
tick,0x7ffad1f6fb64,217392094,0,0x0,8
tick,0x7ffad1f6fb64,217407970,0,0x0,8
tick,0x7ffad1f6fb64,217422973,0,0x0,8
tick,0x7ffad1f6fb64,217438996,0,0x0,8
tick,0x7ffad1f6fb64,217454037,0,0x0,8
tick,0x7ffad1f6fb64,217470024,0,0x0,8
tick,0x7ffad1f6fb64,217485025,0,0x0,8
tick,0x7ffad1f6fb64,217501054,0,0x0,8
tick,0x7ffad1f6fb64,217516073,0,0x0,8
tick,0x7ffad1f6fb64,217532086,0,0x0,8
tick,0x7ffad1f6fb64,217547143,0,0x0,8
tick,0x7ffad1f6fb64,217562086,0,0x0,8
tick,0x7ffad1f6fb64,217578142,0,0x0,8
tick,0x7ffad1f6fb64,217593125,0,0x0,8
tick,0x7ffad1f6fb64,217609151,0,0x0,8
tick,0x7ffad1f6fb64,217624231,0,0x0,8
tick,0x7ffad1f6fb64,217639179,0,0x0,8
tick,0x7ffad1f6fb64,217655241,0,0x0,8
tick,0x7ffad1f6fb64,217670205,0,0x0,8
tick,0x7ffad1f6fb64,217686245,0,0x0,8
tick,0x7ffad1f6fb64,217702226,0,0x0,8
tick,0x7ffad1f6fb64,217717260,0,0x0,8
tick,0x7ffad1f6fb64,217732258,0,0x0,8
tick,0x7ffad1f6fb64,217748277,0,0x0,8
tick,0x7ffad1f6fb64,217764308,0,0x0,8
tick,0x7ffad1f6fb64,217779289,0,0x0,8
tick,0x7ffad1f6fb64,217794324,0,0x0,8
tick,0x7ffad1f6fb64,217809375,0,0x0,8
tick,0x7ffad1f6fb64,217824407,0,0x0,8
tick,0x7ffad1f6fb64,217839351,0,0x0,8
tick,0x7ffad1f6fb64,217854396,0,0x0,8
tick,0x7ffad1f6fb64,217869385,0,0x0,8
tick,0x7ffad1f6fb64,217885619,0,0x0,8
tick,0x7ffad1f6fb64,217901410,0,0x0,8
tick,0x7ffad1f6fb64,217917426,0,0x0,8
tick,0x7ffad1f6fb64,217932461,0,0x0,8
tick,0x7ffad1f6fb64,217947505,0,0x0,8
tick,0x7ffad1f6fb64,217962502,0,0x0,8
tick,0x7ffad1f6fb64,217977476,0,0x0,8
tick,0x7ffad1f6fb64,217992502,0,0x0,8
tick,0x7ffad1f6fb64,218007540,0,0x0,8
tick,0x7ffad1f6fb64,218022553,0,0x0,8
tick,0x7ffad1f6fb64,218037558,0,0x0,8
tick,0x7ffad1f6fb64,218052540,0,0x0,8
tick,0x7ffad1f6fb64,218067662,0,0x0,8
tick,0x7ffad1f6fb64,218082580,0,0x0,8
tick,0x7ffad1f6fb64,218097589,0,0x0,8
tick,0x7ffad1f6fb64,218112720,0,0x0,8
tick,0x7ffad1f6fb64,218127661,0,0x0,8
tick,0x7ffad1f6fb64,218142685,0,0x0,8
tick,0x7ffad1f6fb64,218157681,0,0x0,8
tick,0x7ffad1f6fb64,218173692,0,0x0,8
tick,0x7ffad1f6fb64,218188688,0,0x0,8
tick,0x7ffad1f6fb64,218203717,0,0x0,8
tick,0x7ffad1f6fb64,218218900,0,0x0,8
tick,0x7ffad1f6fb64,218233943,0,0x0,8
tick,0x7ffad1f6fb64,218248739,0,0x0,8
tick,0x7ffad1f6fb64,218263781,0,0x0,8
tick,0x7ffad1f6fb64,218278749,0,0x0,8
tick,0x7ffad1f6fb64,218294793,0,0x0,8
tick,0x7ffad1f6fb64,218309801,0,0x0,8
tick,0x7ffad1f6fb64,218324869,0,0x0,8
tick,0x7ffad1f6fb64,218339826,0,0x0,8
tick,0x7ffad1f6fb64,218354838,0,0x0,8
tick,0x7ffad1f6fb64,218369864,0,0x0,8
tick,0x7ffad1f6fb64,218384871,0,0x0,8
tick,0x7ffad1f6fb64,218399903,0,0x0,8
tick,0x7ffad1f6fb64,218414911,0,0x0,8
tick,0x7ffad1f6fb64,218429912,0,0x0,8
tick,0x7ffad1f6fb64,218444943,0,0x0,8
tick,0x7ffad1f6fb64,218460477,0,0x0,8
tick,0x7ffad1f6fb64,218475961,0,0x0,8
tick,0x7ffad1f6fb64,218490997,0,0x0,8
tick,0x7ffad1f6fb64,218505976,0,0x0,8
tick,0x7ffad1f6fb64,218520989,0,0x0,8
tick,0x7ffad1f6fb64,218536987,0,0x0,8
tick,0x7ffad1f6fb64,218553012,0,0x0,8
tick,0x7ffad1f6fb64,218568053,0,0x0,8
tick,0x7ffad1f6fb64,218584028,0,0x0,8
tick,0x7ffad1f6fb64,218599081,0,0x0,8
tick,0x7ffad1f6fb64,218615095,0,0x0,8
tick,0x7ffad1f6fb64,218631082,0,0x0,8
tick,0x7ffad1f6fb64,218646134,0,0x0,8
tick,0x7ffad1f6fb64,218661119,0,0x0,8
tick,0x7ffad1f6fb64,218676147,0,0x0,8
tick,0x7ffad1f6fb64,218691119,0,0x0,8
tick,0x7ffad1f6fb64,218706170,0,0x0,8
tick,0x7ffad1f6fb64,218721171,0,0x0,8
tick,0x7ffad1f6fb64,218737208,0,0x0,8
tick,0x7ffad1f6fb64,218752184,0,0x0,8
tick,0x7ffad1f6fb64,218767550,0,0x0,8
tick,0x7ffad1f6fb64,218782279,0,0x0,8
tick,0x7ffad1f6fb64,218797235,0,0x0,8
tick,0x7ffad1f6fb64,218812245,0,0x0,8
tick,0x7ffad1f6fb64,218827285,0,0x0,8
tick,0x7ffad1f6fb64,218842285,0,0x0,8
tick,0x7ffad1f6fb64,218857332,0,0x0,8
tick,0x7ffad1f6fb64,218873313,0,0x0,8
tick,0x7ffad1f6fb64,218889389,0,0x0,8
tick,0x7ffad1f6fb64,218904343,0,0x0,8
tick,0x7ffad1f6fb64,218919381,0,0x0,8
tick,0x7ffad1f6fb64,218934349,0,0x0,8
tick,0x7ffad1f6fb64,218950362,0,0x0,8
tick,0x7ffad1f6fb64,218965378,0,0x0,8
tick,0x7ffad1f6fb64,218980454,0,0x0,8
tick,0x7ffad1f6fb64,218995468,0,0x0,8
tick,0x7ffad1f6fb64,219011435,0,0x0,8
tick,0x7ffad1f6fb64,219026476,0,0x0,8
tick,0x7ffad1f6fb64,219042466,0,0x0,8
tick,0x7ffad1f6fb64,219057458,0,0x0,8
tick,0x7ffad1f6fb64,219072685,0,0x0,8
tick,0x7ffad1f6fb64,219087489,0,0x0,8
tick,0x7ffad1f6fb64,219103524,0,0x0,8
tick,0x7ffad1f6fb64,219118513,0,0x0,8
tick,0x7ffad1f6fb64,219133543,0,0x0,8
tick,0x7ffad1f6fb64,219148547,0,0x0,8
tick,0x7ffad1f6fb64,219163553,0,0x0,8
tick,0x7ffad1f6fb64,219179595,0,0x0,8
tick,0x7ffad1f6fb64,219194611,0,0x0,8
tick,0x7ffad1f6fb64,219209617,0,0x0,8
tick,0x7ffad1f6fb64,219225605,0,0x0,8
tick,0x7ffad1f6fb64,219240619,0,0x0,8
tick,0x7ffad1f6fb64,219255626,0,0x0,8
tick,0x7ffad1f6fb64,219270638,0,0x0,8
tick,0x7ffad1f6fb64,219286664,0,0x0,8
tick,0x7ffad1f6fb64,219301671,0,0x0,8
tick,0x7ffad1f6fb64,219317787,0,0x0,8
tick,0x7ffad1f6fb64,219332730,0,0x0,8
tick,0x7ffad1f6fb64,219347719,0,0x0,8
tick,0x7ffad1f6fb64,219363724,0,0x0,8
tick,0x7ffad1f6fb64,219379764,0,0x0,8
tick,0x7ffad1f6fb64,219395755,0,0x0,8
tick,0x7ffad1f6fb64,219410804,0,0x0,8
tick,0x7ffad1f6fb64,219425794,0,0x0,8
tick,0x7ffad1f6fb64,219440810,0,0x0,8
tick,0x7ffad1f6fb64,219456827,0,0x0,8
tick,0x7ffad1f6fb64,219471872,0,0x0,8
tick,0x7ffad1f6fb64,219486874,0,0x0,8
tick,0x7ffad1f6fb64,219502851,0,0x0,8
tick,0x7ffad1f6fb64,219518867,0,0x0,8
tick,0x7ffad1f6fb64,219534899,0,0x0,8
tick,0x7ffad1f6fb64,219549880,0,0x0,8
tick,0x7ffad1f6fb64,219566143,0,0x0,8
tick,0x7ffad1f6fb64,219580927,0,0x0,8
tick,0x7ffad1f6fb64,219595978,0,0x0,8
tick,0x7ffad1f6fb64,219612003,0,0x0,8
tick,0x7ffad1f6fb64,219626974,0,0x0,8
tick,0x7ffad1f6fb64,219641990,0,0x0,8
tick,0x7ffad1f6fb64,219658001,0,0x0,8
tick,0x7ffad1f6fb64,219674024,0,0x0,8
tick,0x7ffad1f6fb64,219690043,0,0x0,8
tick,0x7ffad1f6fb64,219705061,0,0x0,8
tick,0x7ffad1f6fb64,219720064,0,0x0,8
tick,0x7ffad1f6fb64,219736070,0,0x0,8
tick,0x7ffad1f6fb64,219752098,0,0x0,8
tick,0x7ffad1f6fb64,219767118,0,0x0,8
tick,0x7ffad1f6fb64,219782130,0,0x0,8
tick,0x7ffad1f6fb64,219798116,0,0x0,8
tick,0x7ffad1f6fb64,219813171,0,0x0,8
tick,0x7ffad1f6fb64,219829152,0,0x0,8
tick,0x7ffad1f6fb64,219844177,0,0x0,8
tick,0x7ffad1f6fb64,219860188,0,0x0,8
tick,0x7ffad1f6fb64,219876194,0,0x0,8
tick,0x7ffad1f6fb64,219892258,0,0x0,8
tick,0x7ffad1f6fb64,219907235,0,0x0,8
tick,0x7ffad1f6fb64,219922228,0,0x0,8
tick,0x7ffad1f6fb64,219938245,0,0x0,8
tick,0x7ffad1f6fb64,219954269,0,0x0,8
tick,0x7ffad1f6fb64,219969313,0,0x0,8
tick,0x7ffad1f6fb64,219985282,0,0x0,8
tick,0x7ffad1f6fb64,220001334,0,0x0,8
tick,0x7ffad1f6fb64,220017350,0,0x0,8
tick,0x7ffad1f6fb64,220032325,0,0x0,8
tick,0x7ffad1f6fb64,220048364,0,0x0,8
tick,0x7ffad1f6fb64,220064389,0,0x0,8
tick,0x7ffad1f6fb64,220080395,0,0x0,8
tick,0x7ffad1f6fb64,220095384,0,0x0,8
tick,0x7ffad1f6fb64,220111405,0,0x0,8
tick,0x7ffad1f6fb64,220127433,0,0x0,8
tick,0x7ffad1f6fb64,220143431,0,0x0,8
tick,0x7ffad1f6fb64,220158465,0,0x0,8
tick,0x7ffad1f6fb64,220173528,0,0x0,8
tick,0x7ffad1f6fb64,220188488,0,0x0,8
tick,0x7ffad1f6fb64,220204473,0,0x0,8
tick,0x7ffad1f6fb64,220220518,0,0x0,8
tick,0x7ffad1f6fb64,220236517,0,0x0,8
tick,0x7ffad1f6fb64,220252531,0,0x0,8
tick,0x7ffad1f6fb64,220268542,0,0x0,8
tick,0x7ffad1f6fb64,220283565,0,0x0,8
tick,0x7ffad1f6fb64,220299762,0,0x0,8
tick,0x7ffad1f6fb64,220314630,0,0x0,8
tick,0x7ffad1f6fb64,220329631,0,0x0,8
tick,0x7ffad1f6fb64,220345657,0,0x0,8
tick,0x7ffad1f6fb64,220361661,0,0x0,8
tick,0x7ffad1f6fb64,220377652,0,0x0,8
tick,0x7ffad1f6fb64,220392671,0,0x0,8
tick,0x7ffad1f6fb64,220407718,0,0x0,8
tick,0x7ffad1f6fb64,220423695,0,0x0,8
tick,0x7ffad1f6fb64,220438715,0,0x0,8
tick,0x7ffad1f6fb64,220453725,0,0x0,8
tick,0x7ffad1f6fb64,220468727,0,0x0,8
tick,0x7ffad1f6fb64,220484738,0,0x0,8
tick,0x7ffad1f6fb64,220499756,0,0x0,8
tick,0x7ffad1f6fb64,220515793,0,0x0,8
tick,0x7ffad1f6fb64,220531796,0,0x0,8
tick,0x7ffad1f6fb64,220547810,0,0x0,8
tick,0x7ffad1f6fb64,220563820,0,0x0,8
tick,0x7ffad1f6fb64,220578833,0,0x0,8
tick,0x7ffad1f6fb64,220593925,0,0x0,8
tick,0x7ffad1f6fb64,220609879,0,0x0,8
tick,0x7ffad1f6fb64,220624894,0,0x0,8
tick,0x7ffad1f6fb64,220639883,0,0x0,8
tick,0x7ffad1f6fb64,220655916,0,0x0,8
tick,0x7ffad1f6fb64,220670929,0,0x0,8
tick,0x7ffad1f6fb64,220686926,0,0x0,8
tick,0x7ffad1f6fb64,220701950,0,0x0,8
tick,0x7ffad1f6fb64,220716994,0,0x0,8
tick,0x7ffad1f6fb64,220731989,0,0x0,8
tick,0x7ffad1f6fb64,220746985,0,0x0,8
tick,0x7ffad1f6fb64,220763020,0,0x0,8
tick,0x7ffad1f6fb64,220778018,0,0x0,8
tick,0x7ffad1f6fb64,220794041,0,0x0,8
tick,0x7ffad1f6fb64,220809037,0,0x0,8
tick,0x7ffad1f6fb64,220824064,0,0x0,8
tick,0x7ffad1f6fb64,220840089,0,0x0,8
tick,0x7ffad1f6fb64,220856106,0,0x0,8
tick,0x7ffad1f6fb64,220872117,0,0x0,8
tick,0x7ffad1f6fb64,220888111,0,0x0,8
tick,0x7ffad1f6fb64,220903131,0,0x0,8
tick,0x7ffad1f6fb64,220918155,0,0x0,8
tick,0x7ffad1f6fb64,220933162,0,0x0,8
tick,0x7ffad1f6fb64,220949194,0,0x0,8
tick,0x7ffad1f6fb64,220965193,0,0x0,8
tick,0x7ffad1f6fb64,220980233,0,0x0,8
tick,0x7ffad1f6fb64,220995212,0,0x0,8
tick,0x7ffad1f6fb64,221010275,0,0x0,8
tick,0x7ffad1f6fb64,221026291,0,0x0,8
tick,0x7ffad1f6fb64,221042256,0,0x0,8
tick,0x7ffad1f6fb64,221058293,0,0x0,8
tick,0x7ffad1f6fb64,221074268,0,0x0,8
tick,0x7ffad1f6fb64,221089303,0,0x0,8
tick,0x7ffad1f6fb64,221105332,0,0x0,8
tick,0x7ffad1f6fb64,221120327,0,0x0,8
tick,0x7ffad1f6fb64,221136337,0,0x0,8
tick,0x7ffad1f6fb64,221152365,0,0x0,8
tick,0x7ffad1f6fb64,221167440,0,0x0,8
tick,0x7ffad1f6fb64,221182394,0,0x0,8
tick,0x7ffad1f6fb64,221197416,0,0x0,8
tick,0x7ffad1f6fb64,221213423,0,0x0,8
tick,0x7ffad1f6fb64,221229444,0,0x0,8
tick,0x7ffad1f6fb64,221245442,0,0x0,8
tick,0x7ffad1f6fb64,221260468,0,0x0,8
tick,0x7ffad1f6fb64,221275493,0,0x0,8
tick,0x7ffad1f6fb64,221291493,0,0x0,8
tick,0x7ffad1f6fb64,221306532,0,0x0,8
tick,0x7ffad1f6fb64,221321531,0,0x0,8
tick,0x7ffad1f6fb64,221337535,0,0x0,8
tick,0x7ffad1f6fb64,221353567,0,0x0,8
tick,0x7ffad1f6fb64,221369558,0,0x0,8
tick,0x7ffad1f6fb64,221385572,0,0x0,8
tick,0x7ffad1f6fb64,221400596,0,0x0,8
tick,0x7ffad1f6fb64,221416615,0,0x0,8
tick,0x7ffad1f6fb64,221432602,0,0x0,8
tick,0x7ffad1f6fb64,221447635,0,0x0,8
tick,0x7ffad1f6fb64,221462660,0,0x0,8
tick,0x7ffad1f6fb64,221477658,0,0x0,8
tick,0x7ffad1f6fb64,221493686,0,0x0,8
tick,0x7ffad1f6fb64,221508682,0,0x0,8
tick,0x7ffad1f6fb64,221523693,0,0x0,8
tick,0x7ffad1f6fb64,221539743,0,0x0,8
tick,0x7ffad1f6fb64,221555705,0,0x0,8
tick,0x7ffad1f6fb64,221570749,0,0x0,8
tick,0x7ffad1f6fb64,221585787,0,0x0,8
tick,0x7ffad1f6fb64,221600810,0,0x0,8
tick,0x7ffad1f6fb64,221616810,0,0x0,8
tick,0x7ffad1f6fb64,221631793,0,0x0,8
tick,0x7ffad1f6fb64,221647042,0,0x0,8
tick,0x7ffad1f6fb64,221662839,0,0x0,8
tick,0x7ffad1f6fb64,221678827,0,0x0,8
tick,0x7ffad1f6fb64,221694848,0,0x0,8
tick,0x7ffad1f6fb64,221709901,0,0x0,8
tick,0x7ffad1f6fb64,221724866,0,0x0,8
tick,0x7ffad1f6fb64,221739875,0,0x0,8
tick,0x7ffad1f6fb64,221754919,0,0x0,8
tick,0x7ffad1f6fb64,221770940,0,0x0,8
tick,0x7ffad1f6fb64,221786943,0,0x0,8
tick,0x7ffad1f6fb64,221802947,0,0x0,8
tick,0x7ffad1f6fb64,221817990,0,0x0,8
tick,0x7ffad1f6fb64,221832996,0,0x0,8
tick,0x7ffad1f6fb64,221849066,0,0x0,8
tick,0x7ffad1f6fb64,221864033,0,0x0,8
tick,0x7ffad1f6fb64,221879034,0,0x0,8
tick,0x7ffad1f6fb64,221894031,0,0x0,8
tick,0x7ffad1f6fb64,221909034,0,0x0,8
tick,0x7ffad1f6fb64,221925066,0,0x0,8
tick,0x7ffad1f6fb64,221940073,0,0x0,8
tick,0x7ffad1f6fb64,221955111,0,0x0,8
tick,0x7ffad1f6fb64,221970128,0,0x0,8
tick,0x7ffad1f6fb64,221985125,0,0x0,8
tick,0x7ffad1f6fb64,222001153,0,0x0,8
tick,0x7ffad1f6fb64,222016156,0,0x0,8
tick,0x7ffad1f6fb64,222032155,0,0x0,8
tick,0x7ffad1f6fb64,222047192,0,0x0,8
tick,0x7ffad1f6fb64,222063192,0,0x0,8
tick,0x7ffad1f6fb64,222078214,0,0x0,8
tick,0x7ffad1f6fb64,222094206,0,0x0,8
tick,0x7ffad1f6fb64,222109227,0,0x0,8
tick,0x7ffad1f6fb64,222125272,0,0x0,8
tick,0x7ffad1f6fb64,222140422,0,0x0,8
tick,0x7ffad1f6fb64,222156317,0,0x0,8
tick,0x7ffad1f6fb64,222171412,0,0x0,8
tick,0x7ffad1f6fb64,222186345,0,0x0,8
tick,0x7ffad1f6fb64,222202473,0,0x0,8
tick,0x7ffad1f6fb64,222217350,0,0x0,8
tick,0x7ffad1f6fb64,222233380,0,0x0,8
tick,0x7ffad1f6fb64,222249422,0,0x0,8
tick,0x7ffad1f6fb64,222265398,0,0x0,8
tick,0x7ffad1f6fb64,222280444,0,0x0,8
tick,0x7ffad1f6fb64,222295410,0,0x0,8
tick,0x7ffad1f6fb64,222311422,0,0x0,8
tick,0x7ffad1f6fb64,222327451,0,0x0,8
tick,0x7ffad1f6fb64,222342461,0,0x0,8
tick,0x7ffad1f6fb64,222357473,0,0x0,8
tick,0x7ffad1f6fb64,222373483,0,0x0,8
tick,0x7ffad1f6fb64,222389500,0,0x0,8
tick,0x7ffad1f6fb64,222405513,0,0x0,8
tick,0x7ffad1f6fb64,222420506,0,0x0,8
tick,0x7ffad1f6fb64,222436560,0,0x0,8
tick,0x7ffad1f6fb64,222452572,0,0x0,8
tick,0x7ffad1f6fb64,222468585,0,0x0,8
tick,0x7ffad1f6fb64,222483587,0,0x0,8
tick,0x7ffad1f6fb64,222499593,0,0x0,8
tick,0x7ffad1f6fb64,222515645,0,0x0,8
tick,0x7ffad1f6fb64,222530612,0,0x0,8
tick,0x7ffad1f6fb64,222545666,0,0x0,8
tick,0x7ffad1f6fb64,222560685,0,0x0,8
tick,0x7ffad1f6fb64,222575697,0,0x0,8
tick,0x7ffad1f6fb64,222591683,0,0x0,8
tick,0x7ffad1f6fb64,222607674,0,0x0,8
tick,0x7ffad1f6fb64,222622695,0,0x0,8
tick,0x7ffad1f6fb64,222637746,0,0x0,8
tick,0x7ffad1f6fb64,222653734,0,0x0,8
tick,0x7ffad1f6fb64,222668752,0,0x0,8
tick,0x7ffad1f6fb64,222683774,0,0x0,8
tick,0x7ffad1f6fb64,222698775,0,0x0,8
tick,0x7ffad1f6fb64,222713779,0,0x0,8
tick,0x7ffad1f6fb64,222729805,0,0x0,8
tick,0x7ffad1f6fb64,222744810,0,0x0,8
tick,0x7ffad1f6fb64,222759829,0,0x0,8
tick,0x7ffad1f6fb64,222775837,0,0x0,8
tick,0x7ffad1f6fb64,222790867,0,0x0,8
tick,0x7ffad1f6fb64,222805867,0,0x0,8
tick,0x7ffad1f6fb64,222820924,0,0x0,8
tick,0x7ffad1f6fb64,222835922,0,0x0,8
tick,0x7ffad1f6fb64,222850933,0,0x0,8
tick,0x7ffad1f6fb64,222866945,0,0x0,8
tick,0x7ffad1f6fb64,222881975,0,0x0,8
tick,0x7ffad1f6fb64,222896971,0,0x0,8
tick,0x7ffad1f6fb64,222911972,0,0x0,8
tick,0x7ffad1f6fb64,222926983,0,0x0,8
tick,0x7ffad1f6fb64,222943009,0,0x0,8
tick,0x7ffad1f6fb64,222958027,0,0x0,8
tick,0x7ffad1f6fb64,222973077,0,0x0,8
tick,0x7ffad1f6fb64,222988051,0,0x0,8
tick,0x7ffad1f6fb64,223003053,0,0x0,8
tick,0x7ffad1f6fb64,223019056,0,0x0,8
tick,0x7ffad1f6fb64,223035076,0,0x0,8
tick,0x7ffad1f6fb64,223050073,0,0x0,8
tick,0x7ffad1f6fb64,223066135,0,0x0,8
tick,0x7ffad1f6fb64,223081136,0,0x0,8
tick,0x7ffad1f6fb64,223097173,0,0x0,8
tick,0x7ffad1f6fb64,223113170,0,0x0,8
tick,0x7ffad1f6fb64,223128200,0,0x0,8
tick,0x7ffad1f6fb64,223144188,0,0x0,8
tick,0x7ffad1f6fb64,223160182,0,0x0,8
tick,0x7ffad1f6fb64,223175210,0,0x0,8
tick,0x7ffad1f6fb64,223190209,0,0x0,8
tick,0x7ffad1f6fb64,223206234,0,0x0,8
tick,0x7ffad1f6fb64,223221271,0,0x0,8
tick,0x7ffad1f6fb64,223236303,0,0x0,8
tick,0x7ffad1f6fb64,223252296,0,0x0,8
tick,0x7ffad1f6fb64,223267288,0,0x0,8
tick,0x7ffad1f6fb64,223282305,0,0x0,8
tick,0x7ffad1f6fb64,223298346,0,0x0,8
tick,0x7ffad1f6fb64,223314399,0,0x0,8
tick,0x7ffad1f6fb64,223330407,0,0x0,8
tick,0x7ffad1f6fb64,223346351,0,0x0,8
tick,0x7ffad1f6fb64,223361418,0,0x0,8
tick,0x7ffad1f6fb64,223377425,0,0x0,8
tick,0x7ffad1f6fb64,223392418,0,0x0,8
tick,0x7ffad1f6fb64,223407553,0,0x0,8
tick,0x7ffad1f6fb64,223422490,0,0x0,8
tick,0x7ffad1f6fb64,223437484,0,0x0,8
tick,0x7ffad1f6fb64,223453472,0,0x0,8
tick,0x7ffad1f6fb64,223469489,0,0x0,8
tick,0x7ffad1f6fb64,223485507,0,0x0,8
tick,0x7ffad1f6fb64,223500500,0,0x0,8
tick,0x7ffad1f6fb64,223516553,0,0x0,8
tick,0x7ffad1f6fb64,223531537,0,0x0,8
tick,0x7ffad1f6fb64,223546568,0,0x0,8
tick,0x7ffad1f6fb64,223562550,0,0x0,8
tick,0x7ffad1f6fb64,223578574,0,0x0,8
tick,0x7ffad1f6fb64,223593586,0,0x0,8
tick,0x7ffad1f6fb64,223609591,0,0x0,8
tick,0x7ffad1f6fb64,223625587,0,0x0,8
tick,0x7ffad1f6fb64,223640630,0,0x0,8
tick,0x7ffad1f6fb64,223656664,0,0x0,8
tick,0x7ffad1f6fb64,223671637,0,0x0,8
tick,0x7ffad1f6fb64,223686696,0,0x0,8
tick,0x7ffad1f6fb64,223702708,0,0x0,8
tick,0x7ffad1f6fb64,223717706,0,0x0,8
tick,0x7ffad1f6fb64,223733719,0,0x0,8
tick,0x7ffad1f6fb64,223748725,0,0x0,8
tick,0x7ffad1f6fb64,223764732,0,0x0,8
tick,0x7ffad1f6fb64,223779758,0,0x0,8
tick,0x7ffad1f6fb64,223794824,0,0x0,8
tick,0x7ffad1f6fb64,223809829,0,0x0,8
tick,0x7ffad1f6fb64,223824855,0,0x0,8
tick,0x7ffad1f6fb64,223839822,0,0x0,8
tick,0x7ffad1f6fb64,223854813,0,0x0,8
tick,0x7ffad1f6fb64,223869840,0,0x0,8
tick,0x7ffad1f6fb64,223885848,0,0x0,8
tick,0x7ffad1f6fb64,223901850,0,0x0,8
tick,0x7ffad1f6fb64,223916889,0,0x0,8
tick,0x7ffad1f6fb64,223932909,0,0x0,8
tick,0x7ffad1f6fb64,223947937,0,0x0,8
tick,0x7ffad1f6fb64,223962935,0,0x0,8
tick,0x7ffad1f6fb64,223978961,0,0x0,8
tick,0x7ffad1f6fb64,223993975,0,0x0,8
tick,0x7ffad1f6fb64,224009980,0,0x0,8
tick,0x7ffad1f6fb64,224025966,0,0x0,8
tick,0x7ffad1f6fb64,224041978,0,0x0,8
tick,0x7ffad1f6fb64,224057017,0,0x0,8
tick,0x7ffad1f6fb64,224073002,0,0x0,8
tick,0x7ffad1f6fb64,224089052,0,0x0,8
tick,0x7ffad1f6fb64,224104044,0,0x0,8
tick,0x7ffad1f6fb64,224119063,0,0x0,8
tick,0x7ffad1f6fb64,224135084,0,0x0,8
tick,0x7ffad1f6fb64,224150111,0,0x0,8
tick,0x7ffad1f6fb64,224165123,0,0x0,8
tick,0x7ffad1f6fb64,224180138,0,0x0,8
tick,0x7ffad1f6fb64,224195168,0,0x0,8
tick,0x7ffad1f6fb64,224211212,0,0x0,8
tick,0x7ffad1f6fb64,224226208,0,0x0,8
tick,0x7ffad1f6fb64,224241177,0,0x0,8
tick,0x7ffad1f6fb64,224256185,0,0x0,8
tick,0x7ffad1f6fb64,224271206,0,0x0,8
tick,0x7ffad1f6fb64,224286199,0,0x0,8
tick,0x7ffad1f6fb64,224302246,0,0x0,8
tick,0x7ffad1f6fb64,224317240,0,0x0,8
tick,0x7ffad1f6fb64,224333273,0,0x0,8
tick,0x7ffad1f6fb64,224348276,0,0x0,8
tick,0x7ffad1f6fb64,224364303,0,0x0,8
tick,0x7ffad1f6fb64,224379309,0,0x0,8
tick,0x7ffad1f6fb64,224394574,0,0x0,8
tick,0x7ffad1f6fb64,224409327,0,0x0,8
tick,0x7ffad1f6fb64,224424333,0,0x0,8
tick,0x7ffad1f6fb64,224440352,0,0x0,8
tick,0x7ffad1f6fb64,224456368,0,0x0,8
tick,0x7ffad1f6fb64,224471386,0,0x0,8
tick,0x7ffad1f6fb64,224487409,0,0x0,8
tick,0x7ffad1f6fb64,224502448,0,0x0,8
tick,0x7ffad1f6fb64,224517463,0,0x0,8
tick,0x7ffad1f6fb64,224533447,0,0x0,8
tick,0x7ffad1f6fb64,224549455,0,0x0,8
tick,0x7ffad1f6fb64,224564467,0,0x0,8
tick,0x7ffad1f6fb64,224579486,0,0x0,8
tick,0x7ffad1f6fb64,224595503,0,0x0,8
tick,0x7ffad1f6fb64,224611506,0,0x0,8
tick,0x7ffad1f6fb64,224627516,0,0x0,8
tick,0x7ffad1f6fb64,224642553,0,0x0,8
tick,0x7ffad1f6fb64,224657548,0,0x0,8
tick,0x7ffad1f6fb64,224673552,0,0x0,8
tick,0x7ffad1f6fb64,224689580,0,0x0,8
tick,0x7ffad1f6fb64,224705605,0,0x0,8
tick,0x7ffad1f6fb64,224720601,0,0x0,8
tick,0x7ffad1f6fb64,224736672,0,0x0,8
tick,0x7ffad1f6fb64,224752627,0,0x0,8
tick,0x7ffad1f6fb64,224768693,0,0x0,8
tick,0x7ffad1f6fb64,224783709,0,0x0,8
tick,0x7ffad1f6fb64,224798687,0,0x0,8
tick,0x7ffad1f6fb64,224813692,0,0x0,8
tick,0x7ffad1f6fb64,224829712,0,0x0,8
tick,0x7ffad1f6fb64,224845728,0,0x0,8
tick,0x7ffad1f6fb64,224861734,0,0x0,8
tick,0x7ffad1f6fb64,224877743,0,0x0,8
tick,0x7ffad1f6fb64,224892836,0,0x0,8
tick,0x7ffad1f6fb64,224908764,0,0x0,8
tick,0x7ffad1f6fb64,224923801,0,0x0,8
tick,0x7ffad1f6fb64,224938803,0,0x0,8
tick,0x7ffad1f6fb64,224953829,0,0x0,8
tick,0x7ffad1f6fb64,224969820,0,0x0,8
tick,0x7ffad1f6fb64,224985863,0,0x0,8
tick,0x7ffad1f6fb64,225001881,0,0x0,8
tick,0x7ffad1f6fb64,225017880,0,0x0,8
tick,0x7ffad1f6fb64,225032891,0,0x0,8
tick,0x7ffad1f6fb64,225048949,0,0x0,8
tick,0x7ffad1f6fb64,225063948,0,0x0,8
tick,0x7ffad1f6fb64,225078940,0,0x0,8
tick,0x7ffad1f6fb64,225093961,0,0x0,8
tick,0x7ffad1f6fb64,225109974,0,0x0,8
tick,0x7ffad1f6fb64,225125982,0,0x0,8
tick,0x7ffad1f6fb64,225141985,0,0x0,8
tick,0x7ffad1f6fb64,225156992,0,0x0,8
tick,0x7ffad1f6fb64,225173023,0,0x0,8
tick,0x7ffad1f6fb64,225188079,0,0x0,8
tick,0x7ffad1f6fb64,225204028,0,0x0,8
tick,0x7ffad1f6fb64,225219051,0,0x0,8
tick,0x7ffad1f6fb64,225234068,0,0x0,8
tick,0x7ffad1f6fb64,225250079,0,0x0,8
tick,0x7ffad1f6fb64,225266099,0,0x0,8
tick,0x7ffad1f6fb64,225281118,0,0x0,8
tick,0x7ffad1f6fb64,225297135,0,0x0,8
tick,0x7ffad1f6fb64,225313151,0,0x0,8
tick,0x7ffad1f6fb64,225329155,0,0x0,8
tick,0x7ffad1f6fb64,225344206,0,0x0,8
tick,0x7ffad1f6fb64,225359221,0,0x0,8
tick,0x7ffad1f6fb64,225374199,0,0x0,8
tick,0x7ffad1f6fb64,225390218,0,0x0,8
tick,0x7ffad1f6fb64,225406225,0,0x0,8
tick,0x7ffad1f6fb64,225421273,0,0x0,8
tick,0x7ffad1f6fb64,225436251,0,0x0,8
tick,0x7ffad1f6fb64,225452248,0,0x0,8
tick,0x7ffad1f6fb64,225468278,0,0x0,8
tick,0x7ffad1f6fb64,225484310,0,0x0,8
tick,0x7ffad1f6fb64,225499314,0,0x0,8
tick,0x7ffad1f6fb64,225514338,0,0x0,8
tick,0x7ffad1f6fb64,225530333,0,0x0,8
tick,0x7ffad1f6fb64,225545351,0,0x0,8
tick,0x7ffad1f6fb64,225561368,0,0x0,8
tick,0x7ffad1f6fb64,225577379,0,0x0,8
tick,0x7ffad1f6fb64,225592397,0,0x0,8
tick,0x7ffad1f6fb64,225608469,0,0x0,8
tick,0x7ffad1f6fb64,225623462,0,0x0,8
tick,0x7ffad1f6fb64,225638452,0,0x0,8
tick,0x7ffad1f6fb64,225653478,0,0x0,8
tick,0x7ffad1f6fb64,225668465,0,0x0,8
tick,0x7ffad1f6fb64,225684481,0,0x0,8
tick,0x7ffad1f6fb64,225699505,0,0x0,8
tick,0x7ffad1f6fb64,225714495,0,0x0,8
tick,0x7ffad1f6fb64,225730522,0,0x0,8
tick,0x7ffad1f6fb64,225746542,0,0x0,8
tick,0x7ffad1f6fb64,225762554,0,0x0,8
tick,0x7ffad1f6fb64,225777549,0,0x0,8
tick,0x7ffad1f6fb64,225793573,0,0x0,8
tick,0x7ffad1f6fb64,225809599,0,0x0,8
tick,0x7ffad1f6fb64,225825646,0,0x0,8
tick,0x7ffad1f6fb64,225840625,0,0x0,8
tick,0x7ffad1f6fb64,225856663,0,0x0,8
tick,0x7ffad1f6fb64,225872681,0,0x0,8
tick,0x7ffad1f6fb64,225888684,0,0x0,8
tick,0x7ffad1f6fb64,225903691,0,0x0,8
tick,0x7ffad1f6fb64,225919706,0,0x0,8
tick,0x7ffad1f6fb64,225935766,0,0x0,8
tick,0x7ffad1f6fb64,225951748,0,0x0,8
tick,0x7ffad1f6fb64,225966756,0,0x0,8
tick,0x7ffad1f6fb64,225981804,0,0x0,8
tick,0x7ffad1f6fb64,225997763,0,0x0,8
tick,0x7ffad1f6fb64,226013773,0,0x0,8
tick,0x7ffad1f6fb64,226028874,0,0x0,8
tick,0x7ffad1f6fb64,226043816,0,0x0,8
tick,0x7ffad1f6fb64,226059827,0,0x0,8
tick,0x7ffad1f6fb64,226075840,0,0x0,8
tick,0x7ffad1f6fb64,226091870,0,0x0,8
tick,0x7ffad1f6fb64,226107869,0,0x0,8
tick,0x7ffad1f6fb64,226122875,0,0x0,8
tick,0x7ffad1f6fb64,226138946,0,0x0,8
tick,0x7ffad1f6fb64,226153927,0,0x0,8
tick,0x7ffad1f6fb64,226168929,0,0x0,8
tick,0x7ffad1f6fb64,226184929,0,0x0,8
tick,0x7ffad1f6fb64,226199970,0,0x0,8
tick,0x7ffad1f6fb64,226215968,0,0x0,8
tick,0x7ffad1f6fb64,226231004,0,0x0,8
tick,0x7ffad1f6fb64,226246986,0,0x0,8
tick,0x7ffad1f6fb64,226263031,0,0x0,8
tick,0x7ffad1f6fb64,226279024,0,0x0,8
tick,0x7ffad1f6fb64,226295061,0,0x0,8
tick,0x7ffad1f6fb64,226311051,0,0x0,8
tick,0x7ffad1f6fb64,226326061,0,0x0,8
tick,0x7ffad1f6fb64,226342084,0,0x0,8
tick,0x7ffad1f6fb64,226357101,0,0x0,8
tick,0x7ffad1f6fb64,226373119,0,0x0,8
tick,0x7ffad1f6fb64,226389122,0,0x0,8
tick,0x7ffad1f6fb64,226405144,0,0x0,8
tick,0x7ffad1f6fb64,226420158,0,0x0,8
tick,0x7ffad1f6fb64,226435312,0,0x0,8
tick,0x7ffad1f6fb64,226450178,0,0x0,8
tick,0x7ffad1f6fb64,226465193,0,0x0,8
tick,0x7ffad1f6fb64,226480257,0,0x0,8
tick,0x7ffad1f6fb64,226495247,0,0x0,8
tick,0x7ffad1f6fb64,226511252,0,0x0,8
tick,0x7ffad1f6fb64,226527253,0,0x0,8
tick,0x7ffad1f6fb64,226542322,0,0x0,8
tick,0x7ffad1f6fb64,226558267,0,0x0,8
tick,0x7ffad1f6fb64,226574283,0,0x0,8
tick,0x7ffad1f6fb64,226589321,0,0x0,8
tick,0x7ffad1f6fb64,226605317,0,0x0,8
tick,0x7ffad1f6fb64,226620349,0,0x0,8
tick,0x7ffad1f6fb64,226636386,0,0x0,8
tick,0x7ffad1f6fb64,226652391,0,0x0,8
tick,0x7ffad1f6fb64,226667403,0,0x0,8
tick,0x7ffad1f6fb64,226682401,0,0x0,8
tick,0x7ffad1f6fb64,226698454,0,0x0,8
tick,0x7ffad1f6fb64,226713447,0,0x0,8
tick,0x7ffad1f6fb64,226728457,0,0x0,8
tick,0x7ffad1f6fb64,226744454,0,0x0,8
tick,0x7ffad1f6fb64,226759489,0,0x0,8
tick,0x7ffad1f6fb64,226775480,0,0x0,8
tick,0x7ffad1f6fb64,226791493,0,0x0,8
tick,0x7ffad1f6fb64,226806527,0,0x0,8
tick,0x7ffad1f6fb64,226821510,0,0x0,8
tick,0x7ffad1f6fb64,226836549,0,0x0,8
tick,0x7ffad1f6fb64,226851561,0,0x0,8
tick,0x7ffad1f6fb64,226866574,0,0x0,8
tick,0x7ffad1f6fb64,226881568,0,0x0,8
tick,0x7ffad1f6fb64,226896595,0,0x0,8
tick,0x7ffad1f6fb64,226912610,0,0x0,8
tick,0x7ffad1f6fb64,226927611,0,0x0,8
tick,0x7ffad1f6fb64,226943631,0,0x0,8
tick,0x7ffad1f6fb64,226959650,0,0x0,8
tick,0x7ffad1f6fb64,226974669,0,0x0,8
tick,0x7ffad1f6fb64,226990690,0,0x0,8
tick,0x7ffad1f6fb64,227006690,0,0x0,8
tick,0x7ffad1f6fb64,227021709,0,0x0,8
tick,0x7ffad1f6fb64,227037730,0,0x0,8
tick,0x7ffad1f6fb64,227053731,0,0x0,8
tick,0x7ffad1f6fb64,227069754,0,0x0,8
tick,0x7ffad1f6fb64,227084758,0,0x0,8
tick,0x7ffad1f6fb64,227099767,0,0x0,8
tick,0x7ffad1f6fb64,227114793,0,0x0,8
tick,0x7ffad1f6fb64,227130835,0,0x0,8
tick,0x7ffad1f6fb64,227146829,0,0x0,8
tick,0x7ffad1f6fb64,227162874,0,0x0,8
tick,0x7ffad1f6fb64,227178867,0,0x0,8
tick,0x7ffad1f6fb64,227194866,0,0x0,8
tick,0x7ffad1f6fb64,227209905,0,0x0,8
tick,0x7ffad1f6fb64,227225902,0,0x0,8
tick,0x7ffad1f6fb64,227240936,0,0x0,8
tick,0x7ffad1f6fb64,227256926,0,0x0,8
tick,0x7ffad1f6fb64,227272991,0,0x0,8
tick,0x7ffad1f6fb64,227289013,0,0x0,8
tick,0x7ffad1f6fb64,227304959,0,0x0,8
tick,0x7ffad1f6fb64,227320990,0,0x0,8
tick,0x7ffad1f6fb64,227335988,0,0x0,8
tick,0x7ffad1f6fb64,227352024,0,0x0,8
tick,0x7ffad1f6fb64,227368021,0,0x0,8
tick,0x7ffad1f6fb64,227384037,0,0x0,8
tick,0x7ffad1f6fb64,227399062,0,0x0,8
tick,0x7ffad1f6fb64,227415075,0,0x0,8
tick,0x7ffad1f6fb64,227431085,0,0x0,8
tick,0x7ffad1f6fb64,227447086,0,0x0,8
tick,0x7ffad1f6fb64,227462471,0,0x0,8
tick,0x7ffad1f6fb64,227478139,0,0x0,8
tick,0x7ffad1f6fb64,227494159,0,0x0,8
tick,0x7ffad1f6fb64,227509169,0,0x0,8
tick,0x7ffad1f6fb64,227524159,0,0x0,8
tick,0x7ffad1f6fb64,227539174,0,0x0,8
tick,0x7ffad1f6fb64,227555173,0,0x0,8
tick,0x7ffad1f6fb64,227570246,0,0x0,8
tick,0x7ffad1f6fb64,227585248,0,0x0,8
tick,0x7ffad1f6fb64,227600260,0,0x0,8
tick,0x7ffad1f6fb64,227615275,0,0x0,8
tick,0x7ffad1f6fb64,227630281,0,0x0,8
tick,0x7ffad1f6fb64,227645275,0,0x0,8
tick,0x7ffad1f6fb64,227661310,0,0x0,8
tick,0x7ffad1f6fb64,227676371,0,0x0,8
tick,0x7ffad1f6fb64,227691331,0,0x0,8
tick,0x7ffad1f6fb64,227706343,0,0x0,8
tick,0x7ffad1f6fb64,227721363,0,0x0,8
tick,0x7ffad1f6fb64,227737380,0,0x0,8
tick,0x7ffad1f6fb64,227753366,0,0x0,8
tick,0x7ffad1f6fb64,227769379,0,0x0,8
tick,0x7ffad1f6fb64,227785406,0,0x0,8
tick,0x7ffad1f6fb64,227800416,0,0x0,8
tick,0x7ffad1f6fb64,227816425,0,0x0,8
tick,0x7ffad1f6fb64,227831465,0,0x0,8
tick,0x7ffad1f6fb64,227847477,0,0x0,8
tick,0x7ffad1f6fb64,227863515,0,0x0,8
tick,0x7ffad1f6fb64,227878498,0,0x0,8
tick,0x7ffad1f6fb64,227893540,0,0x0,8
tick,0x7ffad1f6fb64,227909525,0,0x0,8
tick,0x7ffad1f6fb64,227924546,0,0x0,8
tick,0x7ffad1f6fb64,227939542,0,0x0,8
tick,0x7ffad1f6fb64,227954569,0,0x0,8
tick,0x7ffad1f6fb64,227970660,0,0x0,8
tick,0x7ffad1f6fb64,227986591,0,0x0,8
tick,0x7ffad1f6fb64,228002616,0,0x0,8
tick,0x7ffad1f6fb64,228017617,0,0x0,8
tick,0x7ffad1f6fb64,228033635,0,0x0,8
tick,0x7ffad1f6fb64,228049675,0,0x0,8
tick,0x7ffad1f6fb64,228064669,0,0x0,8
tick,0x7ffad1f6fb64,228079664,0,0x0,8
tick,0x7ffad1f6fb64,228094681,0,0x0,8
tick,0x7ffad1f6fb64,228110727,0,0x0,8
tick,0x7ffad1f6fb64,228125707,0,0x0,8
tick,0x7ffad1f6fb64,228140720,0,0x0,8
tick,0x7ffad1f6fb64,228155956,0,0x0,8
tick,0x7ffad1f6fb64,228171750,0,0x0,8
tick,0x7ffad1f6fb64,228187775,0,0x0,8
tick,0x7ffad1f6fb64,228202771,0,0x0,8
tick,0x7ffad1f6fb64,228218838,0,0x0,8
tick,0x7ffad1f6fb64,228233793,0,0x0,8
tick,0x7ffad1f6fb64,228248843,0,0x0,8
tick,0x7ffad1f6fb64,228263840,0,0x0,8
tick,0x7ffad1f6fb64,228278856,0,0x0,8
tick,0x7ffad1f6fb64,228294867,0,0x0,8
tick,0x7ffad1f6fb64,228310885,0,0x0,8
tick,0x7ffad1f6fb64,228326916,0,0x0,8
tick,0x7ffad1f6fb64,228341911,0,0x0,8
tick,0x7ffad1f6fb64,228357926,0,0x0,8
tick,0x7ffad1f6fb64,228372954,0,0x0,8
tick,0x7ffad1f6fb64,228387944,0,0x0,8
tick,0x7ffad1f6fb64,228402957,0,0x0,8
tick,0x7ffad1f6fb64,228418984,0,0x0,8
tick,0x7ffad1f6fb64,228434995,0,0x0,8
tick,0x7ffad1f6fb64,228450021,0,0x0,8
tick,0x7ffad1f6fb64,228466035,0,0x0,8
tick,0x7ffad1f6fb64,228481044,0,0x0,8
tick,0x7ffad1f6fb64,228496038,0,0x0,8
tick,0x7ffad1f6fb64,228512062,0,0x0,8
tick,0x7ffad1f6fb64,228528093,0,0x0,8
tick,0x7ffad1f6fb64,228544133,0,0x0,8
tick,0x7ffad1f6fb64,228560119,0,0x0,8
tick,0x7ffad1f6fb64,228575200,0,0x0,8
tick,0x7ffad1f6fb64,228590134,0,0x0,8
tick,0x7ffad1f6fb64,228606164,0,0x0,8
tick,0x7ffad1f6fb64,228621179,0,0x0,8
tick,0x7ffad1f6fb64,228637317,0,0x0,8
tick,0x7ffad1f6fb64,228653206,0,0x0,8
tick,0x7ffad1f6fb64,228669247,0,0x0,8
tick,0x7ffad1f6fb64,228685214,0,0x0,8
tick,0x7ffad1f6fb64,228700264,0,0x0,8
tick,0x7ffad1f6fb64,228716388,0,0x0,8
tick,0x7ffad1f6fb64,228731251,0,0x0,8
tick,0x7ffad1f6fb64,228747275,0,0x0,8
tick,0x7ffad1f6fb64,228763321,0,0x0,8
tick,0x7ffad1f6fb64,228778305,0,0x0,8
tick,0x7ffad1f6fb64,228794327,0,0x0,8
tick,0x7ffad1f6fb64,228810344,0,0x0,8
tick,0x7ffad1f6fb64,228825387,0,0x0,8
tick,0x7ffad1f6fb64,228840361,0,0x0,8
tick,0x7ffad1f6fb64,228856367,0,0x0,8
tick,0x7ffad1f6fb64,228872393,0,0x0,8
tick,0x7ffad1f6fb64,228888422,0,0x0,8
tick,0x7ffad1f6fb64,228903418,0,0x0,8
tick,0x7ffad1f6fb64,228918419,0,0x0,8
tick,0x7ffad1f6fb64,228934447,0,0x0,8
tick,0x7ffad1f6fb64,228949450,0,0x0,8
tick,0x7ffad1f6fb64,228964465,0,0x0,8
tick,0x7ffad1f6fb64,228979492,0,0x0,8
tick,0x7ffad1f6fb64,228995493,0,0x0,8
tick,0x7ffad1f6fb64,229010522,0,0x0,8
tick,0x7ffad1f6fb64,229025547,0,0x0,8
tick,0x7ffad1f6fb64,229040546,0,0x0,8
tick,0x7ffad1f6fb64,229055619,0,0x0,8
tick,0x7ffad1f6fb64,229070575,0,0x0,8
tick,0x7ffad1f6fb64,229086586,0,0x0,8
tick,0x7ffad1f6fb64,229102589,0,0x0,8
tick,0x7ffad1f6fb64,229117604,0,0x0,8
tick,0x7ffad1f6fb64,229133629,0,0x0,8
tick,0x7ffad1f6fb64,229148631,0,0x0,8
tick,0x7ffad1f6fb64,229163651,0,0x0,8
tick,0x7ffad1f6fb64,229178648,0,0x0,8
tick,0x7ffad1f6fb64,229194691,0,0x0,8
tick,0x7ffad1f6fb64,229210898,0,0x0,8
tick,0x7ffad1f6fb64,229225717,0,0x0,8
tick,0x7ffad1f6fb64,229240729,0,0x0,8
tick,0x7ffad1f6fb64,229255728,0,0x0,8
tick,0x7ffad1f6fb64,229271759,0,0x0,8
tick,0x7ffad1f6fb64,229287771,0,0x0,8
tick,0x7ffad1f6fb64,229303062,0,0x0,8
tick,0x7ffad1f6fb64,229318791,0,0x0,8
tick,0x7ffad1f6fb64,229334805,0,0x0,8
tick,0x7ffad1f6fb64,229349809,0,0x0,8
tick,0x7ffad1f6fb64,229364832,0,0x0,8
tick,0x7ffad1f6fb64,229379845,0,0x0,8
tick,0x7ffad1f6fb64,229395881,0,0x0,8
tick,0x7ffad1f6fb64,229410959,0,0x0,8
tick,0x7ffad1f6fb64,229426912,0,0x0,8
tick,0x7ffad1f6fb64,229442904,0,0x0,8
tick,0x7ffad1f6fb64,229457916,0,0x0,8
tick,0x7ffad1f6fb64,229473937,0,0x0,8
tick,0x7ffad1f6fb64,229489969,0,0x0,8
tick,0x7ffad1f6fb64,229505038,0,0x0,8
tick,0x7ffad1f6fb64,229520013,0,0x0,8
tick,0x7ffad1f6fb64,229535016,0,0x0,8
tick,0x7ffad1f6fb64,229549999,0,0x0,8
tick,0x7ffad1f6fb64,229565025,0,0x0,8
tick,0x7ffad1f6fb64,229580048,0,0x0,8
tick,0x7ffad1f6fb64,229595221,0,0x0,8
tick,0x7ffad1f6fb64,229610152,0,0x0,8
tick,0x7ffad1f6fb64,229626112,0,0x0,8
tick,0x7ffad1f6fb64,229641105,0,0x0,8
tick,0x7ffad1f6fb64,229656132,0,0x0,8
tick,0x7ffad1f6fb64,229672114,0,0x0,8
tick,0x7ffad1f6fb64,229687118,0,0x0,8
tick,0x7ffad1f6fb64,229703297,0,0x0,8
tick,0x7ffad1f6fb64,229719201,0,0x0,8
tick,0x7ffad1f6fb64,229734187,0,0x0,8
tick,0x7ffad1f6fb64,229750186,0,0x0,8
tick,0x7ffad1f6fb64,229766210,0,0x0,8
tick,0x7ffad1f6fb64,229781208,0,0x0,8
tick,0x7ffad1f6fb64,229796215,0,0x0,8
tick,0x7ffad1f6fb64,229812277,0,0x0,8
tick,0x7ffad1f6fb64,229827299,0,0x0,8
tick,0x7ffad1f6fb64,229843298,0,0x0,8
tick,0x7ffad1f6fb64,229859274,0,0x0,8
tick,0x7ffad1f6fb64,229874349,0,0x0,8
tick,0x7ffad1f6fb64,229889318,0,0x0,8
tick,0x7ffad1f6fb64,229905350,0,0x0,8
tick,0x7ffad1f6fb64,229920390,0,0x0,8
tick,0x7ffad1f6fb64,229935363,0,0x0,8
tick,0x7ffad1f6fb64,229950395,0,0x0,8
tick,0x7ffad1f6fb64,229966386,0,0x0,8
tick,0x7ffad1f6fb64,229981403,0,0x0,8
tick,0x7ffad1f6fb64,229997522,0,0x0,8
tick,0x7ffad1f6fb64,230013477,0,0x0,8
tick,0x7ffad1f6fb64,230029482,0,0x0,8
tick,0x7ffad1f6fb64,230044538,0,0x0,8
tick,0x7ffad1f6fb64,230060481,0,0x0,8
tick,0x7ffad1f6fb64,230075496,0,0x0,8
tick,0x7ffad1f6fb64,230091569,0,0x0,8
tick,0x7ffad1f6fb64,230107548,0,0x0,8
tick,0x7ffad1f6fb64,230122542,0,0x0,8
tick,0x7ffad1f6fb64,230137541,0,0x0,8
tick,0x7ffad1f6fb64,230153543,0,0x0,8
tick,0x7ffad1f6fb64,230169566,0,0x0,8
tick,0x7ffad1f6fb64,230185598,0,0x0,8
tick,0x7ffad1f6fb64,230200618,0,0x0,8
tick,0x7ffad1f6fb64,230215612,0,0x0,8
tick,0x7ffad1f6fb64,230230642,0,0x0,8
tick,0x7ffad1f6fb64,230246633,0,0x0,8
tick,0x7ffad1f6fb64,230262641,0,0x0,8
tick,0x7ffad1f6fb64,230277675,0,0x0,8
tick,0x7ffad1f6fb64,230293697,0,0x0,8
tick,0x7ffad1f6fb64,230309696,0,0x0,8
tick,0x7ffad1f6fb64,230325722,0,0x0,8
tick,0x7ffad1f6fb64,230340709,0,0x0,8
tick,0x7ffad1f6fb64,230356744,0,0x0,8
tick,0x7ffad1f6fb64,230371739,0,0x0,8
tick,0x7ffad1f6fb64,230387796,0,0x0,8
tick,0x7ffad1f6fb64,230402778,0,0x0,8
tick,0x7ffad1f6fb64,230418802,0,0x0,8
tick,0x7ffad1f6fb64,230434798,0,0x0,8
tick,0x7ffad1f6fb64,230450040,0,0x0,8
tick,0x7ffad1f6fb64,230464831,0,0x0,8
tick,0x7ffad1f6fb64,230479849,0,0x0,8
tick,0x7ffad1f6fb64,230495859,0,0x0,8
tick,0x7ffad1f6fb64,230511873,0,0x0,8
tick,0x7ffad1f6fb64,230526892,0,0x0,8
tick,0x7ffad1f6fb64,230541915,0,0x0,8
tick,0x7ffad1f6fb64,230557909,0,0x0,8
tick,0x7ffad1f6fb64,230573927,0,0x0,8
tick,0x7ffad1f6fb64,230589949,0,0x0,8
tick,0x7ffad1f6fb64,230604968,0,0x0,8
tick,0x7ffad1f6fb64,230620024,0,0x0,8
tick,0x7ffad1f6fb64,230635001,0,0x0,8
tick,0x7ffad1f6fb64,230650255,0,0x0,8
tick,0x7ffad1f6fb64,230666023,0,0x0,8
tick,0x7ffad1f6fb64,230681018,0,0x0,8
tick,0x7ffad1f6fb64,230696036,0,0x0,8
tick,0x7ffad1f6fb64,230711081,0,0x0,8
tick,0x7ffad1f6fb64,230726074,0,0x0,8
tick,0x7ffad1f6fb64,230741142,0,0x0,8
tick,0x7ffad1f6fb64,230757142,0,0x0,8
tick,0x7ffad1f6fb64,230773131,0,0x0,8
tick,0x7ffad1f6fb64,230788139,0,0x0,8
tick,0x7ffad1f6fb64,230803152,0,0x0,8
tick,0x7ffad1f6fb64,230819192,0,0x0,8
tick,0x7ffad1f6fb64,230835182,0,0x0,8
tick,0x7ffad1f6fb64,230850241,0,0x0,8
tick,0x7ffad1f6fb64,230865208,0,0x0,8
tick,0x7ffad1f6fb64,230880231,0,0x0,8
tick,0x7ffad1f6fb64,230895260,0,0x0,8
tick,0x7ffad1f6fb64,230911241,0,0x0,8
tick,0x7ffad1f6fb64,230927252,0,0x0,8
tick,0x7ffad1f6fb64,230943269,0,0x0,8
tick,0x7ffad1f6fb64,230959277,0,0x0,8
tick,0x7ffad1f6fb64,230974292,0,0x0,8
tick,0x7ffad1f6fb64,230990319,0,0x0,8
tick,0x7ffad1f6fb64,231006336,0,0x0,8
tick,0x7ffad1f6fb64,231022339,0,0x0,8
tick,0x7ffad1f6fb64,231037371,0,0x0,8
tick,0x7ffad1f6fb64,231053348,0,0x0,8
tick,0x7ffad1f6fb64,231069391,0,0x0,8
tick,0x7ffad1f6fb64,231085401,0,0x0,8
tick,0x7ffad1f6fb64,231100405,0,0x0,8
tick,0x7ffad1f6fb64,231116413,0,0x0,8
tick,0x7ffad1f6fb64,231131461,0,0x0,8
tick,0x7ffad1f6fb64,231146455,0,0x0,8
tick,0x7ffad1f6fb64,231161479,0,0x0,8
tick,0x7ffad1f6fb64,231177486,0,0x0,8
tick,0x7ffad1f6fb64,231193502,0,0x0,8
tick,0x7ffad1f6fb64,231209503,0,0x0,8
tick,0x7ffad1f6fb64,231224514,0,0x0,8
tick,0x7ffad1f6fb64,231239539,0,0x0,8
tick,0x7ffad1f6fb64,231255564,0,0x0,8
tick,0x7ffad1f6fb64,231270598,0,0x0,8
tick,0x7ffad1f6fb64,231285578,0,0x0,8
tick,0x7ffad1f6fb64,231301591,0,0x0,8
tick,0x7ffad1f6fb64,231317668,0,0x0,8
tick,0x7ffad1f6fb64,231333658,0,0x0,8
tick,0x7ffad1f6fb64,231349658,0,0x0,8
tick,0x7ffad1f6fb64,231365703,0,0x0,8
tick,0x7ffad1f6fb64,231380692,0,0x0,8
tick,0x7ffad1f6fb64,231395694,0,0x0,8
tick,0x7ffad1f6fb64,231410720,0,0x0,8
tick,0x7ffad1f6fb64,231425725,0,0x0,8
tick,0x7ffad1f6fb64,231440719,0,0x0,8
tick,0x7ffad1f6fb64,231455733,0,0x0,8
tick,0x7ffad1f6fb64,231471756,0,0x0,8
tick,0x7ffad1f6fb64,231487765,0,0x0,8
tick,0x7ffad1f6fb64,231502779,0,0x0,8
tick,0x7ffad1f6fb64,231518790,0,0x0,8
tick,0x7ffad1f6fb64,231534791,0,0x0,8
tick,0x7ffad1f6fb64,231549807,0,0x0,8
tick,0x7ffad1f6fb64,231564847,0,0x0,8
tick,0x7ffad1f6fb64,231579877,0,0x0,8
tick,0x7ffad1f6fb64,231595865,0,0x0,8
tick,0x7ffad1f6fb64,231611880,0,0x0,8
tick,0x7ffad1f6fb64,231627904,0,0x0,8
tick,0x7ffad1f6fb64,231642930,0,0x0,8
tick,0x7ffad1f6fb64,231658938,0,0x0,8
tick,0x7ffad1f6fb64,231674931,0,0x0,8
tick,0x7ffad1f6fb64,231689996,0,0x0,8
tick,0x7ffad1f6fb64,231705957,0,0x0,8
tick,0x7ffad1f6fb64,231720971,0,0x0,8
tick,0x7ffad1f6fb64,231737020,0,0x0,8
tick,0x7ffad1f6fb64,231753001,0,0x0,8
tick,0x7ffad1f6fb64,231769037,0,0x0,8
tick,0x7ffad1f6fb64,231784030,0,0x0,8
tick,0x7ffad1f6fb64,231799061,0,0x0,8
tick,0x7ffad1f6fb64,231815063,0,0x0,8
tick,0x7ffad1f6fb64,231831108,0,0x0,8
tick,0x7ffad1f6fb64,231847103,0,0x0,8
tick,0x7ffad1f6fb64,231863102,0,0x0,8
tick,0x7ffad1f6fb64,231878125,0,0x0,8
tick,0x7ffad1f6fb64,231894143,0,0x0,8
tick,0x7ffad1f6fb64,231909194,0,0x0,8
tick,0x7ffad1f6fb64,231925152,0,0x0,8
tick,0x7ffad1f6fb64,231940185,0,0x0,8
tick,0x7ffad1f6fb64,231956194,0,0x0,8
tick,0x7ffad1f6fb64,231972228,0,0x0,8
tick,0x7ffad1f6fb64,231988221,0,0x0,8
tick,0x7ffad1f6fb64,232004231,0,0x0,8
tick,0x7ffad1f6fb64,232019268,0,0x0,8
tick,0x7ffad1f6fb64,232035261,0,0x0,8
tick,0x7ffad1f6fb64,232050267,0,0x0,8
tick,0x7ffad1f6fb64,232066308,0,0x0,8
tick,0x7ffad1f6fb64,232081358,0,0x0,8
tick,0x7ffad1f6fb64,232096318,0,0x0,8
tick,0x7ffad1f6fb64,232112330,0,0x0,8
tick,0x7ffad1f6fb64,232127411,0,0x0,8
tick,0x7ffad1f6fb64,232143359,0,0x0,8
tick,0x7ffad1f6fb64,232158395,0,0x0,8
tick,0x7ffad1f6fb64,232173397,0,0x0,8
tick,0x7ffad1f6fb64,232189398,0,0x0,8
tick,0x7ffad1f6fb64,232204449,0,0x0,8
tick,0x7ffad1f6fb64,232219448,0,0x0,8
tick,0x7ffad1f6fb64,232235452,0,0x0,8
tick,0x7ffad1f6fb64,232251466,0,0x0,8
tick,0x7ffad1f6fb64,232266483,0,0x0,8
tick,0x7ffad1f6fb64,232281514,0,0x0,8
tick,0x7ffad1f6fb64,232297485,0,0x0,8
tick,0x7ffad1f6fb64,232313557,0,0x0,8
tick,0x7ffad1f6fb64,232329548,0,0x0,8
tick,0x7ffad1f6fb64,232345586,0,0x0,8
tick,0x7ffad1f6fb64,232361576,0,0x0,8
tick,0x7ffad1f6fb64,232377595,0,0x0,8
tick,0x7ffad1f6fb64,232392626,0,0x0,8
tick,0x7ffad1f6fb64,232408620,0,0x0,8
tick,0x7ffad1f6fb64,232424635,0,0x0,8
tick,0x7ffad1f6fb64,232439648,0,0x0,8
tick,0x7ffad1f6fb64,232454679,0,0x0,8
tick,0x7ffad1f6fb64,232469658,0,0x0,8
tick,0x7ffad1f6fb64,232485678,0,0x0,8
tick,0x7ffad1f6fb64,232501713,0,0x0,8
tick,0x7ffad1f6fb64,232517704,0,0x0,8
tick,0x7ffad1f6fb64,232532713,0,0x0,8
tick,0x7ffad1f6fb64,232548713,0,0x0,8
tick,0x7ffad1f6fb64,232563786,0,0x0,8
tick,0x7ffad1f6fb64,232579756,0,0x0,8
tick,0x7ffad1f6fb64,232594783,0,0x0,8
tick,0x7ffad1f6fb64,232609793,0,0x0,8
tick,0x7ffad1f6fb64,232625802,0,0x0,8
tick,0x7ffad1f6fb64,232640823,0,0x0,8
tick,0x7ffad1f6fb64,232655830,0,0x0,8
tick,0x7ffad1f6fb64,232672100,0,0x0,8
tick,0x7ffad1f6fb64,232687882,0,0x0,8
tick,0x7ffad1f6fb64,232702862,0,0x0,8
tick,0x7ffad1f6fb64,232718903,0,0x0,8
tick,0x7ffad1f6fb64,232733893,0,0x0,8
tick,0x7ffad1f6fb64,232749915,0,0x0,8
tick,0x7ffad1f6fb64,232764988,0,0x0,8
tick,0x7ffad1f6fb64,232779949,0,0x0,8
tick,0x7ffad1f6fb64,232794986,0,0x0,8
tick,0x7ffad1f6fb64,232811001,0,0x0,8
tick,0x7ffad1f6fb64,232826989,0,0x0,8
tick,0x7ffad1f6fb64,232843014,0,0x0,8
tick,0x7ffad1f6fb64,232858037,0,0x0,8
tick,0x7ffad1f6fb64,232874034,0,0x0,8
tick,0x7ffad1f6fb64,232890062,0,0x0,8
tick,0x7ffad1f6fb64,232906061,0,0x0,8
tick,0x7ffad1f6fb64,232921079,0,0x0,8
tick,0x7ffad1f6fb64,232937097,0,0x0,8
tick,0x7ffad1f6fb64,232952097,0,0x0,8
tick,0x7ffad1f6fb64,232967111,0,0x0,8
tick,0x7ffad1f6fb64,232982121,0,0x0,8
tick,0x7ffad1f6fb64,232997146,0,0x0,8
tick,0x7ffad1f6fb64,233012170,0,0x0,8
tick,0x7ffad1f6fb64,233028166,0,0x0,8
tick,0x7ffad1f6fb64,233044171,0,0x0,8
tick,0x7ffad1f6fb64,233060204,0,0x0,8
tick,0x7ffad1f6fb64,233075257,0,0x0,8
tick,0x7ffad1f6fb64,233091291,0,0x0,8
tick,0x7ffad1f6fb64,233107271,0,0x0,8
tick,0x7ffad1f6fb64,233122282,0,0x0,8
tick,0x7ffad1f6fb64,233138285,0,0x0,8
tick,0x7ffad1f6fb64,233154280,0,0x0,8
tick,0x7ffad1f6fb64,233170293,0,0x0,8
tick,0x7ffad1f6fb64,233185334,0,0x0,8
tick,0x7ffad1f6fb64,233200319,0,0x0,8
tick,0x7ffad1f6fb64,233216361,0,0x0,8
tick,0x7ffad1f6fb64,233231361,0,0x0,8
tick,0x7ffad1f6fb64,233246385,0,0x0,8
tick,0x7ffad1f6fb64,233262390,0,0x0,8
tick,0x7ffad1f6fb64,233277381,0,0x0,8
tick,0x7ffad1f6fb64,233293436,0,0x0,8
tick,0x7ffad1f6fb64,233309433,0,0x0,8
tick,0x7ffad1f6fb64,233324452,0,0x0,8
tick,0x7ffad1f6fb64,233339450,0,0x0,8
tick,0x7ffad1f6fb64,233355458,0,0x0,8
tick,0x7ffad1f6fb64,233370507,0,0x0,8
tick,0x7ffad1f6fb64,233386489,0,0x0,8
tick,0x7ffad1f6fb64,233402506,0,0x0,8
tick,0x7ffad1f6fb64,233417518,0,0x0,8
tick,0x7ffad1f6fb64,233433544,0,0x0,8
tick,0x7ffad1f6fb64,233449548,0,0x0,8
tick,0x7ffad1f6fb64,233464601,0,0x0,8
tick,0x7ffad1f6fb64,233479574,0,0x0,8
tick,0x7ffad1f6fb64,233495621,0,0x0,8
tick,0x7ffad1f6fb64,233510625,0,0x0,8
tick,0x7ffad1f6fb64,233525615,0,0x0,8
tick,0x7ffad1f6fb64,233540636,0,0x0,8
tick,0x7ffad1f6fb64,233555667,0,0x0,8
tick,0x7ffad1f6fb64,233570669,0,0x0,8
tick,0x7ffad1f6fb64,233586672,0,0x0,8
tick,0x7ffad1f6fb64,233602692,0,0x0,8
tick,0x7ffad1f6fb64,233617711,0,0x0,8
tick,0x7ffad1f6fb64,233633720,0,0x0,8
tick,0x7ffad1f6fb64,233649748,0,0x0,8
tick,0x7ffad1f6fb64,233665743,0,0x0,8
tick,0x7ffad1f6fb64,233681779,0,0x0,8
tick,0x7ffad1f6fb64,233696805,0,0x0,8
tick,0x7ffad1f6fb64,233712789,0,0x0,8
tick,0x7ffad1f6fb64,233728791,0,0x0,8
tick,0x7ffad1f6fb64,233744830,0,0x0,8
tick,0x7ffad1f6fb64,233759854,0,0x0,8
tick,0x7ffad1f6fb64,233774869,0,0x0,8
tick,0x7ffad1f6fb64,233790893,0,0x0,8
tick,0x7ffad1f6fb64,233805889,0,0x0,8
tick,0x7ffad1f6fb64,233821131,0,0x0,8
tick,0x7ffad1f6fb64,233835911,0,0x0,8
tick,0x7ffad1f6fb64,233850917,0,0x0,8
tick,0x7ffad1f6fb64,233865962,0,0x0,8
tick,0x7ffad1f6fb64,233880985,0,0x0,8
tick,0x7ffad1f6fb64,233895968,0,0x0,8
tick,0x7ffad1f6fb64,233911000,0,0x0,8
tick,0x7ffad1f6fb64,233926001,0,0x0,8
tick,0x7ffad1f6fb64,233940989,0,0x0,8
tick,0x7ffad1f6fb64,233957004,0,0x0,8
tick,0x7ffad1f6fb64,233973030,0,0x0,8
tick,0x7ffad1f6fb64,233989040,0,0x0,8
tick,0x7ffad1f6fb64,234004043,0,0x0,8
tick,0x7ffad1f6fb64,234020070,0,0x0,8
tick,0x7ffad1f6fb64,234035069,0,0x0,8
tick,0x7ffad1f6fb64,234050089,0,0x0,8
tick,0x7ffad1f6fb64,234066115,0,0x0,8
tick,0x7ffad1f6fb64,234081154,0,0x0,8
tick,0x7ffad1f6fb64,234097145,0,0x0,8
tick,0x7ffad1f6fb64,234113169,0,0x0,8
tick,0x7ffad1f6fb64,234128175,0,0x0,8
tick,0x7ffad1f6fb64,234144169,0,0x0,8
tick,0x7ffad1f6fb64,234160202,0,0x0,8
tick,0x7ffad1f6fb64,234176224,0,0x0,8
tick,0x7ffad1f6fb64,234191239,0,0x0,8
tick,0x7ffad1f6fb64,234207285,0,0x0,8
tick,0x7ffad1f6fb64,234222252,0,0x0,8
tick,0x7ffad1f6fb64,234238287,0,0x0,8
tick,0x7ffad1f6fb64,234253276,0,0x0,8
tick,0x7ffad1f6fb64,234269317,0,0x0,8
tick,0x7ffad1f6fb64,234284307,0,0x0,8
tick,0x7ffad1f6fb64,234299356,0,0x0,8
tick,0x7ffad1f6fb64,234315340,0,0x0,8
tick,0x7ffad1f6fb64,234331403,0,0x0,8
tick,0x7ffad1f6fb64,234346370,0,0x0,8
tick,0x7ffad1f6fb64,234362398,0,0x0,8
tick,0x7ffad1f6fb64,234377422,0,0x0,8
tick,0x7ffad1f6fb64,234393451,0,0x0,8
tick,0x7ffad1f6fb64,234408439,0,0x0,8
tick,0x7ffad1f6fb64,234424444,0,0x0,8
tick,0x7ffad1f6fb64,234440493,0,0x0,8
tick,0x7ffad1f6fb64,234456476,0,0x0,8
tick,0x7ffad1f6fb64,234472476,0,0x0,8
tick,0x7ffad1f6fb64,234488500,0,0x0,8
tick,0x7ffad1f6fb64,234503502,0,0x0,8
tick,0x7ffad1f6fb64,234519527,0,0x0,8
tick,0x7ffad1f6fb64,234535528,0,0x0,8
tick,0x7ffad1f6fb64,234550559,0,0x0,8
tick,0x7ffad1f6fb64,234565581,0,0x0,8
tick,0x7ffad1f6fb64,234580573,0,0x0,8
tick,0x7ffad1f6fb64,234595587,0,0x0,8
tick,0x7ffad1f6fb64,234611628,0,0x0,8
tick,0x7ffad1f6fb64,234626644,0,0x0,8
tick,0x7ffad1f6fb64,234642629,0,0x0,8
tick,0x7ffad1f6fb64,234658661,0,0x0,8
tick,0x7ffad1f6fb64,234673668,0,0x0,8
tick,0x7ffad1f6fb64,234689685,0,0x0,8
tick,0x7ffad1f6fb64,234704899,0,0x0,8
tick,0x7ffad1f6fb64,234719718,0,0x0,8
tick,0x7ffad1f6fb64,234734731,0,0x0,8
tick,0x7ffad1f6fb64,234749737,0,0x0,8
tick,0x7ffad1f6fb64,234765752,0,0x0,8
tick,0x7ffad1f6fb64,234781772,0,0x0,8
tick,0x7ffad1f6fb64,234796793,0,0x0,8
tick,0x7ffad1f6fb64,234812785,0,0x0,8
tick,0x7ffad1f6fb64,234827817,0,0x0,8
tick,0x7ffad1f6fb64,234842846,0,0x0,8
tick,0x7ffad1f6fb64,234858839,0,0x0,8
tick,0x7ffad1f6fb64,234873863,0,0x0,8
tick,0x7ffad1f6fb64,234889856,0,0x0,8
tick,0x7ffad1f6fb64,234905909,0,0x0,8
tick,0x7ffad1f6fb64,234921890,0,0x0,8
tick,0x7ffad1f6fb64,234936915,0,0x0,8
tick,0x7ffad1f6fb64,234952919,0,0x0,8
tick,0x7ffad1f6fb64,234968940,0,0x0,8
tick,0x7ffad1f6fb64,234985031,0,0x0,8
tick,0x7ffad1f6fb64,234999961,0,0x0,8
tick,0x7ffad1f6fb64,235015971,0,0x0,8
tick,0x7ffad1f6fb64,235031986,0,0x0,8
tick,0x7ffad1f6fb64,235048003,0,0x0,8
tick,0x7ffad1f6fb64,235063073,0,0x0,8
tick,0x7ffad1f6fb64,235079028,0,0x0,8
tick,0x7ffad1f6fb64,235094063,0,0x0,8
tick,0x7ffad1f6fb64,235109080,0,0x0,8
tick,0x7ffad1f6fb64,235125069,0,0x0,8
tick,0x7ffad1f6fb64,235140090,0,0x0,8
tick,0x7ffad1f6fb64,235156099,0,0x0,8
tick,0x7ffad1f6fb64,235172131,0,0x0,8
tick,0x7ffad1f6fb64,235188139,0,0x0,8
tick,0x7ffad1f6fb64,235204145,0,0x0,8
tick,0x7ffad1f6fb64,235220160,0,0x0,8
tick,0x7ffad1f6fb64,235235193,0,0x0,8
tick,0x7ffad1f6fb64,235250200,0,0x0,8
tick,0x7ffad1f6fb64,235266211,0,0x0,8
tick,0x7ffad1f6fb64,235281239,0,0x0,8
tick,0x7ffad1f6fb64,235296232,0,0x0,8
tick,0x7ffad1f6fb64,235312270,0,0x0,8
tick,0x7ffad1f6fb64,235327298,0,0x0,8
tick,0x7ffad1f6fb64,235342275,0,0x0,8
tick,0x7ffad1f6fb64,235358517,0,0x0,8
tick,0x7ffad1f6fb64,235374306,0,0x0,8
tick,0x7ffad1f6fb64,235390316,0,0x0,8
tick,0x7ffad1f6fb64,235406344,0,0x0,8
tick,0x7ffad1f6fb64,235422353,0,0x0,8
tick,0x7ffad1f6fb64,235437376,0,0x0,8
tick,0x7ffad1f6fb64,235453366,0,0x0,8
tick,0x7ffad1f6fb64,235468382,0,0x0,8
tick,0x7ffad1f6fb64,235484409,0,0x0,8
tick,0x7ffad1f6fb64,235499423,0,0x0,8
tick,0x7ffad1f6fb64,235515442,0,0x0,8
tick,0x7ffad1f6fb64,235531446,0,0x0,8
tick,0x7ffad1f6fb64,235546472,0,0x0,8
tick,0x7ffad1f6fb64,235562475,0,0x0,8
tick,0x7ffad1f6fb64,235577509,0,0x0,8
tick,0x7ffad1f6fb64,235592498,0,0x0,8
tick,0x7ffad1f6fb64,235608524,0,0x0,8
tick,0x7ffad1f6fb64,235624527,0,0x0,8
tick,0x7ffad1f6fb64,235639564,0,0x0,8
tick,0x7ffad1f6fb64,235654552,0,0x0,8
tick,0x7ffad1f6fb64,235669581,0,0x0,8
tick,0x7ffad1f6fb64,235684586,0,0x0,8
tick,0x7ffad1f6fb64,235699615,0,0x0,8
tick,0x7ffad1f6fb64,235715632,0,0x0,8
tick,0x7ffad1f6fb64,235730631,0,0x0,8
tick,0x7ffad1f6fb64,235745685,0,0x0,8
tick,0x7ffad1f6fb64,235761688,0,0x0,8
tick,0x7ffad1f6fb64,235777669,0,0x0,8
tick,0x7ffad1f6fb64,235792708,0,0x0,8
tick,0x7ffad1f6fb64,235808690,0,0x0,8
tick,0x7ffad1f6fb64,235824723,0,0x0,8
tick,0x7ffad1f6fb64,235839770,0,0x0,8
tick,0x7ffad1f6fb64,235855772,0,0x0,8
tick,0x7ffad1f6fb64,235871791,0,0x0,8
tick,0x7ffad1f6fb64,235886773,0,0x0,8
tick,0x7ffad1f6fb64,235902978,0,0x0,8
tick,0x7ffad1f6fb64,235918861,0,0x0,8
tick,0x7ffad1f6fb64,235933854,0,0x0,8
tick,0x7ffad1f6fb64,235949858,0,0x0,8
tick,0x7ffad1f6fb64,235964847,0,0x0,8
tick,0x7ffad1f6fb64,235979858,0,0x0,8
tick,0x7ffad1f6fb64,235995874,0,0x0,8
tick,0x7ffad1f6fb64,236012049,0,0x0,8
tick,0x7ffad1f6fb64,236026957,0,0x0,8
tick,0x7ffad1f6fb64,236042934,0,0x0,8
tick,0x7ffad1f6fb64,236057930,0,0x0,8
tick,0x7ffad1f6fb64,236072952,0,0x0,8
tick,0x7ffad1f6fb64,236088946,0,0x0,8
tick,0x7ffad1f6fb64,236104007,0,0x0,8
tick,0x7ffad1f6fb64,236120018,0,0x0,8
tick,0x7ffad1f6fb64,236136005,0,0x0,8
tick,0x7ffad1f6fb64,236152032,0,0x0,8
tick,0x7ffad1f6fb64,236167036,0,0x0,8
tick,0x7ffad1f6fb64,236183043,0,0x0,8
tick,0x7ffad1f6fb64,236198056,0,0x0,8
tick,0x7ffad1f6fb64,236214100,0,0x0,8
tick,0x7ffad1f6fb64,236229101,0,0x0,8
tick,0x7ffad1f6fb64,236245107,0,0x0,8
tick,0x7ffad1f6fb64,236260138,0,0x0,8
tick,0x7ffad1f6fb64,236276123,0,0x0,8
tick,0x7ffad1f6fb64,236292152,0,0x0,8
tick,0x7ffad1f6fb64,236308178,0,0x0,8
tick,0x7ffad1f6fb64,236323176,0,0x0,8
tick,0x7ffad1f6fb64,236339196,0,0x0,8
tick,0x7ffad1f6fb64,236355219,0,0x0,8
tick,0x7ffad1f6fb64,236370232,0,0x0,8
tick,0x7ffad1f6fb64,236386259,0,0x0,8
tick,0x7ffad1f6fb64,236402257,0,0x0,8
tick,0x7ffad1f6fb64,236418284,0,0x0,8
tick,0x7ffad1f6fb64,236433289,0,0x0,8
tick,0x7ffad1f6fb64,236449290,0,0x0,8
tick,0x7ffad1f6fb64,236465283,0,0x0,8
tick,0x7ffad1f6fb64,236480360,0,0x0,8
tick,0x7ffad1f6fb64,236495352,0,0x0,8
tick,0x7ffad1f6fb64,236510359,0,0x0,8
tick,0x7ffad1f6fb64,236525363,0,0x0,8
tick,0x7ffad1f6fb64,236540384,0,0x0,8
tick,0x7ffad1f6fb64,236556370,0,0x0,8
tick,0x7ffad1f6fb64,236572440,0,0x0,8
tick,0x7ffad1f6fb64,236587413,0,0x0,8
tick,0x7ffad1f6fb64,236603446,0,0x0,8
tick,0x7ffad1f6fb64,236619445,0,0x0,8
tick,0x7ffad1f6fb64,236634455,0,0x0,8
tick,0x7ffad1f6fb64,236649465,0,0x0,8
tick,0x7ffad1f6fb64,236664508,0,0x0,8
tick,0x7ffad1f6fb64,236679726,0,0x0,8
tick,0x7ffad1f6fb64,236694579,0,0x0,8
tick,0x7ffad1f6fb64,236709539,0,0x0,8
tick,0x7ffad1f6fb64,236724526,0,0x0,8
tick,0x7ffad1f6fb64,236739554,0,0x0,8
tick,0x7ffad1f6fb64,236755566,0,0x0,8
tick,0x7ffad1f6fb64,236770622,0,0x0,8
tick,0x7ffad1f6fb64,236785686,0,0x0,8
tick,0x7ffad1f6fb64,236800617,0,0x0,8
tick,0x7ffad1f6fb64,236816610,0,0x0,8
tick,0x7ffad1f6fb64,236831633,0,0x0,8
tick,0x7ffad1f6fb64,236847640,0,0x0,8
tick,0x7ffad1f6fb64,236863640,0,0x0,8
tick,0x7ffad1f6fb64,236879709,0,0x0,8
tick,0x7ffad1f6fb64,236894700,0,0x0,8
tick,0x7ffad1f6fb64,236910759,0,0x0,8
tick,0x7ffad1f6fb64,236925710,0,0x0,8
tick,0x7ffad1f6fb64,236940757,0,0x0,8
tick,0x7ffad1f6fb64,236956753,0,0x0,8
tick,0x7ffad1f6fb64,236972793,0,0x0,8
tick,0x7ffad1f6fb64,236987770,0,0x0,8
tick,0x7ffad1f6fb64,237002780,0,0x0,8
tick,0x7ffad1f6fb64,237018810,0,0x0,8
tick,0x7ffad1f6fb64,237034843,0,0x0,8
tick,0x7ffad1f6fb64,237049817,0,0x0,8
tick,0x7ffad1f6fb64,237065842,0,0x0,8
tick,0x7ffad1f6fb64,237080887,0,0x0,8
tick,0x7ffad1f6fb64,237095885,0,0x0,8
tick,0x7ffad1f6fb64,237110907,0,0x0,8
tick,0x7ffad1f6fb64,237126903,0,0x0,8
tick,0x7ffad1f6fb64,237142900,0,0x0,8
tick,0x7ffad1f6fb64,237157933,0,0x0,8
tick,0x7ffad1f6fb64,237172955,0,0x0,8
tick,0x7ffad1f6fb64,237188940,0,0x0,8
tick,0x7ffad1f6fb64,237204959,0,0x0,8
tick,0x7ffad1f6fb64,237219989,0,0x0,8
tick,0x7ffad1f6fb64,237236016,0,0x0,8
tick,0x7ffad1f6fb64,237250990,0,0x0,8
tick,0x7ffad1f6fb64,237266037,0,0x0,8
tick,0x7ffad1f6fb64,237281039,0,0x0,8
tick,0x7ffad1f6fb64,237296064,0,0x0,8
tick,0x7ffad1f6fb64,237312058,0,0x0,8
tick,0x7ffad1f6fb64,237328077,0,0x0,8
tick,0x7ffad1f6fb64,237344118,0,0x0,8
tick,0x7ffad1f6fb64,237359198,0,0x0,8
tick,0x7ffad1f6fb64,237375125,0,0x0,8
tick,0x7ffad1f6fb64,237391135,0,0x0,8
tick,0x7ffad1f6fb64,237406146,0,0x0,8
tick,0x7ffad1f6fb64,237421162,0,0x0,8
tick,0x7ffad1f6fb64,237437175,0,0x0,8
tick,0x7ffad1f6fb64,237453216,0,0x0,8
tick,0x7ffad1f6fb64,237469212,0,0x0,8
tick,0x7ffad1f6fb64,237484230,0,0x0,8
tick,0x7ffad1f6fb64,237499226,0,0x0,8
tick,0x7ffad1f6fb64,237515241,0,0x0,8
tick,0x7ffad1f6fb64,237531275,0,0x0,8
tick,0x7ffad1f6fb64,237546283,0,0x0,8
tick,0x7ffad1f6fb64,237562313,0,0x0,8
tick,0x7ffad1f6fb64,237577302,0,0x0,8
tick,0x7ffad1f6fb64,237592331,0,0x0,8
tick,0x7ffad1f6fb64,237608347,0,0x0,8
tick,0x7ffad1f6fb64,237624348,0,0x0,8
tick,0x7ffad1f6fb64,237639369,0,0x0,8
tick,0x7ffad1f6fb64,237655386,0,0x0,8
tick,0x7ffad1f6fb64,237670437,0,0x0,8
tick,0x7ffad1f6fb64,237686418,0,0x0,8
tick,0x7ffad1f6fb64,237702418,0,0x0,8
tick,0x7ffad1f6fb64,237717446,0,0x0,8
tick,0x7ffad1f6fb64,237733445,0,0x0,8
tick,0x7ffad1f6fb64,237749449,0,0x0,8
tick,0x7ffad1f6fb64,237765480,0,0x0,8
tick,0x7ffad1f6fb64,237781512,0,0x0,8
tick,0x7ffad1f6fb64,237796553,0,0x0,8
tick,0x7ffad1f6fb64,237812815,0,0x0,8
tick,0x7ffad1f6fb64,237827570,0,0x0,8
tick,0x7ffad1f6fb64,237843567,0,0x0,8
tick,0x7ffad1f6fb64,237858566,0,0x0,8
tick,0x7ffad1f6fb64,237874590,0,0x0,8
tick,0x7ffad1f6fb64,237890624,0,0x0,8
tick,0x7ffad1f6fb64,237905622,0,0x0,8
tick,0x7ffad1f6fb64,237920706,0,0x0,8
tick,0x7ffad1f6fb64,237936663,0,0x0,8
tick,0x7ffad1f6fb64,237951640,0,0x0,8
tick,0x7ffad1f6fb64,237966687,0,0x0,8
tick,0x7ffad1f6fb64,237981694,0,0x0,8
tick,0x7ffad1f6fb64,237997702,0,0x0,8
tick,0x7ffad1f6fb64,238013716,0,0x0,8
tick,0x7ffad1f6fb64,238028727,0,0x0,8
tick,0x7ffad1f6fb64,238044732,0,0x0,8
tick,0x7ffad1f6fb64,238060736,0,0x0,8
tick,0x7ffad1f6fb64,238075772,0,0x0,8
tick,0x7ffad1f6fb64,238090771,0,0x0,8
tick,0x7ffad1f6fb64,238106867,0,0x0,8
tick,0x7ffad1f6fb64,238122805,0,0x0,8
tick,0x7ffad1f6fb64,238138822,0,0x0,8
tick,0x7ffad1f6fb64,238154837,0,0x0,8
tick,0x7ffad1f6fb64,238169846,0,0x0,8
tick,0x7ffad1f6fb64,238184903,0,0x0,8
tick,0x7ffad1f6fb64,238200885,0,0x0,8
tick,0x7ffad1f6fb64,238216918,0,0x0,8
tick,0x7ffad1f6fb64,238232904,0,0x0,8
tick,0x7ffad1f6fb64,238247920,0,0x0,8
tick,0x7ffad1f6fb64,238263955,0,0x0,8
tick,0x7ffad1f6fb64,238279968,0,0x0,8
tick,0x7ffad1f6fb64,238295984,0,0x0,8
tick,0x7ffad1f6fb64,238311015,0,0x0,8
tick,0x7ffad1f6fb64,238326017,0,0x0,8
tick,0x7ffad1f6fb64,238342012,0,0x0,8
tick,0x7ffad1f6fb64,238358038,0,0x0,8
tick,0x7ffad1f6fb64,238373061,0,0x0,8
tick,0x7ffad1f6fb64,238389048,0,0x0,8
tick,0x7ffad1f6fb64,238405086,0,0x0,8
tick,0x7ffad1f6fb64,238420081,0,0x0,8
tick,0x7ffad1f6fb64,238435150,0,0x0,8
tick,0x7ffad1f6fb64,238450110,0,0x0,8
tick,0x7ffad1f6fb64,238466309,0,0x0,8
tick,0x7ffad1f6fb64,238481153,0,0x0,8
tick,0x7ffad1f6fb64,238497150,0,0x0,8
tick,0x7ffad1f6fb64,238512175,0,0x0,8
tick,0x7ffad1f6fb64,238528187,0,0x0,8
tick,0x7ffad1f6fb64,238544206,0,0x0,8
tick,0x7ffad1f6fb64,238560232,0,0x0,8
tick,0x7ffad1f6fb64,238576227,0,0x0,8
tick,0x7ffad1f6fb64,238592285,0,0x0,8
tick,0x7ffad1f6fb64,238607285,0,0x0,8
tick,0x7ffad1f6fb64,238622259,0,0x0,8
tick,0x7ffad1f6fb64,238638289,0,0x0,8
tick,0x7ffad1f6fb64,238654324,0,0x0,8
tick,0x7ffad1f6fb64,238669314,0,0x0,8
tick,0x7ffad1f6fb64,238684382,0,0x0,8
tick,0x7ffad1f6fb64,238699355,0,0x0,8
tick,0x7ffad1f6fb64,238715363,0,0x0,8
tick,0x7ffad1f6fb64,238731378,0,0x0,8
tick,0x7ffad1f6fb64,238747381,0,0x0,8
tick,0x7ffad1f6fb64,238763385,0,0x0,8
tick,0x7ffad1f6fb64,238778410,0,0x0,8
tick,0x7ffad1f6fb64,238794432,0,0x0,8
tick,0x7ffad1f6fb64,238810431,0,0x0,8
tick,0x7ffad1f6fb64,238825498,0,0x0,8
tick,0x7ffad1f6fb64,238840466,0,0x0,8
tick,0x7ffad1f6fb64,238856481,0,0x0,8
tick,0x7ffad1f6fb64,238872500,0,0x0,8
tick,0x7ffad1f6fb64,238887514,0,0x0,8
tick,0x7ffad1f6fb64,238902527,0,0x0,8
tick,0x7ffad1f6fb64,238917540,0,0x0,8
tick,0x7ffad1f6fb64,238933575,0,0x0,8
tick,0x7ffad1f6fb64,238948573,0,0x0,8
tick,0x7ffad1f6fb64,238963608,0,0x0,8
tick,0x7ffad1f6fb64,238979613,0,0x0,8
tick,0x7ffad1f6fb64,238995619,0,0x0,8
tick,0x7ffad1f6fb64,239010622,0,0x0,8
tick,0x7ffad1f6fb64,239025644,0,0x0,8
tick,0x7ffad1f6fb64,239040671,0,0x0,8
tick,0x7ffad1f6fb64,239055655,0,0x0,8
tick,0x7ffad1f6fb64,239070676,0,0x0,8
tick,0x7ffad1f6fb64,239086725,0,0x0,8
tick,0x7ffad1f6fb64,239102690,0,0x0,8
tick,0x7ffad1f6fb64,239117720,0,0x0,8
tick,0x7ffad1f6fb64,239133743,0,0x0,8
tick,0x7ffad1f6fb64,239149762,0,0x0,8
tick,0x7ffad1f6fb64,239164767,0,0x0,8
tick,0x7ffad1f6fb64,239179789,0,0x0,8
tick,0x7ffad1f6fb64,239195798,0,0x0,8
tick,0x7ffad1f6fb64,239210817,0,0x0,8
tick,0x7ffad1f6fb64,239226826,0,0x0,8
tick,0x7ffad1f6fb64,239242835,0,0x0,8
tick,0x7ffad1f6fb64,239258838,0,0x0,8
tick,0x7ffad1f6fb64,239273873,0,0x0,8
tick,0x7ffad1f6fb64,239289884,0,0x0,8
tick,0x7ffad1f6fb64,239304906,0,0x0,8
tick,0x7ffad1f6fb64,239320955,0,0x0,8
tick,0x7ffad1f6fb64,239336957,0,0x0,8
tick,0x7ffad1f6fb64,239352939,0,0x0,8
tick,0x7ffad1f6fb64,239368955,0,0x0,8
tick,0x7ffad1f6fb64,239383969,0,0x0,8
tick,0x7ffad1f6fb64,239398975,0,0x0,8
tick,0x7ffad1f6fb64,239415070,0,0x0,8
tick,0x7ffad1f6fb64,239430993,0,0x0,8
tick,0x7ffad1f6fb64,239446023,0,0x0,8
tick,0x7ffad1f6fb64,239461295,0,0x0,8
tick,0x7ffad1f6fb64,239476052,0,0x0,8
tick,0x7ffad1f6fb64,239491071,0,0x0,8
tick,0x7ffad1f6fb64,239506073,0,0x0,8
tick,0x7ffad1f6fb64,239521117,0,0x0,8
tick,0x7ffad1f6fb64,239537088,0,0x0,8
tick,0x7ffad1f6fb64,239552089,0,0x0,8
tick,0x7ffad1f6fb64,239567118,0,0x0,8
tick,0x7ffad1f6fb64,239582140,0,0x0,8
tick,0x7ffad1f6fb64,239598133,0,0x0,8
tick,0x7ffad1f6fb64,239613329,0,0x0,8
tick,0x7ffad1f6fb64,239628205,0,0x0,8
tick,0x7ffad1f6fb64,239644189,0,0x0,8
tick,0x7ffad1f6fb64,239660210,0,0x0,8
tick,0x7ffad1f6fb64,239676217,0,0x0,8
tick,0x7ffad1f6fb64,239691245,0,0x0,8
tick,0x7ffad1f6fb64,239707289,0,0x0,8
tick,0x7ffad1f6fb64,239722269,0,0x0,8
tick,0x7ffad1f6fb64,239738286,0,0x0,8
tick,0x7ffad1f6fb64,239753284,0,0x0,8
tick,0x7ffad1f6fb64,239768312,0,0x0,8
tick,0x7ffad1f6fb64,239784326,0,0x0,8
tick,0x7ffad1f6fb64,239799351,0,0x0,8
tick,0x7ffad1f6fb64,239815365,0,0x0,8
tick,0x7ffad1f6fb64,239830374,0,0x0,8
tick,0x7ffad1f6fb64,239845402,0,0x0,8
tick,0x7ffad1f6fb64,239861381,0,0x0,8
tick,0x7ffad1f6fb64,239877402,0,0x0,8
tick,0x7ffad1f6fb64,239893697,0,0x0,8
tick,0x7ffad1f6fb64,239909444,0,0x0,8
tick,0x7ffad1f6fb64,239925447,0,0x0,8
tick,0x7ffad1f6fb64,239940443,0,0x0,8
tick,0x7ffad1f6fb64,239956493,0,0x0,8
tick,0x7ffad1f6fb64,239971534,0,0x0,8
tick,0x7ffad1f6fb64,239987536,0,0x0,8
tick,0x7ffad1f6fb64,240002518,0,0x0,8
tick,0x7ffad1f6fb64,240017587,0,0x0,8
tick,0x7ffad1f6fb64,240032564,0,0x0,8
tick,0x7ffad1f6fb64,240048564,0,0x0,8
tick,0x7ffad1f6fb64,240064589,0,0x0,8
tick,0x7ffad1f6fb64,240079588,0,0x0,8
tick,0x7ffad1f6fb64,240094658,0,0x0,8
tick,0x7ffad1f6fb64,240110656,0,0x0,8
tick,0x7ffad1f6fb64,240125660,0,0x0,8
tick,0x7ffad1f6fb64,240140694,0,0x0,8
tick,0x7ffad1f6fb64,240155682,0,0x0,8
tick,0x7ffad1f6fb64,240171683,0,0x0,8
tick,0x7ffad1f6fb64,240186844,0,0x0,8
tick,0x7ffad1f6fb64,240202730,0,0x0,8
tick,0x7ffad1f6fb64,240218728,0,0x0,8
tick,0x7ffad1f6fb64,240234746,0,0x0,8
tick,0x7ffad1f6fb64,240249740,0,0x0,8
tick,0x7ffad1f6fb64,240265784,0,0x0,8
tick,0x7ffad1f6fb64,240281810,0,0x0,8
tick,0x7ffad1f6fb64,240297786,0,0x0,8
tick,0x7ffad1f6fb64,240312819,0,0x0,8
tick,0x7ffad1f6fb64,240328853,0,0x0,8
tick,0x7ffad1f6fb64,240343859,0,0x0,8
tick,0x7ffad1f6fb64,240359886,0,0x0,8
tick,0x7ffad1f6fb64,240375865,0,0x0,8
tick,0x7ffad1f6fb64,240391921,0,0x0,8
tick,0x7ffad1f6fb64,240406905,0,0x0,8
tick,0x7ffad1f6fb64,240421899,0,0x0,8
tick,0x7ffad1f6fb64,240436923,0,0x0,8
tick,0x7ffad1f6fb64,240451929,0,0x0,8
tick,0x7ffad1f6fb64,240467005,0,0x0,8
tick,0x7ffad1f6fb64,240481975,0,0x0,8
tick,0x7ffad1f6fb64,240497977,0,0x0,8
tick,0x7ffad1f6fb64,240513984,0,0x0,8
tick,0x7ffad1f6fb64,240530022,0,0x0,8
tick,0x7ffad1f6fb64,240546026,0,0x0,8
tick,0x7ffad1f6fb64,240562024,0,0x0,8
tick,0x7ffad1f6fb64,240577049,0,0x0,8
tick,0x7ffad1f6fb64,240593055,0,0x0,8
tick,0x7ffad1f6fb64,240608102,0,0x0,8
tick,0x7ffad1f6fb64,240624081,0,0x0,8
tick,0x7ffad1f6fb64,240640108,0,0x0,8
tick,0x7ffad1f6fb64,240656112,0,0x0,8
tick,0x7ffad1f6fb64,240671154,0,0x0,8
tick,0x7ffad1f6fb64,240686174,0,0x0,8
tick,0x7ffad1f6fb64,240702155,0,0x0,8
tick,0x7ffad1f6fb64,240718188,0,0x0,8
tick,0x7ffad1f6fb64,240734183,0,0x0,8
tick,0x7ffad1f6fb64,240749241,0,0x0,8
tick,0x7ffad1f6fb64,240764235,0,0x0,8
tick,0x7ffad1f6fb64,240779232,0,0x0,8
tick,0x7ffad1f6fb64,240794239,0,0x0,8
tick,0x7ffad1f6fb64,240810255,0,0x0,8
tick,0x7ffad1f6fb64,240826298,0,0x0,8
tick,0x7ffad1f6fb64,240842316,0,0x0,8
tick,0x7ffad1f6fb64,240858312,0,0x0,8
tick,0x7ffad1f6fb64,240873330,0,0x0,8
tick,0x7ffad1f6fb64,240888387,0,0x0,8
tick,0x7ffad1f6fb64,240904343,0,0x0,8
tick,0x7ffad1f6fb64,240920359,0,0x0,8
tick,0x7ffad1f6fb64,240936440,0,0x0,8
tick,0x7ffad1f6fb64,240951388,0,0x0,8
tick,0x7ffad1f6fb64,240966443,0,0x0,8
tick,0x7ffad1f6fb64,240981406,0,0x0,8
tick,0x7ffad1f6fb64,240996451,0,0x0,8
tick,0x7ffad1f6fb64,241011473,0,0x0,8
tick,0x7ffad1f6fb64,241026468,0,0x0,8
tick,0x7ffad1f6fb64,241042530,0,0x0,8
tick,0x7ffad1f6fb64,241058476,0,0x0,8
tick,0x7ffad1f6fb64,241074508,0,0x0,8
tick,0x7ffad1f6fb64,241090524,0,0x0,8
tick,0x7ffad1f6fb64,241105522,0,0x0,8
tick,0x7ffad1f6fb64,241121531,0,0x0,8
tick,0x7ffad1f6fb64,241137547,0,0x0,8
tick,0x7ffad1f6fb64,241153591,0,0x0,8
tick,0x7ffad1f6fb64,241169612,0,0x0,8
tick,0x7ffad1f6fb64,241185586,0,0x0,8
tick,0x7ffad1f6fb64,241200627,0,0x0,8
tick,0x7ffad1f6fb64,241215613,0,0x0,8
tick,0x7ffad1f6fb64,241231630,0,0x0,8
tick,0x7ffad1f6fb64,241247639,0,0x0,8
tick,0x7ffad1f6fb64,241262670,0,0x0,8
tick,0x7ffad1f6fb64,241277678,0,0x0,8
tick,0x7ffad1f6fb64,241292706,0,0x0,8
tick,0x7ffad1f6fb64,241307701,0,0x0,8
tick,0x7ffad1f6fb64,241323731,0,0x0,8
tick,0x7ffad1f6fb64,241338771,0,0x0,8
tick,0x7ffad1f6fb64,241354752,0,0x0,8
tick,0x7ffad1f6fb64,241370787,0,0x0,8
tick,0x7ffad1f6fb64,241385817,0,0x0,8
tick,0x7ffad1f6fb64,241401800,0,0x0,8
tick,0x7ffad1f6fb64,241417803,0,0x0,8
tick,0x7ffad1f6fb64,241432818,0,0x0,8
tick,0x7ffad1f6fb64,241448839,0,0x0,8
tick,0x7ffad1f6fb64,241464905,0,0x0,8
tick,0x7ffad1f6fb64,241479971,0,0x0,8
tick,0x7ffad1f6fb64,241495911,0,0x0,8
tick,0x7ffad1f6fb64,241511926,0,0x0,8
tick,0x7ffad1f6fb64,241526930,0,0x0,8
tick,0x7ffad1f6fb64,241541915,0,0x0,8
tick,0x7ffad1f6fb64,241556950,0,0x0,8
tick,0x7ffad1f6fb64,241571973,0,0x0,8
tick,0x7ffad1f6fb64,241588005,0,0x0,8
tick,0x7ffad1f6fb64,241603112,0,0x0,8
tick,0x7ffad1f6fb64,241619011,0,0x0,8
tick,0x7ffad1f6fb64,241635058,0,0x0,8
tick,0x7ffad1f6fb64,241650018,0,0x0,8
tick,0x7ffad1f6fb64,241666036,0,0x0,8
tick,0x7ffad1f6fb64,241681063,0,0x0,8
tick,0x7ffad1f6fb64,241696189,0,0x0,8
tick,0x7ffad1f6fb64,241712090,0,0x0,8
tick,0x7ffad1f6fb64,241728090,0,0x0,8
tick,0x7ffad1f6fb64,241744108,0,0x0,8
tick,0x7ffad1f6fb64,241759131,0,0x0,8
tick,0x7ffad1f6fb64,241775156,0,0x0,8
tick,0x7ffad1f6fb64,241791167,0,0x0,8
tick,0x7ffad1f6fb64,241806204,0,0x0,8
tick,0x7ffad1f6fb64,241821192,0,0x0,8
tick,0x7ffad1f6fb64,241836214,0,0x0,8
tick,0x7ffad1f6fb64,241851201,0,0x0,8
tick,0x7ffad1f6fb64,241866217,0,0x0,8
tick,0x7ffad1f6fb64,241881243,0,0x0,8
tick,0x7ffad1f6fb64,241897258,0,0x0,8
tick,0x7ffad1f6fb64,241913282,0,0x0,8
tick,0x7ffad1f6fb64,241929319,0,0x0,8
tick,0x7ffad1f6fb64,241944326,0,0x0,8
tick,0x7ffad1f6fb64,241959347,0,0x0,8
tick,0x7ffad1f6fb64,241974392,0,0x0,8
tick,0x7ffad1f6fb64,241990346,0,0x0,8
tick,0x7ffad1f6fb64,242006358,0,0x0,8
tick,0x7ffad1f6fb64,242022377,0,0x0,8
tick,0x7ffad1f6fb64,242037392,0,0x0,8
tick,0x7ffad1f6fb64,242052388,0,0x0,8
tick,0x7ffad1f6fb64,242067740,0,0x0,8
tick,0x7ffad1f6fb64,242082451,0,0x0,8
tick,0x7ffad1f6fb64,242098452,0,0x0,8
tick,0x7ffad1f6fb64,242114471,0,0x0,8
tick,0x7ffad1f6fb64,242130517,0,0x0,8
tick,0x7ffad1f6fb64,242145476,0,0x0,8
tick,0x7ffad1f6fb64,242160509,0,0x0,8
tick,0x7ffad1f6fb64,242175565,0,0x0,8
tick,0x7ffad1f6fb64,242191519,0,0x0,8
tick,0x7ffad1f6fb64,242207538,0,0x0,8
tick,0x7ffad1f6fb64,242222551,0,0x0,8
tick,0x7ffad1f6fb64,242237559,0,0x0,8
tick,0x7ffad1f6fb64,242252549,0,0x0,8
tick,0x7ffad1f6fb64,242268601,0,0x0,8
tick,0x7ffad1f6fb64,242283598,0,0x0,8
tick,0x7ffad1f6fb64,242299611,0,0x0,8
tick,0x7ffad1f6fb64,242315656,0,0x0,8
tick,0x7ffad1f6fb64,242331635,0,0x0,8
tick,0x7ffad1f6fb64,242347645,0,0x0,8
tick,0x7ffad1f6fb64,242362662,0,0x0,8
tick,0x7ffad1f6fb64,242378699,0,0x0,8
tick,0x7ffad1f6fb64,242394697,0,0x0,8
tick,0x7ffad1f6fb64,242409723,0,0x0,8
tick,0x7ffad1f6fb64,242425725,0,0x0,8
tick,0x7ffad1f6fb64,242440736,0,0x0,8
tick,0x7ffad1f6fb64,242456743,0,0x0,8
tick,0x7ffad1f6fb64,242472774,0,0x0,8
tick,0x7ffad1f6fb64,242487777,0,0x0,8
tick,0x7ffad1f6fb64,242502802,0,0x0,8
tick,0x7ffad1f6fb64,242518804,0,0x0,8
tick,0x7ffad1f6fb64,242534811,0,0x0,8
tick,0x7ffad1f6fb64,242549824,0,0x0,8
tick,0x7ffad1f6fb64,242565872,0,0x0,8
tick,0x7ffad1f6fb64,242581880,0,0x0,8
tick,0x7ffad1f6fb64,242597894,0,0x0,8
tick,0x7ffad1f6fb64,242612929,0,0x0,8
tick,0x7ffad1f6fb64,242627913,0,0x0,8
tick,0x7ffad1f6fb64,242643945,0,0x0,8
tick,0x7ffad1f6fb64,242658972,0,0x0,8
tick,0x7ffad1f6fb64,242674960,0,0x0,8
tick,0x7ffad1f6fb64,242690988,0,0x0,8
tick,0x7ffad1f6fb64,242706017,0,0x0,8
tick,0x7ffad1f6fb64,242721130,0,0x0,8
tick,0x7ffad1f6fb64,242736998,0,0x0,8
tick,0x7ffad1f6fb64,242753022,0,0x0,8
tick,0x7ffad1f6fb64,242769041,0,0x0,8
tick,0x7ffad1f6fb64,242784070,0,0x0,8
tick,0x7ffad1f6fb64,242799060,0,0x0,8
tick,0x7ffad1f6fb64,242814107,0,0x0,8
tick,0x7ffad1f6fb64,242830117,0,0x0,8
tick,0x7ffad1f6fb64,242846155,0,0x0,8
tick,0x7ffad1f6fb64,242861137,0,0x0,8
tick,0x7ffad1f6fb64,242877151,0,0x0,8
tick,0x7ffad1f6fb64,242892160,0,0x0,8
tick,0x7ffad1f6fb64,242908196,0,0x0,8
tick,0x7ffad1f6fb64,242923311,0,0x0,8
tick,0x7ffad1f6fb64,242939235,0,0x0,8
tick,0x7ffad1f6fb64,242954203,0,0x0,8
tick,0x7ffad1f6fb64,242970222,0,0x0,8
tick,0x7ffad1f6fb64,242986227,0,0x0,8
tick,0x7ffad1f6fb64,243002308,0,0x0,8
tick,0x7ffad1f6fb64,243018264,0,0x0,8
tick,0x7ffad1f6fb64,243033287,0,0x0,8
tick,0x7ffad1f6fb64,243049309,0,0x0,8
tick,0x7ffad1f6fb64,243065306,0,0x0,8
tick,0x7ffad1f6fb64,243080332,0,0x0,8
tick,0x7ffad1f6fb64,243095389,0,0x0,8
tick,0x7ffad1f6fb64,243110386,0,0x0,8
tick,0x7ffad1f6fb64,243125378,0,0x0,8
tick,0x7ffad1f6fb64,243140391,0,0x0,8
tick,0x7ffad1f6fb64,243156374,0,0x0,8
tick,0x7ffad1f6fb64,243172391,0,0x0,8
tick,0x7ffad1f6fb64,243187418,0,0x0,8
tick,0x7ffad1f6fb64,243202437,0,0x0,8
tick,0x7ffad1f6fb64,243217491,0,0x0,8
tick,0x7ffad1f6fb64,243233450,0,0x0,8
tick,0x7ffad1f6fb64,243249498,0,0x0,8
tick,0x7ffad1f6fb64,243265484,0,0x0,8
tick,0x7ffad1f6fb64,243280503,0,0x0,8
tick,0x7ffad1f6fb64,243295540,0,0x0,8
tick,0x7ffad1f6fb64,243311549,0,0x0,8
tick,0x7ffad1f6fb64,243327563,0,0x0,8
tick,0x7ffad1f6fb64,243342564,0,0x0,8
tick,0x7ffad1f6fb64,243358591,0,0x0,8
tick,0x7ffad1f6fb64,243374735,0,0x0,8
tick,0x7ffad1f6fb64,243390609,0,0x0,8
tick,0x7ffad1f6fb64,243405629,0,0x0,8
tick,0x7ffad1f6fb64,243421652,0,0x0,8
tick,0x7ffad1f6fb64,243437692,0,0x0,8
tick,0x7ffad1f6fb64,243453655,0,0x0,8
tick,0x7ffad1f6fb64,243468684,0,0x0,8
tick,0x7ffad1f6fb64,243484685,0,0x0,8
tick,0x7ffad1f6fb64,243499716,0,0x0,8
tick,0x7ffad1f6fb64,243514718,0,0x0,8
tick,0x7ffad1f6fb64,243530732,0,0x0,8
tick,0x7ffad1f6fb64,243546753,0,0x0,8
tick,0x7ffad1f6fb64,243562777,0,0x0,8
tick,0x7ffad1f6fb64,243577778,0,0x0,8
tick,0x7ffad1f6fb64,243593789,0,0x0,8
tick,0x7ffad1f6fb64,243609809,0,0x0,8
tick,0x7ffad1f6fb64,243625820,0,0x0,8
tick,0x7ffad1f6fb64,243640831,0,0x0,8
tick,0x7ffad1f6fb64,243656873,0,0x0,8
tick,0x7ffad1f6fb64,243672850,0,0x0,8
tick,0x7ffad1f6fb64,243687903,0,0x0,8
tick,0x7ffad1f6fb64,243702882,0,0x0,8
tick,0x7ffad1f6fb64,243718891,0,0x0,8
tick,0x7ffad1f6fb64,243734922,0,0x0,8
tick,0x7ffad1f6fb64,243749949,0,0x0,8
tick,0x7ffad1f6fb64,243765962,0,0x0,8
tick,0x7ffad1f6fb64,243781963,0,0x0,8
tick,0x7ffad1f6fb64,243796973,0,0x0,8
tick,0x7ffad1f6fb64,243813013,0,0x0,8
tick,0x7ffad1f6fb64,243828148,0,0x0,8
tick,0x7ffad1f6fb64,243844030,0,0x0,8
tick,0x7ffad1f6fb64,243860028,0,0x0,8
tick,0x7ffad1f6fb64,243876072,0,0x0,8
tick,0x7ffad1f6fb64,243892051,0,0x0,8
tick,0x7ffad1f6fb64,243908091,0,0x0,8
tick,0x7ffad1f6fb64,243924134,0,0x0,8
tick,0x7ffad1f6fb64,243939136,0,0x0,8
tick,0x7ffad1f6fb64,243954116,0,0x0,8
tick,0x7ffad1f6fb64,243970124,0,0x0,8
tick,0x7ffad1f6fb64,243985144,0,0x0,8
tick,0x7ffad1f6fb64,244000164,0,0x0,8
tick,0x7ffad1f6fb64,244015188,0,0x0,8
tick,0x7ffad1f6fb64,244031185,0,0x0,8
tick,0x7ffad1f6fb64,244047234,0,0x0,8
tick,0x7ffad1f6fb64,244063223,0,0x0,8
tick,0x7ffad1f6fb64,244078325,0,0x0,8
tick,0x7ffad1f6fb64,244093256,0,0x0,8
tick,0x7ffad1f6fb64,244108262,0,0x0,8
tick,0x7ffad1f6fb64,244123319,0,0x0,8
tick,0x7ffad1f6fb64,244138290,0,0x0,8
tick,0x7ffad1f6fb64,244154277,0,0x0,8
tick,0x7ffad1f6fb64,244170305,0,0x0,8
tick,0x7ffad1f6fb64,244186335,0,0x0,8
tick,0x7ffad1f6fb64,244202326,0,0x0,8
tick,0x7ffad1f6fb64,244217339,0,0x0,8
tick,0x7ffad1f6fb64,244233363,0,0x0,8
tick,0x7ffad1f6fb64,244249380,0,0x0,8
tick,0x7ffad1f6fb64,244265403,0,0x0,8
tick,0x7ffad1f6fb64,244280421,0,0x0,8
tick,0x7ffad1f6fb64,244295431,0,0x0,8
tick,0x7ffad1f6fb64,244311462,0,0x0,8
tick,0x7ffad1f6fb64,244327453,0,0x0,8
tick,0x7ffad1f6fb64,244342491,0,0x0,8
tick,0x7ffad1f6fb64,244358491,0,0x0,8
tick,0x7ffad1f6fb64,244373524,0,0x0,8
tick,0x7ffad1f6fb64,244389561,0,0x0,8
tick,0x7ffad1f6fb64,244405555,0,0x0,8
tick,0x7ffad1f6fb64,244420563,0,0x0,8
tick,0x7ffad1f6fb64,244436597,0,0x0,8
tick,0x7ffad1f6fb64,244452582,0,0x0,8
tick,0x7ffad1f6fb64,244467587,0,0x0,8
tick,0x7ffad1f6fb64,244483602,0,0x0,8
tick,0x7ffad1f6fb64,244498647,0,0x0,8
tick,0x7ffad1f6fb64,244513636,0,0x0,8
tick,0x7ffad1f6fb64,244529653,0,0x0,8
tick,0x7ffad1f6fb64,244545648,0,0x0,8
tick,0x7ffad1f6fb64,244560681,0,0x0,8
tick,0x7ffad1f6fb64,244575690,0,0x0,8
tick,0x7ffad1f6fb64,244591709,0,0x0,8
tick,0x7ffad1f6fb64,244607711,0,0x0,8
tick,0x7ffad1f6fb64,244622735,0,0x0,8
tick,0x7ffad1f6fb64,244637759,0,0x0,8
tick,0x7ffad1f6fb64,244653735,0,0x0,8
tick,0x7ffad1f6fb64,244668771,0,0x0,8
tick,0x7ffad1f6fb64,244684786,0,0x0,8
tick,0x7ffad1f6fb64,244699793,0,0x0,8
tick,0x7ffad1f6fb64,244715812,0,0x0,8
tick,0x7ffad1f6fb64,244731808,0,0x0,8
tick,0x7ffad1f6fb64,244747846,0,0x0,8
tick,0x7ffad1f6fb64,244763839,0,0x0,8
tick,0x7ffad1f6fb64,244779852,0,0x0,8
tick,0x7ffad1f6fb64,244795880,0,0x0,8
tick,0x7ffad1f6fb64,244810901,0,0x0,8
tick,0x7ffad1f6fb64,244826893,0,0x0,8
tick,0x7ffad1f6fb64,244842915,0,0x0,8
tick,0x7ffad1f6fb64,244858948,0,0x0,8
tick,0x7ffad1f6fb64,244873959,0,0x0,8
tick,0x7ffad1f6fb64,244889963,0,0x0,8
tick,0x7ffad1f6fb64,244905992,0,0x0,8
tick,0x7ffad1f6fb64,244921004,0,0x0,8
tick,0x7ffad1f6fb64,244937040,0,0x0,8
tick,0x7ffad1f6fb64,244953022,0,0x0,8
tick,0x7ffad1f6fb64,244968074,0,0x0,8
tick,0x7ffad1f6fb64,244983043,0,0x0,8
tick,0x7ffad1f6fb64,244998068,0,0x0,8
tick,0x7ffad1f6fb64,245014058,0,0x0,8
tick,0x7ffad1f6fb64,245030098,0,0x0,8
tick,0x7ffad1f6fb64,245045108,0,0x0,8
tick,0x7ffad1f6fb64,245061140,0,0x0,8
tick,0x7ffad1f6fb64,245077145,0,0x0,8
tick,0x7ffad1f6fb64,245093172,0,0x0,8
tick,0x7ffad1f6fb64,245108154,0,0x0,8
tick,0x7ffad1f6fb64,245124201,0,0x0,8
tick,0x7ffad1f6fb64,245139213,0,0x0,8
tick,0x7ffad1f6fb64,245155210,0,0x0,8
tick,0x7ffad1f6fb64,245170207,0,0x0,8
tick,0x7ffad1f6fb64,245186243,0,0x0,8
tick,0x7ffad1f6fb64,245201238,0,0x0,8
tick,0x7ffad1f6fb64,245217262,0,0x0,8
tick,0x7ffad1f6fb64,245232309,0,0x0,8
tick,0x7ffad1f6fb64,245247313,0,0x0,8
tick,0x7ffad1f6fb64,245263306,0,0x0,8
tick,0x7ffad1f6fb64,245278319,0,0x0,8
tick,0x7ffad1f6fb64,245294339,0,0x0,8
tick,0x7ffad1f6fb64,245310358,0,0x0,8
tick,0x7ffad1f6fb64,245325364,0,0x0,8
tick,0x7ffad1f6fb64,245340377,0,0x0,8
tick,0x7ffad1f6fb64,245356416,0,0x0,8
tick,0x7ffad1f6fb64,245372414,0,0x0,8
tick,0x7ffad1f6fb64,245387436,0,0x0,8
tick,0x7ffad1f6fb64,245403443,0,0x0,8
tick,0x7ffad1f6fb64,245419447,0,0x0,8
tick,0x7ffad1f6fb64,245435483,0,0x0,8
tick,0x7ffad1f6fb64,245451494,0,0x0,8
tick,0x7ffad1f6fb64,245466497,0,0x0,8
tick,0x7ffad1f6fb64,245481621,0,0x0,8
tick,0x7ffad1f6fb64,245496543,0,0x0,8
tick,0x7ffad1f6fb64,245512537,0,0x0,8
tick,0x7ffad1f6fb64,245527540,0,0x0,8
tick,0x7ffad1f6fb64,245543556,0,0x0,8
tick,0x7ffad1f6fb64,245559569,0,0x0,8
tick,0x7ffad1f6fb64,245575594,0,0x0,8
tick,0x7ffad1f6fb64,245590595,0,0x0,8
tick,0x7ffad1f6fb64,245606632,0,0x0,8
tick,0x7ffad1f6fb64,245622649,0,0x0,8
tick,0x7ffad1f6fb64,245637661,0,0x0,8
tick,0x7ffad1f6fb64,245653694,0,0x0,8
tick,0x7ffad1f6fb64,245668921,0,0x0,8
tick,0x7ffad1f6fb64,245684702,0,0x0,8
tick,0x7ffad1f6fb64,245699705,0,0x0,8
tick,0x7ffad1f6fb64,245715717,0,0x0,8
tick,0x7ffad1f6fb64,245730760,0,0x0,8
tick,0x7ffad1f6fb64,245746736,0,0x0,8
tick,0x7ffad1f6fb64,245761766,0,0x0,8
tick,0x7ffad1f6fb64,245777777,0,0x0,8
tick,0x7ffad1f6fb64,245793781,0,0x0,8
tick,0x7ffad1f6fb64,245809821,0,0x0,8
tick,0x7ffad1f6fb64,245825821,0,0x0,8
tick,0x7ffad1f6fb64,245840828,0,0x0,8
tick,0x7ffad1f6fb64,245856839,0,0x0,8
tick,0x7ffad1f6fb64,245872878,0,0x0,8
tick,0x7ffad1f6fb64,245887879,0,0x0,8
tick,0x7ffad1f6fb64,245902898,0,0x0,8
tick,0x7ffad1f6fb64,245918887,0,0x0,8
tick,0x7ffad1f6fb64,245934942,0,0x0,8
tick,0x7ffad1f6fb64,245949942,0,0x0,8
tick,0x7ffad1f6fb64,245965953,0,0x0,8
tick,0x7ffad1f6fb64,245980954,0,0x0,8
tick,0x7ffad1f6fb64,245995997,0,0x0,8
tick,0x7ffad1f6fb64,246010996,0,0x0,8
tick,0x7ffad1f6fb64,246027009,0,0x0,8
tick,0x7ffad1f6fb64,246042009,0,0x0,8
tick,0x7ffad1f6fb64,246058046,0,0x0,8
tick,0x7ffad1f6fb64,246074039,0,0x0,8
tick,0x7ffad1f6fb64,246090059,0,0x0,8
tick,0x7ffad1f6fb64,246105068,0,0x0,8
tick,0x7ffad1f6fb64,246120105,0,0x0,8
tick,0x7ffad1f6fb64,246136110,0,0x0,8
tick,0x7ffad1f6fb64,246152119,0,0x0,8
tick,0x7ffad1f6fb64,246168155,0,0x0,8
tick,0x7ffad1f6fb64,246183147,0,0x0,8
tick,0x7ffad1f6fb64,246198149,0,0x0,8
tick,0x7ffad1f6fb64,246214168,0,0x0,8
tick,0x7ffad1f6fb64,246230182,0,0x0,8
tick,0x7ffad1f6fb64,246246220,0,0x0,8
tick,0x7ffad1f6fb64,246261236,0,0x0,8
tick,0x7ffad1f6fb64,246277238,0,0x0,8
tick,0x7ffad1f6fb64,246293244,0,0x0,8
tick,0x7ffad1f6fb64,246309269,0,0x0,8
tick,0x7ffad1f6fb64,246325274,0,0x0,8
tick,0x7ffad1f6fb64,246340283,0,0x0,8
tick,0x7ffad1f6fb64,246356291,0,0x0,8
tick,0x7ffad1f6fb64,246371330,0,0x0,8
tick,0x7ffad1f6fb64,246387359,0,0x0,8
tick,0x7ffad1f6fb64,246402331,0,0x0,8
tick,0x7ffad1f6fb64,246417372,0,0x0,8
tick,0x7ffad1f6fb64,246433394,0,0x0,8
tick,0x7ffad1f6fb64,246448390,0,0x0,8
tick,0x7ffad1f6fb64,246464402,0,0x0,8
tick,0x7ffad1f6fb64,246480428,0,0x0,8
tick,0x7ffad1f6fb64,246495449,0,0x0,8
tick,0x7ffad1f6fb64,246510475,0,0x0,8
tick,0x7ffad1f6fb64,246525482,0,0x0,8
tick,0x7ffad1f6fb64,246540467,0,0x0,8
tick,0x7ffad1f6fb64,246556503,0,0x0,8
tick,0x7ffad1f6fb64,246572506,0,0x0,8
tick,0x7ffad1f6fb64,246587521,0,0x0,8
tick,0x7ffad1f6fb64,246603537,0,0x0,8
tick,0x7ffad1f6fb64,246619556,0,0x0,8
tick,0x7ffad1f6fb64,246634579,0,0x0,8
tick,0x7ffad1f6fb64,246649569,0,0x0,8
tick,0x7ffad1f6fb64,246665596,0,0x0,8
tick,0x7ffad1f6fb64,246681635,0,0x0,8
tick,0x7ffad1f6fb64,246697608,0,0x0,8
tick,0x7ffad1f6fb64,246713648,0,0x0,8
tick,0x7ffad1f6fb64,246729629,0,0x0,8
tick,0x7ffad1f6fb64,246744669,0,0x0,8
tick,0x7ffad1f6fb64,246760669,0,0x0,8
tick,0x7ffad1f6fb64,246775665,0,0x0,8
tick,0x7ffad1f6fb64,246791697,0,0x0,8
tick,0x7ffad1f6fb64,246807722,0,0x0,8
tick,0x7ffad1f6fb64,246823740,0,0x0,8
tick,0x7ffad1f6fb64,246839755,0,0x0,8
tick,0x7ffad1f6fb64,246854744,0,0x0,8
tick,0x7ffad1f6fb64,246870765,0,0x0,8
tick,0x7ffad1f6fb64,246885780,0,0x0,8
tick,0x7ffad1f6fb64,246901791,0,0x0,8
tick,0x7ffad1f6fb64,246917807,0,0x0,8
tick,0x7ffad1f6fb64,246932869,0,0x0,8
tick,0x7ffad1f6fb64,246948834,0,0x0,8
tick,0x7ffad1f6fb64,246964857,0,0x0,8
tick,0x7ffad1f6fb64,246979879,0,0x0,8
tick,0x7ffad1f6fb64,246994880,0,0x0,8
tick,0x7ffad1f6fb64,247010885,0,0x0,8
tick,0x7ffad1f6fb64,247025928,0,0x0,8
tick,0x7ffad1f6fb64,247040932,0,0x0,8
tick,0x7ffad1f6fb64,247055948,0,0x0,8
tick,0x7ffad1f6fb64,247070962,0,0x0,8
tick,0x7ffad1f6fb64,247086971,0,0x0,8
tick,0x7ffad1f6fb64,247102974,0,0x0,8
tick,0x7ffad1f6fb64,247117995,0,0x0,8
tick,0x7ffad1f6fb64,247134020,0,0x0,8
tick,0x7ffad1f6fb64,247150089,0,0x0,8
tick,0x7ffad1f6fb64,247166032,0,0x0,8
tick,0x7ffad1f6fb64,247181069,0,0x0,8
tick,0x7ffad1f6fb64,247196070,0,0x0,8
tick,0x7ffad1f6fb64,247212067,0,0x0,8
tick,0x7ffad1f6fb64,247228106,0,0x0,8
tick,0x7ffad1f6fb64,247244113,0,0x0,8
tick,0x7ffad1f6fb64,247260128,0,0x0,8
tick,0x7ffad1f6fb64,247276144,0,0x0,8
tick,0x7ffad1f6fb64,247291214,0,0x0,8
tick,0x7ffad1f6fb64,247306168,0,0x0,8
tick,0x7ffad1f6fb64,247321168,0,0x0,8
tick,0x7ffad1f6fb64,247336200,0,0x0,8
tick,0x7ffad1f6fb64,247351203,0,0x0,8
tick,0x7ffad1f6fb64,247366239,0,0x0,8
tick,0x7ffad1f6fb64,247381230,0,0x0,8
tick,0x7ffad1f6fb64,247396236,0,0x0,8
tick,0x7ffad1f6fb64,247411281,0,0x0,8
tick,0x7ffad1f6fb64,247427285,0,0x0,8
tick,0x7ffad1f6fb64,247442309,0,0x0,8
tick,0x7ffad1f6fb64,247458309,0,0x0,8
tick,0x7ffad1f6fb64,247474339,0,0x0,8
tick,0x7ffad1f6fb64,247490344,0,0x0,8
tick,0x7ffad1f6fb64,247505385,0,0x0,8
tick,0x7ffad1f6fb64,247520395,0,0x0,8
tick,0x7ffad1f6fb64,247536407,0,0x0,8
tick,0x7ffad1f6fb64,247551384,0,0x0,8
tick,0x7ffad1f6fb64,247566404,0,0x0,8
tick,0x7ffad1f6fb64,247581422,0,0x0,8
tick,0x7ffad1f6fb64,247597423,0,0x0,8
tick,0x7ffad1f6fb64,247613449,0,0x0,8
tick,0x7ffad1f6fb64,247629482,0,0x0,8
tick,0x7ffad1f6fb64,247644485,0,0x0,8
tick,0x7ffad1f6fb64,247660569,0,0x0,8
tick,0x7ffad1f6fb64,247675515,0,0x0,8
tick,0x7ffad1f6fb64,247691548,0,0x0,8
tick,0x7ffad1f6fb64,247706537,0,0x0,8
tick,0x7ffad1f6fb64,247722544,0,0x0,8
tick,0x7ffad1f6fb64,247737561,0,0x0,8
tick,0x7ffad1f6fb64,247753587,0,0x0,8
tick,0x7ffad1f6fb64,247769584,0,0x0,8
tick,0x7ffad1f6fb64,247785599,0,0x0,8
tick,0x7ffad1f6fb64,247800653,0,0x0,8
tick,0x7ffad1f6fb64,247816632,0,0x0,8
tick,0x7ffad1f6fb64,247832669,0,0x0,8
tick,0x7ffad1f6fb64,247847662,0,0x0,8
tick,0x7ffad1f6fb64,247863674,0,0x0,8
tick,0x7ffad1f6fb64,247879695,0,0x0,8
tick,0x7ffad1f6fb64,247894692,0,0x0,8
tick,0x7ffad1f6fb64,247910725,0,0x0,8
tick,0x7ffad1f6fb64,247925779,0,0x0,8
tick,0x7ffad1f6fb64,247940746,0,0x0,8
tick,0x7ffad1f6fb64,247955774,0,0x0,8
tick,0x7ffad1f6fb64,247970787,0,0x0,8
tick,0x7ffad1f6fb64,247986804,0,0x0,8
tick,0x7ffad1f6fb64,248002986,0,0x0,8
tick,0x7ffad1f6fb64,248017824,0,0x0,8
tick,0x7ffad1f6fb64,248032825,0,0x0,8
tick,0x7ffad1f6fb64,248048893,0,0x0,8
tick,0x7ffad1f6fb64,248063845,0,0x0,8
tick,0x7ffad1f6fb64,248079874,0,0x0,8
tick,0x7ffad1f6fb64,248094883,0,0x0,8
tick,0x7ffad1f6fb64,248110919,0,0x0,8
tick,0x7ffad1f6fb64,248126906,0,0x0,8
tick,0x7ffad1f6fb64,248142916,0,0x0,8
tick,0x7ffad1f6fb64,248158945,0,0x0,8
tick,0x7ffad1f6fb64,248173989,0,0x0,8
tick,0x7ffad1f6fb64,248189970,0,0x0,8
tick,0x7ffad1f6fb64,248205980,0,0x0,8
tick,0x7ffad1f6fb64,248220998,0,0x0,8
tick,0x7ffad1f6fb64,248237024,0,0x0,8
tick,0x7ffad1f6fb64,248253021,0,0x0,8
tick,0x7ffad1f6fb64,248269046,0,0x0,8
tick,0x7ffad1f6fb64,248285053,0,0x0,8
tick,0x7ffad1f6fb64,248300062,0,0x0,8
tick,0x7ffad1f6fb64,248316085,0,0x0,8
tick,0x7ffad1f6fb64,248332100,0,0x0,8
tick,0x7ffad1f6fb64,248348131,0,0x0,8
tick,0x7ffad1f6fb64,248363146,0,0x0,8
tick,0x7ffad1f6fb64,248378149,0,0x0,8
tick,0x7ffad1f6fb64,248394173,0,0x0,8
tick,0x7ffad1f6fb64,248409173,0,0x0,8
tick,0x7ffad1f6fb64,248424220,0,0x0,8
tick,0x7ffad1f6fb64,248440204,0,0x0,8
tick,0x7ffad1f6fb64,248456224,0,0x0,8
tick,0x7ffad1f6fb64,248471224,0,0x0,8
tick,0x7ffad1f6fb64,248487253,0,0x0,8
tick,0x7ffad1f6fb64,248503262,0,0x0,8
tick,0x7ffad1f6fb64,248519253,0,0x0,8
tick,0x7ffad1f6fb64,248534288,0,0x0,8
tick,0x7ffad1f6fb64,248550361,0,0x0,8
tick,0x7ffad1f6fb64,248565362,0,0x0,8
tick,0x7ffad1f6fb64,248580348,0,0x0,8
tick,0x7ffad1f6fb64,248595365,0,0x0,8
tick,0x7ffad1f6fb64,248611380,0,0x0,8
tick,0x7ffad1f6fb64,248627416,0,0x0,8
tick,0x7ffad1f6fb64,248643402,0,0x0,8
tick,0x7ffad1f6fb64,248659393,0,0x0,8
tick,0x7ffad1f6fb64,248674431,0,0x0,8
tick,0x7ffad1f6fb64,248689591,0,0x0,8
tick,0x7ffad1f6fb64,248704430,0,0x0,8
tick,0x7ffad1f6fb64,248720461,0,0x0,8
tick,0x7ffad1f6fb64,248735530,0,0x0,8
tick,0x7ffad1f6fb64,248751469,0,0x0,8
tick,0x7ffad1f6fb64,248766499,0,0x0,8
tick,0x7ffad1f6fb64,248781517,0,0x0,8
tick,0x7ffad1f6fb64,248796529,0,0x0,8
tick,0x7ffad1f6fb64,248811541,0,0x0,8
tick,0x7ffad1f6fb64,248826581,0,0x0,8
tick,0x7ffad1f6fb64,248842601,0,0x0,8
tick,0x7ffad1f6fb64,248858612,0,0x0,8
tick,0x7ffad1f6fb64,248874599,0,0x0,8
tick,0x7ffad1f6fb64,248890619,0,0x0,8
tick,0x7ffad1f6fb64,248905620,0,0x0,8
tick,0x7ffad1f6fb64,248921666,0,0x0,8
tick,0x7ffad1f6fb64,248937687,0,0x0,8
tick,0x7ffad1f6fb64,248952672,0,0x0,8
tick,0x7ffad1f6fb64,248968686,0,0x0,8
tick,0x7ffad1f6fb64,248984710,0,0x0,8
tick,0x7ffad1f6fb64,248999728,0,0x0,8
tick,0x7ffad1f6fb64,249014702,0,0x0,8
tick,0x7ffad1f6fb64,249030754,0,0x0,8
tick,0x7ffad1f6fb64,249045781,0,0x0,8
tick,0x7ffad1f6fb64,249061778,0,0x0,8
tick,0x7ffad1f6fb64,249077782,0,0x0,8
tick,0x7ffad1f6fb64,249092799,0,0x0,8
tick,0x7ffad1f6fb64,249108828,0,0x0,8
tick,0x7ffad1f6fb64,249123816,0,0x0,8
tick,0x7ffad1f6fb64,249139833,0,0x0,8
tick,0x7ffad1f6fb64,249155847,0,0x0,8
tick,0x7ffad1f6fb64,249171877,0,0x0,8
tick,0x7ffad1f6fb64,249187879,0,0x0,8
tick,0x7ffad1f6fb64,249202889,0,0x0,8
tick,0x7ffad1f6fb64,249218911,0,0x0,8
tick,0x7ffad1f6fb64,249233932,0,0x0,8
tick,0x7ffad1f6fb64,249249944,0,0x0,8
tick,0x7ffad1f6fb64,249265944,0,0x0,8
tick,0x7ffad1f6fb64,249280966,0,0x0,8
tick,0x7ffad1f6fb64,249295975,0,0x0,8
tick,0x7ffad1f6fb64,249311980,0,0x0,8
tick,0x7ffad1f6fb64,249328012,0,0x0,8
tick,0x7ffad1f6fb64,249344026,0,0x0,8
tick,0x7ffad1f6fb64,249359044,0,0x0,8
tick,0x7ffad1f6fb64,249375054,0,0x0,8
tick,0x7ffad1f6fb64,249391059,0,0x0,8
tick,0x7ffad1f6fb64,249406071,0,0x0,8
tick,0x7ffad1f6fb64,249421109,0,0x0,8
tick,0x7ffad1f6fb64,249436135,0,0x0,8
tick,0x7ffad1f6fb64,249451116,0,0x0,8
tick,0x7ffad1f6fb64,249466147,0,0x0,8
tick,0x7ffad1f6fb64,249481157,0,0x0,8
tick,0x7ffad1f6fb64,249497154,0,0x0,8
tick,0x7ffad1f6fb64,249513175,0,0x0,8
tick,0x7ffad1f6fb64,249529185,0,0x0,8
tick,0x7ffad1f6fb64,249544209,0,0x0,8
tick,0x7ffad1f6fb64,249559220,0,0x0,8
tick,0x7ffad1f6fb64,249575260,0,0x0,8
tick,0x7ffad1f6fb64,249591246,0,0x0,8
tick,0x7ffad1f6fb64,249606280,0,0x0,8
tick,0x7ffad1f6fb64,249621263,0,0x0,8
tick,0x7ffad1f6fb64,249637278,0,0x0,8
tick,0x7ffad1f6fb64,249653306,0,0x0,8
tick,0x7ffad1f6fb64,249669317,0,0x0,8
tick,0x7ffad1f6fb64,249685341,0,0x0,8
tick,0x7ffad1f6fb64,249700342,0,0x0,8
tick,0x7ffad1f6fb64,249716378,0,0x0,8
tick,0x7ffad1f6fb64,249732382,0,0x0,8
tick,0x7ffad1f6fb64,249748384,0,0x0,8
tick,0x7ffad1f6fb64,249764414,0,0x0,8
tick,0x7ffad1f6fb64,249780405,0,0x0,8
tick,0x7ffad1f6fb64,249795438,0,0x0,8
tick,0x7ffad1f6fb64,249811457,0,0x0,8
tick,0x7ffad1f6fb64,249826468,0,0x0,8
tick,0x7ffad1f6fb64,249842481,0,0x0,8
tick,0x7ffad1f6fb64,249858497,0,0x0,8
tick,0x7ffad1f6fb64,249874522,0,0x0,8
tick,0x7ffad1f6fb64,249889512,0,0x0,8
tick,0x7ffad1f6fb64,249905536,0,0x0,8
tick,0x7ffad1f6fb64,249920548,0,0x0,8
tick,0x7ffad1f6fb64,249936574,0,0x0,8
tick,0x7ffad1f6fb64,249952595,0,0x0,8
tick,0x7ffad1f6fb64,249968580,0,0x0,8
tick,0x7ffad1f6fb64,249983618,0,0x0,8
tick,0x7ffad1f6fb64,249999611,0,0x0,8
tick,0x7ffad1f6fb64,250015623,0,0x0,8
tick,0x7ffad1f6fb64,250030645,0,0x0,8
tick,0x7ffad1f6fb64,250046658,0,0x0,8
tick,0x7ffad1f6fb64,250062674,0,0x0,8
tick,0x7ffad1f6fb64,250078744,0,0x0,8
tick,0x7ffad1f6fb64,250094744,0,0x0,8
tick,0x7ffad1f6fb64,250109735,0,0x0,8
tick,0x7ffad1f6fb64,250125751,0,0x0,8
tick,0x7ffad1f6fb64,250140754,0,0x0,8
tick,0x7ffad1f6fb64,250156752,0,0x0,8
tick,0x7ffad1f6fb64,250172780,0,0x0,8
tick,0x7ffad1f6fb64,250187801,0,0x0,8
tick,0x7ffad1f6fb64,250202806,0,0x0,8
tick,0x7ffad1f6fb64,250218862,0,0x0,8
tick,0x7ffad1f6fb64,250233835,0,0x0,8
tick,0x7ffad1f6fb64,250249838,0,0x0,8
tick,0x7ffad1f6fb64,250265874,0,0x0,8
tick,0x7ffad1f6fb64,250281872,0,0x0,8
tick,0x7ffad1f6fb64,250296883,0,0x0,8
tick,0x7ffad1f6fb64,250312902,0,0x0,8
tick,0x7ffad1f6fb64,250328900,0,0x0,8
tick,0x7ffad1f6fb64,250344926,0,0x0,8
tick,0x7ffad1f6fb64,250359961,0,0x0,8
tick,0x7ffad1f6fb64,250375957,0,0x0,8
tick,0x7ffad1f6fb64,250391960,0,0x0,8
tick,0x7ffad1f6fb64,250407985,0,0x0,8
tick,0x7ffad1f6fb64,250423062,0,0x0,8
tick,0x7ffad1f6fb64,250438037,0,0x0,8
tick,0x7ffad1f6fb64,250454030,0,0x0,8
tick,0x7ffad1f6fb64,250470047,0,0x0,8
tick,0x7ffad1f6fb64,250486071,0,0x0,8
tick,0x7ffad1f6fb64,250502083,0,0x0,8
tick,0x7ffad1f6fb64,250517086,0,0x0,8
tick,0x7ffad1f6fb64,250533110,0,0x0,8
tick,0x7ffad1f6fb64,250549110,0,0x0,8
tick,0x7ffad1f6fb64,250565147,0,0x0,8
tick,0x7ffad1f6fb64,250580180,0,0x0,8
tick,0x7ffad1f6fb64,250595186,0,0x0,8
tick,0x7ffad1f6fb64,250611186,0,0x0,8
tick,0x7ffad1f6fb64,250627206,0,0x0,8
tick,0x7ffad1f6fb64,250642207,0,0x0,8
tick,0x7ffad1f6fb64,250658216,0,0x0,8
tick,0x7ffad1f6fb64,250673246,0,0x0,8
tick,0x7ffad1f6fb64,250689256,0,0x0,8
tick,0x7ffad1f6fb64,250705251,0,0x0,8
tick,0x7ffad1f6fb64,250720289,0,0x0,8
tick,0x7ffad1f6fb64,250735286,0,0x0,8
tick,0x7ffad1f6fb64,250750315,0,0x0,8
tick,0x7ffad1f6fb64,250766327,0,0x0,8
tick,0x7ffad1f6fb64,250781329,0,0x0,8
tick,0x7ffad1f6fb64,250797356,0,0x0,8
tick,0x7ffad1f6fb64,250813354,0,0x0,8
tick,0x7ffad1f6fb64,250829396,0,0x0,8
tick,0x7ffad1f6fb64,250844378,0,0x0,8
tick,0x7ffad1f6fb64,250860439,0,0x0,8
tick,0x7ffad1f6fb64,250875441,0,0x0,8
tick,0x7ffad1f6fb64,250891420,0,0x0,8
tick,0x7ffad1f6fb64,250906432,0,0x0,8
tick,0x7ffad1f6fb64,250922466,0,0x0,8
tick,0x7ffad1f6fb64,250937502,0,0x0,8
tick,0x7ffad1f6fb64,250952497,0,0x0,8
tick,0x7ffad1f6fb64,250967512,0,0x0,8
tick,0x7ffad1f6fb64,250982527,0,0x0,8
tick,0x7ffad1f6fb64,250998523,0,0x0,8
tick,0x7ffad1f6fb64,251013530,0,0x0,8
tick,0x7ffad1f6fb64,251029562,0,0x0,8
tick,0x7ffad1f6fb64,251045587,0,0x0,8
tick,0x7ffad1f6fb64,251061609,0,0x0,8
tick,0x7ffad1f6fb64,251076618,0,0x0,8
tick,0x7ffad1f6fb64,251092633,0,0x0,8
tick,0x7ffad1f6fb64,251107642,0,0x0,8
tick,0x7ffad1f6fb64,251123651,0,0x0,8
tick,0x7ffad1f6fb64,251139654,0,0x0,8
tick,0x7ffad1f6fb64,251154654,0,0x0,8
tick,0x7ffad1f6fb64,251170686,0,0x0,8
tick,0x7ffad1f6fb64,251186711,0,0x0,8
tick,0x7ffad1f6fb64,251201705,0,0x0,8
tick,0x7ffad1f6fb64,251217724,0,0x0,8
tick,0x7ffad1f6fb64,251233833,0,0x0,8
tick,0x7ffad1f6fb64,251248741,0,0x0,8
tick,0x7ffad1f6fb64,251264768,0,0x0,8
tick,0x7ffad1f6fb64,251279787,0,0x0,8
tick,0x7ffad1f6fb64,251295816,0,0x0,8
tick,0x7ffad1f6fb64,251311799,0,0x0,8
tick,0x7ffad1f6fb64,251327827,0,0x0,8
tick,0x7ffad1f6fb64,251343852,0,0x0,8
tick,0x7ffad1f6fb64,251358856,0,0x0,8
tick,0x7ffad1f6fb64,251374884,0,0x0,8
tick,0x7ffad1f6fb64,251390885,0,0x0,8
tick,0x7ffad1f6fb64,251405916,0,0x0,8
tick,0x7ffad1f6fb64,251421912,0,0x0,8
tick,0x7ffad1f6fb64,251437937,0,0x0,8
tick,0x7ffad1f6fb64,251452937,0,0x0,8
tick,0x7ffad1f6fb64,251468951,0,0x0,8
tick,0x7ffad1f6fb64,251485012,0,0x0,8
tick,0x7ffad1f6fb64,251500985,0,0x0,8
tick,0x7ffad1f6fb64,251517011,0,0x0,8
tick,0x7ffad1f6fb64,251532002,0,0x0,8
tick,0x7ffad1f6fb64,251548022,0,0x0,8
tick,0x7ffad1f6fb64,251564047,0,0x0,8
tick,0x7ffad1f6fb64,251580059,0,0x0,8
tick,0x7ffad1f6fb64,251596094,0,0x0,8
tick,0x7ffad1f6fb64,251611104,0,0x0,8
tick,0x7ffad1f6fb64,251627125,0,0x0,8
tick,0x7ffad1f6fb64,251643125,0,0x0,8
tick,0x7ffad1f6fb64,251658141,0,0x0,8
tick,0x7ffad1f6fb64,251673160,0,0x0,8
tick,0x7ffad1f6fb64,251688149,0,0x0,8
tick,0x7ffad1f6fb64,251703158,0,0x0,8
tick,0x7ffad1f6fb64,251719228,0,0x0,8
tick,0x7ffad1f6fb64,251735217,0,0x0,8
tick,0x7ffad1f6fb64,251750216,0,0x0,8
tick,0x7ffad1f6fb64,251765218,0,0x0,8
tick,0x7ffad1f6fb64,251780243,0,0x0,8
tick,0x7ffad1f6fb64,251795244,0,0x0,8
tick,0x7ffad1f6fb64,251811329,0,0x0,8
tick,0x7ffad1f6fb64,251826288,0,0x0,8
tick,0x7ffad1f6fb64,251841318,0,0x0,8
tick,0x7ffad1f6fb64,251857344,0,0x0,8
tick,0x7ffad1f6fb64,251873331,0,0x0,8
tick,0x7ffad1f6fb64,251889325,0,0x0,8
tick,0x7ffad1f6fb64,251904345,0,0x0,8
tick,0x7ffad1f6fb64,251920392,0,0x0,8
tick,0x7ffad1f6fb64,251936389,0,0x0,8
tick,0x7ffad1f6fb64,251951424,0,0x0,8
tick,0x7ffad1f6fb64,251966409,0,0x0,8
tick,0x7ffad1f6fb64,251981450,0,0x0,8
tick,0x7ffad1f6fb64,251996445,0,0x0,8
tick,0x7ffad1f6fb64,252012445,0,0x0,8
tick,0x7ffad1f6fb64,252027466,0,0x0,8
tick,0x7ffad1f6fb64,252043484,0,0x0,8
tick,0x7ffad1f6fb64,252059500,0,0x0,8
tick,0x7ffad1f6fb64,252075514,0,0x0,8
tick,0x7ffad1f6fb64,252091538,0,0x0,8
tick,0x7ffad1f6fb64,252106602,0,0x0,8
tick,0x7ffad1f6fb64,252121558,0,0x0,8
tick,0x7ffad1f6fb64,252137573,0,0x0,8
tick,0x7ffad1f6fb64,252153574,0,0x0,8
tick,0x7ffad1f6fb64,252168623,0,0x0,8
tick,0x7ffad1f6fb64,252184604,0,0x0,8
tick,0x7ffad1f6fb64,252199621,0,0x0,8
tick,0x7ffad1f6fb64,252215631,0,0x0,8
tick,0x7ffad1f6fb64,252231673,0,0x0,8
tick,0x7ffad1f6fb64,252247680,0,0x0,8
tick,0x7ffad1f6fb64,252263683,0,0x0,8
tick,0x7ffad1f6fb64,252278697,0,0x0,8
tick,0x7ffad1f6fb64,252294741,0,0x0,8
tick,0x7ffad1f6fb64,252310723,0,0x0,8
tick,0x7ffad1f6fb64,252325742,0,0x0,8
tick,0x7ffad1f6fb64,252340748,0,0x0,8
tick,0x7ffad1f6fb64,252356775,0,0x0,8
tick,0x7ffad1f6fb64,252372783,0,0x0,8
tick,0x7ffad1f6fb64,252387831,0,0x0,8
tick,0x7ffad1f6fb64,252402806,0,0x0,8
tick,0x7ffad1f6fb64,252418878,0,0x0,8
tick,0x7ffad1f6fb64,252434849,0,0x0,8
tick,0x7ffad1f6fb64,252449849,0,0x0,8
tick,0x7ffad1f6fb64,252464883,0,0x0,8
tick,0x7ffad1f6fb64,252479893,0,0x0,8
tick,0x7ffad1f6fb64,252495957,0,0x0,8
tick,0x7ffad1f6fb64,252511898,0,0x0,8
tick,0x7ffad1f6fb64,252527936,0,0x0,8
tick,0x7ffad1f6fb64,252542944,0,0x0,8
tick,0x7ffad1f6fb64,252557940,0,0x0,8
tick,0x7ffad1f6fb64,252574000,0,0x0,8
tick,0x7ffad1f6fb64,252589985,0,0x0,8
tick,0x7ffad1f6fb64,252606024,0,0x0,8
tick,0x7ffad1f6fb64,252621036,0,0x0,8
tick,0x7ffad1f6fb64,252637029,0,0x0,8
tick,0x7ffad1f6fb64,252653038,0,0x0,8
tick,0x7ffad1f6fb64,252668046,0,0x0,8
tick,0x7ffad1f6fb64,252683088,0,0x0,8
tick,0x7ffad1f6fb64,252698087,0,0x0,8
tick,0x7ffad1f6fb64,252714104,0,0x0,8
tick,0x7ffad1f6fb64,252729105,0,0x0,8
tick,0x7ffad1f6fb64,252744169,0,0x0,8
tick,0x7ffad1f6fb64,252760159,0,0x0,8
tick,0x7ffad1f6fb64,252776134,0,0x0,8
tick,0x7ffad1f6fb64,252792170,0,0x0,8
tick,0x7ffad1f6fb64,252808178,0,0x0,8
tick,0x7ffad1f6fb64,252824210,0,0x0,8
tick,0x7ffad1f6fb64,252840213,0,0x0,8
tick,0x7ffad1f6fb64,252855226,0,0x0,8
tick,0x7ffad1f6fb64,252870247,0,0x0,8
tick,0x7ffad1f6fb64,252886240,0,0x0,8
tick,0x7ffad1f6fb64,252902254,0,0x0,8
tick,0x7ffad1f6fb64,252918257,0,0x0,8
tick,0x7ffad1f6fb64,252933325,0,0x0,8
tick,0x7ffad1f6fb64,252949304,0,0x0,8
tick,0x7ffad1f6fb64,252965323,0,0x0,8
tick,0x7ffad1f6fb64,252980360,0,0x0,8
tick,0x7ffad1f6fb64,252995345,0,0x0,8
tick,0x7ffad1f6fb64,253010367,0,0x0,8
tick,0x7ffad1f6fb64,253025378,0,0x0,8
tick,0x7ffad1f6fb64,253040450,0,0x0,8
tick,0x7ffad1f6fb64,253056379,0,0x0,8
tick,0x7ffad1f6fb64,253072439,0,0x0,8
tick,0x7ffad1f6fb64,253087442,0,0x0,8
tick,0x7ffad1f6fb64,253102462,0,0x0,8
tick,0x7ffad1f6fb64,253117469,0,0x0,8
tick,0x7ffad1f6fb64,253132486,0,0x0,8
tick,0x7ffad1f6fb64,253148498,0,0x0,8
tick,0x7ffad1f6fb64,253163499,0,0x0,8
tick,0x7ffad1f6fb64,253178512,0,0x0,8
tick,0x7ffad1f6fb64,253194517,0,0x0,8
tick,0x7ffad1f6fb64,253209532,0,0x0,8
tick,0x7ffad1f6fb64,253224574,0,0x0,8
tick,0x7ffad1f6fb64,253239576,0,0x0,8
tick,0x7ffad1f6fb64,253255596,0,0x0,8
tick,0x7ffad1f6fb64,253270636,0,0x0,8
tick,0x7ffad1f6fb64,253286627,0,0x0,8
tick,0x7ffad1f6fb64,253301611,0,0x0,8
tick,0x7ffad1f6fb64,253317647,0,0x0,8
tick,0x7ffad1f6fb64,253332654,0,0x0,8
tick,0x7ffad1f6fb64,253348674,0,0x0,8
tick,0x7ffad1f6fb64,253364704,0,0x0,8
tick,0x7ffad1f6fb64,253379685,0,0x0,8
tick,0x7ffad1f6fb64,253395710,0,0x0,8
tick,0x7ffad1f6fb64,253410727,0,0x0,8
tick,0x7ffad1f6fb64,253425748,0,0x0,8
tick,0x7ffad1f6fb64,253440755,0,0x0,8
tick,0x7ffad1f6fb64,253456773,0,0x0,8
tick,0x7ffad1f6fb64,253472880,0,0x0,8
tick,0x7ffad1f6fb64,253487819,0,0x0,8
tick,0x7ffad1f6fb64,253502824,0,0x0,8
tick,0x7ffad1f6fb64,253518842,0,0x0,8
tick,0x7ffad1f6fb64,253534865,0,0x0,8
tick,0x7ffad1f6fb64,253549853,0,0x0,8
tick,0x7ffad1f6fb64,253565083,0,0x0,8
tick,0x7ffad1f6fb64,253579931,0,0x0,8
tick,0x7ffad1f6fb64,253595915,0,0x0,8
tick,0x7ffad1f6fb64,253611946,0,0x0,8
tick,0x7ffad1f6fb64,253627927,0,0x0,8
tick,0x7ffad1f6fb64,253642957,0,0x0,8
tick,0x7ffad1f6fb64,253657966,0,0x0,8
tick,0x7ffad1f6fb64,253674003,0,0x0,8
tick,0x7ffad1f6fb64,253689996,0,0x0,8
tick,0x7ffad1f6fb64,253705993,0,0x0,8
tick,0x7ffad1f6fb64,253721056,0,0x0,8
tick,0x7ffad1f6fb64,253737049,0,0x0,8
tick,0x7ffad1f6fb64,253753060,0,0x0,8
tick,0x7ffad1f6fb64,253769044,0,0x0,8
tick,0x7ffad1f6fb64,253784088,0,0x0,8
tick,0x7ffad1f6fb64,253799080,0,0x0,8
tick,0x7ffad1f6fb64,253815090,0,0x0,8
tick,0x7ffad1f6fb64,253831116,0,0x0,8
tick,0x7ffad1f6fb64,253846117,0,0x0,8
tick,0x7ffad1f6fb64,253862152,0,0x0,8
tick,0x7ffad1f6fb64,253877158,0,0x0,8
tick,0x7ffad1f6fb64,253892161,0,0x0,8
tick,0x7ffad1f6fb64,253908197,0,0x0,8
tick,0x7ffad1f6fb64,253924188,0,0x0,8
tick,0x7ffad1f6fb64,253940231,0,0x0,8
tick,0x7ffad1f6fb64,253956230,0,0x0,8
tick,0x7ffad1f6fb64,253971278,0,0x0,8
tick,0x7ffad1f6fb64,253987272,0,0x0,8
tick,0x7ffad1f6fb64,254002274,0,0x0,8
tick,0x7ffad1f6fb64,254017316,0,0x0,8
tick,0x7ffad1f6fb64,254033340,0,0x0,8
tick,0x7ffad1f6fb64,254049306,0,0x0,8
tick,0x7ffad1f6fb64,254065320,0,0x0,8
tick,0x7ffad1f6fb64,254080331,0,0x0,8
tick,0x7ffad1f6fb64,254095360,0,0x0,8
tick,0x7ffad1f6fb64,254111356,0,0x0,8
tick,0x7ffad1f6fb64,254126390,0,0x0,8
tick,0x7ffad1f6fb64,254142403,0,0x0,8
tick,0x7ffad1f6fb64,254158421,0,0x0,8
tick,0x7ffad1f6fb64,254174420,0,0x0,8
tick,0x7ffad1f6fb64,254190427,0,0x0,8
tick,0x7ffad1f6fb64,254205471,0,0x0,8
tick,0x7ffad1f6fb64,254221492,0,0x0,8
tick,0x7ffad1f6fb64,254237486,0,0x0,8
tick,0x7ffad1f6fb64,254253483,0,0x0,8
tick,0x7ffad1f6fb64,254269505,0,0x0,8
tick,0x7ffad1f6fb64,254284543,0,0x0,8
tick,0x7ffad1f6fb64,254299571,0,0x0,8
tick,0x7ffad1f6fb64,254315536,0,0x0,8
tick,0x7ffad1f6fb64,254331560,0,0x0,8
tick,0x7ffad1f6fb64,254347596,0,0x0,8
tick,0x7ffad1f6fb64,254363613,0,0x0,8
tick,0x7ffad1f6fb64,254379632,0,0x0,8
tick,0x7ffad1f6fb64,254395637,0,0x0,8
tick,0x7ffad1f6fb64,254410632,0,0x0,8
tick,0x7ffad1f6fb64,254425641,0,0x0,8
tick,0x7ffad1f6fb64,254440667,0,0x0,8
tick,0x7ffad1f6fb64,254455667,0,0x0,8
tick,0x7ffad1f6fb64,254471717,0,0x0,8
tick,0x7ffad1f6fb64,254487737,0,0x0,8
tick,0x7ffad1f6fb64,254502730,0,0x0,8
tick,0x7ffad1f6fb64,254517751,0,0x0,8
tick,0x7ffad1f6fb64,254533793,0,0x0,8
tick,0x7ffad1f6fb64,254549778,0,0x0,8
tick,0x7ffad1f6fb64,254564822,0,0x0,8
tick,0x7ffad1f6fb64,254579826,0,0x0,8
tick,0x7ffad1f6fb64,254595845,0,0x0,8
tick,0x7ffad1f6fb64,254610860,0,0x0,8
tick,0x7ffad1f6fb64,254626883,0,0x0,8
tick,0x7ffad1f6fb64,254642859,0,0x0,8
tick,0x7ffad1f6fb64,254657895,0,0x0,8
tick,0x7ffad1f6fb64,254673923,0,0x0,8
tick,0x7ffad1f6fb64,254689924,0,0x0,8
tick,0x7ffad1f6fb64,254705087,0,0x0,8
tick,0x7ffad1f6fb64,254720978,0,0x0,8
tick,0x7ffad1f6fb64,254735966,0,0x0,8
tick,0x7ffad1f6fb64,254751004,0,0x0,8
tick,0x7ffad1f6fb64,254765992,0,0x0,8
tick,0x7ffad1f6fb64,254780986,0,0x0,8
tick,0x7ffad1f6fb64,254796018,0,0x0,8
tick,0x7ffad1f6fb64,254812047,0,0x0,8
tick,0x7ffad1f6fb64,254827047,0,0x0,8
tick,0x7ffad1f6fb64,254843057,0,0x0,8
tick,0x7ffad1f6fb64,254858070,0,0x0,8
tick,0x7ffad1f6fb64,254874100,0,0x0,8
tick,0x7ffad1f6fb64,254889113,0,0x0,8
tick,0x7ffad1f6fb64,254904109,0,0x0,8
tick,0x7ffad1f6fb64,254919126,0,0x0,8
tick,0x7ffad1f6fb64,254934151,0,0x0,8
tick,0x7ffad1f6fb64,254950130,0,0x0,8
tick,0x7ffad1f6fb64,254965185,0,0x0,8
tick,0x7ffad1f6fb64,254980192,0,0x0,8
tick,0x7ffad1f6fb64,254995195,0,0x0,8
tick,0x7ffad1f6fb64,255010208,0,0x0,8
tick,0x7ffad1f6fb64,255025249,0,0x0,8
tick,0x7ffad1f6fb64,255040259,0,0x0,8
tick,0x7ffad1f6fb64,255056250,0,0x0,8
tick,0x7ffad1f6fb64,255072296,0,0x0,8
tick,0x7ffad1f6fb64,255087284,0,0x0,8
tick,0x7ffad1f6fb64,255102303,0,0x0,8
tick,0x7ffad1f6fb64,255117322,0,0x0,8
tick,0x7ffad1f6fb64,255132329,0,0x0,8
tick,0x7ffad1f6fb64,255148330,0,0x0,8
tick,0x7ffad1f6fb64,255163319,0,0x0,8
tick,0x7ffad1f6fb64,255178357,0,0x0,8
tick,0x7ffad1f6fb64,255194347,0,0x0,8
tick,0x7ffad1f6fb64,255210371,0,0x0,8
tick,0x7ffad1f6fb64,255225388,0,0x0,8
tick,0x7ffad1f6fb64,255240404,0,0x0,8
tick,0x7ffad1f6fb64,255256405,0,0x0,8
tick,0x7ffad1f6fb64,255271415,0,0x0,8
tick,0x7ffad1f6fb64,255286449,0,0x0,8
tick,0x7ffad1f6fb64,255301446,0,0x0,8
tick,0x7ffad1f6fb64,255317563,0,0x0,8
tick,0x7ffad1f6fb64,255333495,0,0x0,8
tick,0x7ffad1f6fb64,255349526,0,0x0,8
tick,0x7ffad1f6fb64,255365648,0,0x0,8
tick,0x7ffad1f6fb64,255380540,0,0x0,8
tick,0x7ffad1f6fb64,255395561,0,0x0,8
tick,0x7ffad1f6fb64,255411545,0,0x0,8
tick,0x7ffad1f6fb64,255427574,0,0x0,8
tick,0x7ffad1f6fb64,255442576,0,0x0,8
tick,0x7ffad1f6fb64,255457592,0,0x0,8
tick,0x7ffad1f6fb64,255473613,0,0x0,8
tick,0x7ffad1f6fb64,255489627,0,0x0,8
tick,0x7ffad1f6fb64,255505633,0,0x0,8
tick,0x7ffad1f6fb64,255520682,0,0x0,8
tick,0x7ffad1f6fb64,255536670,0,0x0,8
tick,0x7ffad1f6fb64,255552682,0,0x0,8
tick,0x7ffad1f6fb64,255568780,0,0x0,8
tick,0x7ffad1f6fb64,255584710,0,0x0,8
tick,0x7ffad1f6fb64,255599727,0,0x0,8
tick,0x7ffad1f6fb64,255615734,0,0x0,8
tick,0x7ffad1f6fb64,255630744,0,0x0,8
tick,0x7ffad1f6fb64,255645776,0,0x0,8
tick,0x7ffad1f6fb64,255660761,0,0x0,8
tick,0x7ffad1f6fb64,255675793,0,0x0,8
tick,0x7ffad1f6fb64,255690846,0,0x0,8
tick,0x7ffad1f6fb64,255706822,0,0x0,8
tick,0x7ffad1f6fb64,255722825,0,0x0,8
tick,0x7ffad1f6fb64,255737880,0,0x0,8
tick,0x7ffad1f6fb64,255753878,0,0x0,8
tick,0x7ffad1f6fb64,255769880,0,0x0,8
tick,0x7ffad1f6fb64,255784903,0,0x0,8
tick,0x7ffad1f6fb64,255800910,0,0x0,8
tick,0x7ffad1f6fb64,255817018,0,0x0,8
tick,0x7ffad1f6fb64,255831957,0,0x0,8
tick,0x7ffad1f6fb64,255846949,0,0x0,8
tick,0x7ffad1f6fb64,255861975,0,0x0,8
tick,0x7ffad1f6fb64,255877987,0,0x0,8
tick,0x7ffad1f6fb64,255894000,0,0x0,8
tick,0x7ffad1f6fb64,255908990,0,0x0,8
tick,0x7ffad1f6fb64,255925010,0,0x0,8
tick,0x7ffad1f6fb64,255940053,0,0x0,8
tick,0x7ffad1f6fb64,255956041,0,0x0,8
tick,0x7ffad1f6fb64,255971068,0,0x0,8
tick,0x7ffad1f6fb64,255987066,0,0x0,8
tick,0x7ffad1f6fb64,256003114,0,0x0,8
tick,0x7ffad1f6fb64,256019264,0,0x0,8
tick,0x7ffad1f6fb64,256035161,0,0x0,8
tick,0x7ffad1f6fb64,256050135,0,0x0,8
tick,0x7ffad1f6fb64,256065144,0,0x0,8
tick,0x7ffad1f6fb64,256080179,0,0x0,8
tick,0x7ffad1f6fb64,256095181,0,0x0,8
tick,0x7ffad1f6fb64,256110181,0,0x0,8
tick,0x7ffad1f6fb64,256126208,0,0x0,8
tick,0x7ffad1f6fb64,256142226,0,0x0,8
tick,0x7ffad1f6fb64,256158247,0,0x0,8
tick,0x7ffad1f6fb64,256174242,0,0x0,8
tick,0x7ffad1f6fb64,256189280,0,0x0,8
tick,0x7ffad1f6fb64,256204282,0,0x0,8
tick,0x7ffad1f6fb64,256220273,0,0x0,8
tick,0x7ffad1f6fb64,256235292,0,0x0,8
tick,0x7ffad1f6fb64,256250305,0,0x0,8
tick,0x7ffad1f6fb64,256266330,0,0x0,8
tick,0x7ffad1f6fb64,256281343,0,0x0,8
tick,0x7ffad1f6fb64,256297358,0,0x0,8
tick,0x7ffad1f6fb64,256313373,0,0x0,8
tick,0x7ffad1f6fb64,256329384,0,0x0,8
tick,0x7ffad1f6fb64,256345417,0,0x0,8
tick,0x7ffad1f6fb64,256360405,0,0x0,8
tick,0x7ffad1f6fb64,256376444,0,0x0,8
tick,0x7ffad1f6fb64,256392461,0,0x0,8
tick,0x7ffad1f6fb64,256408478,0,0x0,8
tick,0x7ffad1f6fb64,256423462,0,0x0,8
tick,0x7ffad1f6fb64,256439509,0,0x0,8
tick,0x7ffad1f6fb64,256454503,0,0x0,8
tick,0x7ffad1f6fb64,256469517,0,0x0,8
tick,0x7ffad1f6fb64,256485517,0,0x0,8
tick,0x7ffad1f6fb64,256501543,0,0x0,8
tick,0x7ffad1f6fb64,256517580,0,0x0,8
tick,0x7ffad1f6fb64,256533569,0,0x0,8
tick,0x7ffad1f6fb64,256548583,0,0x0,8
tick,0x7ffad1f6fb64,256564606,0,0x0,8
tick,0x7ffad1f6fb64,256579622,0,0x0,8
tick,0x7ffad1f6fb64,256595637,0,0x0,8
tick,0x7ffad1f6fb64,256611641,0,0x0,8
tick,0x7ffad1f6fb64,256627685,0,0x0,8
tick,0x7ffad1f6fb64,256643698,0,0x0,8
tick,0x7ffad1f6fb64,256658756,0,0x0,8
tick,0x7ffad1f6fb64,256674689,0,0x0,8
tick,0x7ffad1f6fb64,256689716,0,0x0,8
tick,0x7ffad1f6fb64,256704745,0,0x0,8
tick,0x7ffad1f6fb64,256719756,0,0x0,8
tick,0x7ffad1f6fb64,256734771,0,0x0,8
tick,0x7ffad1f6fb64,256749777,0,0x0,8
tick,0x7ffad1f6fb64,256765793,0,0x0,8
tick,0x7ffad1f6fb64,256781796,0,0x0,8
tick,0x7ffad1f6fb64,256796815,0,0x0,8
tick,0x7ffad1f6fb64,256812811,0,0x0,8
tick,0x7ffad1f6fb64,256828849,0,0x0,8
tick,0x7ffad1f6fb64,256844870,0,0x0,8
tick,0x7ffad1f6fb64,256859902,0,0x0,8
tick,0x7ffad1f6fb64,256875901,0,0x0,8
tick,0x7ffad1f6fb64,256890917,0,0x0,8
tick,0x7ffad1f6fb64,256905914,0,0x0,8
tick,0x7ffad1f6fb64,256920914,0,0x0,8
tick,0x7ffad1f6fb64,256936955,0,0x0,8
tick,0x7ffad1f6fb64,256952972,0,0x0,8
tick,0x7ffad1f6fb64,256968988,0,0x0,8
tick,0x7ffad1f6fb64,256983988,0,0x0,8
tick,0x7ffad1f6fb64,256998988,0,0x0,8
tick,0x7ffad1f6fb64,257014019,0,0x0,8
tick,0x7ffad1f6fb64,257030020,0,0x0,8
tick,0x7ffad1f6fb64,257046274,0,0x0,8
tick,0x7ffad1f6fb64,257062081,0,0x0,8
tick,0x7ffad1f6fb64,257077103,0,0x0,8
tick,0x7ffad1f6fb64,257093122,0,0x0,8
tick,0x7ffad1f6fb64,257108096,0,0x0,8
tick,0x7ffad1f6fb64,257124110,0,0x0,8
tick,0x7ffad1f6fb64,257139148,0,0x0,8
tick,0x7ffad1f6fb64,257154173,0,0x0,8
tick,0x7ffad1f6fb64,257169192,0,0x0,8
tick,0x7ffad1f6fb64,257185177,0,0x0,8
tick,0x7ffad1f6fb64,257200195,0,0x0,8
tick,0x7ffad1f6fb64,257215212,0,0x0,8
tick,0x7ffad1f6fb64,257230239,0,0x0,8
tick,0x7ffad1f6fb64,257246360,0,0x0,8
tick,0x7ffad1f6fb64,257262272,0,0x0,8
tick,0x7ffad1f6fb64,257277265,0,0x0,8
tick,0x7ffad1f6fb64,257293280,0,0x0,8
tick,0x7ffad1f6fb64,257309272,0,0x0,8
tick,0x7ffad1f6fb64,257325293,0,0x0,8
tick,0x7ffad1f6fb64,257340315,0,0x0,8
tick,0x7ffad1f6fb64,257356318,0,0x0,8
tick,0x7ffad1f6fb64,257372350,0,0x0,8
tick,0x7ffad1f6fb64,257388433,0,0x0,8
tick,0x7ffad1f6fb64,257403397,0,0x0,8
tick,0x7ffad1f6fb64,257419379,0,0x0,8
tick,0x7ffad1f6fb64,257435442,0,0x0,8
tick,0x7ffad1f6fb64,257450414,0,0x0,8
tick,0x7ffad1f6fb64,257466465,0,0x0,8
tick,0x7ffad1f6fb64,257481461,0,0x0,8
tick,0x7ffad1f6fb64,257497476,0,0x0,8
tick,0x7ffad1f6fb64,257513478,0,0x0,8
tick,0x7ffad1f6fb64,257529467,0,0x0,8
tick,0x7ffad1f6fb64,257544505,0,0x0,8
tick,0x7ffad1f6fb64,257560502,0,0x0,8
tick,0x7ffad1f6fb64,257575531,0,0x0,8
tick,0x7ffad1f6fb64,257591556,0,0x0,8
tick,0x7ffad1f6fb64,257607573,0,0x0,8
tick,0x7ffad1f6fb64,257623567,0,0x0,8
tick,0x7ffad1f6fb64,257639593,0,0x0,8
tick,0x7ffad1f6fb64,257654596,0,0x0,8
tick,0x7ffad1f6fb64,257669610,0,0x0,8
tick,0x7ffad1f6fb64,257685614,0,0x0,8
tick,0x7ffad1f6fb64,257701637,0,0x0,8
tick,0x7ffad1f6fb64,257716659,0,0x0,8
tick,0x7ffad1f6fb64,257731667,0,0x0,8
tick,0x7ffad1f6fb64,257746684,0,0x0,8
tick,0x7ffad1f6fb64,257762759,0,0x0,8
tick,0x7ffad1f6fb64,257778695,0,0x0,8
tick,0x7ffad1f6fb64,257793730,0,0x0,8
tick,0x7ffad1f6fb64,257809726,0,0x0,8
tick,0x7ffad1f6fb64,257825807,0,0x0,8
tick,0x7ffad1f6fb64,257840779,0,0x0,8
tick,0x7ffad1f6fb64,257856854,0,0x0,8
tick,0x7ffad1f6fb64,257872798,0,0x0,8
tick,0x7ffad1f6fb64,257887822,0,0x0,8
tick,0x7ffad1f6fb64,257902815,0,0x0,8
tick,0x7ffad1f6fb64,257917849,0,0x0,8
tick,0x7ffad1f6fb64,257933846,0,0x0,8
tick,0x7ffad1f6fb64,257948865,0,0x0,8
tick,0x7ffad1f6fb64,257964890,0,0x0,8
tick,0x7ffad1f6fb64,257979939,0,0x0,8
tick,0x7ffad1f6fb64,257994907,0,0x0,8
tick,0x7ffad1f6fb64,258010916,0,0x0,8
tick,0x7ffad1f6fb64,258026924,0,0x0,8
tick,0x7ffad1f6fb64,258042934,0,0x0,8
tick,0x7ffad1f6fb64,258057957,0,0x0,8
tick,0x7ffad1f6fb64,258073978,0,0x0,8
tick,0x7ffad1f6fb64,258089995,0,0x0,8
tick,0x7ffad1f6fb64,258104985,0,0x0,8
tick,0x7ffad1f6fb64,258121003,0,0x0,8
tick,0x7ffad1f6fb64,258137015,0,0x0,8
tick,0x7ffad1f6fb64,258152053,0,0x0,8
tick,0x7ffad1f6fb64,258167062,0,0x0,8
tick,0x7ffad1f6fb64,258182082,0,0x0,8
tick,0x7ffad1f6fb64,258197153,0,0x0,8
tick,0x7ffad1f6fb64,258213084,0,0x0,8
tick,0x7ffad1f6fb64,258228100,0,0x0,8
tick,0x7ffad1f6fb64,258244156,0,0x0,8
tick,0x7ffad1f6fb64,258260139,0,0x0,8
tick,0x7ffad1f6fb64,258275176,0,0x0,8
tick,0x7ffad1f6fb64,258291184,0,0x0,8
tick,0x7ffad1f6fb64,258306179,0,0x0,8
tick,0x7ffad1f6fb64,258321195,0,0x0,8
tick,0x7ffad1f6fb64,258336213,0,0x0,8
tick,0x7ffad1f6fb64,258351214,0,0x0,8
tick,0x7ffad1f6fb64,258366254,0,0x0,8
tick,0x7ffad1f6fb64,258381392,0,0x0,8
tick,0x7ffad1f6fb64,258397293,0,0x0,8
tick,0x7ffad1f6fb64,258412285,0,0x0,8
tick,0x7ffad1f6fb64,258427293,0,0x0,8
tick,0x7ffad1f6fb64,258443304,0,0x0,8
tick,0x7ffad1f6fb64,258459319,0,0x0,8
tick,0x7ffad1f6fb64,258474360,0,0x0,8
tick,0x7ffad1f6fb64,258489366,0,0x0,8
tick,0x7ffad1f6fb64,258504367,0,0x0,8
tick,0x7ffad1f6fb64,258520391,0,0x0,8
tick,0x7ffad1f6fb64,258535399,0,0x0,8
tick,0x7ffad1f6fb64,258550400,0,0x0,8
tick,0x7ffad1f6fb64,258566426,0,0x0,8
tick,0x7ffad1f6fb64,258581468,0,0x0,8
tick,0x7ffad1f6fb64,258597465,0,0x0,8
tick,0x7ffad1f6fb64,258612474,0,0x0,8
tick,0x7ffad1f6fb64,258627487,0,0x0,8
tick,0x7ffad1f6fb64,258642498,0,0x0,8
tick,0x7ffad1f6fb64,258658513,0,0x0,8
tick,0x7ffad1f6fb64,258674554,0,0x0,8
tick,0x7ffad1f6fb64,258690566,0,0x0,8
tick,0x7ffad1f6fb64,258706548,0,0x0,8
tick,0x7ffad1f6fb64,258721558,0,0x0,8
tick,0x7ffad1f6fb64,258737572,0,0x0,8
tick,0x7ffad1f6fb64,258753663,0,0x0,8
tick,0x7ffad1f6fb64,258768646,0,0x0,8
tick,0x7ffad1f6fb64,258783649,0,0x0,8
tick,0x7ffad1f6fb64,258799692,0,0x0,8
tick,0x7ffad1f6fb64,258815692,0,0x0,8
tick,0x7ffad1f6fb64,258830724,0,0x0,8
tick,0x7ffad1f6fb64,258845711,0,0x0,8
tick,0x7ffad1f6fb64,258861692,0,0x0,8
tick,0x7ffad1f6fb64,258877712,0,0x0,8
tick,0x7ffad1f6fb64,258893742,0,0x0,8
tick,0x7ffad1f6fb64,258908842,0,0x0,8
tick,0x7ffad1f6fb64,258924755,0,0x0,8
tick,0x7ffad1f6fb64,258939780,0,0x0,8
tick,0x7ffad1f6fb64,258955777,0,0x0,8
tick,0x7ffad1f6fb64,258970793,0,0x0,8
tick,0x7ffad1f6fb64,258985811,0,0x0,8
tick,0x7ffad1f6fb64,259001823,0,0x0,8
tick,0x7ffad1f6fb64,259016840,0,0x0,8
tick,0x7ffad1f6fb64,259032870,0,0x0,8
tick,0x7ffad1f6fb64,259048897,0,0x0,8
tick,0x7ffad1f6fb64,259064891,0,0x0,8
tick,0x7ffad1f6fb64,259079893,0,0x0,8
tick,0x7ffad1f6fb64,259094930,0,0x0,8
tick,0x7ffad1f6fb64,259109924,0,0x0,8
tick,0x7ffad1f6fb64,259125984,0,0x0,8
tick,0x7ffad1f6fb64,259141952,0,0x0,8
tick,0x7ffad1f6fb64,259157960,0,0x0,8
tick,0x7ffad1f6fb64,259172976,0,0x0,8
tick,0x7ffad1f6fb64,259187991,0,0x0,8
tick,0x7ffad1f6fb64,259203007,0,0x0,8
tick,0x7ffad1f6fb64,259219008,0,0x0,8
tick,0x7ffad1f6fb64,259234047,0,0x0,8
tick,0x7ffad1f6fb64,259250038,0,0x0,8
tick,0x7ffad1f6fb64,259266097,0,0x0,8
tick,0x7ffad1f6fb64,259281100,0,0x0,8
tick,0x7ffad1f6fb64,259296091,0,0x0,8
tick,0x7ffad1f6fb64,259312097,0,0x0,8
tick,0x7ffad1f6fb64,259328134,0,0x0,8
tick,0x7ffad1f6fb64,259343161,0,0x0,8
tick,0x7ffad1f6fb64,259359141,0,0x0,8
tick,0x7ffad1f6fb64,259374183,0,0x0,8
tick,0x7ffad1f6fb64,259390190,0,0x0,8
tick,0x7ffad1f6fb64,259405202,0,0x0,8
tick,0x7ffad1f6fb64,259420412,0,0x0,8
tick,0x7ffad1f6fb64,259436213,0,0x0,8
tick,0x7ffad1f6fb64,259452247,0,0x0,8
tick,0x7ffad1f6fb64,259468244,0,0x0,8
tick,0x7ffad1f6fb64,259484268,0,0x0,8
tick,0x7ffad1f6fb64,259499266,0,0x0,8
tick,0x7ffad1f6fb64,259515273,0,0x0,8
tick,0x7ffad1f6fb64,259531303,0,0x0,8
tick,0x7ffad1f6fb64,259547304,0,0x0,8
tick,0x7ffad1f6fb64,259563335,0,0x0,8
tick,0x7ffad1f6fb64,259578355,0,0x0,8
tick,0x7ffad1f6fb64,259594391,0,0x0,8
tick,0x7ffad1f6fb64,259610396,0,0x0,8
tick,0x7ffad1f6fb64,259625414,0,0x0,8
tick,0x7ffad1f6fb64,259640415,0,0x0,8
tick,0x7ffad1f6fb64,259656428,0,0x0,8
tick,0x7ffad1f6fb64,259671483,0,0x0,8
tick,0x7ffad1f6fb64,259687449,0,0x0,8
tick,0x7ffad1f6fb64,259703457,0,0x0,8
tick,0x7ffad1f6fb64,259719470,0,0x0,8
tick,0x7ffad1f6fb64,259734476,0,0x0,8
tick,0x7ffad1f6fb64,259749509,0,0x0,8
tick,0x7ffad1f6fb64,259764511,0,0x0,8
tick,0x7ffad1f6fb64,259779538,0,0x0,8
tick,0x7ffad1f6fb64,259794538,0,0x0,8
tick,0x7ffad1f6fb64,259810555,0,0x0,8
tick,0x7ffad1f6fb64,259825581,0,0x0,8
tick,0x7ffad1f6fb64,259840593,0,0x0,8
tick,0x7ffad1f6fb64,259855593,0,0x0,8
tick,0x7ffad1f6fb64,259870632,0,0x0,8
tick,0x7ffad1f6fb64,259886644,0,0x0,8
tick,0x7ffad1f6fb64,259902654,0,0x0,8
tick,0x7ffad1f6fb64,259917668,0,0x0,8
tick,0x7ffad1f6fb64,259932689,0,0x0,8
tick,0x7ffad1f6fb64,259948702,0,0x0,8
tick,0x7ffad1f6fb64,259963711,0,0x0,8
tick,0x7ffad1f6fb64,259979704,0,0x0,8
tick,0x7ffad1f6fb64,259995766,0,0x0,8
tick,0x7ffad1f6fb64,260010740,0,0x0,8
tick,0x7ffad1f6fb64,260025765,0,0x0,8
tick,0x7ffad1f6fb64,260040766,0,0x0,8
tick,0x7ffad1f6fb64,260055767,0,0x0,8
tick,0x7ffad1f6fb64,260070780,0,0x0,8
tick,0x7ffad1f6fb64,260086806,0,0x0,8
tick,0x7ffad1f6fb64,260101831,0,0x0,8
tick,0x7ffad1f6fb64,260117835,0,0x0,8
tick,0x7ffad1f6fb64,260133850,0,0x0,8
tick,0x7ffad1f6fb64,260149872,0,0x0,8
tick,0x7ffad1f6fb64,260165867,0,0x0,8
tick,0x7ffad1f6fb64,260181915,0,0x0,8
tick,0x7ffad1f6fb64,260196964,0,0x0,8
tick,0x7ffad1f6fb64,260212944,0,0x0,8
tick,0x7ffad1f6fb64,260228931,0,0x0,8
tick,0x7ffad1f6fb64,260243956,0,0x0,8
tick,0x7ffad1f6fb64,260259964,0,0x0,8
tick,0x7ffad1f6fb64,260275980,0,0x0,8
tick,0x7ffad1f6fb64,260292020,0,0x0,8
tick,0x7ffad1f6fb64,260307004,0,0x0,8
tick,0x7ffad1f6fb64,260323037,0,0x0,8
tick,0x7ffad1f6fb64,260339028,0,0x0,8
tick,0x7ffad1f6fb64,260354181,0,0x0,8
tick,0x7ffad1f6fb64,260370072,0,0x0,8
tick,0x7ffad1f6fb64,260386076,0,0x0,8
tick,0x7ffad1f6fb64,260402093,0,0x0,8
tick,0x7ffad1f6fb64,260418129,0,0x0,8
tick,0x7ffad1f6fb64,260433185,0,0x0,8
tick,0x7ffad1f6fb64,260448209,0,0x0,8
tick,0x7ffad1f6fb64,260464140,0,0x0,8
tick,0x7ffad1f6fb64,260480177,0,0x0,8
tick,0x7ffad1f6fb64,260495184,0,0x0,8
tick,0x7ffad1f6fb64,260511202,0,0x0,8
tick,0x7ffad1f6fb64,260527212,0,0x0,8
tick,0x7ffad1f6fb64,260543256,0,0x0,8
tick,0x7ffad1f6fb64,260558238,0,0x0,8
tick,0x7ffad1f6fb64,260574269,0,0x0,8
tick,0x7ffad1f6fb64,260589268,0,0x0,8
tick,0x7ffad1f6fb64,260604275,0,0x0,8
tick,0x7ffad1f6fb64,260620291,0,0x0,8
tick,0x7ffad1f6fb64,260636325,0,0x0,8
tick,0x7ffad1f6fb64,260651338,0,0x0,8
tick,0x7ffad1f6fb64,260666330,0,0x0,8
tick,0x7ffad1f6fb64,260681362,0,0x0,8
tick,0x7ffad1f6fb64,260697367,0,0x0,8
tick,0x7ffad1f6fb64,260712388,0,0x0,8
tick,0x7ffad1f6fb64,260727510,0,0x0,8
tick,0x7ffad1f6fb64,260743407,0,0x0,8
tick,0x7ffad1f6fb64,260758439,0,0x0,8
tick,0x7ffad1f6fb64,260773427,0,0x0,8
tick,0x7ffad1f6fb64,260788445,0,0x0,8
tick,0x7ffad1f6fb64,260804502,0,0x0,8
tick,0x7ffad1f6fb64,260820481,0,0x0,8
tick,0x7ffad1f6fb64,260835521,0,0x0,8
tick,0x7ffad1f6fb64,260850583,0,0x0,8
tick,0x7ffad1f6fb64,260866550,0,0x0,8
tick,0x7ffad1f6fb64,260881530,0,0x0,8
tick,0x7ffad1f6fb64,260896559,0,0x0,8
tick,0x7ffad1f6fb64,260912554,0,0x0,8
tick,0x7ffad1f6fb64,260927686,0,0x0,8
tick,0x7ffad1f6fb64,260942626,0,0x0,8
tick,0x7ffad1f6fb64,260958618,0,0x0,8
tick,0x7ffad1f6fb64,260973621,0,0x0,8
tick,0x7ffad1f6fb64,260989646,0,0x0,8
tick,0x7ffad1f6fb64,261004666,0,0x0,8
tick,0x7ffad1f6fb64,261020681,0,0x0,8
tick,0x7ffad1f6fb64,261036691,0,0x0,8
tick,0x7ffad1f6fb64,261052713,0,0x0,8
tick,0x7ffad1f6fb64,261068723,0,0x0,8
tick,0x7ffad1f6fb64,261083741,0,0x0,8
tick,0x7ffad1f6fb64,261099724,0,0x0,8
tick,0x7ffad1f6fb64,261115764,0,0x0,8
tick,0x7ffad1f6fb64,261131772,0,0x0,8
tick,0x7ffad1f6fb64,261146786,0,0x0,8
tick,0x7ffad1f6fb64,261162780,0,0x0,8
tick,0x7ffad1f6fb64,261177822,0,0x0,8
tick,0x7ffad1f6fb64,261193828,0,0x0,8
tick,0x7ffad1f6fb64,261209831,0,0x0,8
tick,0x7ffad1f6fb64,261225845,0,0x0,8
tick,0x7ffad1f6fb64,261240856,0,0x0,8
tick,0x7ffad1f6fb64,261256868,0,0x0,8
tick,0x7ffad1f6fb64,261272880,0,0x0,8
tick,0x7ffad1f6fb64,261288963,0,0x0,8
tick,0x7ffad1f6fb64,261303928,0,0x0,8
tick,0x7ffad1f6fb64,261318956,0,0x0,8
tick,0x7ffad1f6fb64,261334953,0,0x0,8
tick,0x7ffad1f6fb64,261349959,0,0x0,8
tick,0x7ffad1f6fb64,261366032,0,0x0,8
tick,0x7ffad1f6fb64,261381247,0,0x0,8
tick,0x7ffad1f6fb64,261396039,0,0x0,8
tick,0x7ffad1f6fb64,261411038,0,0x0,8
tick,0x7ffad1f6fb64,261427034,0,0x0,8
tick,0x7ffad1f6fb64,261442044,0,0x0,8
tick,0x7ffad1f6fb64,261458049,0,0x0,8
tick,0x7ffad1f6fb64,261474121,0,0x0,8
tick,0x7ffad1f6fb64,261489113,0,0x0,8
tick,0x7ffad1f6fb64,261504105,0,0x0,8
tick,0x7ffad1f6fb64,261520149,0,0x0,8
tick,0x7ffad1f6fb64,261536122,0,0x0,8
tick,0x7ffad1f6fb64,261551134,0,0x0,8
tick,0x7ffad1f6fb64,261566162,0,0x0,8
tick,0x7ffad1f6fb64,261581259,0,0x0,8
tick,0x7ffad1f6fb64,261597203,0,0x0,8
tick,0x7ffad1f6fb64,261612203,0,0x0,8
tick,0x7ffad1f6fb64,261628235,0,0x0,8
tick,0x7ffad1f6fb64,261644224,0,0x0,8
tick,0x7ffad1f6fb64,261660234,0,0x0,8
tick,0x7ffad1f6fb64,261676271,0,0x0,8
tick,0x7ffad1f6fb64,261691279,0,0x0,8
tick,0x7ffad1f6fb64,261706267,0,0x0,8
tick,0x7ffad1f6fb64,261721273,0,0x0,8
tick,0x7ffad1f6fb64,261737322,0,0x0,8
tick,0x7ffad1f6fb64,261753317,0,0x0,8
tick,0x7ffad1f6fb64,261769339,0,0x0,8
tick,0x7ffad1f6fb64,261785373,0,0x0,8
tick,0x7ffad1f6fb64,261801385,0,0x0,8
tick,0x7ffad1f6fb64,261817406,0,0x0,8
tick,0x7ffad1f6fb64,261832430,0,0x0,8
tick,0x7ffad1f6fb64,261848451,0,0x0,8
tick,0x7ffad1f6fb64,261863476,0,0x0,8
tick,0x7ffad1f6fb64,261878474,0,0x0,8
tick,0x7ffad1f6fb64,261894464,0,0x0,8
tick,0x7ffad1f6fb64,261910466,0,0x0,8
tick,0x7ffad1f6fb64,261925481,0,0x0,8
tick,0x7ffad1f6fb64,261940495,0,0x0,8
tick,0x7ffad1f6fb64,261955556,0,0x0,8
tick,0x7ffad1f6fb64,261970543,0,0x0,8
tick,0x7ffad1f6fb64,261985690,0,0x0,8
tick,0x7ffad1f6fb64,262000558,0,0x0,8
tick,0x7ffad1f6fb64,262015547,0,0x0,8
tick,0x7ffad1f6fb64,262031569,0,0x0,8
tick,0x7ffad1f6fb64,262046589,0,0x0,8
tick,0x7ffad1f6fb64,262062675,0,0x0,8
tick,0x7ffad1f6fb64,262078623,0,0x0,8
tick,0x7ffad1f6fb64,262094647,0,0x0,8
tick,0x7ffad1f6fb64,262109649,0,0x0,8
tick,0x7ffad1f6fb64,262125653,0,0x0,8
tick,0x7ffad1f6fb64,262140677,0,0x0,8
tick,0x7ffad1f6fb64,262156727,0,0x0,8
tick,0x7ffad1f6fb64,262171737,0,0x0,8
tick,0x7ffad1f6fb64,262186732,0,0x0,8
tick,0x7ffad1f6fb64,262201752,0,0x0,8
tick,0x7ffad1f6fb64,262217756,0,0x0,8
tick,0x7ffad1f6fb64,262233757,0,0x0,8
tick,0x7ffad1f6fb64,262248858,0,0x0,8
tick,0x7ffad1f6fb64,262264806,0,0x0,8
tick,0x7ffad1f6fb64,262279871,0,0x0,8
tick,0x7ffad1f6fb64,262295831,0,0x0,8
tick,0x7ffad1f6fb64,262311833,0,0x0,8
tick,0x7ffad1f6fb64,262326838,0,0x0,8
tick,0x7ffad1f6fb64,262342899,0,0x0,8
tick,0x7ffad1f6fb64,262358879,0,0x0,8
tick,0x7ffad1f6fb64,262373885,0,0x0,8
tick,0x7ffad1f6fb64,262389920,0,0x0,8
tick,0x7ffad1f6fb64,262405916,0,0x0,8
tick,0x7ffad1f6fb64,262421979,0,0x0,8
tick,0x7ffad1f6fb64,262436973,0,0x0,8
tick,0x7ffad1f6fb64,262452953,0,0x0,8
tick,0x7ffad1f6fb64,262468971,0,0x0,8
tick,0x7ffad1f6fb64,262484990,0,0x0,8
tick,0x7ffad1f6fb64,262500023,0,0x0,8
tick,0x7ffad1f6fb64,262516003,0,0x0,8
tick,0x7ffad1f6fb64,262532052,0,0x0,8
tick,0x7ffad1f6fb64,262548047,0,0x0,8
tick,0x7ffad1f6fb64,262563078,0,0x0,8
tick,0x7ffad1f6fb64,262579087,0,0x0,8
tick,0x7ffad1f6fb64,262595083,0,0x0,8
tick,0x7ffad1f6fb64,262610117,0,0x0,8
tick,0x7ffad1f6fb64,262626118,0,0x0,8
tick,0x7ffad1f6fb64,262641142,0,0x0,8
tick,0x7ffad1f6fb64,262657150,0,0x0,8
tick,0x7ffad1f6fb64,262673163,0,0x0,8
tick,0x7ffad1f6fb64,262689177,0,0x0,8
tick,0x7ffad1f6fb64,262704198,0,0x0,8
tick,0x7ffad1f6fb64,262720221,0,0x0,8
tick,0x7ffad1f6fb64,262736198,0,0x0,8
tick,0x7ffad1f6fb64,262752223,0,0x0,8
tick,0x7ffad1f6fb64,262767233,0,0x0,8
tick,0x7ffad1f6fb64,262782267,0,0x0,8
tick,0x7ffad1f6fb64,262798309,0,0x0,8
tick,0x7ffad1f6fb64,262814293,0,0x0,8
tick,0x7ffad1f6fb64,262830310,0,0x0,8
tick,0x7ffad1f6fb64,262846336,0,0x0,8
tick,0x7ffad1f6fb64,262861340,0,0x0,8
tick,0x7ffad1f6fb64,262877356,0,0x0,8
tick,0x7ffad1f6fb64,262892357,0,0x0,8
tick,0x7ffad1f6fb64,262908385,0,0x0,8
tick,0x7ffad1f6fb64,262924396,0,0x0,8
tick,0x7ffad1f6fb64,262940420,0,0x0,8
tick,0x7ffad1f6fb64,262955452,0,0x0,8
tick,0x7ffad1f6fb64,262970557,0,0x0,8
tick,0x7ffad1f6fb64,262986454,0,0x0,8
tick,0x7ffad1f6fb64,263002481,0,0x0,8
tick,0x7ffad1f6fb64,263017474,0,0x0,8
tick,0x7ffad1f6fb64,263033487,0,0x0,8
tick,0x7ffad1f6fb64,263049564,0,0x0,8
tick,0x7ffad1f6fb64,263065532,0,0x0,8
tick,0x7ffad1f6fb64,263080531,0,0x0,8
tick,0x7ffad1f6fb64,263095557,0,0x0,8
tick,0x7ffad1f6fb64,263111560,0,0x0,8
tick,0x7ffad1f6fb64,263127564,0,0x0,8
tick,0x7ffad1f6fb64,263143626,0,0x0,8
tick,0x7ffad1f6fb64,263158617,0,0x0,8
tick,0x7ffad1f6fb64,263174632,0,0x0,8
tick,0x7ffad1f6fb64,263190638,0,0x0,8
tick,0x7ffad1f6fb64,263206641,0,0x0,8
tick,0x7ffad1f6fb64,263222732,0,0x0,8
tick,0x7ffad1f6fb64,263237718,0,0x0,8
tick,0x7ffad1f6fb64,263252699,0,0x0,8
tick,0x7ffad1f6fb64,263268710,0,0x0,8
tick,0x7ffad1f6fb64,263284710,0,0x0,8
tick,0x7ffad1f6fb64,263299744,0,0x0,8
tick,0x7ffad1f6fb64,263315810,0,0x0,8
tick,0x7ffad1f6fb64,263331781,0,0x0,8
tick,0x7ffad1f6fb64,263347800,0,0x0,8
tick,0x7ffad1f6fb64,263363804,0,0x0,8
tick,0x7ffad1f6fb64,263378817,0,0x0,8
tick,0x7ffad1f6fb64,263394827,0,0x0,8
tick,0x7ffad1f6fb64,263409873,0,0x0,8
tick,0x7ffad1f6fb64,263425866,0,0x0,8
tick,0x7ffad1f6fb64,263440864,0,0x0,8
tick,0x7ffad1f6fb64,263456877,0,0x0,8
tick,0x7ffad1f6fb64,263471881,0,0x0,8
tick,0x7ffad1f6fb64,263487920,0,0x0,8
tick,0x7ffad1f6fb64,263502949,0,0x0,8
tick,0x7ffad1f6fb64,263517952,0,0x0,8
tick,0x7ffad1f6fb64,263533951,0,0x0,8
tick,0x7ffad1f6fb64,263548977,0,0x0,8
tick,0x7ffad1f6fb64,263565000,0,0x0,8
tick,0x7ffad1f6fb64,263579984,0,0x0,8
tick,0x7ffad1f6fb64,263594994,0,0x0,8
tick,0x7ffad1f6fb64,263610010,0,0x0,8
tick,0x7ffad1f6fb64,263626037,0,0x0,8
tick,0x7ffad1f6fb64,263641041,0,0x0,8
tick,0x7ffad1f6fb64,263656062,0,0x0,8
tick,0x7ffad1f6fb64,263671083,0,0x0,8
tick,0x7ffad1f6fb64,263687093,0,0x0,8
tick,0x7ffad1f6fb64,263702145,0,0x0,8
tick,0x7ffad1f6fb64,263717183,0,0x0,8
tick,0x7ffad1f6fb64,263732139,0,0x0,8
tick,0x7ffad1f6fb64,263748135,0,0x0,8
tick,0x7ffad1f6fb64,263764162,0,0x0,8
tick,0x7ffad1f6fb64,263779160,0,0x0,8
tick,0x7ffad1f6fb64,263794199,0,0x0,8
tick,0x7ffad1f6fb64,263809224,0,0x0,8
tick,0x7ffad1f6fb64,263825235,0,0x0,8
tick,0x7ffad1f6fb64,263840257,0,0x0,8
tick,0x7ffad1f6fb64,263855318,0,0x0,8
tick,0x7ffad1f6fb64,263870272,0,0x0,8
tick,0x7ffad1f6fb64,263885289,0,0x0,8
tick,0x7ffad1f6fb64,263901288,0,0x0,8
tick,0x7ffad1f6fb64,263917333,0,0x0,8
tick,0x7ffad1f6fb64,263933329,0,0x0,8
tick,0x7ffad1f6fb64,263948343,0,0x0,8
tick,0x7ffad1f6fb64,263964442,0,0x0,8
tick,0x7ffad1f6fb64,263980383,0,0x0,8
tick,0x7ffad1f6fb64,263995530,0,0x0,8
tick,0x7ffad1f6fb64,264011423,0,0x0,8
tick,0x7ffad1f6fb64,264026448,0,0x0,8
tick,0x7ffad1f6fb64,264042425,0,0x0,8
tick,0x7ffad1f6fb64,264058466,0,0x0,8
tick,0x7ffad1f6fb64,264073512,0,0x0,8
tick,0x7ffad1f6fb64,264088455,0,0x0,8
tick,0x7ffad1f6fb64,264103520,0,0x0,8
tick,0x7ffad1f6fb64,264119534,0,0x0,8
tick,0x7ffad1f6fb64,264134535,0,0x0,8
tick,0x7ffad1f6fb64,264149558,0,0x0,8
tick,0x7ffad1f6fb64,264165577,0,0x0,8
tick,0x7ffad1f6fb64,264180556,0,0x0,8
tick,0x7ffad1f6fb64,264195604,0,0x0,8
tick,0x7ffad1f6fb64,264210594,0,0x0,8
tick,0x7ffad1f6fb64,264225628,0,0x0,8
tick,0x7ffad1f6fb64,264240636,0,0x0,8
tick,0x7ffad1f6fb64,264255658,0,0x0,8
tick,0x7ffad1f6fb64,264271653,0,0x0,8
tick,0x7ffad1f6fb64,264287663,0,0x0,8
tick,0x7ffad1f6fb64,264302700,0,0x0,8
tick,0x7ffad1f6fb64,264317687,0,0x0,8
tick,0x7ffad1f6fb64,264332731,0,0x0,8
tick,0x7ffad1f6fb64,264348740,0,0x0,8
tick,0x7ffad1f6fb64,264364728,0,0x0,8
tick,0x7ffad1f6fb64,264379741,0,0x0,8
tick,0x7ffad1f6fb64,264395762,0,0x0,8
tick,0x7ffad1f6fb64,264410781,0,0x0,8
tick,0x7ffad1f6fb64,264426774,0,0x0,8
tick,0x7ffad1f6fb64,264442798,0,0x0,8
tick,0x7ffad1f6fb64,264457817,0,0x0,8
tick,0x7ffad1f6fb64,264472842,0,0x0,8
tick,0x7ffad1f6fb64,264489015,0,0x0,8
tick,0x7ffad1f6fb64,264503860,0,0x0,8
tick,0x7ffad1f6fb64,264518887,0,0x0,8
tick,0x7ffad1f6fb64,264534887,0,0x0,8
tick,0x7ffad1f6fb64,264549900,0,0x0,8
tick,0x7ffad1f6fb64,264565954,0,0x0,8
tick,0x7ffad1f6fb64,264581936,0,0x0,8
tick,0x7ffad1f6fb64,264596989,0,0x0,8
tick,0x7ffad1f6fb64,264613004,0,0x0,8
tick,0x7ffad1f6fb64,264627968,0,0x0,8
tick,0x7ffad1f6fb64,264643001,0,0x0,8
tick,0x7ffad1f6fb64,264658983,0,0x0,8
tick,0x7ffad1f6fb64,264675022,0,0x0,8
tick,0x7ffad1f6fb64,264691034,0,0x0,8
tick,0x7ffad1f6fb64,264706048,0,0x0,8
tick,0x7ffad1f6fb64,264721056,0,0x0,8
tick,0x7ffad1f6fb64,264736052,0,0x0,8
tick,0x7ffad1f6fb64,264752070,0,0x0,8
tick,0x7ffad1f6fb64,264768066,0,0x0,8
tick,0x7ffad1f6fb64,264783078,0,0x0,8
tick,0x7ffad1f6fb64,264798103,0,0x0,8
tick,0x7ffad1f6fb64,264814109,0,0x0,8
tick,0x7ffad1f6fb64,264830131,0,0x0,8
tick,0x7ffad1f6fb64,264846145,0,0x0,8
tick,0x7ffad1f6fb64,264861208,0,0x0,8
tick,0x7ffad1f6fb64,264877273,0,0x0,8
tick,0x7ffad1f6fb64,264892216,0,0x0,8
tick,0x7ffad1f6fb64,264907210,0,0x0,8
tick,0x7ffad1f6fb64,264922218,0,0x0,8
tick,0x7ffad1f6fb64,264937235,0,0x0,8
tick,0x7ffad1f6fb64,264952263,0,0x0,8
tick,0x7ffad1f6fb64,264968273,0,0x0,8
tick,0x7ffad1f6fb64,264984282,0,0x0,8
tick,0x7ffad1f6fb64,264999316,0,0x0,8
tick,0x7ffad1f6fb64,265015323,0,0x0,8
tick,0x7ffad1f6fb64,265031338,0,0x0,8
tick,0x7ffad1f6fb64,265046356,0,0x0,8
tick,0x7ffad1f6fb64,265062536,0,0x0,8
tick,0x7ffad1f6fb64,265077384,0,0x0,8
tick,0x7ffad1f6fb64,265093395,0,0x0,8
tick,0x7ffad1f6fb64,265108435,0,0x0,8
tick,0x7ffad1f6fb64,265123441,0,0x0,8
tick,0x7ffad1f6fb64,265139443,0,0x0,8
tick,0x7ffad1f6fb64,265154411,0,0x0,8
tick,0x7ffad1f6fb64,265169451,0,0x0,8
tick,0x7ffad1f6fb64,265185453,0,0x0,8
tick,0x7ffad1f6fb64,265201467,0,0x0,8
tick,0x7ffad1f6fb64,265217494,0,0x0,8
tick,0x7ffad1f6fb64,265232484,0,0x0,8
tick,0x7ffad1f6fb64,265248501,0,0x0,8
tick,0x7ffad1f6fb64,265263560,0,0x0,8
tick,0x7ffad1f6fb64,265278534,0,0x0,8
tick,0x7ffad1f6fb64,265294544,0,0x0,8
tick,0x7ffad1f6fb64,265310570,0,0x0,8
tick,0x7ffad1f6fb64,265325587,0,0x0,8
tick,0x7ffad1f6fb64,265340585,0,0x0,8
tick,0x7ffad1f6fb64,265356618,0,0x0,8
tick,0x7ffad1f6fb64,265372643,0,0x0,8
tick,0x7ffad1f6fb64,265387674,0,0x0,8
tick,0x7ffad1f6fb64,265403686,0,0x0,8
tick,0x7ffad1f6fb64,265419678,0,0x0,8
tick,0x7ffad1f6fb64,265434690,0,0x0,8
tick,0x7ffad1f6fb64,265449713,0,0x0,8
tick,0x7ffad1f6fb64,265466138,0,0x0,8
tick,0x7ffad1f6fb64,265480847,0,0x0,8
tick,0x7ffad1f6fb64,265495746,0,0x0,8
tick,0x7ffad1f6fb64,265510774,0,0x0,8
tick,0x7ffad1f6fb64,265526768,0,0x0,8
tick,0x7ffad1f6fb64,265542799,0,0x0,8
tick,0x7ffad1f6fb64,265557792,0,0x0,8
tick,0x7ffad1f6fb64,265573814,0,0x0,8
tick,0x7ffad1f6fb64,265589809,0,0x0,8
tick,0x7ffad1f6fb64,265604832,0,0x0,8
tick,0x7ffad1f6fb64,265620846,0,0x0,8
tick,0x7ffad1f6fb64,265636865,0,0x0,8
tick,0x7ffad1f6fb64,265651934,0,0x0,8
tick,0x7ffad1f6fb64,265666903,0,0x0,8
tick,0x7ffad1f6fb64,265681944,0,0x0,8
tick,0x7ffad1f6fb64,265697927,0,0x0,8
tick,0x7ffad1f6fb64,265712997,0,0x0,8
tick,0x7ffad1f6fb64,265728974,0,0x0,8
tick,0x7ffad1f6fb64,265745022,0,0x0,8
tick,0x7ffad1f6fb64,265759976,0,0x0,8
tick,0x7ffad1f6fb64,265775991,0,0x0,8
tick,0x7ffad1f6fb64,265792007,0,0x0,8
tick,0x7ffad1f6fb64,265808018,0,0x0,8
tick,0x7ffad1f6fb64,265824038,0,0x0,8
tick,0x7ffad1f6fb64,265839039,0,0x0,8
tick,0x7ffad1f6fb64,265854054,0,0x0,8
tick,0x7ffad1f6fb64,265870090,0,0x0,8
tick,0x7ffad1f6fb64,265885078,0,0x0,8
tick,0x7ffad1f6fb64,265901119,0,0x0,8
tick,0x7ffad1f6fb64,265916140,0,0x0,8
tick,0x7ffad1f6fb64,265931154,0,0x0,8
tick,0x7ffad1f6fb64,265946127,0,0x0,8
tick,0x7ffad1f6fb64,265961151,0,0x0,8
tick,0x7ffad1f6fb64,265977221,0,0x0,8
tick,0x7ffad1f6fb64,265993203,0,0x0,8
tick,0x7ffad1f6fb64,266008219,0,0x0,8
tick,0x7ffad1f6fb64,266024272,0,0x0,8
tick,0x7ffad1f6fb64,266039230,0,0x0,8
tick,0x7ffad1f6fb64,266054231,0,0x0,8
tick,0x7ffad1f6fb64,266070291,0,0x0,8
tick,0x7ffad1f6fb64,266086287,0,0x0,8
tick,0x7ffad1f6fb64,266101281,0,0x0,8
tick,0x7ffad1f6fb64,266117339,0,0x0,8
tick,0x7ffad1f6fb64,266132323,0,0x0,8
tick,0x7ffad1f6fb64,266147325,0,0x0,8
tick,0x7ffad1f6fb64,266162339,0,0x0,8
tick,0x7ffad1f6fb64,266177355,0,0x0,8
tick,0x7ffad1f6fb64,266192370,0,0x0,8
tick,0x7ffad1f6fb64,266208378,0,0x0,8
tick,0x7ffad1f6fb64,266224392,0,0x0,8
tick,0x7ffad1f6fb64,266240437,0,0x0,8
tick,0x7ffad1f6fb64,266255425,0,0x0,8
tick,0x7ffad1f6fb64,266270442,0,0x0,8
tick,0x7ffad1f6fb64,266285463,0,0x0,8
tick,0x7ffad1f6fb64,266300606,0,0x0,8
tick,0x7ffad1f6fb64,266316497,0,0x0,8
tick,0x7ffad1f6fb64,266331575,0,0x0,8
tick,0x7ffad1f6fb64,266347534,0,0x0,8
tick,0x7ffad1f6fb64,266362526,0,0x0,8
tick,0x7ffad1f6fb64,266377531,0,0x0,8
tick,0x7ffad1f6fb64,266393589,0,0x0,8
tick,0x7ffad1f6fb64,266409674,0,0x0,8
tick,0x7ffad1f6fb64,266425586,0,0x0,8
tick,0x7ffad1f6fb64,266440586,0,0x0,8
tick,0x7ffad1f6fb64,266456623,0,0x0,8
tick,0x7ffad1f6fb64,266472641,0,0x0,8
tick,0x7ffad1f6fb64,266487672,0,0x0,8
tick,0x7ffad1f6fb64,266502644,0,0x0,8
tick,0x7ffad1f6fb64,266517711,0,0x0,8
tick,0x7ffad1f6fb64,266533689,0,0x0,8
tick,0x7ffad1f6fb64,266549685,0,0x0,8
tick,0x7ffad1f6fb64,266565711,0,0x0,8
tick,0x7ffad1f6fb64,266580773,0,0x0,8
tick,0x7ffad1f6fb64,266595732,0,0x0,8
tick,0x7ffad1f6fb64,266611733,0,0x0,8
tick,0x7ffad1f6fb64,266627784,0,0x0,8
tick,0x7ffad1f6fb64,266643805,0,0x0,8
tick,0x7ffad1f6fb64,266659782,0,0x0,8
tick,0x7ffad1f6fb64,266674798,0,0x0,8
tick,0x7ffad1f6fb64,266689892,0,0x0,8
tick,0x7ffad1f6fb64,266704902,0,0x0,8
tick,0x7ffad1f6fb64,266720863,0,0x0,8
tick,0x7ffad1f6fb64,266735934,0,0x0,8
tick,0x7ffad1f6fb64,266751874,0,0x0,8
tick,0x7ffad1f6fb64,266766913,0,0x0,8
tick,0x7ffad1f6fb64,266781904,0,0x0,8
tick,0x7ffad1f6fb64,266796918,0,0x0,8
tick,0x7ffad1f6fb64,266811953,0,0x0,8
tick,0x7ffad1f6fb64,266827960,0,0x0,8
tick,0x7ffad1f6fb64,266843965,0,0x0,8
tick,0x7ffad1f6fb64,266859973,0,0x0,8
tick,0x7ffad1f6fb64,266875997,0,0x0,8
tick,0x7ffad1f6fb64,266892034,0,0x0,8
tick,0x7ffad1f6fb64,266907031,0,0x0,8
tick,0x7ffad1f6fb64,266923074,0,0x0,8
tick,0x7ffad1f6fb64,266939049,0,0x0,8
tick,0x7ffad1f6fb64,266954072,0,0x0,8
tick,0x7ffad1f6fb64,266969103,0,0x0,8
tick,0x7ffad1f6fb64,266985127,0,0x0,8
tick,0x7ffad1f6fb64,267000128,0,0x0,8
tick,0x7ffad1f6fb64,267016107,0,0x0,8
tick,0x7ffad1f6fb64,267032126,0,0x0,8
tick,0x7ffad1f6fb64,267047147,0,0x0,8
tick,0x7ffad1f6fb64,267063213,0,0x0,8
tick,0x7ffad1f6fb64,267078191,0,0x0,8
tick,0x7ffad1f6fb64,267094252,0,0x0,8
tick,0x7ffad1f6fb64,267109197,0,0x0,8
tick,0x7ffad1f6fb64,267125209,0,0x0,8
tick,0x7ffad1f6fb64,267140238,0,0x0,8
tick,0x7ffad1f6fb64,267156242,0,0x0,8
tick,0x7ffad1f6fb64,267172257,0,0x0,8
tick,0x7ffad1f6fb64,267188259,0,0x0,8
tick,0x7ffad1f6fb64,267204285,0,0x0,8
tick,0x7ffad1f6fb64,267220290,0,0x0,8
tick,0x7ffad1f6fb64,267235309,0,0x0,8
tick,0x7ffad1f6fb64,267250332,0,0x0,8
tick,0x7ffad1f6fb64,267266346,0,0x0,8
tick,0x7ffad1f6fb64,267281362,0,0x0,8
tick,0x7ffad1f6fb64,267296378,0,0x0,8
tick,0x7ffad1f6fb64,267312386,0,0x0,8
tick,0x7ffad1f6fb64,267327395,0,0x0,8
tick,0x7ffad1f6fb64,267342399,0,0x0,8
tick,0x7ffad1f6fb64,267358431,0,0x0,8
tick,0x7ffad1f6fb64,267374439,0,0x0,8
tick,0x7ffad1f6fb64,267390462,0,0x0,8
tick,0x7ffad1f6fb64,267406477,0,0x0,8
tick,0x7ffad1f6fb64,267421485,0,0x0,8
tick,0x7ffad1f6fb64,267436685,0,0x0,8
tick,0x7ffad1f6fb64,267452514,0,0x0,8
tick,0x7ffad1f6fb64,267468514,0,0x0,8
tick,0x7ffad1f6fb64,267484530,0,0x0,8
tick,0x7ffad1f6fb64,267499557,0,0x0,8
tick,0x7ffad1f6fb64,267514563,0,0x0,8
tick,0x7ffad1f6fb64,267530596,0,0x0,8
tick,0x7ffad1f6fb64,267546588,0,0x0,8
tick,0x7ffad1f6fb64,267561607,0,0x0,8
tick,0x7ffad1f6fb64,267577633,0,0x0,8
tick,0x7ffad1f6fb64,267592664,0,0x0,8
tick,0x7ffad1f6fb64,267607673,0,0x0,8
tick,0x7ffad1f6fb64,267623669,0,0x0,8
tick,0x7ffad1f6fb64,267639753,0,0x0,8
tick,0x7ffad1f6fb64,267654701,0,0x0,8
tick,0x7ffad1f6fb64,267669721,0,0x0,8
tick,0x7ffad1f6fb64,267685717,0,0x0,8
tick,0x7ffad1f6fb64,267701745,0,0x0,8
tick,0x7ffad1f6fb64,267717764,0,0x0,8
tick,0x7ffad1f6fb64,267732760,0,0x0,8
tick,0x7ffad1f6fb64,267748781,0,0x0,8
tick,0x7ffad1f6fb64,267763803,0,0x0,8
tick,0x7ffad1f6fb64,267778796,0,0x0,8
tick,0x7ffad1f6fb64,267793821,0,0x0,8
tick,0x7ffad1f6fb64,267808831,0,0x0,8
tick,0x7ffad1f6fb64,267824856,0,0x0,8
tick,0x7ffad1f6fb64,267839876,0,0x0,8
tick,0x7ffad1f6fb64,267855873,0,0x0,8
tick,0x7ffad1f6fb64,267871902,0,0x0,8
tick,0x7ffad1f6fb64,267886903,0,0x0,8
tick,0x7ffad1f6fb64,267902930,0,0x0,8
tick,0x7ffad1f6fb64,267918934,0,0x0,8
tick,0x7ffad1f6fb64,267933964,0,0x0,8
tick,0x7ffad1f6fb64,267950143,0,0x0,8
tick,0x7ffad1f6fb64,267965992,0,0x0,8
tick,0x7ffad1f6fb64,267981015,0,0x0,8
tick,0x7ffad1f6fb64,267996010,0,0x0,8
tick,0x7ffad1f6fb64,268011025,0,0x0,8
tick,0x7ffad1f6fb64,268026055,0,0x0,8
tick,0x7ffad1f6fb64,268041083,0,0x0,8
tick,0x7ffad1f6fb64,268056067,0,0x0,8
tick,0x7ffad1f6fb64,268072082,0,0x0,8
tick,0x7ffad1f6fb64,268088096,0,0x0,8
tick,0x7ffad1f6fb64,268103137,0,0x0,8
tick,0x7ffad1f6fb64,268119167,0,0x0,8
tick,0x7ffad1f6fb64,268135131,0,0x0,8
tick,0x7ffad1f6fb64,268150164,0,0x0,8
tick,0x7ffad1f6fb64,268166159,0,0x0,8
tick,0x7ffad1f6fb64,268181175,0,0x0,8
tick,0x7ffad1f6fb64,268197216,0,0x0,8
tick,0x7ffad1f6fb64,268213213,0,0x0,8
tick,0x7ffad1f6fb64,268228222,0,0x0,8
tick,0x7ffad1f6fb64,268244241,0,0x0,8
tick,0x7ffad1f6fb64,268260276,0,0x0,8
tick,0x7ffad1f6fb64,268275302,0,0x0,8
tick,0x7ffad1f6fb64,268291279,0,0x0,8
tick,0x7ffad1f6fb64,268306302,0,0x0,8
tick,0x7ffad1f6fb64,268321313,0,0x0,8
tick,0x7ffad1f6fb64,268337321,0,0x0,8
tick,0x7ffad1f6fb64,268353367,0,0x0,8
tick,0x7ffad1f6fb64,268369382,0,0x0,8
tick,0x7ffad1f6fb64,268384402,0,0x0,8
tick,0x7ffad1f6fb64,268399393,0,0x0,8
tick,0x7ffad1f6fb64,268415392,0,0x0,8
tick,0x7ffad1f6fb64,268431399,0,0x0,8
tick,0x7ffad1f6fb64,268446443,0,0x0,8
tick,0x7ffad1f6fb64,268462450,0,0x0,8
tick,0x7ffad1f6fb64,268477452,0,0x0,8
tick,0x7ffad1f6fb64,268493461,0,0x0,8
tick,0x7ffad1f6fb64,268509471,0,0x0,8
tick,0x7ffad1f6fb64,268524496,0,0x0,8
tick,0x7ffad1f6fb64,268539524,0,0x0,8
tick,0x7ffad1f6fb64,268554496,0,0x0,8
tick,0x7ffad1f6fb64,268570581,0,0x0,8
tick,0x7ffad1f6fb64,268585576,0,0x0,8
tick,0x7ffad1f6fb64,268600576,0,0x0,8
tick,0x7ffad1f6fb64,268616637,0,0x0,8
tick,0x7ffad1f6fb64,268632606,0,0x0,8
tick,0x7ffad1f6fb64,268647617,0,0x0,8
tick,0x7ffad1f6fb64,268662612,0,0x0,8
tick,0x7ffad1f6fb64,268678706,0,0x0,8
tick,0x7ffad1f6fb64,268694671,0,0x0,8
tick,0x7ffad1f6fb64,268709692,0,0x0,8
tick,0x7ffad1f6fb64,268724679,0,0x0,8
tick,0x7ffad1f6fb64,268739687,0,0x0,8
tick,0x7ffad1f6fb64,268754700,0,0x0,8
tick,0x7ffad1f6fb64,268770735,0,0x0,8
tick,0x7ffad1f6fb64,268785737,0,0x0,8
tick,0x7ffad1f6fb64,268800745,0,0x0,8
tick,0x7ffad1f6fb64,268816765,0,0x0,8
tick,0x7ffad1f6fb64,268832788,0,0x0,8
tick,0x7ffad1f6fb64,268848793,0,0x0,8
tick,0x7ffad1f6fb64,268864852,0,0x0,8
tick,0x7ffad1f6fb64,268879829,0,0x0,8
tick,0x7ffad1f6fb64,268894845,0,0x0,8
tick,0x7ffad1f6fb64,268910857,0,0x0,8
tick,0x7ffad1f6fb64,268926853,0,0x0,8
tick,0x7ffad1f6fb64,268942864,0,0x0,8
tick,0x7ffad1f6fb64,268957904,0,0x0,8
tick,0x7ffad1f6fb64,268973916,0,0x0,8
tick,0x7ffad1f6fb64,268989921,0,0x0,8
tick,0x7ffad1f6fb64,269005934,0,0x0,8
tick,0x7ffad1f6fb64,269020962,0,0x0,8
tick,0x7ffad1f6fb64,269036962,0,0x0,8
tick,0x7ffad1f6fb64,269052979,0,0x0,8
tick,0x7ffad1f6fb64,269068000,0,0x0,8
tick,0x7ffad1f6fb64,269083060,0,0x0,8
tick,0x7ffad1f6fb64,269098024,0,0x0,8
tick,0x7ffad1f6fb64,269114031,0,0x0,8
tick,0x7ffad1f6fb64,269129084,0,0x0,8
tick,0x7ffad1f6fb64,269144082,0,0x0,8
tick,0x7ffad1f6fb64,269160103,0,0x0,8
tick,0x7ffad1f6fb64,269175094,0,0x0,8
tick,0x7ffad1f6fb64,269191124,0,0x0,8
tick,0x7ffad1f6fb64,269206111,0,0x0,8
tick,0x7ffad1f6fb64,269221122,0,0x0,8
tick,0x7ffad1f6fb64,269237280,0,0x0,8
tick,0x7ffad1f6fb64,269253173,0,0x0,8
tick,0x7ffad1f6fb64,269268191,0,0x0,8
tick,0x7ffad1f6fb64,269284195,0,0x0,8
tick,0x7ffad1f6fb64,269299210,0,0x0,8
tick,0x7ffad1f6fb64,269315203,0,0x0,8
tick,0x7ffad1f6fb64,269331270,0,0x0,8
tick,0x7ffad1f6fb64,269347279,0,0x0,8
tick,0x7ffad1f6fb64,269363257,0,0x0,8
tick,0x7ffad1f6fb64,269378288,0,0x0,8
tick,0x7ffad1f6fb64,269394277,0,0x0,8
tick,0x7ffad1f6fb64,269409342,0,0x0,8
tick,0x7ffad1f6fb64,269424333,0,0x0,8
tick,0x7ffad1f6fb64,269440340,0,0x0,8
tick,0x7ffad1f6fb64,269455370,0,0x0,8
tick,0x7ffad1f6fb64,269470416,0,0x0,8
tick,0x7ffad1f6fb64,269486408,0,0x0,8
tick,0x7ffad1f6fb64,269502446,0,0x0,8
tick,0x7ffad1f6fb64,269517577,0,0x0,8
tick,0x7ffad1f6fb64,269533410,0,0x0,8
tick,0x7ffad1f6fb64,269549405,0,0x0,8
tick,0x7ffad1f6fb64,269564452,0,0x0,8
tick,0x7ffad1f6fb64,269579474,0,0x0,8
tick,0x7ffad1f6fb64,269595459,0,0x0,8
tick,0x7ffad1f6fb64,269611500,0,0x0,8
tick,0x7ffad1f6fb64,269627512,0,0x0,8
tick,0x7ffad1f6fb64,269642523,0,0x0,8
tick,0x7ffad1f6fb64,269657540,0,0x0,8
tick,0x7ffad1f6fb64,269672538,0,0x0,8
tick,0x7ffad1f6fb64,269688551,0,0x0,8
tick,0x7ffad1f6fb64,269703564,0,0x0,8
tick,0x7ffad1f6fb64,269719575,0,0x0,8
tick,0x7ffad1f6fb64,269735584,0,0x0,8
tick,0x7ffad1f6fb64,269751596,0,0x0,8
tick,0x7ffad1f6fb64,269766635,0,0x0,8
tick,0x7ffad1f6fb64,269781624,0,0x0,8
tick,0x7ffad1f6fb64,269797644,0,0x0,8
tick,0x7ffad1f6fb64,269812696,0,0x0,8
tick,0x7ffad1f6fb64,269828691,0,0x0,8
tick,0x7ffad1f6fb64,269843773,0,0x0,8
tick,0x7ffad1f6fb64,269859708,0,0x0,8
tick,0x7ffad1f6fb64,269875732,0,0x0,8
tick,0x7ffad1f6fb64,269891786,0,0x0,8
tick,0x7ffad1f6fb64,269907761,0,0x0,8
tick,0x7ffad1f6fb64,269923791,0,0x0,8
tick,0x7ffad1f6fb64,269938841,0,0x0,8
tick,0x7ffad1f6fb64,269954789,0,0x0,8
tick,0x7ffad1f6fb64,269969831,0,0x0,8
tick,0x7ffad1f6fb64,269984863,0,0x0,8
tick,0x7ffad1f6fb64,269999898,0,0x0,8
tick,0x7ffad1f6fb64,270015872,0,0x0,8
tick,0x7ffad1f6fb64,270030877,0,0x0,8
tick,0x7ffad1f6fb64,270046883,0,0x0,8
tick,0x7ffad1f6fb64,270062894,0,0x0,8
tick,0x7ffad1f6fb64,270078951,0,0x0,8
tick,0x7ffad1f6fb64,270094959,0,0x0,8
tick,0x7ffad1f6fb64,270109957,0,0x0,8
tick,0x7ffad1f6fb64,270125966,0,0x0,8
tick,0x7ffad1f6fb64,270140967,0,0x0,8
tick,0x7ffad1f6fb64,270156999,0,0x0,8
tick,0x7ffad1f6fb64,270172052,0,0x0,8
tick,0x7ffad1f6fb64,270188014,0,0x0,8
tick,0x7ffad1f6fb64,270203022,0,0x0,8
tick,0x7ffad1f6fb64,270219044,0,0x0,8
tick,0x7ffad1f6fb64,270235050,0,0x0,8
tick,0x7ffad1f6fb64,270250060,0,0x0,8
tick,0x7ffad1f6fb64,270266104,0,0x0,8
tick,0x7ffad1f6fb64,270281102,0,0x0,8
tick,0x7ffad1f6fb64,270297085,0,0x0,8
tick,0x7ffad1f6fb64,270313117,0,0x0,8
tick,0x7ffad1f6fb64,270329150,0,0x0,8
tick,0x7ffad1f6fb64,270345156,0,0x0,8
tick,0x7ffad1f6fb64,270360147,0,0x0,8
tick,0x7ffad1f6fb64,270375174,0,0x0,8
tick,0x7ffad1f6fb64,270390186,0,0x0,8
tick,0x7ffad1f6fb64,270406185,0,0x0,8
tick,0x7ffad1f6fb64,270421206,0,0x0,8
tick,0x7ffad1f6fb64,270436268,0,0x0,8
tick,0x7ffad1f6fb64,270452351,0,0x0,8
tick,0x7ffad1f6fb64,270468254,0,0x0,8
tick,0x7ffad1f6fb64,270484278,0,0x0,8
tick,0x7ffad1f6fb64,270499295,0,0x0,8
tick,0x7ffad1f6fb64,270514297,0,0x0,8
tick,0x7ffad1f6fb64,270530298,0,0x0,8
tick,0x7ffad1f6fb64,270546376,0,0x0,8
tick,0x7ffad1f6fb64,270562351,0,0x0,8
tick,0x7ffad1f6fb64,270577359,0,0x0,8
tick,0x7ffad1f6fb64,270593379,0,0x0,8
tick,0x7ffad1f6fb64,270609390,0,0x0,8
tick,0x7ffad1f6fb64,270624452,0,0x0,8
tick,0x7ffad1f6fb64,270639428,0,0x0,8
tick,0x7ffad1f6fb64,270655431,0,0x0,8
tick,0x7ffad1f6fb64,270670445,0,0x0,8
tick,0x7ffad1f6fb64,270686567,0,0x0,8
tick,0x7ffad1f6fb64,270701482,0,0x0,8
tick,0x7ffad1f6fb64,270717484,0,0x0,8
tick,0x7ffad1f6fb64,270733526,0,0x0,8
tick,0x7ffad1f6fb64,270749525,0,0x0,8
tick,0x7ffad1f6fb64,270764553,0,0x0,8
tick,0x7ffad1f6fb64,270779550,0,0x0,8
tick,0x7ffad1f6fb64,270795558,0,0x0,8
tick,0x7ffad1f6fb64,270811563,0,0x0,8
tick,0x7ffad1f6fb64,270827596,0,0x0,8
tick,0x7ffad1f6fb64,270843601,0,0x0,8
tick,0x7ffad1f6fb64,270858617,0,0x0,8
tick,0x7ffad1f6fb64,270873675,0,0x0,8
tick,0x7ffad1f6fb64,270889648,0,0x0,8
tick,0x7ffad1f6fb64,270905712,0,0x0,8
tick,0x7ffad1f6fb64,270920711,0,0x0,8
tick,0x7ffad1f6fb64,270935718,0,0x0,8
tick,0x7ffad1f6fb64,270950735,0,0x0,8
tick,0x7ffad1f6fb64,270966720,0,0x0,8
tick,0x7ffad1f6fb64,270981749,0,0x0,8
tick,0x7ffad1f6fb64,270997958,0,0x0,8
tick,0x7ffad1f6fb64,271013787,0,0x0,8
tick,0x7ffad1f6fb64,271029797,0,0x0,8
tick,0x7ffad1f6fb64,271044818,0,0x0,8
tick,0x7ffad1f6fb64,271060811,0,0x0,8
tick,0x7ffad1f6fb64,271075853,0,0x0,8
tick,0x7ffad1f6fb64,271091865,0,0x0,8
tick,0x7ffad1f6fb64,271107857,0,0x0,8
tick,0x7ffad1f6fb64,271123913,0,0x0,8
tick,0x7ffad1f6fb64,271138885,0,0x0,8
tick,0x7ffad1f6fb64,271153900,0,0x0,8
tick,0x7ffad1f6fb64,271169906,0,0x0,8
tick,0x7ffad1f6fb64,271184952,0,0x0,8
tick,0x7ffad1f6fb64,271199986,0,0x0,8
tick,0x7ffad1f6fb64,271214941,0,0x0,8
tick,0x7ffad1f6fb64,271230963,0,0x0,8
tick,0x7ffad1f6fb64,271246990,0,0x0,8
tick,0x7ffad1f6fb64,271262994,0,0x0,8
tick,0x7ffad1f6fb64,271278055,0,0x0,8
tick,0x7ffad1f6fb64,271294042,0,0x0,8
tick,0x7ffad1f6fb64,271310051,0,0x0,8
tick,0x7ffad1f6fb64,271326051,0,0x0,8
tick,0x7ffad1f6fb64,271341062,0,0x0,8
tick,0x7ffad1f6fb64,271356071,0,0x0,8
tick,0x7ffad1f6fb64,271372088,0,0x0,8
tick,0x7ffad1f6fb64,271388113,0,0x0,8
tick,0x7ffad1f6fb64,271404122,0,0x0,8
tick,0x7ffad1f6fb64,271420121,0,0x0,8
tick,0x7ffad1f6fb64,271435140,0,0x0,8
tick,0x7ffad1f6fb64,271450161,0,0x0,8
tick,0x7ffad1f6fb64,271466167,0,0x0,8
tick,0x7ffad1f6fb64,271481168,0,0x0,8
tick,0x7ffad1f6fb64,271497185,0,0x0,8
tick,0x7ffad1f6fb64,271513207,0,0x0,8
tick,0x7ffad1f6fb64,271528230,0,0x0,8
tick,0x7ffad1f6fb64,271543287,0,0x0,8
tick,0x7ffad1f6fb64,271559262,0,0x0,8
tick,0x7ffad1f6fb64,271575269,0,0x0,8
tick,0x7ffad1f6fb64,271591262,0,0x0,8
tick,0x7ffad1f6fb64,271607292,0,0x0,8
tick,0x7ffad1f6fb64,271622323,0,0x0,8
tick,0x7ffad1f6fb64,271637352,0,0x0,8
tick,0x7ffad1f6fb64,271652389,0,0x0,8
tick,0x7ffad1f6fb64,271668357,0,0x0,8
tick,0x7ffad1f6fb64,271684383,0,0x0,8
tick,0x7ffad1f6fb64,271699401,0,0x0,8
tick,0x7ffad1f6fb64,271714397,0,0x0,8
tick,0x7ffad1f6fb64,271730406,0,0x0,8
tick,0x7ffad1f6fb64,271746423,0,0x0,8
tick,0x7ffad1f6fb64,271761442,0,0x0,8
tick,0x7ffad1f6fb64,271777444,0,0x0,8
tick,0x7ffad1f6fb64,271793469,0,0x0,8
tick,0x7ffad1f6fb64,271808478,0,0x0,8
tick,0x7ffad1f6fb64,271823476,0,0x0,8
tick,0x7ffad1f6fb64,271839544,0,0x0,8
tick,0x7ffad1f6fb64,271854558,0,0x0,8
tick,0x7ffad1f6fb64,271870545,0,0x0,8
tick,0x7ffad1f6fb64,271886557,0,0x0,8
tick,0x7ffad1f6fb64,271901615,0,0x0,8
tick,0x7ffad1f6fb64,271916598,0,0x0,8
tick,0x7ffad1f6fb64,271932584,0,0x0,8
tick,0x7ffad1f6fb64,271948625,0,0x0,8
tick,0x7ffad1f6fb64,271963637,0,0x0,8
tick,0x7ffad1f6fb64,271978627,0,0x0,8
tick,0x7ffad1f6fb64,271994662,0,0x0,8
tick,0x7ffad1f6fb64,272010663,0,0x0,8
tick,0x7ffad1f6fb64,272025663,0,0x0,8
tick,0x7ffad1f6fb64,272040689,0,0x0,8
tick,0x7ffad1f6fb64,272055723,0,0x0,8
tick,0x7ffad1f6fb64,272071741,0,0x0,8
tick,0x7ffad1f6fb64,272087742,0,0x0,8
tick,0x7ffad1f6fb64,272102747,0,0x0,8
tick,0x7ffad1f6fb64,272117761,0,0x0,8
tick,0x7ffad1f6fb64,272133779,0,0x0,8
tick,0x7ffad1f6fb64,272148788,0,0x0,8
tick,0x7ffad1f6fb64,272164795,0,0x0,8
tick,0x7ffad1f6fb64,272179826,0,0x0,8
tick,0x7ffad1f6fb64,272194829,0,0x0,8
tick,0x7ffad1f6fb64,272210856,0,0x0,8
tick,0x7ffad1f6fb64,272226915,0,0x0,8
tick,0x7ffad1f6fb64,272242872,0,0x0,8
tick,0x7ffad1f6fb64,272257887,0,0x0,8
tick,0x7ffad1f6fb64,272273899,0,0x0,8
tick,0x7ffad1f6fb64,272289927,0,0x0,8
tick,0x7ffad1f6fb64,272305930,0,0x0,8
tick,0x7ffad1f6fb64,272320950,0,0x0,8
tick,0x7ffad1f6fb64,272336961,0,0x0,8
tick,0x7ffad1f6fb64,272351973,0,0x0,8
tick,0x7ffad1f6fb64,272367015,0,0x0,8
tick,0x7ffad1f6fb64,272383000,0,0x0,8
tick,0x7ffad1f6fb64,272398039,0,0x0,8
tick,0x7ffad1f6fb64,272414048,0,0x0,8
tick,0x7ffad1f6fb64,272430056,0,0x0,8
tick,0x7ffad1f6fb64,272446071,0,0x0,8
tick,0x7ffad1f6fb64,272461091,0,0x0,8
tick,0x7ffad1f6fb64,272476108,0,0x0,8
tick,0x7ffad1f6fb64,272491118,0,0x0,8
tick,0x7ffad1f6fb64,272506133,0,0x0,8
tick,0x7ffad1f6fb64,272521125,0,0x0,8
tick,0x7ffad1f6fb64,272536140,0,0x0,8
tick,0x7ffad1f6fb64,272551139,0,0x0,8
tick,0x7ffad1f6fb64,272566180,0,0x0,8
tick,0x7ffad1f6fb64,272581193,0,0x0,8
tick,0x7ffad1f6fb64,272596203,0,0x0,8
tick,0x7ffad1f6fb64,272611263,0,0x0,8
tick,0x7ffad1f6fb64,272627219,0,0x0,8
tick,0x7ffad1f6fb64,272643261,0,0x0,8
tick,0x7ffad1f6fb64,272659263,0,0x0,8
tick,0x7ffad1f6fb64,272675271,0,0x0,8
tick,0x7ffad1f6fb64,272690295,0,0x0,8
tick,0x7ffad1f6fb64,272705314,0,0x0,8
tick,0x7ffad1f6fb64,272720323,0,0x0,8
tick,0x7ffad1f6fb64,272735350,0,0x0,8
tick,0x7ffad1f6fb64,272750348,0,0x0,8
tick,0x7ffad1f6fb64,272766354,0,0x0,8
tick,0x7ffad1f6fb64,272781391,0,0x0,8
tick,0x7ffad1f6fb64,272797392,0,0x0,8
tick,0x7ffad1f6fb64,272813406,0,0x0,8
tick,0x7ffad1f6fb64,272829392,0,0x0,8
tick,0x7ffad1f6fb64,272844406,0,0x0,8
tick,0x7ffad1f6fb64,272859451,0,0x0,8
tick,0x7ffad1f6fb64,272874469,0,0x0,8
tick,0x7ffad1f6fb64,272890455,0,0x0,8
tick,0x7ffad1f6fb64,272906506,0,0x0,8
tick,0x7ffad1f6fb64,272921491,0,0x0,8
tick,0x7ffad1f6fb64,272937522,0,0x0,8
tick,0x7ffad1f6fb64,272953528,0,0x0,8
tick,0x7ffad1f6fb64,272968535,0,0x0,8
tick,0x7ffad1f6fb64,272983556,0,0x0,8
tick,0x7ffad1f6fb64,272999562,0,0x0,8
tick,0x7ffad1f6fb64,273015574,0,0x0,8
tick,0x7ffad1f6fb64,273030582,0,0x0,8
tick,0x7ffad1f6fb64,273045611,0,0x0,8
tick,0x7ffad1f6fb64,273060631,0,0x0,8
tick,0x7ffad1f6fb64,273075653,0,0x0,8
tick,0x7ffad1f6fb64,273091650,0,0x0,8
tick,0x7ffad1f6fb64,273107666,0,0x0,8
tick,0x7ffad1f6fb64,273122691,0,0x0,8
tick,0x7ffad1f6fb64,273137683,0,0x0,8
tick,0x7ffad1f6fb64,273153705,0,0x0,8
tick,0x7ffad1f6fb64,273168717,0,0x0,8
tick,0x7ffad1f6fb64,273183738,0,0x0,8
tick,0x7ffad1f6fb64,273199755,0,0x0,8
tick,0x7ffad1f6fb64,273214758,0,0x0,8
tick,0x7ffad1f6fb64,273229775,0,0x0,8
tick,0x7ffad1f6fb64,273244825,0,0x0,8
tick,0x7ffad1f6fb64,273259827,0,0x0,8
tick,0x7ffad1f6fb64,273274807,0,0x0,8
tick,0x7ffad1f6fb64,273289837,0,0x0,8
tick,0x7ffad1f6fb64,273305846,0,0x0,8
tick,0x7ffad1f6fb64,273320840,0,0x0,8
tick,0x7ffad1f6fb64,273335866,0,0x0,8
tick,0x7ffad1f6fb64,273350882,0,0x0,8
tick,0x7ffad1f6fb64,273366914,0,0x0,8
tick,0x7ffad1f6fb64,273381907,0,0x0,8
tick,0x7ffad1f6fb64,273397933,0,0x0,8
tick,0x7ffad1f6fb64,273413935,0,0x0,8
tick,0x7ffad1f6fb64,273428953,0,0x0,8
tick,0x7ffad1f6fb64,273443973,0,0x0,8
tick,0x7ffad1f6fb64,273458970,0,0x0,8
tick,0x7ffad1f6fb64,273473999,0,0x0,8
tick,0x7ffad1f6fb64,273490008,0,0x0,8
tick,0x7ffad1f6fb64,273505079,0,0x0,8
tick,0x7ffad1f6fb64,273520065,0,0x0,8
tick,0x7ffad1f6fb64,273535055,0,0x0,8
tick,0x7ffad1f6fb64,273550059,0,0x0,8
tick,0x7ffad1f6fb64,273566092,0,0x0,8
tick,0x7ffad1f6fb64,273581120,0,0x0,8
tick,0x7ffad1f6fb64,273597111,0,0x0,8
tick,0x7ffad1f6fb64,273612201,0,0x0,8
tick,0x7ffad1f6fb64,273628131,0,0x0,8
tick,0x7ffad1f6fb64,273644153,0,0x0,8
tick,0x7ffad1f6fb64,273660184,0,0x0,8
tick,0x7ffad1f6fb64,273675174,0,0x0,8
tick,0x7ffad1f6fb64,273691206,0,0x0,8
tick,0x7ffad1f6fb64,273706210,0,0x0,8
tick,0x7ffad1f6fb64,273721213,0,0x0,8
tick,0x7ffad1f6fb64,273737232,0,0x0,8
tick,0x7ffad1f6fb64,273752255,0,0x0,8
tick,0x7ffad1f6fb64,273768257,0,0x0,8
tick,0x7ffad1f6fb64,273784279,0,0x0,8
tick,0x7ffad1f6fb64,273799301,0,0x0,8
tick,0x7ffad1f6fb64,273814295,0,0x0,8
tick,0x7ffad1f6fb64,273830318,0,0x0,8
tick,0x7ffad1f6fb64,273845342,0,0x0,8
tick,0x7ffad1f6fb64,273861342,0,0x0,8
tick,0x7ffad1f6fb64,273877363,0,0x0,8
tick,0x7ffad1f6fb64,273893380,0,0x0,8
tick,0x7ffad1f6fb64,273909398,0,0x0,8
tick,0x7ffad1f6fb64,273924395,0,0x0,8
tick,0x7ffad1f6fb64,273940417,0,0x0,8
tick,0x7ffad1f6fb64,273956450,0,0x0,8
tick,0x7ffad1f6fb64,273972484,0,0x0,8
tick,0x7ffad1f6fb64,273987475,0,0x0,8
tick,0x7ffad1f6fb64,274003479,0,0x0,8
tick,0x7ffad1f6fb64,274019507,0,0x0,8
tick,0x7ffad1f6fb64,274034500,0,0x0,8
tick,0x7ffad1f6fb64,274049508,0,0x0,8
tick,0x7ffad1f6fb64,274065673,0,0x0,8
tick,0x7ffad1f6fb64,274080531,0,0x0,8
tick,0x7ffad1f6fb64,274095587,0,0x0,8
tick,0x7ffad1f6fb64,274111567,0,0x0,8
tick,0x7ffad1f6fb64,274127598,0,0x0,8
tick,0x7ffad1f6fb64,274143600,0,0x0,8
tick,0x7ffad1f6fb64,274159616,0,0x0,8
tick,0x7ffad1f6fb64,274174637,0,0x0,8
tick,0x7ffad1f6fb64,274190638,0,0x0,8
tick,0x7ffad1f6fb64,274206660,0,0x0,8
tick,0x7ffad1f6fb64,274221679,0,0x0,8
tick,0x7ffad1f6fb64,274237704,0,0x0,8
tick,0x7ffad1f6fb64,274253717,0,0x0,8
tick,0x7ffad1f6fb64,274268721,0,0x0,8
tick,0x7ffad1f6fb64,274284742,0,0x0,8
tick,0x7ffad1f6fb64,274299758,0,0x0,8
tick,0x7ffad1f6fb64,274315759,0,0x0,8
tick,0x7ffad1f6fb64,274330784,0,0x0,8
tick,0x7ffad1f6fb64,274346801,0,0x0,8
tick,0x7ffad1f6fb64,274361865,0,0x0,8
tick,0x7ffad1f6fb64,274377812,0,0x0,8
tick,0x7ffad1f6fb64,274393852,0,0x0,8
tick,0x7ffad1f6fb64,274409847,0,0x0,8
tick,0x7ffad1f6fb64,274424852,0,0x0,8
tick,0x7ffad1f6fb64,274439873,0,0x0,8
tick,0x7ffad1f6fb64,274454896,0,0x0,8
tick,0x7ffad1f6fb64,274470902,0,0x0,8
tick,0x7ffad1f6fb64,274486935,0,0x0,8
tick,0x7ffad1f6fb64,274501946,0,0x0,8
tick,0x7ffad1f6fb64,274516956,0,0x0,8
tick,0x7ffad1f6fb64,274532969,0,0x0,8
tick,0x7ffad1f6fb64,274547966,0,0x0,8
tick,0x7ffad1f6fb64,274562988,0,0x0,8
tick,0x7ffad1f6fb64,274578975,0,0x0,8
tick,0x7ffad1f6fb64,274595014,0,0x0,8
tick,0x7ffad1f6fb64,274610043,0,0x0,8
tick,0x7ffad1f6fb64,274626044,0,0x0,8
tick,0x7ffad1f6fb64,274641059,0,0x0,8
tick,0x7ffad1f6fb64,274657091,0,0x0,8
tick,0x7ffad1f6fb64,274672105,0,0x0,8
tick,0x7ffad1f6fb64,274688116,0,0x0,8
tick,0x7ffad1f6fb64,274704120,0,0x0,8
tick,0x7ffad1f6fb64,274719231,0,0x0,8
tick,0x7ffad1f6fb64,274735139,0,0x0,8
tick,0x7ffad1f6fb64,274750155,0,0x0,8
tick,0x7ffad1f6fb64,274766183,0,0x0,8
tick,0x7ffad1f6fb64,274781180,0,0x0,8
tick,0x7ffad1f6fb64,274796207,0,0x0,8
tick,0x7ffad1f6fb64,274811224,0,0x0,8
tick,0x7ffad1f6fb64,274827249,0,0x0,8
tick,0x7ffad1f6fb64,274843238,0,0x0,8
tick,0x7ffad1f6fb64,274859269,0,0x0,8
tick,0x7ffad1f6fb64,274875283,0,0x0,8
tick,0x7ffad1f6fb64,274891282,0,0x0,8
tick,0x7ffad1f6fb64,274907298,0,0x0,8
tick,0x7ffad1f6fb64,274922319,0,0x0,8
tick,0x7ffad1f6fb64,274938366,0,0x0,8
tick,0x7ffad1f6fb64,274954338,0,0x0,8
tick,0x7ffad1f6fb64,274970387,0,0x0,8
tick,0x7ffad1f6fb64,274986374,0,0x0,8
tick,0x7ffad1f6fb64,275001403,0,0x0,8
tick,0x7ffad1f6fb64,275016479,0,0x0,8
tick,0x7ffad1f6fb64,275031422,0,0x0,8
tick,0x7ffad1f6fb64,275047449,0,0x0,8
tick,0x7ffad1f6fb64,275062489,0,0x0,8
tick,0x7ffad1f6fb64,275077486,0,0x0,8
tick,0x7ffad1f6fb64,275092819,0,0x0,8
tick,0x7ffad1f6fb64,275107507,0,0x0,8
tick,0x7ffad1f6fb64,275122524,0,0x0,8
tick,0x7ffad1f6fb64,275137531,0,0x0,8
tick,0x7ffad1f6fb64,275153535,0,0x0,8
tick,0x7ffad1f6fb64,275169548,0,0x0,8
tick,0x7ffad1f6fb64,275185562,0,0x0,8
tick,0x7ffad1f6fb64,275200603,0,0x0,8
tick,0x7ffad1f6fb64,275216625,0,0x0,8
tick,0x7ffad1f6fb64,275231613,0,0x0,8
tick,0x7ffad1f6fb64,275247635,0,0x0,8
tick,0x7ffad1f6fb64,275263655,0,0x0,8
tick,0x7ffad1f6fb64,275279671,0,0x0,8
tick,0x7ffad1f6fb64,275295668,0,0x0,8
tick,0x7ffad1f6fb64,275310671,0,0x0,8
tick,0x7ffad1f6fb64,275325700,0,0x0,8
tick,0x7ffad1f6fb64,275340736,0,0x0,8
tick,0x7ffad1f6fb64,275356748,0,0x0,8
tick,0x7ffad1f6fb64,275372968,0,0x0,8
tick,0x7ffad1f6fb64,275387758,0,0x0,8
tick,0x7ffad1f6fb64,275402783,0,0x0,8
tick,0x7ffad1f6fb64,275418767,0,0x0,8
tick,0x7ffad1f6fb64,275434793,0,0x0,8
tick,0x7ffad1f6fb64,275450857,0,0x0,8
tick,0x7ffad1f6fb64,275466970,0,0x0,8
tick,0x7ffad1f6fb64,275481891,0,0x0,8
tick,0x7ffad1f6fb64,275497859,0,0x0,8
tick,0x7ffad1f6fb64,275513903,0,0x0,8
tick,0x7ffad1f6fb64,275528884,0,0x0,8
tick,0x7ffad1f6fb64,275543940,0,0x0,8
tick,0x7ffad1f6fb64,275559947,0,0x0,8
tick,0x7ffad1f6fb64,275575927,0,0x0,8
tick,0x7ffad1f6fb64,275591939,0,0x0,8
tick,0x7ffad1f6fb64,275606941,0,0x0,8
tick,0x7ffad1f6fb64,275622952,0,0x0,8
tick,0x7ffad1f6fb64,275639010,0,0x0,8
tick,0x7ffad1f6fb64,275654030,0,0x0,8
tick,0x7ffad1f6fb64,275669004,0,0x0,8
tick,0x7ffad1f6fb64,275685009,0,0x0,8
tick,0x7ffad1f6fb64,275701030,0,0x0,8
tick,0x7ffad1f6fb64,275717043,0,0x0,8
tick,0x7ffad1f6fb64,275732039,0,0x0,8
tick,0x7ffad1f6fb64,275748086,0,0x0,8
tick,0x7ffad1f6fb64,275764121,0,0x0,8
tick,0x7ffad1f6fb64,275780104,0,0x0,8
tick,0x7ffad1f6fb64,275796156,0,0x0,8
tick,0x7ffad1f6fb64,275811183,0,0x0,8
tick,0x7ffad1f6fb64,275826282,0,0x0,8
tick,0x7ffad1f6fb64,275842169,0,0x0,8
tick,0x7ffad1f6fb64,275858172,0,0x0,8
tick,0x7ffad1f6fb64,275874200,0,0x0,8
tick,0x7ffad1f6fb64,275890192,0,0x0,8
tick,0x7ffad1f6fb64,275906392,0,0x0,8
tick,0x7ffad1f6fb64,275921276,0,0x0,8
tick,0x7ffad1f6fb64,275937244,0,0x0,8
tick,0x7ffad1f6fb64,275953243,0,0x0,8
tick,0x7ffad1f6fb64,275968282,0,0x0,8
tick,0x7ffad1f6fb64,275984358,0,0x0,8
tick,0x7ffad1f6fb64,276000318,0,0x0,8
tick,0x7ffad1f6fb64,276015316,0,0x0,8
tick,0x7ffad1f6fb64,276031349,0,0x0,8
tick,0x7ffad1f6fb64,276046352,0,0x0,8
tick,0x7ffad1f6fb64,276061375,0,0x0,8
tick,0x7ffad1f6fb64,276076494,0,0x0,8
tick,0x7ffad1f6fb64,276092493,0,0x0,8
tick,0x7ffad1f6fb64,276108423,0,0x0,8
tick,0x7ffad1f6fb64,276123455,0,0x0,8
tick,0x7ffad1f6fb64,276138450,0,0x0,8
tick,0x7ffad1f6fb64,276154482,0,0x0,8
tick,0x7ffad1f6fb64,276170486,0,0x0,8
tick,0x7ffad1f6fb64,276186544,0,0x0,8
tick,0x7ffad1f6fb64,276202487,0,0x0,8
tick,0x7ffad1f6fb64,276217515,0,0x0,8
tick,0x7ffad1f6fb64,276233621,0,0x0,8
tick,0x7ffad1f6fb64,276249532,0,0x0,8
tick,0x7ffad1f6fb64,276264586,0,0x0,8
tick,0x7ffad1f6fb64,276280609,0,0x0,8
tick,0x7ffad1f6fb64,276295587,0,0x0,8
tick,0x7ffad1f6fb64,276310635,0,0x0,8
tick,0x7ffad1f6fb64,276325641,0,0x0,8
tick,0x7ffad1f6fb64,276340689,0,0x0,8
tick,0x7ffad1f6fb64,276355654,0,0x0,8
tick,0x7ffad1f6fb64,276370639,0,0x0,8
tick,0x7ffad1f6fb64,276386680,0,0x0,8
tick,0x7ffad1f6fb64,276402685,0,0x0,8
tick,0x7ffad1f6fb64,276417710,0,0x0,8
tick,0x7ffad1f6fb64,276432771,0,0x0,8
tick,0x7ffad1f6fb64,276448718,0,0x0,8
tick,0x7ffad1f6fb64,276463776,0,0x0,8
tick,0x7ffad1f6fb64,276479928,0,0x0,8
tick,0x7ffad1f6fb64,276495879,0,0x0,8
tick,0x7ffad1f6fb64,276510825,0,0x0,8
tick,0x7ffad1f6fb64,276525841,0,0x0,8
tick,0x7ffad1f6fb64,276540807,0,0x0,8
tick,0x7ffad1f6fb64,276556906,0,0x0,8
tick,0x7ffad1f6fb64,276571825,0,0x0,8
tick,0x7ffad1f6fb64,276587844,0,0x0,8
tick,0x7ffad1f6fb64,276602894,0,0x0,8
tick,0x7ffad1f6fb64,276618902,0,0x0,8
tick,0x7ffad1f6fb64,276634927,0,0x0,8
tick,0x7ffad1f6fb64,276650928,0,0x0,8
tick,0x7ffad1f6fb64,276665953,0,0x0,8
tick,0x7ffad1f6fb64,276681975,0,0x0,8
tick,0x7ffad1f6fb64,276696982,0,0x0,8
tick,0x7ffad1f6fb64,276712966,0,0x0,8
tick,0x7ffad1f6fb64,276729072,0,0x0,8
tick,0x7ffad1f6fb64,276743985,0,0x0,8
tick,0x7ffad1f6fb64,276758977,0,0x0,8
tick,0x7ffad1f6fb64,276775008,0,0x0,8
tick,0x7ffad1f6fb64,276791013,0,0x0,8
tick,0x7ffad1f6fb64,276806054,0,0x0,8
tick,0x7ffad1f6fb64,276821093,0,0x0,8
tick,0x7ffad1f6fb64,276836157,0,0x0,8
tick,0x7ffad1f6fb64,276851086,0,0x0,8
tick,0x7ffad1f6fb64,276866097,0,0x0,8
tick,0x7ffad1f6fb64,276882114,0,0x0,8
tick,0x7ffad1f6fb64,276898151,0,0x0,8
tick,0x7ffad1f6fb64,276914154,0,0x0,8
tick,0x7ffad1f6fb64,276930153,0,0x0,8
tick,0x7ffad1f6fb64,276946170,0,0x0,8
tick,0x7ffad1f6fb64,276961247,0,0x0,8
tick,0x7ffad1f6fb64,276976230,0,0x0,8
tick,0x7ffad1f6fb64,276992235,0,0x0,8
tick,0x7ffad1f6fb64,277008218,0,0x0,8
tick,0x7ffad1f6fb64,277024226,0,0x0,8
tick,0x7ffad1f6fb64,277039270,0,0x0,8
tick,0x7ffad1f6fb64,277055257,0,0x0,8
tick,0x7ffad1f6fb64,277070294,0,0x0,8
tick,0x7ffad1f6fb64,277085317,0,0x0,8
tick,0x7ffad1f6fb64,277101334,0,0x0,8
tick,0x7ffad1f6fb64,277116313,0,0x0,8
tick,0x7ffad1f6fb64,277131331,0,0x0,8
tick,0x7ffad1f6fb64,277147359,0,0x0,8
tick,0x7ffad1f6fb64,277163390,0,0x0,8
tick,0x7ffad1f6fb64,277178392,0,0x0,8
tick,0x7ffad1f6fb64,277193381,0,0x0,8
tick,0x7ffad1f6fb64,277209411,0,0x0,8
tick,0x7ffad1f6fb64,277224398,0,0x0,8
tick,0x7ffad1f6fb64,277239416,0,0x0,8
tick,0x7ffad1f6fb64,277255448,0,0x0,8
tick,0x7ffad1f6fb64,277271484,0,0x0,8
tick,0x7ffad1f6fb64,277287496,0,0x0,8
tick,0x7ffad1f6fb64,277302484,0,0x0,8
tick,0x7ffad1f6fb64,277317498,0,0x0,8
tick,0x7ffad1f6fb64,277333544,0,0x0,8
tick,0x7ffad1f6fb64,277349536,0,0x0,8
tick,0x7ffad1f6fb64,277364575,0,0x0,8
tick,0x7ffad1f6fb64,277379551,0,0x0,8
tick,0x7ffad1f6fb64,277395604,0,0x0,8
tick,0x7ffad1f6fb64,277411642,0,0x0,8
tick,0x7ffad1f6fb64,277427623,0,0x0,8
tick,0x7ffad1f6fb64,277443617,0,0x0,8
tick,0x7ffad1f6fb64,277458659,0,0x0,8
tick,0x7ffad1f6fb64,277473659,0,0x0,8
tick,0x7ffad1f6fb64,277489665,0,0x0,8
tick,0x7ffad1f6fb64,277505745,0,0x0,8
tick,0x7ffad1f6fb64,277520774,0,0x0,8
tick,0x7ffad1f6fb64,277535712,0,0x0,8
tick,0x7ffad1f6fb64,277551686,0,0x0,8
tick,0x7ffad1f6fb64,277566720,0,0x0,8
tick,0x7ffad1f6fb64,277581790,0,0x0,8
tick,0x7ffad1f6fb64,277597757,0,0x0,8
tick,0x7ffad1f6fb64,277613922,0,0x0,8
tick,0x7ffad1f6fb64,277628807,0,0x0,8
tick,0x7ffad1f6fb64,277643803,0,0x0,8
tick,0x7ffad1f6fb64,277658823,0,0x0,8
tick,0x7ffad1f6fb64,277673838,0,0x0,8
tick,0x7ffad1f6fb64,277689849,0,0x0,8
tick,0x7ffad1f6fb64,277705870,0,0x0,8
tick,0x7ffad1f6fb64,277721896,0,0x0,8
tick,0x7ffad1f6fb64,277737890,0,0x0,8
tick,0x7ffad1f6fb64,277752920,0,0x0,8
tick,0x7ffad1f6fb64,277768922,0,0x0,8
tick,0x7ffad1f6fb64,277784921,0,0x0,8
tick,0x7ffad1f6fb64,277800956,0,0x0,8
tick,0x7ffad1f6fb64,277815945,0,0x0,8
tick,0x7ffad1f6fb64,277830977,0,0x0,8
tick,0x7ffad1f6fb64,277846987,0,0x0,8
tick,0x7ffad1f6fb64,277862986,0,0x0,8
tick,0x7ffad1f6fb64,277879009,0,0x0,8
tick,0x7ffad1f6fb64,277894070,0,0x0,8
tick,0x7ffad1f6fb64,277909081,0,0x0,8
tick,0x7ffad1f6fb64,277925073,0,0x0,8
tick,0x7ffad1f6fb64,277940075,0,0x0,8
tick,0x7ffad1f6fb64,277955091,0,0x0,8
tick,0x7ffad1f6fb64,277970085,0,0x0,8
tick,0x7ffad1f6fb64,277986108,0,0x0,8
tick,0x7ffad1f6fb64,278002114,0,0x0,8
tick,0x7ffad1f6fb64,278018137,0,0x0,8
tick,0x7ffad1f6fb64,278034148,0,0x0,8
tick,0x7ffad1f6fb64,278050156,0,0x0,8
tick,0x7ffad1f6fb64,278066161,0,0x0,8
tick,0x7ffad1f6fb64,278081225,0,0x0,8
tick,0x7ffad1f6fb64,278096233,0,0x0,8
tick,0x7ffad1f6fb64,278111210,0,0x0,8
tick,0x7ffad1f6fb64,278127228,0,0x0,8
tick,0x7ffad1f6fb64,278143272,0,0x0,8
tick,0x7ffad1f6fb64,278159308,0,0x0,8
tick,0x7ffad1f6fb64,278175322,0,0x0,8
tick,0x7ffad1f6fb64,278190325,0,0x0,8
tick,0x7ffad1f6fb64,278205400,0,0x0,8
tick,0x7ffad1f6fb64,278220310,0,0x0,8
tick,0x7ffad1f6fb64,278236323,0,0x0,8
tick,0x7ffad1f6fb64,278252345,0,0x0,8
tick,0x7ffad1f6fb64,278267404,0,0x0,8
tick,0x7ffad1f6fb64,278282382,0,0x0,8
tick,0x7ffad1f6fb64,278297372,0,0x0,8
tick,0x7ffad1f6fb64,278313401,0,0x0,8
tick,0x7ffad1f6fb64,278329409,0,0x0,8
tick,0x7ffad1f6fb64,278345432,0,0x0,8
tick,0x7ffad1f6fb64,278361472,0,0x0,8
tick,0x7ffad1f6fb64,278377495,0,0x0,8
tick,0x7ffad1f6fb64,278392497,0,0x0,8
tick,0x7ffad1f6fb64,278407537,0,0x0,8
tick,0x7ffad1f6fb64,278422526,0,0x0,8
tick,0x7ffad1f6fb64,278437533,0,0x0,8
tick,0x7ffad1f6fb64,278453552,0,0x0,8
tick,0x7ffad1f6fb64,278469554,0,0x0,8
tick,0x7ffad1f6fb64,278484587,0,0x0,8
tick,0x7ffad1f6fb64,278499563,0,0x0,8
tick,0x7ffad1f6fb64,278515600,0,0x0,8
tick,0x7ffad1f6fb64,278531593,0,0x0,8
tick,0x7ffad1f6fb64,278547610,0,0x0,8
tick,0x7ffad1f6fb64,278562629,0,0x0,8
tick,0x7ffad1f6fb64,278577667,0,0x0,8
tick,0x7ffad1f6fb64,278593651,0,0x0,8
tick,0x7ffad1f6fb64,278609686,0,0x0,8
tick,0x7ffad1f6fb64,278624687,0,0x0,8
tick,0x7ffad1f6fb64,278639700,0,0x0,8
tick,0x7ffad1f6fb64,278655709,0,0x0,8
tick,0x7ffad1f6fb64,278670712,0,0x0,8
tick,0x7ffad1f6fb64,278685849,0,0x0,8
tick,0x7ffad1f6fb64,278701794,0,0x0,8
tick,0x7ffad1f6fb64,278717849,0,0x0,8
tick,0x7ffad1f6fb64,278732775,0,0x0,8
tick,0x7ffad1f6fb64,278748838,0,0x0,8
tick,0x7ffad1f6fb64,278764814,0,0x0,8
tick,0x7ffad1f6fb64,278779830,0,0x0,8
tick,0x7ffad1f6fb64,278795868,0,0x0,8
tick,0x7ffad1f6fb64,278810871,0,0x0,8
tick,0x7ffad1f6fb64,278826882,0,0x0,8
tick,0x7ffad1f6fb64,278841895,0,0x0,8
tick,0x7ffad1f6fb64,278856907,0,0x0,8
tick,0x7ffad1f6fb64,278871923,0,0x0,8
tick,0x7ffad1f6fb64,278887928,0,0x0,8
tick,0x7ffad1f6fb64,278902935,0,0x0,8
tick,0x7ffad1f6fb64,278918959,0,0x0,8
tick,0x7ffad1f6fb64,278934966,0,0x0,8
tick,0x7ffad1f6fb64,278949988,0,0x0,8
tick,0x7ffad1f6fb64,278966002,0,0x0,8
tick,0x7ffad1f6fb64,278981031,0,0x0,8
tick,0x7ffad1f6fb64,278996042,0,0x0,8
tick,0x7ffad1f6fb64,279011078,0,0x0,8
tick,0x7ffad1f6fb64,279027064,0,0x0,8
tick,0x7ffad1f6fb64,279043080,0,0x0,8
tick,0x7ffad1f6fb64,279058090,0,0x0,8
tick,0x7ffad1f6fb64,279074085,0,0x0,8
tick,0x7ffad1f6fb64,279089114,0,0x0,8
tick,0x7ffad1f6fb64,279105117,0,0x0,8
tick,0x7ffad1f6fb64,279120159,0,0x0,8
tick,0x7ffad1f6fb64,279135185,0,0x0,8
tick,0x7ffad1f6fb64,279150168,0,0x0,8
tick,0x7ffad1f6fb64,279166187,0,0x0,8
tick,0x7ffad1f6fb64,279181228,0,0x0,8
tick,0x7ffad1f6fb64,279197227,0,0x0,8
tick,0x7ffad1f6fb64,279213258,0,0x0,8
tick,0x7ffad1f6fb64,279229283,0,0x0,8
tick,0x7ffad1f6fb64,279245274,0,0x0,8
tick,0x7ffad1f6fb64,279260272,0,0x0,8
tick,0x7ffad1f6fb64,279275310,0,0x0,8
tick,0x7ffad1f6fb64,279291277,0,0x0,8
tick,0x7ffad1f6fb64,279307526,0,0x0,8
tick,0x7ffad1f6fb64,279322400,0,0x0,8
tick,0x7ffad1f6fb64,279337384,0,0x0,8
tick,0x7ffad1f6fb64,279352370,0,0x0,8
tick,0x7ffad1f6fb64,279367393,0,0x0,8
tick,0x7ffad1f6fb64,279382397,0,0x0,8
tick,0x7ffad1f6fb64,279398386,0,0x0,8
tick,0x7ffad1f6fb64,279414485,0,0x0,8
tick,0x7ffad1f6fb64,279430437,0,0x0,8
tick,0x7ffad1f6fb64,279446475,0,0x0,8
tick,0x7ffad1f6fb64,279461507,0,0x0,8
tick,0x7ffad1f6fb64,279477474,0,0x0,8
tick,0x7ffad1f6fb64,279493509,0,0x0,8
tick,0x7ffad1f6fb64,279509528,0,0x0,8
tick,0x7ffad1f6fb64,279525543,0,0x0,8
tick,0x7ffad1f6fb64,279540536,0,0x0,8
tick,0x7ffad1f6fb64,279556556,0,0x0,8
tick,0x7ffad1f6fb64,279571579,0,0x0,8
tick,0x7ffad1f6fb64,279586560,0,0x0,8
tick,0x7ffad1f6fb64,279602601,0,0x0,8
tick,0x7ffad1f6fb64,279617626,0,0x0,8
tick,0x7ffad1f6fb64,279633630,0,0x0,8
tick,0x7ffad1f6fb64,279648632,0,0x0,8
tick,0x7ffad1f6fb64,279663633,0,0x0,8
tick,0x7ffad1f6fb64,279679677,0,0x0,8
tick,0x7ffad1f6fb64,279695892,0,0x0,8
tick,0x7ffad1f6fb64,279710763,0,0x0,8
tick,0x7ffad1f6fb64,279725741,0,0x0,8
tick,0x7ffad1f6fb64,279740727,0,0x0,8
tick,0x7ffad1f6fb64,279755723,0,0x0,8
tick,0x7ffad1f6fb64,279771759,0,0x0,8
tick,0x7ffad1f6fb64,279787902,0,0x0,8
tick,0x7ffad1f6fb64,279802762,0,0x0,8
tick,0x7ffad1f6fb64,279818803,0,0x0,8
tick,0x7ffad1f6fb64,279834819,0,0x0,8
tick,0x7ffad1f6fb64,279849829,0,0x0,8
tick,0x7ffad1f6fb64,279865841,0,0x0,8
tick,0x7ffad1f6fb64,279881862,0,0x0,8
tick,0x7ffad1f6fb64,279896889,0,0x0,8
tick,0x7ffad1f6fb64,279912854,0,0x0,8
tick,0x7ffad1f6fb64,279928874,0,0x0,8
tick,0x7ffad1f6fb64,279944927,0,0x0,8
tick,0x7ffad1f6fb64,279959884,0,0x0,8
tick,0x7ffad1f6fb64,279974899,0,0x0,8
tick,0x7ffad1f6fb64,279989941,0,0x0,8
tick,0x7ffad1f6fb64,280004955,0,0x0,8
tick,0x7ffad1f6fb64,280020950,0,0x0,8
tick,0x7ffad1f6fb64,280036958,0,0x0,8
tick,0x7ffad1f6fb64,280051963,0,0x0,8
tick,0x7ffad1f6fb64,280067996,0,0x0,8
tick,0x7ffad1f6fb64,280084013,0,0x0,8
tick,0x7ffad1f6fb64,280100031,0,0x0,8
tick,0x7ffad1f6fb64,280115092,0,0x0,8
tick,0x7ffad1f6fb64,280131054,0,0x0,8
tick,0x7ffad1f6fb64,280147079,0,0x0,8
tick,0x7ffad1f6fb64,280163095,0,0x0,8
tick,0x7ffad1f6fb64,280178091,0,0x0,8
tick,0x7ffad1f6fb64,280194121,0,0x0,8
tick,0x7ffad1f6fb64,280210131,0,0x0,8
tick,0x7ffad1f6fb64,280226180,0,0x0,8
tick,0x7ffad1f6fb64,280242179,0,0x0,8
tick,0x7ffad1f6fb64,280258168,0,0x0,8
tick,0x7ffad1f6fb64,280274167,0,0x0,8
tick,0x7ffad1f6fb64,280289197,0,0x0,8
tick,0x7ffad1f6fb64,280305234,0,0x0,8
tick,0x7ffad1f6fb64,280320226,0,0x0,8
tick,0x7ffad1f6fb64,280336259,0,0x0,8
tick,0x7ffad1f6fb64,280351256,0,0x0,8
tick,0x7ffad1f6fb64,280367274,0,0x0,8
tick,0x7ffad1f6fb64,280382283,0,0x0,8
tick,0x7ffad1f6fb64,280397325,0,0x0,8
tick,0x7ffad1f6fb64,280412326,0,0x0,8
tick,0x7ffad1f6fb64,280427341,0,0x0,8
tick,0x7ffad1f6fb64,280443368,0,0x0,8
tick,0x7ffad1f6fb64,280459361,0,0x0,8
tick,0x7ffad1f6fb64,280475433,0,0x0,8
tick,0x7ffad1f6fb64,280490394,0,0x0,8
tick,0x7ffad1f6fb64,280506421,0,0x0,8
tick,0x7ffad1f6fb64,280521393,0,0x0,8
tick,0x7ffad1f6fb64,280536409,0,0x0,8
tick,0x7ffad1f6fb64,280551429,0,0x0,8
tick,0x7ffad1f6fb64,280567447,0,0x0,8
tick,0x7ffad1f6fb64,280582469,0,0x0,8
tick,0x7ffad1f6fb64,280597484,0,0x0,8
tick,0x7ffad1f6fb64,280613487,0,0x0,8
tick,0x7ffad1f6fb64,280629528,0,0x0,8
tick,0x7ffad1f6fb64,280644527,0,0x0,8
tick,0x7ffad1f6fb64,280660597,0,0x0,8
tick,0x7ffad1f6fb64,280675540,0,0x0,8
tick,0x7ffad1f6fb64,280690580,0,0x0,8
tick,0x7ffad1f6fb64,280706603,0,0x0,8
tick,0x7ffad1f6fb64,280722614,0,0x0,8
tick,0x7ffad1f6fb64,280737615,0,0x0,8
tick,0x7ffad1f6fb64,280753732,0,0x0,8
tick,0x7ffad1f6fb64,280769651,0,0x0,8
tick,0x7ffad1f6fb64,280785644,0,0x0,8
tick,0x7ffad1f6fb64,280800677,0,0x0,8
tick,0x7ffad1f6fb64,280815691,0,0x0,8
tick,0x7ffad1f6fb64,280831711,0,0x0,8
tick,0x7ffad1f6fb64,280846704,0,0x0,8
tick,0x7ffad1f6fb64,280861740,0,0x0,8
tick,0x7ffad1f6fb64,280877766,0,0x0,8
tick,0x7ffad1f6fb64,280893746,0,0x0,8
tick,0x7ffad1f6fb64,280909761,0,0x0,8
tick,0x7ffad1f6fb64,280925795,0,0x0,8
tick,0x7ffad1f6fb64,280940813,0,0x0,8
tick,0x7ffad1f6fb64,280956810,0,0x0,8
tick,0x7ffad1f6fb64,280972812,0,0x0,8
tick,0x7ffad1f6fb64,280988847,0,0x0,8
tick,0x7ffad1f6fb64,281004856,0,0x0,8
tick,0x7ffad1f6fb64,281019864,0,0x0,8
tick,0x7ffad1f6fb64,281035877,0,0x0,8
tick,0x7ffad1f6fb64,281050870,0,0x0,8
tick,0x7ffad1f6fb64,281065902,0,0x0,8
tick,0x7ffad1f6fb64,281081932,0,0x0,8
tick,0x7ffad1f6fb64,281097950,0,0x0,8
tick,0x7ffad1f6fb64,281113945,0,0x0,8
tick,0x7ffad1f6fb64,281128976,0,0x0,8
tick,0x7ffad1f6fb64,281144997,0,0x0,8
tick,0x7ffad1f6fb64,281161011,0,0x0,8
tick,0x7ffad1f6fb64,281176023,0,0x0,8
tick,0x7ffad1f6fb64,281191040,0,0x0,8
tick,0x7ffad1f6fb64,281206053,0,0x0,8
tick,0x7ffad1f6fb64,281221094,0,0x0,8
tick,0x7ffad1f6fb64,281237095,0,0x0,8
tick,0x7ffad1f6fb64,281252093,0,0x0,8
tick,0x7ffad1f6fb64,281268328,0,0x0,8
tick,0x7ffad1f6fb64,281284114,0,0x0,8
tick,0x7ffad1f6fb64,281299113,0,0x0,8
tick,0x7ffad1f6fb64,281314153,0,0x0,8
tick,0x7ffad1f6fb64,281330154,0,0x0,8
tick,0x7ffad1f6fb64,281346168,0,0x0,8
tick,0x7ffad1f6fb64,281361199,0,0x0,8
tick,0x7ffad1f6fb64,281376211,0,0x0,8
tick,0x7ffad1f6fb64,281392213,0,0x0,8
tick,0x7ffad1f6fb64,281408251,0,0x0,8
tick,0x7ffad1f6fb64,281424238,0,0x0,8
tick,0x7ffad1f6fb64,281440266,0,0x0,8
tick,0x7ffad1f6fb64,281455282,0,0x0,8
tick,0x7ffad1f6fb64,281471291,0,0x0,8
tick,0x7ffad1f6fb64,281487287,0,0x0,8
tick,0x7ffad1f6fb64,281502316,0,0x0,8
tick,0x7ffad1f6fb64,281517328,0,0x0,8
tick,0x7ffad1f6fb64,281533339,0,0x0,8
tick,0x7ffad1f6fb64,281548404,0,0x0,8
tick,0x7ffad1f6fb64,281564376,0,0x0,8
tick,0x7ffad1f6fb64,281580366,0,0x0,8
tick,0x7ffad1f6fb64,281595401,0,0x0,8
tick,0x7ffad1f6fb64,281610403,0,0x0,8
tick,0x7ffad1f6fb64,281625411,0,0x0,8
tick,0x7ffad1f6fb64,281640444,0,0x0,8
tick,0x7ffad1f6fb64,281656470,0,0x0,8
tick,0x7ffad1f6fb64,281672462,0,0x0,8
tick,0x7ffad1f6fb64,281687482,0,0x0,8
tick,0x7ffad1f6fb64,281703478,0,0x0,8
tick,0x7ffad1f6fb64,281719506,0,0x0,8
tick,0x7ffad1f6fb64,281735500,0,0x0,8
tick,0x7ffad1f6fb64,281751535,0,0x0,8
tick,0x7ffad1f6fb64,281766533,0,0x0,8
tick,0x7ffad1f6fb64,281781599,0,0x0,8
tick,0x7ffad1f6fb64,281796560,0,0x0,8
tick,0x7ffad1f6fb64,281811598,0,0x0,8
tick,0x7ffad1f6fb64,281827613,0,0x0,8
tick,0x7ffad1f6fb64,281843634,0,0x0,8
tick,0x7ffad1f6fb64,281859639,0,0x0,8
tick,0x7ffad1f6fb64,281874655,0,0x0,8
tick,0x7ffad1f6fb64,281890671,0,0x0,8
tick,0x7ffad1f6fb64,281906684,0,0x0,8
tick,0x7ffad1f6fb64,281921847,0,0x0,8
tick,0x7ffad1f6fb64,281937708,0,0x0,8
tick,0x7ffad1f6fb64,281953742,0,0x0,8
tick,0x7ffad1f6fb64,281969744,0,0x0,8
tick,0x7ffad1f6fb64,281985735,0,0x0,8
tick,0x7ffad1f6fb64,282001895,0,0x0,8
tick,0x7ffad1f6fb64,282016768,0,0x0,8
tick,0x7ffad1f6fb64,282032788,0,0x0,8
tick,0x7ffad1f6fb64,282047797,0,0x0,8
tick,0x7ffad1f6fb64,282062850,0,0x0,8
tick,0x7ffad1f6fb64,282077838,0,0x0,8
tick,0x7ffad1f6fb64,282093851,0,0x0,8
tick,0x7ffad1f6fb64,282109897,0,0x0,8
tick,0x7ffad1f6fb64,282124903,0,0x0,8
tick,0x7ffad1f6fb64,282139900,0,0x0,8
tick,0x7ffad1f6fb64,282155919,0,0x0,8
tick,0x7ffad1f6fb64,282171926,0,0x0,8
tick,0x7ffad1f6fb64,282186966,0,0x0,8
tick,0x7ffad1f6fb64,282202963,0,0x0,8
tick,0x7ffad1f6fb64,282219001,0,0x0,8
tick,0x7ffad1f6fb64,282233984,0,0x0,8
tick,0x7ffad1f6fb64,282249996,0,0x0,8
tick,0x7ffad1f6fb64,282265015,0,0x0,8
tick,0x7ffad1f6fb64,282280028,0,0x0,8
tick,0x7ffad1f6fb64,282296054,0,0x0,8
tick,0x7ffad1f6fb64,282311044,0,0x0,8
tick,0x7ffad1f6fb64,282327056,0,0x0,8
tick,0x7ffad1f6fb64,282343074,0,0x0,8
tick,0x7ffad1f6fb64,282358072,0,0x0,8
tick,0x7ffad1f6fb64,282374105,0,0x0,8
tick,0x7ffad1f6fb64,282389110,0,0x0,8
tick,0x7ffad1f6fb64,282404148,0,0x0,8
tick,0x7ffad1f6fb64,282420142,0,0x0,8
tick,0x7ffad1f6fb64,282436170,0,0x0,8
tick,0x7ffad1f6fb64,282451180,0,0x0,8
tick,0x7ffad1f6fb64,282466199,0,0x0,8
tick,0x7ffad1f6fb64,282482193,0,0x0,8
tick,0x7ffad1f6fb64,282498214,0,0x0,8
tick,0x7ffad1f6fb64,282514245,0,0x0,8
tick,0x7ffad1f6fb64,282530247,0,0x0,8
tick,0x7ffad1f6fb64,282546262,0,0x0,8
tick,0x7ffad1f6fb64,282561303,0,0x0,8
tick,0x7ffad1f6fb64,282576296,0,0x0,8
tick,0x7ffad1f6fb64,282592343,0,0x0,8
tick,0x7ffad1f6fb64,282608307,0,0x0,8
tick,0x7ffad1f6fb64,282624343,0,0x0,8
tick,0x7ffad1f6fb64,282639357,0,0x0,8
tick,0x7ffad1f6fb64,282655435,0,0x0,8
tick,0x7ffad1f6fb64,282671371,0,0x0,8
tick,0x7ffad1f6fb64,282687395,0,0x0,8
tick,0x7ffad1f6fb64,282703403,0,0x0,8
tick,0x7ffad1f6fb64,282719409,0,0x0,8
tick,0x7ffad1f6fb64,282735455,0,0x0,8
tick,0x7ffad1f6fb64,282750448,0,0x0,8
tick,0x7ffad1f6fb64,282765459,0,0x0,8
tick,0x7ffad1f6fb64,282780468,0,0x0,8
tick,0x7ffad1f6fb64,282795501,0,0x0,8
tick,0x7ffad1f6fb64,282810576,0,0x0,8
tick,0x7ffad1f6fb64,282825515,0,0x0,8
tick,0x7ffad1f6fb64,282840510,0,0x0,8
tick,0x7ffad1f6fb64,282856519,0,0x0,8
tick,0x7ffad1f6fb64,282872552,0,0x0,8
tick,0x7ffad1f6fb64,282888569,0,0x0,8
tick,0x7ffad1f6fb64,282903582,0,0x0,8
tick,0x7ffad1f6fb64,282918586,0,0x0,8
tick,0x7ffad1f6fb64,282934603,0,0x0,8
tick,0x7ffad1f6fb64,282949658,0,0x0,8
tick,0x7ffad1f6fb64,282964642,0,0x0,8
tick,0x7ffad1f6fb64,282980670,0,0x0,8
tick,0x7ffad1f6fb64,282996694,0,0x0,8
tick,0x7ffad1f6fb64,283011673,0,0x0,8
tick,0x7ffad1f6fb64,283027717,0,0x0,8
tick,0x7ffad1f6fb64,283042708,0,0x0,8
tick,0x7ffad1f6fb64,283057719,0,0x0,8
tick,0x7ffad1f6fb64,283073723,0,0x0,8
tick,0x7ffad1f6fb64,283089749,0,0x0,8
tick,0x7ffad1f6fb64,283105756,0,0x0,8
tick,0x7ffad1f6fb64,283121791,0,0x0,8
tick,0x7ffad1f6fb64,283137787,0,0x0,8
tick,0x7ffad1f6fb64,283153849,0,0x0,8
tick,0x7ffad1f6fb64,283169829,0,0x0,8
tick,0x7ffad1f6fb64,283185851,0,0x0,8
tick,0x7ffad1f6fb64,283201923,0,0x0,8
tick,0x7ffad1f6fb64,283217884,0,0x0,8
tick,0x7ffad1f6fb64,283232906,0,0x0,8
tick,0x7ffad1f6fb64,283247879,0,0x0,8
tick,0x7ffad1f6fb64,283262916,0,0x0,8
tick,0x7ffad1f6fb64,283277916,0,0x0,8
tick,0x7ffad1f6fb64,283293939,0,0x0,8
tick,0x7ffad1f6fb64,283309038,0,0x0,8
tick,0x7ffad1f6fb64,283324989,0,0x0,8
tick,0x7ffad1f6fb64,283339968,0,0x0,8
tick,0x7ffad1f6fb64,283355993,0,0x0,8
tick,0x7ffad1f6fb64,283371005,0,0x0,8
tick,0x7ffad1f6fb64,283387046,0,0x0,8
tick,0x7ffad1f6fb64,283403038,0,0x0,8
tick,0x7ffad1f6fb64,283419079,0,0x0,8
tick,0x7ffad1f6fb64,283435064,0,0x0,8
tick,0x7ffad1f6fb64,283450124,0,0x0,8
tick,0x7ffad1f6fb64,283466091,0,0x0,8
tick,0x7ffad1f6fb64,283481090,0,0x0,8
tick,0x7ffad1f6fb64,283497134,0,0x0,8
tick,0x7ffad1f6fb64,283513134,0,0x0,8
tick,0x7ffad1f6fb64,283529184,0,0x0,8
tick,0x7ffad1f6fb64,283544150,0,0x0,8
tick,0x7ffad1f6fb64,283560170,0,0x0,8
tick,0x7ffad1f6fb64,283575185,0,0x0,8
tick,0x7ffad1f6fb64,283590212,0,0x0,8
tick,0x7ffad1f6fb64,283606218,0,0x0,8
tick,0x7ffad1f6fb64,283621266,0,0x0,8
tick,0x7ffad1f6fb64,283637260,0,0x0,8
tick,0x7ffad1f6fb64,283653268,0,0x0,8
tick,0x7ffad1f6fb64,283668278,0,0x0,8
tick,0x7ffad1f6fb64,283683290,0,0x0,8
tick,0x7ffad1f6fb64,283698309,0,0x0,8
tick,0x7ffad1f6fb64,283714344,0,0x0,8
tick,0x7ffad1f6fb64,283729311,0,0x0,8
tick,0x7ffad1f6fb64,283745384,0,0x0,8
tick,0x7ffad1f6fb64,283761394,0,0x0,8
tick,0x7ffad1f6fb64,283777372,0,0x0,8
tick,0x7ffad1f6fb64,283792375,0,0x0,8
tick,0x7ffad1f6fb64,283808403,0,0x0,8
tick,0x7ffad1f6fb64,283824444,0,0x0,8
tick,0x7ffad1f6fb64,283840457,0,0x0,8
tick,0x7ffad1f6fb64,283855439,0,0x0,8
tick,0x7ffad1f6fb64,283870460,0,0x0,8
tick,0x7ffad1f6fb64,283886482,0,0x0,8
tick,0x7ffad1f6fb64,283901497,0,0x0,8
tick,0x7ffad1f6fb64,283917499,0,0x0,8
tick,0x7ffad1f6fb64,283933552,0,0x0,8
tick,0x7ffad1f6fb64,283949538,0,0x0,8
tick,0x7ffad1f6fb64,283964565,0,0x0,8
tick,0x7ffad1f6fb64,283979553,0,0x0,8
tick,0x7ffad1f6fb64,283995579,0,0x0,8
tick,0x7ffad1f6fb64,284010626,0,0x0,8
tick,0x7ffad1f6fb64,284025599,0,0x0,8
tick,0x7ffad1f6fb64,284040635,0,0x0,8
tick,0x7ffad1f6fb64,284055689,0,0x0,8
tick,0x7ffad1f6fb64,284070688,0,0x0,8
tick,0x7ffad1f6fb64,284086680,0,0x0,8
tick,0x7ffad1f6fb64,284101679,0,0x0,8
tick,0x7ffad1f6fb64,284117702,0,0x0,8
tick,0x7ffad1f6fb64,284133717,0,0x0,8
tick,0x7ffad1f6fb64,284148746,0,0x0,8
tick,0x7ffad1f6fb64,284164764,0,0x0,8
tick,0x7ffad1f6fb64,284179796,0,0x0,8
tick,0x7ffad1f6fb64,284194785,0,0x0,8
tick,0x7ffad1f6fb64,284209805,0,0x0,8
tick,0x7ffad1f6fb64,284225817,0,0x0,8
tick,0x7ffad1f6fb64,284240805,0,0x0,8
tick,0x7ffad1f6fb64,284256974,0,0x0,8
tick,0x7ffad1f6fb64,284272873,0,0x0,8
tick,0x7ffad1f6fb64,284287886,0,0x0,8
tick,0x7ffad1f6fb64,284302887,0,0x0,8
tick,0x7ffad1f6fb64,284318879,0,0x0,8
tick,0x7ffad1f6fb64,284334891,0,0x0,8
tick,0x7ffad1f6fb64,284349937,0,0x0,8
tick,0x7ffad1f6fb64,284364966,0,0x0,8
tick,0x7ffad1f6fb64,284379930,0,0x0,8
tick,0x7ffad1f6fb64,284395960,0,0x0,8
tick,0x7ffad1f6fb64,284411948,0,0x0,8
tick,0x7ffad1f6fb64,284428003,0,0x0,8
tick,0x7ffad1f6fb64,284444035,0,0x0,8
tick,0x7ffad1f6fb64,284459011,0,0x0,8
tick,0x7ffad1f6fb64,284475025,0,0x0,8
tick,0x7ffad1f6fb64,284490057,0,0x0,8
tick,0x7ffad1f6fb64,284506050,0,0x0,8
tick,0x7ffad1f6fb64,284521077,0,0x0,8
tick,0x7ffad1f6fb64,284537120,0,0x0,8
tick,0x7ffad1f6fb64,284553091,0,0x0,8
tick,0x7ffad1f6fb64,284569131,0,0x0,8
tick,0x7ffad1f6fb64,284584125,0,0x0,8
tick,0x7ffad1f6fb64,284599136,0,0x0,8
tick,0x7ffad1f6fb64,284615167,0,0x0,8
tick,0x7ffad1f6fb64,284631182,0,0x0,8
tick,0x7ffad1f6fb64,284647170,0,0x0,8
tick,0x7ffad1f6fb64,284662177,0,0x0,8
tick,0x7ffad1f6fb64,284677210,0,0x0,8
tick,0x7ffad1f6fb64,284692272,0,0x0,8
tick,0x7ffad1f6fb64,284708218,0,0x0,8
tick,0x7ffad1f6fb64,284723255,0,0x0,8
tick,0x7ffad1f6fb64,284739313,0,0x0,8
tick,0x7ffad1f6fb64,284755261,0,0x0,8
tick,0x7ffad1f6fb64,284771295,0,0x0,8
tick,0x7ffad1f6fb64,284787302,0,0x0,8
tick,0x7ffad1f6fb64,284802325,0,0x0,8
tick,0x7ffad1f6fb64,284817410,0,0x0,8
tick,0x7ffad1f6fb64,284833357,0,0x0,8
tick,0x7ffad1f6fb64,284849379,0,0x0,8
tick,0x7ffad1f6fb64,284864395,0,0x0,8
tick,0x7ffad1f6fb64,284879399,0,0x0,8
tick,0x7ffad1f6fb64,284895376,0,0x0,8
tick,0x7ffad1f6fb64,284910471,0,0x0,8
tick,0x7ffad1f6fb64,284925430,0,0x0,8
tick,0x7ffad1f6fb64,284940470,0,0x0,8
tick,0x7ffad1f6fb64,284956484,0,0x0,8
tick,0x7ffad1f6fb64,284972488,0,0x0,8
tick,0x7ffad1f6fb64,284987477,0,0x0,8
tick,0x7ffad1f6fb64,285002511,0,0x0,8
tick,0x7ffad1f6fb64,285017617,0,0x0,8
tick,0x7ffad1f6fb64,285033564,0,0x0,8
tick,0x7ffad1f6fb64,285049562,0,0x0,8
tick,0x7ffad1f6fb64,285065626,0,0x0,8
tick,0x7ffad1f6fb64,285081586,0,0x0,8
tick,0x7ffad1f6fb64,285097641,0,0x0,8
tick,0x7ffad1f6fb64,285113613,0,0x0,8
tick,0x7ffad1f6fb64,285128652,0,0x0,8
tick,0x7ffad1f6fb64,285143661,0,0x0,8
tick,0x7ffad1f6fb64,285158809,0,0x0,8
tick,0x7ffad1f6fb64,285174665,0,0x0,8
tick,0x7ffad1f6fb64,285189731,0,0x0,8
tick,0x7ffad1f6fb64,285204726,0,0x0,8
tick,0x7ffad1f6fb64,285219737,0,0x0,8
tick,0x7ffad1f6fb64,285235743,0,0x0,8
tick,0x7ffad1f6fb64,285250781,0,0x0,8
tick,0x7ffad1f6fb64,285266733,0,0x0,8
tick,0x7ffad1f6fb64,285281753,0,0x0,8
tick,0x7ffad1f6fb64,285296768,0,0x0,8
tick,0x7ffad1f6fb64,285311782,0,0x0,8
tick,0x7ffad1f6fb64,285327798,0,0x0,8
tick,0x7ffad1f6fb64,285343833,0,0x0,8
tick,0x7ffad1f6fb64,285359831,0,0x0,8
tick,0x7ffad1f6fb64,285375857,0,0x0,8
tick,0x7ffad1f6fb64,285391852,0,0x0,8
tick,0x7ffad1f6fb64,285406854,0,0x0,8
tick,0x7ffad1f6fb64,285422890,0,0x0,8
tick,0x7ffad1f6fb64,285438895,0,0x0,8
tick,0x7ffad1f6fb64,285453956,0,0x0,8
tick,0x7ffad1f6fb64,285469982,0,0x0,8
tick,0x7ffad1f6fb64,285485940,0,0x0,8
tick,0x7ffad1f6fb64,285501963,0,0x0,8
tick,0x7ffad1f6fb64,285516985,0,0x0,8
tick,0x7ffad1f6fb64,285531963,0,0x0,8
tick,0x7ffad1f6fb64,285548019,0,0x0,8
tick,0x7ffad1f6fb64,285564029,0,0x0,8
tick,0x7ffad1f6fb64,285579033,0,0x0,8
tick,0x7ffad1f6fb64,285595035,0,0x0,8
tick,0x7ffad1f6fb64,285611058,0,0x0,8
tick,0x7ffad1f6fb64,285627062,0,0x0,8
tick,0x7ffad1f6fb64,285643234,0,0x0,8
tick,0x7ffad1f6fb64,285659104,0,0x0,8
tick,0x7ffad1f6fb64,285674146,0,0x0,8
tick,0x7ffad1f6fb64,285689133,0,0x0,8
tick,0x7ffad1f6fb64,285705128,0,0x0,8
tick,0x7ffad1f6fb64,285720146,0,0x0,8
tick,0x7ffad1f6fb64,285736168,0,0x0,8
tick,0x7ffad1f6fb64,285752168,0,0x0,8
tick,0x7ffad1f6fb64,285768177,0,0x0,8
tick,0x7ffad1f6fb64,285784230,0,0x0,8
tick,0x7ffad1f6fb64,285799222,0,0x0,8
tick,0x7ffad1f6fb64,285815224,0,0x0,8
tick,0x7ffad1f6fb64,285831253,0,0x0,8
tick,0x7ffad1f6fb64,285847273,0,0x0,8
tick,0x7ffad1f6fb64,285862280,0,0x0,8
tick,0x7ffad1f6fb64,285877292,0,0x0,8
tick,0x7ffad1f6fb64,285893327,0,0x0,8
tick,0x7ffad1f6fb64,285909312,0,0x0,8
tick,0x7ffad1f6fb64,285924329,0,0x0,8
tick,0x7ffad1f6fb64,285940351,0,0x0,8
tick,0x7ffad1f6fb64,285956350,0,0x0,8
tick,0x7ffad1f6fb64,285972387,0,0x0,8
tick,0x7ffad1f6fb64,285987387,0,0x0,8
tick,0x7ffad1f6fb64,286003413,0,0x0,8
tick,0x7ffad1f6fb64,286019412,0,0x0,8
tick,0x7ffad1f6fb64,286034445,0,0x0,8
tick,0x7ffad1f6fb64,286049458,0,0x0,8
tick,0x7ffad1f6fb64,286065455,0,0x0,8
tick,0x7ffad1f6fb64,286080478,0,0x0,8
tick,0x7ffad1f6fb64,286095492,0,0x0,8
tick,0x7ffad1f6fb64,286110522,0,0x0,8
tick,0x7ffad1f6fb64,286125517,0,0x0,8
tick,0x7ffad1f6fb64,286140518,0,0x0,8
tick,0x7ffad1f6fb64,286156546,0,0x0,8
tick,0x7ffad1f6fb64,286172605,0,0x0,8
tick,0x7ffad1f6fb64,286188569,0,0x0,8
tick,0x7ffad1f6fb64,286203597,0,0x0,8
tick,0x7ffad1f6fb64,286219662,0,0x0,8
tick,0x7ffad1f6fb64,286234606,0,0x0,8
tick,0x7ffad1f6fb64,286249629,0,0x0,8
tick,0x7ffad1f6fb64,286265652,0,0x0,8
tick,0x7ffad1f6fb64,286280660,0,0x0,8
tick,0x7ffad1f6fb64,286295677,0,0x0,8
tick,0x7ffad1f6fb64,286310694,0,0x0,8
tick,0x7ffad1f6fb64,286325705,0,0x0,8
tick,0x7ffad1f6fb64,286340697,0,0x0,8
tick,0x7ffad1f6fb64,286355721,0,0x0,8
tick,0x7ffad1f6fb64,286371738,0,0x0,8
tick,0x7ffad1f6fb64,286387833,0,0x0,8
tick,0x7ffad1f6fb64,286402814,0,0x0,8
tick,0x7ffad1f6fb64,286417800,0,0x0,8
tick,0x7ffad1f6fb64,286433805,0,0x0,8
tick,0x7ffad1f6fb64,286448808,0,0x0,8
tick,0x7ffad1f6fb64,286464846,0,0x0,8
tick,0x7ffad1f6fb64,286479880,0,0x0,8
tick,0x7ffad1f6fb64,286494875,0,0x0,8
tick,0x7ffad1f6fb64,286509842,0,0x0,8
tick,0x7ffad1f6fb64,286524891,0,0x0,8
tick,0x7ffad1f6fb64,286539898,0,0x0,8
tick,0x7ffad1f6fb64,286554913,0,0x0,8
tick,0x7ffad1f6fb64,286570936,0,0x0,8
tick,0x7ffad1f6fb64,286585966,0,0x0,8
tick,0x7ffad1f6fb64,286600956,0,0x0,8
tick,0x7ffad1f6fb64,286617002,0,0x0,8
tick,0x7ffad1f6fb64,286631973,0,0x0,8
tick,0x7ffad1f6fb64,286648080,0,0x0,8
tick,0x7ffad1f6fb64,286663017,0,0x0,8
tick,0x7ffad1f6fb64,286678033,0,0x0,8
tick,0x7ffad1f6fb64,286694040,0,0x0,8
tick,0x7ffad1f6fb64,286709044,0,0x0,8
tick,0x7ffad1f6fb64,286724088,0,0x0,8
tick,0x7ffad1f6fb64,286739063,0,0x0,8
tick,0x7ffad1f6fb64,286755072,0,0x0,8
tick,0x7ffad1f6fb64,286771113,0,0x0,8
tick,0x7ffad1f6fb64,286787174,0,0x0,8
tick,0x7ffad1f6fb64,286803177,0,0x0,8
tick,0x7ffad1f6fb64,286818352,0,0x0,8
tick,0x7ffad1f6fb64,286833163,0,0x0,8
tick,0x7ffad1f6fb64,286849171,0,0x0,8
tick,0x7ffad1f6fb64,286865197,0,0x0,8
tick,0x7ffad1f6fb64,286880203,0,0x0,8
tick,0x7ffad1f6fb64,286895232,0,0x0,8
tick,0x7ffad1f6fb64,286910276,0,0x0,8
tick,0x7ffad1f6fb64,286926252,0,0x0,8
tick,0x7ffad1f6fb64,286942269,0,0x0,8
tick,0x7ffad1f6fb64,286958277,0,0x0,8
tick,0x7ffad1f6fb64,286974314,0,0x0,8
tick,0x7ffad1f6fb64,286990311,0,0x0,8
tick,0x7ffad1f6fb64,287006332,0,0x0,8
tick,0x7ffad1f6fb64,287021339,0,0x0,8
tick,0x7ffad1f6fb64,287037365,0,0x0,8
tick,0x7ffad1f6fb64,287052347,0,0x0,8
tick,0x7ffad1f6fb64,287068387,0,0x0,8
tick,0x7ffad1f6fb64,287083380,0,0x0,8
tick,0x7ffad1f6fb64,287098407,0,0x0,8
tick,0x7ffad1f6fb64,287113407,0,0x0,8
tick,0x7ffad1f6fb64,287129423,0,0x0,8
tick,0x7ffad1f6fb64,287145456,0,0x0,8
tick,0x7ffad1f6fb64,287160466,0,0x0,8
tick,0x7ffad1f6fb64,287175503,0,0x0,8
tick,0x7ffad1f6fb64,287190511,0,0x0,8
tick,0x7ffad1f6fb64,287206500,0,0x0,8
tick,0x7ffad1f6fb64,287222525,0,0x0,8
tick,0x7ffad1f6fb64,287237543,0,0x0,8
tick,0x7ffad1f6fb64,287253532,0,0x0,8
tick,0x7ffad1f6fb64,287268546,0,0x0,8
tick,0x7ffad1f6fb64,287284573,0,0x0,8
tick,0x7ffad1f6fb64,287299603,0,0x0,8
tick,0x7ffad1f6fb64,287315600,0,0x0,8
tick,0x7ffad1f6fb64,287331615,0,0x0,8
tick,0x7ffad1f6fb64,287347638,0,0x0,8
tick,0x7ffad1f6fb64,287363801,0,0x0,8
tick,0x7ffad1f6fb64,287378655,0,0x0,8
tick,0x7ffad1f6fb64,287393663,0,0x0,8
tick,0x7ffad1f6fb64,287409745,0,0x0,8
tick,0x7ffad1f6fb64,287425690,0,0x0,8
tick,0x7ffad1f6fb64,287440723,0,0x0,8
tick,0x7ffad1f6fb64,287455723,0,0x0,8
tick,0x7ffad1f6fb64,287471754,0,0x0,8
tick,0x7ffad1f6fb64,287487754,0,0x0,8
tick,0x7ffad1f6fb64,287502776,0,0x0,8
tick,0x7ffad1f6fb64,287518799,0,0x0,8
tick,0x7ffad1f6fb64,287534801,0,0x0,8
tick,0x7ffad1f6fb64,287549801,0,0x0,8
tick,0x7ffad1f6fb64,287565868,0,0x0,8
tick,0x7ffad1f6fb64,287581870,0,0x0,8
tick,0x7ffad1f6fb64,287596894,0,0x0,8
tick,0x7ffad1f6fb64,287612878,0,0x0,8
tick,0x7ffad1f6fb64,287628915,0,0x0,8
tick,0x7ffad1f6fb64,287644900,0,0x0,8
tick,0x7ffad1f6fb64,287659930,0,0x0,8
tick,0x7ffad1f6fb64,287674970,0,0x0,8
tick,0x7ffad1f6fb64,287690967,0,0x0,8
tick,0x7ffad1f6fb64,287705983,0,0x0,8
tick,0x7ffad1f6fb64,287720956,0,0x0,8
tick,0x7ffad1f6fb64,287736998,0,0x0,8
tick,0x7ffad1f6fb64,287752006,0,0x0,8
tick,0x7ffad1f6fb64,287767009,0,0x0,8
tick,0x7ffad1f6fb64,287783020,0,0x0,8
tick,0x7ffad1f6fb64,287798059,0,0x0,8
tick,0x7ffad1f6fb64,287814051,0,0x0,8
tick,0x7ffad1f6fb64,287830051,0,0x0,8
tick,0x7ffad1f6fb64,287846072,0,0x0,8
tick,0x7ffad1f6fb64,287861108,0,0x0,8
tick,0x7ffad1f6fb64,287877136,0,0x0,8
tick,0x7ffad1f6fb64,287893131,0,0x0,8
tick,0x7ffad1f6fb64,287909138,0,0x0,8
tick,0x7ffad1f6fb64,287924186,0,0x0,8
tick,0x7ffad1f6fb64,287939176,0,0x0,8
tick,0x7ffad1f6fb64,287955208,0,0x0,8
tick,0x7ffad1f6fb64,287970196,0,0x0,8
tick,0x7ffad1f6fb64,287985199,0,0x0,8
tick,0x7ffad1f6fb64,288001211,0,0x0,8
tick,0x7ffad1f6fb64,288017247,0,0x0,8
tick,0x7ffad1f6fb64,288033271,0,0x0,8
tick,0x7ffad1f6fb64,288048255,0,0x0,8
tick,0x7ffad1f6fb64,288063309,0,0x0,8
tick,0x7ffad1f6fb64,288078291,0,0x0,8
tick,0x7ffad1f6fb64,288094334,0,0x0,8
tick,0x7ffad1f6fb64,288110330,0,0x0,8
tick,0x7ffad1f6fb64,288126330,0,0x0,8
tick,0x7ffad1f6fb64,288142345,0,0x0,8
tick,0x7ffad1f6fb64,288158350,0,0x0,8
tick,0x7ffad1f6fb64,288174389,0,0x0,8
tick,0x7ffad1f6fb64,288189393,0,0x0,8
tick,0x7ffad1f6fb64,288204409,0,0x0,8
tick,0x7ffad1f6fb64,288220449,0,0x0,8
tick,0x7ffad1f6fb64,288236440,0,0x0,8
tick,0x7ffad1f6fb64,288252437,0,0x0,8
tick,0x7ffad1f6fb64,288267467,0,0x0,8
tick,0x7ffad1f6fb64,288282497,0,0x0,8
tick,0x7ffad1f6fb64,288297526,0,0x0,8
tick,0x7ffad1f6fb64,288312539,0,0x0,8
tick,0x7ffad1f6fb64,288327520,0,0x0,8
tick,0x7ffad1f6fb64,288342527,0,0x0,8
tick,0x7ffad1f6fb64,288358551,0,0x0,8
tick,0x7ffad1f6fb64,288374558,0,0x0,8
tick,0x7ffad1f6fb64,288390902,0,0x0,8
tick,0x7ffad1f6fb64,288406613,0,0x0,8
tick,0x7ffad1f6fb64,288421610,0,0x0,8
tick,0x7ffad1f6fb64,288436644,0,0x0,8
tick,0x7ffad1f6fb64,288452700,0,0x0,8
tick,0x7ffad1f6fb64,288468660,0,0x0,8
tick,0x7ffad1f6fb64,288483676,0,0x0,8
tick,0x7ffad1f6fb64,288499731,0,0x0,8
tick,0x7ffad1f6fb64,288515701,0,0x0,8
tick,0x7ffad1f6fb64,288530740,0,0x0,8
tick,0x7ffad1f6fb64,288546789,0,0x0,8
tick,0x7ffad1f6fb64,288561771,0,0x0,8
tick,0x7ffad1f6fb64,288576757,0,0x0,8
tick,0x7ffad1f6fb64,288591768,0,0x0,8
tick,0x7ffad1f6fb64,288606827,0,0x0,8
tick,0x7ffad1f6fb64,288621790,0,0x0,8
tick,0x7ffad1f6fb64,288637812,0,0x0,8
tick,0x7ffad1f6fb64,288653814,0,0x0,8
tick,0x7ffad1f6fb64,288668833,0,0x0,8
tick,0x7ffad1f6fb64,288683863,0,0x0,8
tick,0x7ffad1f6fb64,288698939,0,0x0,8
tick,0x7ffad1f6fb64,288713886,0,0x0,8
tick,0x7ffad1f6fb64,288729982,0,0x0,8
tick,0x7ffad1f6fb64,288744908,0,0x0,8
tick,0x7ffad1f6fb64,288760924,0,0x0,8
tick,0x7ffad1f6fb64,288775936,0,0x0,8
tick,0x7ffad1f6fb64,288791958,0,0x0,8
tick,0x7ffad1f6fb64,288807979,0,0x0,8
tick,0x7ffad1f6fb64,288823005,0,0x0,8
tick,0x7ffad1f6fb64,288838998,0,0x0,8
tick,0x7ffad1f6fb64,288855014,0,0x0,8
tick,0x7ffad1f6fb64,288870015,0,0x0,8
tick,0x7ffad1f6fb64,288886031,0,0x0,8
tick,0x7ffad1f6fb64,288902042,0,0x0,8
tick,0x7ffad1f6fb64,288918056,0,0x0,8
tick,0x7ffad1f6fb64,288933092,0,0x0,8
tick,0x7ffad1f6fb64,288949102,0,0x0,8
tick,0x7ffad1f6fb64,288965116,0,0x0,8
tick,0x7ffad1f6fb64,288980117,0,0x0,8
tick,0x7ffad1f6fb64,288995122,0,0x0,8
tick,0x7ffad1f6fb64,289011145,0,0x0,8
tick,0x7ffad1f6fb64,289027164,0,0x0,8
tick,0x7ffad1f6fb64,289042190,0,0x0,8
tick,0x7ffad1f6fb64,289058228,0,0x0,8
tick,0x7ffad1f6fb64,289074204,0,0x0,8
tick,0x7ffad1f6fb64,289090220,0,0x0,8
tick,0x7ffad1f6fb64,289105225,0,0x0,8
tick,0x7ffad1f6fb64,289120257,0,0x0,8
tick,0x7ffad1f6fb64,289136250,0,0x0,8
tick,0x7ffad1f6fb64,289151317,0,0x0,8
tick,0x7ffad1f6fb64,289166295,0,0x0,8
tick,0x7ffad1f6fb64,289181322,0,0x0,8
tick,0x7ffad1f6fb64,289197322,0,0x0,8
tick,0x7ffad1f6fb64,289213332,0,0x0,8
tick,0x7ffad1f6fb64,289229341,0,0x0,8
tick,0x7ffad1f6fb64,289244438,0,0x0,8
tick,0x7ffad1f6fb64,289259400,0,0x0,8
tick,0x7ffad1f6fb64,289275392,0,0x0,8
tick,0x7ffad1f6fb64,289291410,0,0x0,8
tick,0x7ffad1f6fb64,289307418,0,0x0,8
tick,0x7ffad1f6fb64,289322405,0,0x0,8
tick,0x7ffad1f6fb64,289337443,0,0x0,8
tick,0x7ffad1f6fb64,289353457,0,0x0,8
tick,0x7ffad1f6fb64,289369472,0,0x0,8
tick,0x7ffad1f6fb64,289384485,0,0x0,8
tick,0x7ffad1f6fb64,289399503,0,0x0,8
tick,0x7ffad1f6fb64,289414521,0,0x0,8
tick,0x7ffad1f6fb64,289429522,0,0x0,8
tick,0x7ffad1f6fb64,289445537,0,0x0,8
tick,0x7ffad1f6fb64,289460612,0,0x0,8
tick,0x7ffad1f6fb64,289475601,0,0x0,8
tick,0x7ffad1f6fb64,289490578,0,0x0,8
tick,0x7ffad1f6fb64,289505590,0,0x0,8
tick,0x7ffad1f6fb64,289520611,0,0x0,8
tick,0x7ffad1f6fb64,289536606,0,0x0,8
tick,0x7ffad1f6fb64,289552619,0,0x0,8
tick,0x7ffad1f6fb64,289568643,0,0x0,8
tick,0x7ffad1f6fb64,289583701,0,0x0,8
tick,0x7ffad1f6fb64,289598687,0,0x0,8
tick,0x7ffad1f6fb64,289613691,0,0x0,8
tick,0x7ffad1f6fb64,289629798,0,0x0,8
tick,0x7ffad1f6fb64,289644724,0,0x0,8
tick,0x7ffad1f6fb64,289659741,0,0x0,8
tick,0x7ffad1f6fb64,289674767,0,0x0,8
tick,0x7ffad1f6fb64,289689795,0,0x0,8
tick,0x7ffad1f6fb64,289705791,0,0x0,8
tick,0x7ffad1f6fb64,289721790,0,0x0,8
tick,0x7ffad1f6fb64,289737804,0,0x0,8
tick,0x7ffad1f6fb64,289753816,0,0x0,8
tick,0x7ffad1f6fb64,289768832,0,0x0,8
tick,0x7ffad1f6fb64,289784840,0,0x0,8
tick,0x7ffad1f6fb64,289800871,0,0x0,8
tick,0x7ffad1f6fb64,289816881,0,0x0,8
tick,0x7ffad1f6fb64,289832927,0,0x0,8
tick,0x7ffad1f6fb64,289848912,0,0x0,8
tick,0x7ffad1f6fb64,289863919,0,0x0,8
tick,0x7ffad1f6fb64,289879926,0,0x0,8
tick,0x7ffad1f6fb64,289895976,0,0x0,8
tick,0x7ffad1f6fb64,289910982,0,0x0,8
tick,0x7ffad1f6fb64,289926993,0,0x0,8
tick,0x7ffad1f6fb64,289941998,0,0x0,8
tick,0x7ffad1f6fb64,289958015,0,0x0,8
tick,0x7ffad1f6fb64,289974062,0,0x0,8
tick,0x7ffad1f6fb64,289989066,0,0x0,8
tick,0x7ffad1f6fb64,290005078,0,0x0,8
tick,0x7ffad1f6fb64,290020110,0,0x0,8
tick,0x7ffad1f6fb64,290036069,0,0x0,8
tick,0x7ffad1f6fb64,290051084,0,0x0,8
tick,0x7ffad1f6fb64,290066131,0,0x0,8
tick,0x7ffad1f6fb64,290081134,0,0x0,8
tick,0x7ffad1f6fb64,290097135,0,0x0,8
tick,0x7ffad1f6fb64,290113138,0,0x0,8
tick,0x7ffad1f6fb64,290128168,0,0x0,8
tick,0x7ffad1f6fb64,290144179,0,0x0,8
tick,0x7ffad1f6fb64,290160172,0,0x0,8
tick,0x7ffad1f6fb64,290175219,0,0x0,8
tick,0x7ffad1f6fb64,290191214,0,0x0,8
tick,0x7ffad1f6fb64,290206240,0,0x0,8
tick,0x7ffad1f6fb64,290221244,0,0x0,8
tick,0x7ffad1f6fb64,290236267,0,0x0,8
tick,0x7ffad1f6fb64,290252274,0,0x0,8
tick,0x7ffad1f6fb64,290268291,0,0x0,8
tick,0x7ffad1f6fb64,290283295,0,0x0,8
tick,0x7ffad1f6fb64,290299376,0,0x0,8
tick,0x7ffad1f6fb64,290315337,0,0x0,8
tick,0x7ffad1f6fb64,290331333,0,0x0,8
tick,0x7ffad1f6fb64,290347408,0,0x0,8
tick,0x7ffad1f6fb64,290362372,0,0x0,8
tick,0x7ffad1f6fb64,290377433,0,0x0,8
tick,0x7ffad1f6fb64,290393474,0,0x0,8
tick,0x7ffad1f6fb64,290409413,0,0x0,8
tick,0x7ffad1f6fb64,290425432,0,0x0,8
tick,0x7ffad1f6fb64,290440436,0,0x0,8
tick,0x7ffad1f6fb64,290456485,0,0x0,8
tick,0x7ffad1f6fb64,290472473,0,0x0,8
tick,0x7ffad1f6fb64,290488510,0,0x0,8
tick,0x7ffad1f6fb64,290504505,0,0x0,8
tick,0x7ffad1f6fb64,290520522,0,0x0,8
tick,0x7ffad1f6fb64,290536529,0,0x0,8
tick,0x7ffad1f6fb64,290551562,0,0x0,8
tick,0x7ffad1f6fb64,290566569,0,0x0,8
tick,0x7ffad1f6fb64,290581564,0,0x0,8
tick,0x7ffad1f6fb64,290596592,0,0x0,8
tick,0x7ffad1f6fb64,290612614,0,0x0,8
tick,0x7ffad1f6fb64,290627624,0,0x0,8
tick,0x7ffad1f6fb64,290643624,0,0x0,8
tick,0x7ffad1f6fb64,290659659,0,0x0,8
tick,0x7ffad1f6fb64,290675697,0,0x0,8
tick,0x7ffad1f6fb64,290690692,0,0x0,8
tick,0x7ffad1f6fb64,290706694,0,0x0,8
tick,0x7ffad1f6fb64,290722703,0,0x0,8
tick,0x7ffad1f6fb64,290737725,0,0x0,8
tick,0x7ffad1f6fb64,290752725,0,0x0,8
tick,0x7ffad1f6fb64,290768758,0,0x0,8
tick,0x7ffad1f6fb64,290783762,0,0x0,8
tick,0x7ffad1f6fb64,290799772,0,0x0,8
tick,0x7ffad1f6fb64,290815795,0,0x0,8
tick,0x7ffad1f6fb64,290831838,0,0x0,8
tick,0x7ffad1f6fb64,290846834,0,0x0,8
tick,0x7ffad1f6fb64,290862843,0,0x0,8
tick,0x7ffad1f6fb64,290877855,0,0x0,8
tick,0x7ffad1f6fb64,290893860,0,0x0,8
tick,0x7ffad1f6fb64,290909863,0,0x0,8
tick,0x7ffad1f6fb64,290925901,0,0x0,8
tick,0x7ffad1f6fb64,290940885,0,0x0,8
tick,0x7ffad1f6fb64,290956908,0,0x0,8
tick,0x7ffad1f6fb64,290971934,0,0x0,8
tick,0x7ffad1f6fb64,290987945,0,0x0,8
tick,0x7ffad1f6fb64,291002986,0,0x0,8
tick,0x7ffad1f6fb64,291018980,0,0x0,8
tick,0x7ffad1f6fb64,291034983,0,0x0,8
tick,0x7ffad1f6fb64,291050006,0,0x0,8
tick,0x7ffad1f6fb64,291066033,0,0x0,8
tick,0x7ffad1f6fb64,291081147,0,0x0,8
tick,0x7ffad1f6fb64,291096128,0,0x0,8
tick,0x7ffad1f6fb64,291111108,0,0x0,8
tick,0x7ffad1f6fb64,291126088,0,0x0,8
tick,0x7ffad1f6fb64,291142082,0,0x0,8
tick,0x7ffad1f6fb64,291158102,0,0x0,8
tick,0x7ffad1f6fb64,291173117,0,0x0,8
tick,0x7ffad1f6fb64,291189123,0,0x0,8
tick,0x7ffad1f6fb64,291205185,0,0x0,8
tick,0x7ffad1f6fb64,291220154,0,0x0,8
tick,0x7ffad1f6fb64,291235160,0,0x0,8
tick,0x7ffad1f6fb64,291250180,0,0x0,8
tick,0x7ffad1f6fb64,291266196,0,0x0,8
tick,0x7ffad1f6fb64,291281201,0,0x0,8
tick,0x7ffad1f6fb64,291297227,0,0x0,8
tick,0x7ffad1f6fb64,291313254,0,0x0,8
tick,0x7ffad1f6fb64,291329266,0,0x0,8
tick,0x7ffad1f6fb64,291344260,0,0x0,8
tick,0x7ffad1f6fb64,291360280,0,0x0,8
tick,0x7ffad1f6fb64,291376322,0,0x0,8
tick,0x7ffad1f6fb64,291391333,0,0x0,8
tick,0x7ffad1f6fb64,291406375,0,0x0,8
tick,0x7ffad1f6fb64,291421351,0,0x0,8
tick,0x7ffad1f6fb64,291436371,0,0x0,8
tick,0x7ffad1f6fb64,291452370,0,0x0,8
tick,0x7ffad1f6fb64,291468398,0,0x0,8
tick,0x7ffad1f6fb64,291483416,0,0x0,8
tick,0x7ffad1f6fb64,291499410,0,0x0,8
tick,0x7ffad1f6fb64,291515454,0,0x0,8
tick,0x7ffad1f6fb64,291531441,0,0x0,8
tick,0x7ffad1f6fb64,291546459,0,0x0,8
tick,0x7ffad1f6fb64,291561473,0,0x0,8
tick,0x7ffad1f6fb64,291576493,0,0x0,8
tick,0x7ffad1f6fb64,291592528,0,0x0,8
tick,0x7ffad1f6fb64,291608514,0,0x0,8
tick,0x7ffad1f6fb64,291623531,0,0x0,8
tick,0x7ffad1f6fb64,291639542,0,0x0,8
tick,0x7ffad1f6fb64,291654557,0,0x0,8
tick,0x7ffad1f6fb64,291670570,0,0x0,8
tick,0x7ffad1f6fb64,291686606,0,0x0,8
tick,0x7ffad1f6fb64,291701602,0,0x0,8
tick,0x7ffad1f6fb64,291717601,0,0x0,8
tick,0x7ffad1f6fb64,291733612,0,0x0,8
tick,0x7ffad1f6fb64,291749635,0,0x0,8
tick,0x7ffad1f6fb64,291765649,0,0x0,8
tick,0x7ffad1f6fb64,291781658,0,0x0,8
tick,0x7ffad1f6fb64,291796676,0,0x0,8
tick,0x7ffad1f6fb64,291812689,0,0x0,8
tick,0x7ffad1f6fb64,291828724,0,0x0,8
tick,0x7ffad1f6fb64,291844734,0,0x0,8
tick,0x7ffad1f6fb64,291859726,0,0x0,8
tick,0x7ffad1f6fb64,291874762,0,0x0,8
tick,0x7ffad1f6fb64,291889771,0,0x0,8
tick,0x7ffad1f6fb64,291905786,0,0x0,8
tick,0x7ffad1f6fb64,291921802,0,0x0,8
tick,0x7ffad1f6fb64,291937794,0,0x0,8
tick,0x7ffad1f6fb64,291952815,0,0x0,8
tick,0x7ffad1f6fb64,291968823,0,0x0,8
tick,0x7ffad1f6fb64,291983858,0,0x0,8
tick,0x7ffad1f6fb64,291998872,0,0x0,8
tick,0x7ffad1f6fb64,292013881,0,0x0,8
tick,0x7ffad1f6fb64,292029910,0,0x0,8
tick,0x7ffad1f6fb64,292045900,0,0x0,8
tick,0x7ffad1f6fb64,292060926,0,0x0,8
tick,0x7ffad1f6fb64,292076943,0,0x0,8
tick,0x7ffad1f6fb64,292091969,0,0x0,8
tick,0x7ffad1f6fb64,292106949,0,0x0,8
tick,0x7ffad1f6fb64,292123004,0,0x0,8
tick,0x7ffad1f6fb64,292137993,0,0x0,8
tick,0x7ffad1f6fb64,292153989,0,0x0,8
tick,0x7ffad1f6fb64,292170011,0,0x0,8
tick,0x7ffad1f6fb64,292185028,0,0x0,8
tick,0x7ffad1f6fb64,292201063,0,0x0,8
tick,0x7ffad1f6fb64,292216067,0,0x0,8
tick,0x7ffad1f6fb64,292231088,0,0x0,8
tick,0x7ffad1f6fb64,292247074,0,0x0,8
tick,0x7ffad1f6fb64,292263101,0,0x0,8
tick,0x7ffad1f6fb64,292278156,0,0x0,8
tick,0x7ffad1f6fb64,292294144,0,0x0,8
tick,0x7ffad1f6fb64,292310165,0,0x0,8
tick,0x7ffad1f6fb64,292326189,0,0x0,8
tick,0x7ffad1f6fb64,292342177,0,0x0,8
tick,0x7ffad1f6fb64,292357189,0,0x0,8
tick,0x7ffad1f6fb64,292372195,0,0x0,8
tick,0x7ffad1f6fb64,292387211,0,0x0,8
tick,0x7ffad1f6fb64,292403230,0,0x0,8
tick,0x7ffad1f6fb64,292419264,0,0x0,8
tick,0x7ffad1f6fb64,292434253,0,0x0,8
tick,0x7ffad1f6fb64,292449316,0,0x0,8
tick,0x7ffad1f6fb64,292465292,0,0x0,8
tick,0x7ffad1f6fb64,292480307,0,0x0,8
tick,0x7ffad1f6fb64,292495338,0,0x0,8
tick,0x7ffad1f6fb64,292510339,0,0x0,8
tick,0x7ffad1f6fb64,292526393,0,0x0,8
tick,0x7ffad1f6fb64,292542379,0,0x0,8
tick,0x7ffad1f6fb64,292557380,0,0x0,8
tick,0x7ffad1f6fb64,292573403,0,0x0,8
tick,0x7ffad1f6fb64,292589389,0,0x0,8
tick,0x7ffad1f6fb64,292604425,0,0x0,8
tick,0x7ffad1f6fb64,292619462,0,0x0,8
tick,0x7ffad1f6fb64,292635496,0,0x0,8
tick,0x7ffad1f6fb64,292650475,0,0x0,8
tick,0x7ffad1f6fb64,292666496,0,0x0,8
tick,0x7ffad1f6fb64,292681484,0,0x0,8
tick,0x7ffad1f6fb64,292697532,0,0x0,8
tick,0x7ffad1f6fb64,292713542,0,0x0,8
tick,0x7ffad1f6fb64,292729537,0,0x0,8
tick,0x7ffad1f6fb64,292745553,0,0x0,8
tick,0x7ffad1f6fb64,292760577,0,0x0,8
tick,0x7ffad1f6fb64,292775593,0,0x0,8
tick,0x7ffad1f6fb64,292791581,0,0x0,8
tick,0x7ffad1f6fb64,292807588,0,0x0,8
tick,0x7ffad1f6fb64,292823605,0,0x0,8
tick,0x7ffad1f6fb64,292838636,0,0x0,8
tick,0x7ffad1f6fb64,292854665,0,0x0,8
tick,0x7ffad1f6fb64,292870644,0,0x0,8
tick,0x7ffad1f6fb64,292885675,0,0x0,8
tick,0x7ffad1f6fb64,292901696,0,0x0,8
tick,0x7ffad1f6fb64,292916695,0,0x0,8
tick,0x7ffad1f6fb64,292932707,0,0x0,8
tick,0x7ffad1f6fb64,292947731,0,0x0,8
tick,0x7ffad1f6fb64,292963763,0,0x0,8
tick,0x7ffad1f6fb64,292979789,0,0x0,8
tick,0x7ffad1f6fb64,292994784,0,0x0,8
tick,0x7ffad1f6fb64,293009808,0,0x0,8
tick,0x7ffad1f6fb64,293025789,0,0x0,8
tick,0x7ffad1f6fb64,293040834,0,0x0,8
tick,0x7ffad1f6fb64,293055897,0,0x0,8
tick,0x7ffad1f6fb64,293071860,0,0x0,8
tick,0x7ffad1f6fb64,293087864,0,0x0,8
tick,0x7ffad1f6fb64,293102876,0,0x0,8
tick,0x7ffad1f6fb64,293118890,0,0x0,8
tick,0x7ffad1f6fb64,293133897,0,0x0,8
tick,0x7ffad1f6fb64,293149921,0,0x0,8
tick,0x7ffad1f6fb64,293164925,0,0x0,8
tick,0x7ffad1f6fb64,293179990,0,0x0,8
tick,0x7ffad1f6fb64,293194955,0,0x0,8
tick,0x7ffad1f6fb64,293209977,0,0x0,8
tick,0x7ffad1f6fb64,293225981,0,0x0,8
tick,0x7ffad1f6fb64,293240984,0,0x0,8
tick,0x7ffad1f6fb64,293257016,0,0x0,8
tick,0x7ffad1f6fb64,293272023,0,0x0,8
tick,0x7ffad1f6fb64,293288050,0,0x0,8
tick,0x7ffad1f6fb64,293304051,0,0x0,8
tick,0x7ffad1f6fb64,293320052,0,0x0,8
tick,0x7ffad1f6fb64,293336072,0,0x0,8
tick,0x7ffad1f6fb64,293351090,0,0x0,8
tick,0x7ffad1f6fb64,293366111,0,0x0,8
tick,0x7ffad1f6fb64,293381153,0,0x0,8
tick,0x7ffad1f6fb64,293396158,0,0x0,8
tick,0x7ffad1f6fb64,293411142,0,0x0,8
tick,0x7ffad1f6fb64,293427225,0,0x0,8
tick,0x7ffad1f6fb64,293443191,0,0x0,8
tick,0x7ffad1f6fb64,293459355,0,0x0,8
tick,0x7ffad1f6fb64,293474227,0,0x0,8
tick,0x7ffad1f6fb64,293490223,0,0x0,8
tick,0x7ffad1f6fb64,293506257,0,0x0,8
tick,0x7ffad1f6fb64,293521251,0,0x0,8
tick,0x7ffad1f6fb64,293537270,0,0x0,8
tick,0x7ffad1f6fb64,293553280,0,0x0,8
tick,0x7ffad1f6fb64,293569311,0,0x0,8
tick,0x7ffad1f6fb64,293585299,0,0x0,8
tick,0x7ffad1f6fb64,293600344,0,0x0,8
tick,0x7ffad1f6fb64,293615346,0,0x0,8
tick,0x7ffad1f6fb64,293631379,0,0x0,8
tick,0x7ffad1f6fb64,293646425,0,0x0,8
tick,0x7ffad1f6fb64,293662381,0,0x0,8
tick,0x7ffad1f6fb64,293677394,0,0x0,8
tick,0x7ffad1f6fb64,293692413,0,0x0,8
tick,0x7ffad1f6fb64,293708416,0,0x0,8
tick,0x7ffad1f6fb64,293724448,0,0x0,8
tick,0x7ffad1f6fb64,293740464,0,0x0,8
tick,0x7ffad1f6fb64,293756468,0,0x0,8
tick,0x7ffad1f6fb64,293771467,0,0x0,8
tick,0x7ffad1f6fb64,293786494,0,0x0,8
tick,0x7ffad1f6fb64,293802491,0,0x0,8
tick,0x7ffad1f6fb64,293817526,0,0x0,8
tick,0x7ffad1f6fb64,293833553,0,0x0,8
tick,0x7ffad1f6fb64,293848548,0,0x0,8
tick,0x7ffad1f6fb64,293864600,0,0x0,8
tick,0x7ffad1f6fb64,293879609,0,0x0,8
tick,0x7ffad1f6fb64,293895608,0,0x0,8
tick,0x7ffad1f6fb64,293910612,0,0x0,8
tick,0x7ffad1f6fb64,293925626,0,0x0,8
tick,0x7ffad1f6fb64,293940685,0,0x0,8
tick,0x7ffad1f6fb64,293956643,0,0x0,8
tick,0x7ffad1f6fb64,293972676,0,0x0,8
tick,0x7ffad1f6fb64,293988686,0,0x0,8
tick,0x7ffad1f6fb64,294003688,0,0x0,8
tick,0x7ffad1f6fb64,294019701,0,0x0,8
tick,0x7ffad1f6fb64,294035722,0,0x0,8
tick,0x7ffad1f6fb64,294050737,0,0x0,8
tick,0x7ffad1f6fb64,294066749,0,0x0,8
tick,0x7ffad1f6fb64,294081796,0,0x0,8
tick,0x7ffad1f6fb64,294097783,0,0x0,8
tick,0x7ffad1f6fb64,294113772,0,0x0,8
tick,0x7ffad1f6fb64,294129796,0,0x0,8
tick,0x7ffad1f6fb64,294145817,0,0x0,8
tick,0x7ffad1f6fb64,294160846,0,0x0,8
tick,0x7ffad1f6fb64,294176835,0,0x0,8
tick,0x7ffad1f6fb64,294191857,0,0x0,8
tick,0x7ffad1f6fb64,294207876,0,0x0,8
tick,0x7ffad1f6fb64,294223903,0,0x0,8
tick,0x7ffad1f6fb64,294238899,0,0x0,8
tick,0x7ffad1f6fb64,294253946,0,0x0,8
tick,0x7ffad1f6fb64,294268945,0,0x0,8
tick,0x7ffad1f6fb64,294284938,0,0x0,8
tick,0x7ffad1f6fb64,294300981,0,0x0,8
tick,0x7ffad1f6fb64,294315979,0,0x0,8
tick,0x7ffad1f6fb64,294331992,0,0x0,8
tick,0x7ffad1f6fb64,294347008,0,0x0,8
tick,0x7ffad1f6fb64,294363006,0,0x0,8
tick,0x7ffad1f6fb64,294379040,0,0x0,8
tick,0x7ffad1f6fb64,294394043,0,0x0,8
tick,0x7ffad1f6fb64,294410051,0,0x0,8
tick,0x7ffad1f6fb64,294425052,0,0x0,8
tick,0x7ffad1f6fb64,294440079,0,0x0,8
tick,0x7ffad1f6fb64,294455098,0,0x0,8
tick,0x7ffad1f6fb64,294471107,0,0x0,8
tick,0x7ffad1f6fb64,294487117,0,0x0,8
tick,0x7ffad1f6fb64,294503136,0,0x0,8
tick,0x7ffad1f6fb64,294518190,0,0x0,8
tick,0x7ffad1f6fb64,294534177,0,0x0,8
tick,0x7ffad1f6fb64,294549184,0,0x0,8
tick,0x7ffad1f6fb64,294565203,0,0x0,8
tick,0x7ffad1f6fb64,294580229,0,0x0,8
tick,0x7ffad1f6fb64,294596262,0,0x0,8
tick,0x7ffad1f6fb64,294611273,0,0x0,8
tick,0x7ffad1f6fb64,294626262,0,0x0,8
tick,0x7ffad1f6fb64,294642276,0,0x0,8
tick,0x7ffad1f6fb64,294658305,0,0x0,8
tick,0x7ffad1f6fb64,294674336,0,0x0,8
tick,0x7ffad1f6fb64,294690319,0,0x0,8
tick,0x7ffad1f6fb64,294705350,0,0x0,8
tick,0x7ffad1f6fb64,294720341,0,0x0,8
tick,0x7ffad1f6fb64,294736367,0,0x0,8
tick,0x7ffad1f6fb64,294751396,0,0x0,8
tick,0x7ffad1f6fb64,294766466,0,0x0,8
tick,0x7ffad1f6fb64,294782409,0,0x0,8
tick,0x7ffad1f6fb64,294798402,0,0x0,8
tick,0x7ffad1f6fb64,294813435,0,0x0,8
tick,0x7ffad1f6fb64,294829439,0,0x0,8
tick,0x7ffad1f6fb64,294845473,0,0x0,8
tick,0x7ffad1f6fb64,294860463,0,0x0,8
tick,0x7ffad1f6fb64,294875492,0,0x0,8
tick,0x7ffad1f6fb64,294891512,0,0x0,8
tick,0x7ffad1f6fb64,294906502,0,0x0,8
tick,0x7ffad1f6fb64,294921549,0,0x0,8
tick,0x7ffad1f6fb64,294937544,0,0x0,8
tick,0x7ffad1f6fb64,294953585,0,0x0,8
tick,0x7ffad1f6fb64,294968604,0,0x0,8
tick,0x7ffad1f6fb64,294984569,0,0x0,8
tick,0x7ffad1f6fb64,294999591,0,0x0,8
tick,0x7ffad1f6fb64,295015610,0,0x0,8
tick,0x7ffad1f6fb64,295031637,0,0x0,8
tick,0x7ffad1f6fb64,295047668,0,0x0,8
tick,0x7ffad1f6fb64,295063649,0,0x0,8
tick,0x7ffad1f6fb64,295078663,0,0x0,8
tick,0x7ffad1f6fb64,295094717,0,0x0,8
tick,0x7ffad1f6fb64,295109704,0,0x0,8
tick,0x7ffad1f6fb64,295125727,0,0x0,8
tick,0x7ffad1f6fb64,295140754,0,0x0,8
tick,0x7ffad1f6fb64,295156739,0,0x0,8
tick,0x7ffad1f6fb64,295172776,0,0x0,8
tick,0x7ffad1f6fb64,295188813,0,0x0,8
tick,0x7ffad1f6fb64,295204775,0,0x0,8
tick,0x7ffad1f6fb64,295220840,0,0x0,8
tick,0x7ffad1f6fb64,295236820,0,0x0,8
tick,0x7ffad1f6fb64,295252865,0,0x0,8
tick,0x7ffad1f6fb64,295267897,0,0x0,8
tick,0x7ffad1f6fb64,295282866,0,0x0,8
tick,0x7ffad1f6fb64,295297886,0,0x0,8
tick,0x7ffad1f6fb64,295313891,0,0x0,8
tick,0x7ffad1f6fb64,295329908,0,0x0,8
tick,0x7ffad1f6fb64,295344909,0,0x0,8
tick,0x7ffad1f6fb64,295359931,0,0x0,8
tick,0x7ffad1f6fb64,295374937,0,0x0,8
tick,0x7ffad1f6fb64,295389972,0,0x0,8
tick,0x7ffad1f6fb64,295405961,0,0x0,8
tick,0x7ffad1f6fb64,295420972,0,0x0,8
tick,0x7ffad1f6fb64,295436982,0,0x0,8
tick,0x7ffad1f6fb64,295453002,0,0x0,8
tick,0x7ffad1f6fb64,295469048,0,0x0,8
tick,0x7ffad1f6fb64,295485018,0,0x0,8
tick,0x7ffad1f6fb64,295501069,0,0x0,8
tick,0x7ffad1f6fb64,295517069,0,0x0,8
tick,0x7ffad1f6fb64,295533087,0,0x0,8
tick,0x7ffad1f6fb64,295549077,0,0x0,8
tick,0x7ffad1f6fb64,295564107,0,0x0,8
tick,0x7ffad1f6fb64,295580167,0,0x0,8
tick,0x7ffad1f6fb64,295595123,0,0x0,8
tick,0x7ffad1f6fb64,295611172,0,0x0,8
tick,0x7ffad1f6fb64,295626184,0,0x0,8
tick,0x7ffad1f6fb64,295642187,0,0x0,8
tick,0x7ffad1f6fb64,295658203,0,0x0,8
tick,0x7ffad1f6fb64,295674236,0,0x0,8
tick,0x7ffad1f6fb64,295690262,0,0x0,8
tick,0x7ffad1f6fb64,295706239,0,0x0,8
tick,0x7ffad1f6fb64,295721244,0,0x0,8
tick,0x7ffad1f6fb64,295737261,0,0x0,8
tick,0x7ffad1f6fb64,295753260,0,0x0,8
tick,0x7ffad1f6fb64,295768325,0,0x0,8
tick,0x7ffad1f6fb64,295783334,0,0x0,8
tick,0x7ffad1f6fb64,295799329,0,0x0,8
tick,0x7ffad1f6fb64,295815337,0,0x0,8
tick,0x7ffad1f6fb64,295830362,0,0x0,8
tick,0x7ffad1f6fb64,295845358,0,0x0,8
tick,0x7ffad1f6fb64,295860419,0,0x0,8
tick,0x7ffad1f6fb64,295876417,0,0x0,8
tick,0x7ffad1f6fb64,295892403,0,0x0,8
tick,0x7ffad1f6fb64,295908419,0,0x0,8
tick,0x7ffad1f6fb64,295923437,0,0x0,8
tick,0x7ffad1f6fb64,295938455,0,0x0,8
tick,0x7ffad1f6fb64,295954456,0,0x0,8
tick,0x7ffad1f6fb64,295970503,0,0x0,8
tick,0x7ffad1f6fb64,295986476,0,0x0,8
tick,0x7ffad1f6fb64,296002506,0,0x0,8
tick,0x7ffad1f6fb64,296017530,0,0x0,8
tick,0x7ffad1f6fb64,296033534,0,0x0,8
tick,0x7ffad1f6fb64,296049532,0,0x0,8
tick,0x7ffad1f6fb64,296065558,0,0x0,8
tick,0x7ffad1f6fb64,296081576,0,0x0,8
tick,0x7ffad1f6fb64,296097588,0,0x0,8
tick,0x7ffad1f6fb64,296113637,0,0x0,8
tick,0x7ffad1f6fb64,296129640,0,0x0,8
tick,0x7ffad1f6fb64,296144623,0,0x0,8
tick,0x7ffad1f6fb64,296159645,0,0x0,8
tick,0x7ffad1f6fb64,296174659,0,0x0,8
tick,0x7ffad1f6fb64,296190688,0,0x0,8
tick,0x7ffad1f6fb64,296206676,0,0x0,8
tick,0x7ffad1f6fb64,296222711,0,0x0,8
tick,0x7ffad1f6fb64,296238732,0,0x0,8
tick,0x7ffad1f6fb64,296254732,0,0x0,8
tick,0x7ffad1f6fb64,296270760,0,0x0,8
tick,0x7ffad1f6fb64,296286834,0,0x0,8
tick,0x7ffad1f6fb64,296301788,0,0x0,8
tick,0x7ffad1f6fb64,296317787,0,0x0,8
tick,0x7ffad1f6fb64,296333822,0,0x0,8
tick,0x7ffad1f6fb64,296349832,0,0x0,8
tick,0x7ffad1f6fb64,296365819,0,0x0,8
tick,0x7ffad1f6fb64,296380856,0,0x0,8
tick,0x7ffad1f6fb64,296395888,0,0x0,8
tick,0x7ffad1f6fb64,296410889,0,0x0,8
tick,0x7ffad1f6fb64,296426901,0,0x0,8
tick,0x7ffad1f6fb64,296442937,0,0x0,8
tick,0x7ffad1f6fb64,296458935,0,0x0,8
tick,0x7ffad1f6fb64,296473955,0,0x0,8
tick,0x7ffad1f6fb64,296489994,0,0x0,8
tick,0x7ffad1f6fb64,296504975,0,0x0,8
tick,0x7ffad1f6fb64,296519995,0,0x0,8
tick,0x7ffad1f6fb64,296535991,0,0x0,8
tick,0x7ffad1f6fb64,296550985,0,0x0,8
tick,0x7ffad1f6fb64,296566066,0,0x0,8
tick,0x7ffad1f6fb64,296581057,0,0x0,8
tick,0x7ffad1f6fb64,296596077,0,0x0,8
tick,0x7ffad1f6fb64,296611071,0,0x0,8
tick,0x7ffad1f6fb64,296626142,0,0x0,8
tick,0x7ffad1f6fb64,296641114,0,0x0,8
tick,0x7ffad1f6fb64,296657095,0,0x0,8
tick,0x7ffad1f6fb64,296673136,0,0x0,8
tick,0x7ffad1f6fb64,296688139,0,0x0,8
tick,0x7ffad1f6fb64,296704169,0,0x0,8
tick,0x7ffad1f6fb64,296719164,0,0x0,8
tick,0x7ffad1f6fb64,296735172,0,0x0,8
tick,0x7ffad1f6fb64,296750185,0,0x0,8
tick,0x7ffad1f6fb64,296765197,0,0x0,8
tick,0x7ffad1f6fb64,296780208,0,0x0,8
tick,0x7ffad1f6fb64,296795262,0,0x0,8
tick,0x7ffad1f6fb64,296810246,0,0x0,8
tick,0x7ffad1f6fb64,296826269,0,0x0,8
tick,0x7ffad1f6fb64,296842268,0,0x0,8
tick,0x7ffad1f6fb64,296858284,0,0x0,8
tick,0x7ffad1f6fb64,296873305,0,0x0,8
tick,0x7ffad1f6fb64,296889343,0,0x0,8
tick,0x7ffad1f6fb64,296905326,0,0x0,8
tick,0x7ffad1f6fb64,296920343,0,0x0,8
tick,0x7ffad1f6fb64,296936361,0,0x0,8
tick,0x7ffad1f6fb64,296952379,0,0x0,8
tick,0x7ffad1f6fb64,296967386,0,0x0,8
tick,0x7ffad1f6fb64,296982395,0,0x0,8
tick,0x7ffad1f6fb64,296998429,0,0x0,8
tick,0x7ffad1f6fb64,297013422,0,0x0,8
tick,0x7ffad1f6fb64,297029456,0,0x0,8
tick,0x7ffad1f6fb64,297044451,0,0x0,8
tick,0x7ffad1f6fb64,297060478,0,0x0,8
tick,0x7ffad1f6fb64,297075485,0,0x0,8
tick,0x7ffad1f6fb64,297091522,0,0x0,8
tick,0x7ffad1f6fb64,297107522,0,0x0,8
tick,0x7ffad1f6fb64,297122514,0,0x0,8
tick,0x7ffad1f6fb64,297137553,0,0x0,8
tick,0x7ffad1f6fb64,297153552,0,0x0,8
tick,0x7ffad1f6fb64,297169604,0,0x0,8
tick,0x7ffad1f6fb64,297185635,0,0x0,8
tick,0x7ffad1f6fb64,297200629,0,0x0,8
tick,0x7ffad1f6fb64,297216629,0,0x0,8
tick,0x7ffad1f6fb64,297232609,0,0x0,8
tick,0x7ffad1f6fb64,297248659,0,0x0,8
tick,0x7ffad1f6fb64,297264667,0,0x0,8
tick,0x7ffad1f6fb64,297280669,0,0x0,8
tick,0x7ffad1f6fb64,297296767,0,0x0,8
tick,0x7ffad1f6fb64,297312708,0,0x0,8
tick,0x7ffad1f6fb64,297328739,0,0x0,8
tick,0x7ffad1f6fb64,297344764,0,0x0,8
tick,0x7ffad1f6fb64,297360744,0,0x0,8
tick,0x7ffad1f6fb64,297375766,0,0x0,8
tick,0x7ffad1f6fb64,297391774,0,0x0,8
tick,0x7ffad1f6fb64,297407803,0,0x0,8
tick,0x7ffad1f6fb64,297423796,0,0x0,8
tick,0x7ffad1f6fb64,297439827,0,0x0,8
tick,0x7ffad1f6fb64,297454848,0,0x0,8
tick,0x7ffad1f6fb64,297469852,0,0x0,8
tick,0x7ffad1f6fb64,297485868,0,0x0,8
tick,0x7ffad1f6fb64,297500931,0,0x0,8
tick,0x7ffad1f6fb64,297515943,0,0x0,8
tick,0x7ffad1f6fb64,297531908,0,0x0,8
tick,0x7ffad1f6fb64,297546922,0,0x0,8
tick,0x7ffad1f6fb64,297562937,0,0x0,8
tick,0x7ffad1f6fb64,297577949,0,0x0,8
tick,0x7ffad1f6fb64,297592961,0,0x0,8
tick,0x7ffad1f6fb64,297608967,0,0x0,8
tick,0x7ffad1f6fb64,297624990,0,0x0,8
tick,0x7ffad1f6fb64,297640062,0,0x0,8
tick,0x7ffad1f6fb64,297655036,0,0x0,8
tick,0x7ffad1f6fb64,297671031,0,0x0,8
tick,0x7ffad1f6fb64,297687047,0,0x0,8
tick,0x7ffad1f6fb64,297702148,0,0x0,8
tick,0x7ffad1f6fb64,297717094,0,0x0,8
tick,0x7ffad1f6fb64,297733083,0,0x0,8
tick,0x7ffad1f6fb64,297749102,0,0x0,8
tick,0x7ffad1f6fb64,297765125,0,0x0,8
tick,0x7ffad1f6fb64,297780119,0,0x0,8
tick,0x7ffad1f6fb64,297795159,0,0x0,8
tick,0x7ffad1f6fb64,297810189,0,0x0,8
tick,0x7ffad1f6fb64,297825168,0,0x0,8
tick,0x7ffad1f6fb64,297840178,0,0x0,8
tick,0x7ffad1f6fb64,297856193,0,0x0,8
tick,0x7ffad1f6fb64,297872238,0,0x0,8
tick,0x7ffad1f6fb64,297887220,0,0x0,8
tick,0x7ffad1f6fb64,297903243,0,0x0,8
tick,0x7ffad1f6fb64,297919245,0,0x0,8
tick,0x7ffad1f6fb64,297934270,0,0x0,8
tick,0x7ffad1f6fb64,297950282,0,0x0,8
tick,0x7ffad1f6fb64,297966311,0,0x0,8
tick,0x7ffad1f6fb64,297982312,0,0x0,8
tick,0x7ffad1f6fb64,297998330,0,0x0,8
tick,0x7ffad1f6fb64,298014333,0,0x0,8
tick,0x7ffad1f6fb64,298030344,0,0x0,8
tick,0x7ffad1f6fb64,298045371,0,0x0,8
tick,0x7ffad1f6fb64,298060411,0,0x0,8
tick,0x7ffad1f6fb64,298076414,0,0x0,8
tick,0x7ffad1f6fb64,298092421,0,0x0,8
tick,0x7ffad1f6fb64,298107419,0,0x0,8
tick,0x7ffad1f6fb64,298122450,0,0x0,8
tick,0x7ffad1f6fb64,298137441,0,0x0,8
tick,0x7ffad1f6fb64,298152468,0,0x0,8
tick,0x7ffad1f6fb64,298168467,0,0x0,8
tick,0x7ffad1f6fb64,298183488,0,0x0,8
tick,0x7ffad1f6fb64,298199558,0,0x0,8
tick,0x7ffad1f6fb64,298214518,0,0x0,8
tick,0x7ffad1f6fb64,298230562,0,0x0,8
tick,0x7ffad1f6fb64,298246589,0,0x0,8
tick,0x7ffad1f6fb64,298261643,0,0x0,8
tick,0x7ffad1f6fb64,298277597,0,0x0,8
tick,0x7ffad1f6fb64,298293614,0,0x0,8
tick,0x7ffad1f6fb64,298309628,0,0x0,8
tick,0x7ffad1f6fb64,298324636,0,0x0,8
tick,0x7ffad1f6fb64,298340635,0,0x0,8
tick,0x7ffad1f6fb64,298356668,0,0x0,8
tick,0x7ffad1f6fb64,298371688,0,0x0,8
tick,0x7ffad1f6fb64,298387703,0,0x0,8
tick,0x7ffad1f6fb64,298402704,0,0x0,8
tick,0x7ffad1f6fb64,298418719,0,0x0,8
tick,0x7ffad1f6fb64,298434732,0,0x0,8
tick,0x7ffad1f6fb64,298449736,0,0x0,8
tick,0x7ffad1f6fb64,298465728,0,0x0,8
tick,0x7ffad1f6fb64,298480776,0,0x0,8
tick,0x7ffad1f6fb64,298495789,0,0x0,8
tick,0x7ffad1f6fb64,298510840,0,0x0,8
tick,0x7ffad1f6fb64,298526812,0,0x0,8
tick,0x7ffad1f6fb64,298541852,0,0x0,8
tick,0x7ffad1f6fb64,298557849,0,0x0,8
tick,0x7ffad1f6fb64,298573857,0,0x0,8
tick,0x7ffad1f6fb64,298588895,0,0x0,8
tick,0x7ffad1f6fb64,298604903,0,0x0,8
tick,0x7ffad1f6fb64,298619915,0,0x0,8
tick,0x7ffad1f6fb64,298634942,0,0x0,8
tick,0x7ffad1f6fb64,298650931,0,0x0,8
tick,0x7ffad1f6fb64,298666958,0,0x0,8
tick,0x7ffad1f6fb64,298681965,0,0x0,8
tick,0x7ffad1f6fb64,298696996,0,0x0,8
tick,0x7ffad1f6fb64,298712046,0,0x0,8
tick,0x7ffad1f6fb64,298726986,0,0x0,8
tick,0x7ffad1f6fb64,298743026,0,0x0,8
tick,0x7ffad1f6fb64,298759016,0,0x0,8
tick,0x7ffad1f6fb64,298775032,0,0x0,8
tick,0x7ffad1f6fb64,298791045,0,0x0,8
tick,0x7ffad1f6fb64,298806058,0,0x0,8
tick,0x7ffad1f6fb64,298821287,0,0x0,8
tick,0x7ffad1f6fb64,298836094,0,0x0,8
tick,0x7ffad1f6fb64,298852109,0,0x0,8
tick,0x7ffad1f6fb64,298868124,0,0x0,8
tick,0x7ffad1f6fb64,298884134,0,0x0,8
tick,0x7ffad1f6fb64,298899150,0,0x0,8
tick,0x7ffad1f6fb64,298915243,0,0x0,8
tick,0x7ffad1f6fb64,298930183,0,0x0,8
tick,0x7ffad1f6fb64,298946178,0,0x0,8
tick,0x7ffad1f6fb64,298962210,0,0x0,8
tick,0x7ffad1f6fb64,298977217,0,0x0,8
tick,0x7ffad1f6fb64,298993236,0,0x0,8
tick,0x7ffad1f6fb64,299009242,0,0x0,8
tick,0x7ffad1f6fb64,299024257,0,0x0,8
tick,0x7ffad1f6fb64,299039266,0,0x0,8
tick,0x7ffad1f6fb64,299055268,0,0x0,8
tick,0x7ffad1f6fb64,299071302,0,0x0,8
tick,0x7ffad1f6fb64,299087413,0,0x0,8
tick,0x7ffad1f6fb64,299103337,0,0x0,8
tick,0x7ffad1f6fb64,299119342,0,0x0,8
tick,0x7ffad1f6fb64,299135356,0,0x0,8
tick,0x7ffad1f6fb64,299150371,0,0x0,8
tick,0x7ffad1f6fb64,299166408,0,0x0,8
tick,0x7ffad1f6fb64,299181473,0,0x0,8
tick,0x7ffad1f6fb64,299197411,0,0x0,8
tick,0x7ffad1f6fb64,299212430,0,0x0,8
tick,0x7ffad1f6fb64,299227438,0,0x0,8
tick,0x7ffad1f6fb64,299243471,0,0x0,8
tick,0x7ffad1f6fb64,299259454,0,0x0,8
tick,0x7ffad1f6fb64,299275475,0,0x0,8
tick,0x7ffad1f6fb64,299291513,0,0x0,8
tick,0x7ffad1f6fb64,299307512,0,0x0,8
tick,0x7ffad1f6fb64,299322531,0,0x0,8
tick,0x7ffad1f6fb64,299337576,0,0x0,8
tick,0x7ffad1f6fb64,299353635,0,0x0,8
tick,0x7ffad1f6fb64,299369583,0,0x0,8
tick,0x7ffad1f6fb64,299385587,0,0x0,8
tick,0x7ffad1f6fb64,299400582,0,0x0,8
tick,0x7ffad1f6fb64,299416630,0,0x0,8
tick,0x7ffad1f6fb64,299432635,0,0x0,8
tick,0x7ffad1f6fb64,299448647,0,0x0,8
tick,0x7ffad1f6fb64,299464647,0,0x0,8
tick,0x7ffad1f6fb64,299479661,0,0x0,8
tick,0x7ffad1f6fb64,299495683,0,0x0,8
tick,0x7ffad1f6fb64,299511714,0,0x0,8
tick,0x7ffad1f6fb64,299527724,0,0x0,8
tick,0x7ffad1f6fb64,299542723,0,0x0,8
tick,0x7ffad1f6fb64,299558755,0,0x0,8
tick,0x7ffad1f6fb64,299574756,0,0x0,8
tick,0x7ffad1f6fb64,299590782,0,0x0,8
tick,0x7ffad1f6fb64,299605787,0,0x0,8
tick,0x7ffad1f6fb64,299621830,0,0x0,8
tick,0x7ffad1f6fb64,299637832,0,0x0,8
tick,0x7ffad1f6fb64,299653840,0,0x0,8
tick,0x7ffad1f6fb64,299668865,0,0x0,8
tick,0x7ffad1f6fb64,299684881,0,0x0,8
tick,0x7ffad1f6fb64,299700880,0,0x0,8
tick,0x7ffad1f6fb64,299716892,0,0x0,8
tick,0x7ffad1f6fb64,299731916,0,0x0,8
tick,0x7ffad1f6fb64,299746945,0,0x0,8
tick,0x7ffad1f6fb64,299761946,0,0x0,8
tick,0x7ffad1f6fb64,299777943,0,0x0,8
tick,0x7ffad1f6fb64,299793951,0,0x0,8
tick,0x7ffad1f6fb64,299808991,0,0x0,8
tick,0x7ffad1f6fb64,299824013,0,0x0,8
tick,0x7ffad1f6fb64,299839034,0,0x0,8
tick,0x7ffad1f6fb64,299855019,0,0x0,8
tick,0x7ffad1f6fb64,299871041,0,0x0,8
tick,0x7ffad1f6fb64,299887047,0,0x0,8
tick,0x7ffad1f6fb64,299902060,0,0x0,8
tick,0x7ffad1f6fb64,299918058,0,0x0,8
tick,0x7ffad1f6fb64,299933103,0,0x0,8
tick,0x7ffad1f6fb64,299949119,0,0x0,8
tick,0x7ffad1f6fb64,299965122,0,0x0,8
tick,0x7ffad1f6fb64,299980131,0,0x0,8
tick,0x7ffad1f6fb64,299995187,0,0x0,8
tick,0x7ffad1f6fb64,300011269,0,0x0,8
tick,0x7ffad1f6fb64,300026172,0,0x0,8
tick,0x7ffad1f6fb64,300042215,0,0x0,8
tick,0x7ffad1f6fb64,300057290,0,0x0,8
tick,0x7ffad1f6fb64,300072255,0,0x0,8
tick,0x7ffad1f6fb64,300087316,0,0x0,8
tick,0x7ffad1f6fb64,300103261,0,0x0,8
tick,0x7ffad1f6fb64,300119265,0,0x0,8
tick,0x7ffad1f6fb64,300134287,0,0x0,8
tick,0x7ffad1f6fb64,300150307,0,0x0,8
tick,0x7ffad1f6fb64,300165308,0,0x0,8
tick,0x7ffad1f6fb64,300180320,0,0x0,8
tick,0x7ffad1f6fb64,300195394,0,0x0,8
tick,0x7ffad1f6fb64,300211395,0,0x0,8
tick,0x7ffad1f6fb64,300227360,0,0x0,8
tick,0x7ffad1f6fb64,300242358,0,0x0,8
tick,0x7ffad1f6fb64,300258390,0,0x0,8
tick,0x7ffad1f6fb64,300274397,0,0x0,8
tick,0x7ffad1f6fb64,300289403,0,0x0,8
tick,0x7ffad1f6fb64,300304425,0,0x0,8
tick,0x7ffad1f6fb64,300320443,0,0x0,8
tick,0x7ffad1f6fb64,300336455,0,0x0,8
tick,0x7ffad1f6fb64,300351474,0,0x0,8
tick,0x7ffad1f6fb64,300366498,0,0x0,8
tick,0x7ffad1f6fb64,300381515,0,0x0,8
tick,0x7ffad1f6fb64,300397508,0,0x0,8
tick,0x7ffad1f6fb64,300413526,0,0x0,8
tick,0x7ffad1f6fb64,300429539,0,0x0,8
tick,0x7ffad1f6fb64,300444596,0,0x0,8
tick,0x7ffad1f6fb64,300459599,0,0x0,8
tick,0x7ffad1f6fb64,300474565,0,0x0,8
tick,0x7ffad1f6fb64,300489622,0,0x0,8
tick,0x7ffad1f6fb64,300505619,0,0x0,8
tick,0x7ffad1f6fb64,300521632,0,0x0,8
tick,0x7ffad1f6fb64,300537659,0,0x0,8
tick,0x7ffad1f6fb64,300552654,0,0x0,8
tick,0x7ffad1f6fb64,300568660,0,0x0,8
tick,0x7ffad1f6fb64,300584686,0,0x0,8
tick,0x7ffad1f6fb64,300599742,0,0x0,8
tick,0x7ffad1f6fb64,300615711,0,0x0,8
tick,0x7ffad1f6fb64,300630735,0,0x0,8
tick,0x7ffad1f6fb64,300646749,0,0x0,8
tick,0x7ffad1f6fb64,300662747,0,0x0,8
tick,0x7ffad1f6fb64,300678764,0,0x0,8
tick,0x7ffad1f6fb64,300694790,0,0x0,8
tick,0x7ffad1f6fb64,300709835,0,0x0,8
tick,0x7ffad1f6fb64,300725816,0,0x0,8
tick,0x7ffad1f6fb64,300740834,0,0x0,8
tick,0x7ffad1f6fb64,300756838,0,0x0,8
tick,0x7ffad1f6fb64,300772862,0,0x0,8
tick,0x7ffad1f6fb64,300788859,0,0x0,8
tick,0x7ffad1f6fb64,300804864,0,0x0,8
tick,0x7ffad1f6fb64,300820992,0,0x0,8
tick,0x7ffad1f6fb64,300835944,0,0x0,8
tick,0x7ffad1f6fb64,300850926,0,0x0,8
tick,0x7ffad1f6fb64,300866962,0,0x0,8
tick,0x7ffad1f6fb64,300881957,0,0x0,8
tick,0x7ffad1f6fb64,300896977,0,0x0,8
tick,0x7ffad1f6fb64,300912965,0,0x0,8
tick,0x7ffad1f6fb64,300929029,0,0x0,8
tick,0x7ffad1f6fb64,300945009,0,0x0,8
tick,0x7ffad1f6fb64,300960034,0,0x0,8
tick,0x7ffad1f6fb64,300975040,0,0x0,8
tick,0x7ffad1f6fb64,300991044,0,0x0,8
tick,0x7ffad1f6fb64,301006050,0,0x0,8
tick,0x7ffad1f6fb64,301021050,0,0x0,8
tick,0x7ffad1f6fb64,301037100,0,0x0,8
tick,0x7ffad1f6fb64,301053092,0,0x0,8
tick,0x7ffad1f6fb64,301069117,0,0x0,8
tick,0x7ffad1f6fb64,301084135,0,0x0,8
tick,0x7ffad1f6fb64,301099141,0,0x0,8
tick,0x7ffad1f6fb64,301114170,0,0x0,8
tick,0x7ffad1f6fb64,301130170,0,0x0,8
tick,0x7ffad1f6fb64,301145200,0,0x0,8
tick,0x7ffad1f6fb64,301160213,0,0x0,8
tick,0x7ffad1f6fb64,301176233,0,0x0,8
tick,0x7ffad1f6fb64,301191275,0,0x0,8
tick,0x7ffad1f6fb64,301207247,0,0x0,8
tick,0x7ffad1f6fb64,301222265,0,0x0,8
tick,0x7ffad1f6fb64,301237277,0,0x0,8
tick,0x7ffad1f6fb64,301253293,0,0x0,8
tick,0x7ffad1f6fb64,301269320,0,0x0,8
tick,0x7ffad1f6fb64,301285358,0,0x0,8
tick,0x7ffad1f6fb64,301301346,0,0x0,8
tick,0x7ffad1f6fb64,301316352,0,0x0,8
tick,0x7ffad1f6fb64,301331356,0,0x0,8
tick,0x7ffad1f6fb64,301347370,0,0x0,8
tick,0x7ffad1f6fb64,301363413,0,0x0,8
tick,0x7ffad1f6fb64,301378427,0,0x0,8
tick,0x7ffad1f6fb64,301394402,0,0x0,8
tick,0x7ffad1f6fb64,301410431,0,0x0,8
tick,0x7ffad1f6fb64,301425439,0,0x0,8
tick,0x7ffad1f6fb64,301440456,0,0x0,8
tick,0x7ffad1f6fb64,301455458,0,0x0,8
tick,0x7ffad1f6fb64,301471497,0,0x0,8
tick,0x7ffad1f6fb64,301487537,0,0x0,8
tick,0x7ffad1f6fb64,301503550,0,0x0,8
tick,0x7ffad1f6fb64,301519553,0,0x0,8
tick,0x7ffad1f6fb64,301535555,0,0x0,8
tick,0x7ffad1f6fb64,301551572,0,0x0,8
tick,0x7ffad1f6fb64,301566592,0,0x0,8
tick,0x7ffad1f6fb64,301581631,0,0x0,8
tick,0x7ffad1f6fb64,301597615,0,0x0,8
tick,0x7ffad1f6fb64,301613634,0,0x0,8
tick,0x7ffad1f6fb64,301628631,0,0x0,8
tick,0x7ffad1f6fb64,301644624,0,0x0,8
tick,0x7ffad1f6fb64,301660662,0,0x0,8
tick,0x7ffad1f6fb64,301675798,0,0x0,8
tick,0x7ffad1f6fb64,301690706,0,0x0,8
tick,0x7ffad1f6fb64,301706702,0,0x0,8
tick,0x7ffad1f6fb64,301722761,0,0x0,8
tick,0x7ffad1f6fb64,301737759,0,0x0,8
tick,0x7ffad1f6fb64,301752738,0,0x0,8
tick,0x7ffad1f6fb64,301768975,0,0x0,8
tick,0x7ffad1f6fb64,301783788,0,0x0,8
tick,0x7ffad1f6fb64,301799807,0,0x0,8
tick,0x7ffad1f6fb64,301815797,0,0x0,8
tick,0x7ffad1f6fb64,301831820,0,0x0,8
tick,0x7ffad1f6fb64,301847831,0,0x0,8
tick,0x7ffad1f6fb64,301863851,0,0x0,8
tick,0x7ffad1f6fb64,301879885,0,0x0,8
tick,0x7ffad1f6fb64,301894880,0,0x0,8
tick,0x7ffad1f6fb64,301910903,0,0x0,8
tick,0x7ffad1f6fb64,301926906,0,0x0,8
tick,0x7ffad1f6fb64,301942935,0,0x0,8
tick,0x7ffad1f6fb64,301958938,0,0x0,8
tick,0x7ffad1f6fb64,301974948,0,0x0,8
tick,0x7ffad1f6fb64,301989963,0,0x0,8
tick,0x7ffad1f6fb64,302005978,0,0x0,8
tick,0x7ffad1f6fb64,302021014,0,0x0,8
tick,0x7ffad1f6fb64,302037011,0,0x0,8
tick,0x7ffad1f6fb64,302053008,0,0x0,8
tick,0x7ffad1f6fb64,302069035,0,0x0,8
tick,0x7ffad1f6fb64,302084044,0,0x0,8
tick,0x7ffad1f6fb64,302099048,0,0x0,8
tick,0x7ffad1f6fb64,302115079,0,0x0,8
tick,0x7ffad1f6fb64,302131129,0,0x0,8
tick,0x7ffad1f6fb64,302146108,0,0x0,8
tick,0x7ffad1f6fb64,302162144,0,0x0,8
tick,0x7ffad1f6fb64,302178149,0,0x0,8
tick,0x7ffad1f6fb64,302194144,0,0x0,8
tick,0x7ffad1f6fb64,302210174,0,0x0,8
tick,0x7ffad1f6fb64,302226167,0,0x0,8
tick,0x7ffad1f6fb64,302241204,0,0x0,8
tick,0x7ffad1f6fb64,302256199,0,0x0,8
tick,0x7ffad1f6fb64,302271214,0,0x0,8
tick,0x7ffad1f6fb64,302287240,0,0x0,8
tick,0x7ffad1f6fb64,302303260,0,0x0,8
tick,0x7ffad1f6fb64,302319256,0,0x0,8
tick,0x7ffad1f6fb64,302334302,0,0x0,8
tick,0x7ffad1f6fb64,302349312,0,0x0,8
tick,0x7ffad1f6fb64,302364300,0,0x0,8
tick,0x7ffad1f6fb64,302379325,0,0x0,8
tick,0x7ffad1f6fb64,302395391,0,0x0,8
tick,0x7ffad1f6fb64,302411357,0,0x0,8
tick,0x7ffad1f6fb64,302426364,0,0x0,8
tick,0x7ffad1f6fb64,302442356,0,0x0,8
tick,0x7ffad1f6fb64,302457394,0,0x0,8
tick,0x7ffad1f6fb64,302472393,0,0x0,8
tick,0x7ffad1f6fb64,302488415,0,0x0,8
tick,0x7ffad1f6fb64,302504444,0,0x0,8
tick,0x7ffad1f6fb64,302520441,0,0x0,8
tick,0x7ffad1f6fb64,302536445,0,0x0,8
tick,0x7ffad1f6fb64,302551453,0,0x0,8
tick,0x7ffad1f6fb64,302566494,0,0x0,8
tick,0x7ffad1f6fb64,302581502,0,0x0,8
tick,0x7ffad1f6fb64,302596524,0,0x0,8
tick,0x7ffad1f6fb64,302611513,0,0x0,8
tick,0x7ffad1f6fb64,302627549,0,0x0,8
tick,0x7ffad1f6fb64,302643565,0,0x0,8
tick,0x7ffad1f6fb64,302658569,0,0x0,8
tick,0x7ffad1f6fb64,302674601,0,0x0,8
tick,0x7ffad1f6fb64,302690637,0,0x0,8
tick,0x7ffad1f6fb64,302706622,0,0x0,8
tick,0x7ffad1f6fb64,302722622,0,0x0,8
tick,0x7ffad1f6fb64,302737635,0,0x0,8
tick,0x7ffad1f6fb64,302752681,0,0x0,8
tick,0x7ffad1f6fb64,302768672,0,0x0,8
tick,0x7ffad1f6fb64,302784661,0,0x0,8
tick,0x7ffad1f6fb64,302799687,0,0x0,8
tick,0x7ffad1f6fb64,302815717,0,0x0,8
tick,0x7ffad1f6fb64,302831723,0,0x0,8
tick,0x7ffad1f6fb64,302847742,0,0x0,8
tick,0x7ffad1f6fb64,302863752,0,0x0,8
tick,0x7ffad1f6fb64,302878772,0,0x0,8
tick,0x7ffad1f6fb64,302894795,0,0x0,8
tick,0x7ffad1f6fb64,302910874,0,0x0,8
tick,0x7ffad1f6fb64,302925812,0,0x0,8
tick,0x7ffad1f6fb64,302940821,0,0x0,8
tick,0x7ffad1f6fb64,302956871,0,0x0,8
tick,0x7ffad1f6fb64,302971860,0,0x0,8
tick,0x7ffad1f6fb64,302987889,0,0x0,8
tick,0x7ffad1f6fb64,303002924,0,0x0,8
tick,0x7ffad1f6fb64,303018933,0,0x0,8
tick,0x7ffad1f6fb64,303034921,0,0x0,8
tick,0x7ffad1f6fb64,303049942,0,0x0,8
tick,0x7ffad1f6fb64,303065951,0,0x0,8
tick,0x7ffad1f6fb64,303081981,0,0x0,8
tick,0x7ffad1f6fb64,303097966,0,0x0,8
tick,0x7ffad1f6fb64,303114017,0,0x0,8
tick,0x7ffad1f6fb64,303130012,0,0x0,8
tick,0x7ffad1f6fb64,303145005,0,0x0,8
tick,0x7ffad1f6fb64,303161022,0,0x0,8
tick,0x7ffad1f6fb64,303177040,0,0x0,8
tick,0x7ffad1f6fb64,303193053,0,0x0,8
tick,0x7ffad1f6fb64,303208068,0,0x0,8
tick,0x7ffad1f6fb64,303224097,0,0x0,8
tick,0x7ffad1f6fb64,303240093,0,0x0,8
tick,0x7ffad1f6fb64,303255246,0,0x0,8
tick,0x7ffad1f6fb64,303271153,0,0x0,8
tick,0x7ffad1f6fb64,303286128,0,0x0,8
tick,0x7ffad1f6fb64,303301142,0,0x0,8
tick,0x7ffad1f6fb64,303317178,0,0x0,8
tick,0x7ffad1f6fb64,303333184,0,0x0,8
tick,0x7ffad1f6fb64,303348200,0,0x0,8
tick,0x7ffad1f6fb64,303363216,0,0x0,8
tick,0x7ffad1f6fb64,303378244,0,0x0,8
tick,0x7ffad1f6fb64,303394236,0,0x0,8
tick,0x7ffad1f6fb64,303409252,0,0x0,8
tick,0x7ffad1f6fb64,303425318,0,0x0,8
tick,0x7ffad1f6fb64,303440313,0,0x0,8
tick,0x7ffad1f6fb64,303456322,0,0x0,8
tick,0x7ffad1f6fb64,303472314,0,0x0,8
tick,0x7ffad1f6fb64,303488326,0,0x0,8
tick,0x7ffad1f6fb64,303503370,0,0x0,8
tick,0x7ffad1f6fb64,303519358,0,0x0,8
tick,0x7ffad1f6fb64,303535363,0,0x0,8
tick,0x7ffad1f6fb64,303550385,0,0x0,8
tick,0x7ffad1f6fb64,303565391,0,0x0,8
tick,0x7ffad1f6fb64,303580409,0,0x0,8
tick,0x7ffad1f6fb64,303595463,0,0x0,8
tick,0x7ffad1f6fb64,303611451,0,0x0,8
tick,0x7ffad1f6fb64,303626470,0,0x0,8
tick,0x7ffad1f6fb64,303642476,0,0x0,8
tick,0x7ffad1f6fb64,303657474,0,0x0,8
tick,0x7ffad1f6fb64,303673514,0,0x0,8
tick,0x7ffad1f6fb64,303688512,0,0x0,8
tick,0x7ffad1f6fb64,303704518,0,0x0,8
tick,0x7ffad1f6fb64,303720523,0,0x0,8
tick,0x7ffad1f6fb64,303736557,0,0x0,8
tick,0x7ffad1f6fb64,303751561,0,0x0,8
tick,0x7ffad1f6fb64,303766594,0,0x0,8
tick,0x7ffad1f6fb64,303781587,0,0x0,8
tick,0x7ffad1f6fb64,303796666,0,0x0,8
tick,0x7ffad1f6fb64,303812615,0,0x0,8
tick,0x7ffad1f6fb64,303828644,0,0x0,8
tick,0x7ffad1f6fb64,303844641,0,0x0,8
tick,0x7ffad1f6fb64,303860685,0,0x0,8
tick,0x7ffad1f6fb64,303875705,0,0x0,8
tick,0x7ffad1f6fb64,303890719,0,0x0,8
tick,0x7ffad1f6fb64,303906705,0,0x0,8
tick,0x7ffad1f6fb64,303922722,0,0x0,8
tick,0x7ffad1f6fb64,303938780,0,0x0,8
tick,0x7ffad1f6fb64,303953742,0,0x0,8
tick,0x7ffad1f6fb64,303969768,0,0x0,8
tick,0x7ffad1f6fb64,303984790,0,0x0,8
tick,0x7ffad1f6fb64,303999783,0,0x0,8
tick,0x7ffad1f6fb64,304015801,0,0x0,8
tick,0x7ffad1f6fb64,304030812,0,0x0,8
tick,0x7ffad1f6fb64,304046834,0,0x0,8
tick,0x7ffad1f6fb64,304061830,0,0x0,8
tick,0x7ffad1f6fb64,304077988,0,0x0,8
tick,0x7ffad1f6fb64,304093888,0,0x0,8
tick,0x7ffad1f6fb64,304108891,0,0x0,8
tick,0x7ffad1f6fb64,304124906,0,0x0,8
tick,0x7ffad1f6fb64,304139909,0,0x0,8
tick,0x7ffad1f6fb64,304155928,0,0x0,8
tick,0x7ffad1f6fb64,304171958,0,0x0,8
tick,0x7ffad1f6fb64,304187968,0,0x0,8
tick,0x7ffad1f6fb64,304203000,0,0x0,8
tick,0x7ffad1f6fb64,304219005,0,0x0,8
tick,0x7ffad1f6fb64,304235038,0,0x0,8
tick,0x7ffad1f6fb64,304250031,0,0x0,8
tick,0x7ffad1f6fb64,304266016,0,0x0,8
tick,0x7ffad1f6fb64,304281055,0,0x0,8
tick,0x7ffad1f6fb64,304296068,0,0x0,8
tick,0x7ffad1f6fb64,304312112,0,0x0,8
tick,0x7ffad1f6fb64,304328073,0,0x0,8
tick,0x7ffad1f6fb64,304344110,0,0x0,8
tick,0x7ffad1f6fb64,304360116,0,0x0,8
tick,0x7ffad1f6fb64,304376134,0,0x0,8
tick,0x7ffad1f6fb64,304391154,0,0x0,8
tick,0x7ffad1f6fb64,304406160,0,0x0,8
tick,0x7ffad1f6fb64,304421188,0,0x0,8
tick,0x7ffad1f6fb64,304437195,0,0x0,8
tick,0x7ffad1f6fb64,304453243,0,0x0,8
tick,0x7ffad1f6fb64,304469263,0,0x0,8
tick,0x7ffad1f6fb64,304485247,0,0x0,8
tick,0x7ffad1f6fb64,304501254,0,0x0,8
tick,0x7ffad1f6fb64,304516270,0,0x0,8
tick,0x7ffad1f6fb64,304532286,0,0x0,8
tick,0x7ffad1f6fb64,304547299,0,0x0,8
tick,0x7ffad1f6fb64,304563316,0,0x0,8
tick,0x7ffad1f6fb64,304578315,0,0x0,8
tick,0x7ffad1f6fb64,304594325,0,0x0,8
tick,0x7ffad1f6fb64,304609371,0,0x0,8
tick,0x7ffad1f6fb64,304625362,0,0x0,8
tick,0x7ffad1f6fb64,304640382,0,0x0,8
tick,0x7ffad1f6fb64,304656397,0,0x0,8
tick,0x7ffad1f6fb64,304671403,0,0x0,8
tick,0x7ffad1f6fb64,304687431,0,0x0,8
tick,0x7ffad1f6fb64,304703517,0,0x0,8
tick,0x7ffad1f6fb64,304718455,0,0x0,8
tick,0x7ffad1f6fb64,304734501,0,0x0,8
tick,0x7ffad1f6fb64,304750504,0,0x0,8
tick,0x7ffad1f6fb64,304766504,0,0x0,8
tick,0x7ffad1f6fb64,304782607,0,0x0,8
tick,0x7ffad1f6fb64,304797526,0,0x0,8
tick,0x7ffad1f6fb64,304813604,0,0x0,8
tick,0x7ffad1f6fb64,304828568,0,0x0,8
tick,0x7ffad1f6fb64,304844585,0,0x0,8
tick,0x7ffad1f6fb64,304859571,0,0x0,8
tick,0x7ffad1f6fb64,304875587,0,0x0,8
tick,0x7ffad1f6fb64,304891643,0,0x0,8
tick,0x7ffad1f6fb64,304907616,0,0x0,8
tick,0x7ffad1f6fb64,304922629,0,0x0,8
tick,0x7ffad1f6fb64,304937658,0,0x0,8
tick,0x7ffad1f6fb64,304953672,0,0x0,8
tick,0x7ffad1f6fb64,304969699,0,0x0,8
tick,0x7ffad1f6fb64,304984770,0,0x0,8
tick,0x7ffad1f6fb64,304999724,0,0x0,8
tick,0x7ffad1f6fb64,305014729,0,0x0,8
tick,0x7ffad1f6fb64,305030729,0,0x0,8
tick,0x7ffad1f6fb64,305046744,0,0x0,8
tick,0x7ffad1f6fb64,305061753,0,0x0,8
tick,0x7ffad1f6fb64,305077787,0,0x0,8
tick,0x7ffad1f6fb64,305093822,0,0x0,8
tick,0x7ffad1f6fb64,305108826,0,0x0,8
tick,0x7ffad1f6fb64,305123817,0,0x0,8
tick,0x7ffad1f6fb64,305139824,0,0x0,8
tick,0x7ffad1f6fb64,305155851,0,0x0,8
tick,0x7ffad1f6fb64,305171877,0,0x0,8
tick,0x7ffad1f6fb64,305187892,0,0x0,8
tick,0x7ffad1f6fb64,305202888,0,0x0,8
tick,0x7ffad1f6fb64,305217903,0,0x0,8
tick,0x7ffad1f6fb64,305233960,0,0x0,8
tick,0x7ffad1f6fb64,305248920,0,0x0,8
tick,0x7ffad1f6fb64,305264957,0,0x0,8
tick,0x7ffad1f6fb64,305280964,0,0x0,8
tick,0x7ffad1f6fb64,305296007,0,0x0,8
tick,0x7ffad1f6fb64,305310992,0,0x0,8
tick,0x7ffad1f6fb64,305327001,0,0x0,8
tick,0x7ffad1f6fb64,305342048,0,0x0,8
tick,0x7ffad1f6fb64,305358165,0,0x0,8
tick,0x7ffad1f6fb64,305374056,0,0x0,8
tick,0x7ffad1f6fb64,305390073,0,0x0,8
tick,0x7ffad1f6fb64,305405120,0,0x0,8
tick,0x7ffad1f6fb64,305420084,0,0x0,8
tick,0x7ffad1f6fb64,305436116,0,0x0,8
tick,0x7ffad1f6fb64,305452160,0,0x0,8
tick,0x7ffad1f6fb64,305468131,0,0x0,8
tick,0x7ffad1f6fb64,305483156,0,0x0,8
tick,0x7ffad1f6fb64,305498154,0,0x0,8
tick,0x7ffad1f6fb64,305514172,0,0x0,8
tick,0x7ffad1f6fb64,305530253,0,0x0,8
tick,0x7ffad1f6fb64,305546309,0,0x0,8
tick,0x7ffad1f6fb64,305562225,0,0x0,8
tick,0x7ffad1f6fb64,305577225,0,0x0,8
tick,0x7ffad1f6fb64,305593251,0,0x0,8
tick,0x7ffad1f6fb64,305609270,0,0x0,8
tick,0x7ffad1f6fb64,305625359,0,0x0,8
tick,0x7ffad1f6fb64,305640276,0,0x0,8
tick,0x7ffad1f6fb64,305656297,0,0x0,8
tick,0x7ffad1f6fb64,305671316,0,0x0,8
tick,0x7ffad1f6fb64,305687324,0,0x0,8
tick,0x7ffad1f6fb64,305703338,0,0x0,8
tick,0x7ffad1f6fb64,305719350,0,0x0,8
tick,0x7ffad1f6fb64,305735398,0,0x0,8
tick,0x7ffad1f6fb64,305750374,0,0x0,8
tick,0x7ffad1f6fb64,305766413,0,0x0,8
tick,0x7ffad1f6fb64,305782409,0,0x0,8
tick,0x7ffad1f6fb64,305797462,0,0x0,8
tick,0x7ffad1f6fb64,305813434,0,0x0,8
tick,0x7ffad1f6fb64,305829452,0,0x0,8
tick,0x7ffad1f6fb64,305844488,0,0x0,8
tick,0x7ffad1f6fb64,305860527,0,0x0,8
tick,0x7ffad1f6fb64,305875517,0,0x0,8
tick,0x7ffad1f6fb64,305891503,0,0x0,8
tick,0x7ffad1f6fb64,305906526,0,0x0,8
tick,0x7ffad1f6fb64,305922557,0,0x0,8
tick,0x7ffad1f6fb64,305937554,0,0x0,8
tick,0x7ffad1f6fb64,305953582,0,0x0,8
tick,0x7ffad1f6fb64,305969569,0,0x0,8
tick,0x7ffad1f6fb64,305984645,0,0x0,8
tick,0x7ffad1f6fb64,305999618,0,0x0,8
tick,0x7ffad1f6fb64,306015612,0,0x0,8
tick,0x7ffad1f6fb64,306030628,0,0x0,8
tick,0x7ffad1f6fb64,306045648,0,0x0,8
tick,0x7ffad1f6fb64,306061683,0,0x0,8
tick,0x7ffad1f6fb64,306076675,0,0x0,8
tick,0x7ffad1f6fb64,306092711,0,0x0,8
tick,0x7ffad1f6fb64,306108714,0,0x0,8
tick,0x7ffad1f6fb64,306124763,0,0x0,8
tick,0x7ffad1f6fb64,306140746,0,0x0,8
tick,0x7ffad1f6fb64,306156741,0,0x0,8
tick,0x7ffad1f6fb64,306172782,0,0x0,8
tick,0x7ffad1f6fb64,306188780,0,0x0,8
tick,0x7ffad1f6fb64,306204790,0,0x0,8
tick,0x7ffad1f6fb64,306220810,0,0x0,8
tick,0x7ffad1f6fb64,306235842,0,0x0,8
tick,0x7ffad1f6fb64,306251834,0,0x0,8
tick,0x7ffad1f6fb64,306266840,0,0x0,8
tick,0x7ffad1f6fb64,306281875,0,0x0,8
tick,0x7ffad1f6fb64,306297874,0,0x0,8
tick,0x7ffad1f6fb64,306312910,0,0x0,8
tick,0x7ffad1f6fb64,306328906,0,0x0,8
tick,0x7ffad1f6fb64,306344914,0,0x0,8
tick,0x7ffad1f6fb64,306360951,0,0x0,8
tick,0x7ffad1f6fb64,306376957,0,0x0,8
tick,0x7ffad1f6fb64,306392989,0,0x0,8
tick,0x7ffad1f6fb64,306408969,0,0x0,8
tick,0x7ffad1f6fb64,306425001,0,0x0,8
tick,0x7ffad1f6fb64,306441009,0,0x0,8
tick,0x7ffad1f6fb64,306457027,0,0x0,8
tick,0x7ffad1f6fb64,306473035,0,0x0,8
tick,0x7ffad1f6fb64,306489054,0,0x0,8
tick,0x7ffad1f6fb64,306505080,0,0x0,8
tick,0x7ffad1f6fb64,306520071,0,0x0,8
tick,0x7ffad1f6fb64,306536089,0,0x0,8
tick,0x7ffad1f6fb64,306552100,0,0x0,8
tick,0x7ffad1f6fb64,306567120,0,0x0,8
tick,0x7ffad1f6fb64,306582128,0,0x0,8
tick,0x7ffad1f6fb64,306598156,0,0x0,8
tick,0x7ffad1f6fb64,306614183,0,0x0,8
tick,0x7ffad1f6fb64,306630184,0,0x0,8
tick,0x7ffad1f6fb64,306645212,0,0x0,8
tick,0x7ffad1f6fb64,306661198,0,0x0,8
tick,0x7ffad1f6fb64,306677402,0,0x0,8
tick,0x7ffad1f6fb64,306693247,0,0x0,8
tick,0x7ffad1f6fb64,306708246,0,0x0,8
tick,0x7ffad1f6fb64,306723284,0,0x0,8
tick,0x7ffad1f6fb64,306739278,0,0x0,8
tick,0x7ffad1f6fb64,306755301,0,0x0,8
tick,0x7ffad1f6fb64,306771310,0,0x0,8
tick,0x7ffad1f6fb64,306787327,0,0x0,8
tick,0x7ffad1f6fb64,306803347,0,0x0,8
tick,0x7ffad1f6fb64,306818370,0,0x0,8
tick,0x7ffad1f6fb64,306834379,0,0x0,8
tick,0x7ffad1f6fb64,306850367,0,0x0,8
tick,0x7ffad1f6fb64,306866421,0,0x0,8
tick,0x7ffad1f6fb64,306882417,0,0x0,8
tick,0x7ffad1f6fb64,306897434,0,0x0,8
tick,0x7ffad1f6fb64,306913432,0,0x0,8
tick,0x7ffad1f6fb64,306929459,0,0x0,8
tick,0x7ffad1f6fb64,306945477,0,0x0,8
tick,0x7ffad1f6fb64,306960550,0,0x0,8
tick,0x7ffad1f6fb64,306975484,0,0x0,8
tick,0x7ffad1f6fb64,306991560,0,0x0,8
tick,0x7ffad1f6fb64,307007536,0,0x0,8
tick,0x7ffad1f6fb64,307023592,0,0x0,8
tick,0x7ffad1f6fb64,307039572,0,0x0,8
tick,0x7ffad1f6fb64,307055656,0,0x0,8
tick,0x7ffad1f6fb64,307070631,0,0x0,8
tick,0x7ffad1f6fb64,307085624,0,0x0,8
tick,0x7ffad1f6fb64,307101628,0,0x0,8
tick,0x7ffad1f6fb64,307116710,0,0x0,8
tick,0x7ffad1f6fb64,307132680,0,0x0,8
tick,0x7ffad1f6fb64,307147679,0,0x0,8
tick,0x7ffad1f6fb64,307163693,0,0x0,8
tick,0x7ffad1f6fb64,307179729,0,0x0,8
tick,0x7ffad1f6fb64,307195709,0,0x0,8
tick,0x7ffad1f6fb64,307210925,0,0x0,8
tick,0x7ffad1f6fb64,307225766,0,0x0,8
tick,0x7ffad1f6fb64,307240767,0,0x0,8
tick,0x7ffad1f6fb64,307256768,0,0x0,8
tick,0x7ffad1f6fb64,307271793,0,0x0,8
tick,0x7ffad1f6fb64,307287774,0,0x0,8
tick,0x7ffad1f6fb64,307302875,0,0x0,8
tick,0x7ffad1f6fb64,307318821,0,0x0,8
tick,0x7ffad1f6fb64,307334853,0,0x0,8
tick,0x7ffad1f6fb64,307349834,0,0x0,8
tick,0x7ffad1f6fb64,307364872,0,0x0,8
tick,0x7ffad1f6fb64,307379865,0,0x0,8
tick,0x7ffad1f6fb64,307395899,0,0x0,8
tick,0x7ffad1f6fb64,307411892,0,0x0,8
tick,0x7ffad1f6fb64,307426943,0,0x0,8
tick,0x7ffad1f6fb64,307442926,0,0x0,8
tick,0x7ffad1f6fb64,307458937,0,0x0,8
tick,0x7ffad1f6fb64,307474972,0,0x0,8
tick,0x7ffad1f6fb64,307491072,0,0x0,8
tick,0x7ffad1f6fb64,307506081,0,0x0,8
tick,0x7ffad1f6fb64,307521002,0,0x0,8
tick,0x7ffad1f6fb64,307537028,0,0x0,8
tick,0x7ffad1f6fb64,307553009,0,0x0,8
tick,0x7ffad1f6fb64,307568037,0,0x0,8
tick,0x7ffad1f6fb64,307584054,0,0x0,8
tick,0x7ffad1f6fb64,307600074,0,0x0,8
tick,0x7ffad1f6fb64,307616070,0,0x0,8
tick,0x7ffad1f6fb64,307632146,0,0x0,8
tick,0x7ffad1f6fb64,307647098,0,0x0,8
tick,0x7ffad1f6fb64,307663113,0,0x0,8
tick,0x7ffad1f6fb64,307678218,0,0x0,8
tick,0x7ffad1f6fb64,307693181,0,0x0,8
tick,0x7ffad1f6fb64,307708175,0,0x0,8
tick,0x7ffad1f6fb64,307724225,0,0x0,8
tick,0x7ffad1f6fb64,307740221,0,0x0,8
tick,0x7ffad1f6fb64,307755210,0,0x0,8
tick,0x7ffad1f6fb64,307770212,0,0x0,8
tick,0x7ffad1f6fb64,307786262,0,0x0,8
tick,0x7ffad1f6fb64,307802250,0,0x0,8
tick,0x7ffad1f6fb64,307818290,0,0x0,8
tick,0x7ffad1f6fb64,307833280,0,0x0,8
tick,0x7ffad1f6fb64,307849501,0,0x0,8
tick,0x7ffad1f6fb64,307865355,0,0x0,8
tick,0x7ffad1f6fb64,307880354,0,0x0,8
tick,0x7ffad1f6fb64,307895333,0,0x0,8
tick,0x7ffad1f6fb64,307910346,0,0x0,8
tick,0x7ffad1f6fb64,307925372,0,0x0,8
tick,0x7ffad1f6fb64,307940400,0,0x0,8
tick,0x7ffad1f6fb64,307956374,0,0x0,8
tick,0x7ffad1f6fb64,307972464,0,0x0,8
tick,0x7ffad1f6fb64,307988560,0,0x0,8
tick,0x7ffad1f6fb64,308003452,0,0x0,8
tick,0x7ffad1f6fb64,308019524,0,0x0,8
tick,0x7ffad1f6fb64,308035492,0,0x0,8
tick,0x7ffad1f6fb64,308051500,0,0x0,8
tick,0x7ffad1f6fb64,308066544,0,0x0,8
tick,0x7ffad1f6fb64,308081529,0,0x0,8
tick,0x7ffad1f6fb64,308096558,0,0x0,8
tick,0x7ffad1f6fb64,308112556,0,0x0,8
tick,0x7ffad1f6fb64,308127559,0,0x0,8
tick,0x7ffad1f6fb64,308143560,0,0x0,8
tick,0x7ffad1f6fb64,308158642,0,0x0,8
tick,0x7ffad1f6fb64,308174609,0,0x0,8
tick,0x7ffad1f6fb64,308189636,0,0x0,8
tick,0x7ffad1f6fb64,308205619,0,0x0,8
tick,0x7ffad1f6fb64,308221626,0,0x0,8
tick,0x7ffad1f6fb64,308237696,0,0x0,8
tick,0x7ffad1f6fb64,308252699,0,0x0,8
tick,0x7ffad1f6fb64,308268669,0,0x0,8
tick,0x7ffad1f6fb64,308284691,0,0x0,8
tick,0x7ffad1f6fb64,308299709,0,0x0,8
tick,0x7ffad1f6fb64,308315717,0,0x0,8
tick,0x7ffad1f6fb64,308331725,0,0x0,8
tick,0x7ffad1f6fb64,308347736,0,0x0,8
tick,0x7ffad1f6fb64,308363813,0,0x0,8
tick,0x7ffad1f6fb64,308379778,0,0x0,8
tick,0x7ffad1f6fb64,308394793,0,0x0,8
tick,0x7ffad1f6fb64,308409826,0,0x0,8
tick,0x7ffad1f6fb64,308424821,0,0x0,8
tick,0x7ffad1f6fb64,308439828,0,0x0,8
tick,0x7ffad1f6fb64,308455832,0,0x0,8
tick,0x7ffad1f6fb64,308471881,0,0x0,8
tick,0x7ffad1f6fb64,308487888,0,0x0,8
tick,0x7ffad1f6fb64,308502881,0,0x0,8
tick,0x7ffad1f6fb64,308518951,0,0x0,8
tick,0x7ffad1f6fb64,308534970,0,0x0,8
tick,0x7ffad1f6fb64,308550955,0,0x0,8
tick,0x7ffad1f6fb64,308565954,0,0x0,8
tick,0x7ffad1f6fb64,308580978,0,0x0,8
tick,0x7ffad1f6fb64,308595984,0,0x0,8
tick,0x7ffad1f6fb64,308612049,0,0x0,8
tick,0x7ffad1f6fb64,308628034,0,0x0,8
tick,0x7ffad1f6fb64,308644031,0,0x0,8
tick,0x7ffad1f6fb64,308660058,0,0x0,8
tick,0x7ffad1f6fb64,308676062,0,0x0,8
tick,0x7ffad1f6fb64,308691110,0,0x0,8
tick,0x7ffad1f6fb64,308706096,0,0x0,8
tick,0x7ffad1f6fb64,308721096,0,0x0,8
tick,0x7ffad1f6fb64,308737137,0,0x0,8
tick,0x7ffad1f6fb64,308753127,0,0x0,8
tick,0x7ffad1f6fb64,308769137,0,0x0,8
tick,0x7ffad1f6fb64,308784136,0,0x0,8
tick,0x7ffad1f6fb64,308800178,0,0x0,8
tick,0x7ffad1f6fb64,308816171,0,0x0,8
tick,0x7ffad1f6fb64,308832217,0,0x0,8
tick,0x7ffad1f6fb64,308848245,0,0x0,8
tick,0x7ffad1f6fb64,308863261,0,0x0,8
tick,0x7ffad1f6fb64,308878265,0,0x0,8
tick,0x7ffad1f6fb64,308894271,0,0x0,8
tick,0x7ffad1f6fb64,308909282,0,0x0,8
tick,0x7ffad1f6fb64,308924288,0,0x0,8
tick,0x7ffad1f6fb64,308940278,0,0x0,8
tick,0x7ffad1f6fb64,308956304,0,0x0,8
tick,0x7ffad1f6fb64,308972338,0,0x0,8
tick,0x7ffad1f6fb64,308988346,0,0x0,8
tick,0x7ffad1f6fb64,309004340,0,0x0,8
tick,0x7ffad1f6fb64,309020389,0,0x0,8
tick,0x7ffad1f6fb64,309036416,0,0x0,8
tick,0x7ffad1f6fb64,309052385,0,0x0,8
tick,0x7ffad1f6fb64,309067420,0,0x0,8
tick,0x7ffad1f6fb64,309082420,0,0x0,8
tick,0x7ffad1f6fb64,309097451,0,0x0,8
tick,0x7ffad1f6fb64,309113479,0,0x0,8
tick,0x7ffad1f6fb64,309128448,0,0x0,8
tick,0x7ffad1f6fb64,309143501,0,0x0,8
tick,0x7ffad1f6fb64,309158485,0,0x0,8
tick,0x7ffad1f6fb64,309173519,0,0x0,8
tick,0x7ffad1f6fb64,309189549,0,0x0,8
tick,0x7ffad1f6fb64,309205524,0,0x0,8
tick,0x7ffad1f6fb64,309220546,0,0x0,8
tick,0x7ffad1f6fb64,309236574,0,0x0,8
tick,0x7ffad1f6fb64,309252562,0,0x0,8
tick,0x7ffad1f6fb64,309267589,0,0x0,8
tick,0x7ffad1f6fb64,309283596,0,0x0,8
tick,0x7ffad1f6fb64,309299603,0,0x0,8
tick,0x7ffad1f6fb64,309314627,0,0x0,8
tick,0x7ffad1f6fb64,309330635,0,0x0,8
tick,0x7ffad1f6fb64,309346665,0,0x0,8
tick,0x7ffad1f6fb64,309362680,0,0x0,8
tick,0x7ffad1f6fb64,309377704,0,0x0,8
tick,0x7ffad1f6fb64,309392730,0,0x0,8
tick,0x7ffad1f6fb64,309408727,0,0x0,8
tick,0x7ffad1f6fb64,309423752,0,0x0,8
tick,0x7ffad1f6fb64,309439789,0,0x0,8
tick,0x7ffad1f6fb64,309454765,0,0x0,8
tick,0x7ffad1f6fb64,309469775,0,0x0,8
tick,0x7ffad1f6fb64,309485803,0,0x0,8
tick,0x7ffad1f6fb64,309501794,0,0x0,8
tick,0x7ffad1f6fb64,309516805,0,0x0,8
tick,0x7ffad1f6fb64,309532826,0,0x0,8
tick,0x7ffad1f6fb64,309547862,0,0x0,8
tick,0x7ffad1f6fb64,309563864,0,0x0,8
tick,0x7ffad1f6fb64,309578854,0,0x0,8
tick,0x7ffad1f6fb64,309593946,0,0x0,8
tick,0x7ffad1f6fb64,309608901,0,0x0,8
tick,0x7ffad1f6fb64,309624908,0,0x0,8
tick,0x7ffad1f6fb64,309639929,0,0x0,8
tick,0x7ffad1f6fb64,309655935,0,0x0,8
tick,0x7ffad1f6fb64,309671965,0,0x0,8
tick,0x7ffad1f6fb64,309686966,0,0x0,8
tick,0x7ffad1f6fb64,309702018,0,0x0,8
tick,0x7ffad1f6fb64,309717990,0,0x0,8
tick,0x7ffad1f6fb64,309734038,0,0x0,8
tick,0x7ffad1f6fb64,309749019,0,0x0,8
tick,0x7ffad1f6fb64,309765029,0,0x0,8
tick,0x7ffad1f6fb64,309780074,0,0x0,8
tick,0x7ffad1f6fb64,309795075,0,0x0,8
tick,0x7ffad1f6fb64,309811073,0,0x0,8
tick,0x7ffad1f6fb64,309827090,0,0x0,8
tick,0x7ffad1f6fb64,309843117,0,0x0,8
tick,0x7ffad1f6fb64,309859137,0,0x0,8
tick,0x7ffad1f6fb64,309875180,0,0x0,8
tick,0x7ffad1f6fb64,309891135,0,0x0,8
tick,0x7ffad1f6fb64,309906204,0,0x0,8
tick,0x7ffad1f6fb64,309921176,0,0x0,8
tick,0x7ffad1f6fb64,309936220,0,0x0,8
tick,0x7ffad1f6fb64,309951195,0,0x0,8
tick,0x7ffad1f6fb64,309966243,0,0x0,8
tick,0x7ffad1f6fb64,309982242,0,0x0,8
tick,0x7ffad1f6fb64,309997276,0,0x0,8
tick,0x7ffad1f6fb64,310012286,0,0x0,8
tick,0x7ffad1f6fb64,310027293,0,0x0,8
tick,0x7ffad1f6fb64,310043292,0,0x0,8
tick,0x7ffad1f6fb64,310059372,0,0x0,8
tick,0x7ffad1f6fb64,310075319,0,0x0,8
tick,0x7ffad1f6fb64,310091326,0,0x0,8
tick,0x7ffad1f6fb64,310107364,0,0x0,8
tick,0x7ffad1f6fb64,310122357,0,0x0,8
tick,0x7ffad1f6fb64,310137366,0,0x0,8
tick,0x7ffad1f6fb64,310152389,0,0x0,8
tick,0x7ffad1f6fb64,310167410,0,0x0,8
tick,0x7ffad1f6fb64,310182415,0,0x0,8
tick,0x7ffad1f6fb64,310197468,0,0x0,8
tick,0x7ffad1f6fb64,310213485,0,0x0,8
tick,0x7ffad1f6fb64,310229518,0,0x0,8
tick,0x7ffad1f6fb64,310245476,0,0x0,8
tick,0x7ffad1f6fb64,310261508,0,0x0,8
tick,0x7ffad1f6fb64,310277505,0,0x0,8
tick,0x7ffad1f6fb64,310293537,0,0x0,8
tick,0x7ffad1f6fb64,310309539,0,0x0,8
tick,0x7ffad1f6fb64,310325560,0,0x0,8
tick,0x7ffad1f6fb64,310340545,0,0x0,8
tick,0x7ffad1f6fb64,310356583,0,0x0,8
tick,0x7ffad1f6fb64,310372603,0,0x0,8
tick,0x7ffad1f6fb64,310388608,0,0x0,8
tick,0x7ffad1f6fb64,310404614,0,0x0,8
tick,0x7ffad1f6fb64,310420688,0,0x0,8
tick,0x7ffad1f6fb64,310435669,0,0x0,8
tick,0x7ffad1f6fb64,310450661,0,0x0,8
tick,0x7ffad1f6fb64,310466681,0,0x0,8
tick,0x7ffad1f6fb64,310481713,0,0x0,8
tick,0x7ffad1f6fb64,310496706,0,0x0,8
tick,0x7ffad1f6fb64,310512709,0,0x0,8
tick,0x7ffad1f6fb64,310528724,0,0x0,8
tick,0x7ffad1f6fb64,310544763,0,0x0,8
tick,0x7ffad1f6fb64,310559790,0,0x0,8
tick,0x7ffad1f6fb64,310574802,0,0x0,8
tick,0x7ffad1f6fb64,310589792,0,0x0,8
tick,0x7ffad1f6fb64,310605804,0,0x0,8
tick,0x7ffad1f6fb64,310621831,0,0x0,8
tick,0x7ffad1f6fb64,310636844,0,0x0,8
tick,0x7ffad1f6fb64,310652920,0,0x0,8
tick,0x7ffad1f6fb64,310668868,0,0x0,8
tick,0x7ffad1f6fb64,310684902,0,0x0,8
tick,0x7ffad1f6fb64,310700888,0,0x0,8
tick,0x7ffad1f6fb64,310715901,0,0x0,8
tick,0x7ffad1f6fb64,310732134,0,0x0,8
tick,0x7ffad1f6fb64,310748009,0,0x0,8
tick,0x7ffad1f6fb64,310762952,0,0x0,8
tick,0x7ffad1f6fb64,310778995,0,0x0,8
tick,0x7ffad1f6fb64,310794968,0,0x0,8
tick,0x7ffad1f6fb64,310810003,0,0x0,8
tick,0x7ffad1f6fb64,310826005,0,0x0,8
tick,0x7ffad1f6fb64,310842016,0,0x0,8
tick,0x7ffad1f6fb64,310857032,0,0x0,8
tick,0x7ffad1f6fb64,310873061,0,0x0,8
tick,0x7ffad1f6fb64,310888066,0,0x0,8
tick,0x7ffad1f6fb64,310903068,0,0x0,8
tick,0x7ffad1f6fb64,310919092,0,0x0,8
tick,0x7ffad1f6fb64,310935117,0,0x0,8
tick,0x7ffad1f6fb64,310950095,0,0x0,8
tick,0x7ffad1f6fb64,310965126,0,0x0,8
tick,0x7ffad1f6fb64,310980159,0,0x0,8
tick,0x7ffad1f6fb64,310995195,0,0x0,8
tick,0x7ffad1f6fb64,311011179,0,0x0,8
tick,0x7ffad1f6fb64,311027234,0,0x0,8
tick,0x7ffad1f6fb64,311042220,0,0x0,8
tick,0x7ffad1f6fb64,311058208,0,0x0,8
tick,0x7ffad1f6fb64,311074222,0,0x0,8
tick,0x7ffad1f6fb64,311090283,0,0x0,8
tick,0x7ffad1f6fb64,311106257,0,0x0,8
tick,0x7ffad1f6fb64,311121278,0,0x0,8
tick,0x7ffad1f6fb64,311137283,0,0x0,8
tick,0x7ffad1f6fb64,311153283,0,0x0,8
tick,0x7ffad1f6fb64,311169337,0,0x0,8
tick,0x7ffad1f6fb64,311185340,0,0x0,8
tick,0x7ffad1f6fb64,311201343,0,0x0,8
tick,0x7ffad1f6fb64,311217346,0,0x0,8
tick,0x7ffad1f6fb64,311233380,0,0x0,8
tick,0x7ffad1f6fb64,311249395,0,0x0,8
tick,0x7ffad1f6fb64,311264409,0,0x0,8
tick,0x7ffad1f6fb64,311279447,0,0x0,8
tick,0x7ffad1f6fb64,311295439,0,0x0,8
tick,0x7ffad1f6fb64,311310453,0,0x0,8
tick,0x7ffad1f6fb64,311325451,0,0x0,8
tick,0x7ffad1f6fb64,311340471,0,0x0,8
tick,0x7ffad1f6fb64,311355477,0,0x0,8
tick,0x7ffad1f6fb64,311371506,0,0x0,8
tick,0x7ffad1f6fb64,311387531,0,0x0,8
tick,0x7ffad1f6fb64,311403543,0,0x0,8
tick,0x7ffad1f6fb64,311419581,0,0x0,8
tick,0x7ffad1f6fb64,311434560,0,0x0,8
tick,0x7ffad1f6fb64,311449605,0,0x0,8
tick,0x7ffad1f6fb64,311465843,0,0x0,8
tick,0x7ffad1f6fb64,311480609,0,0x0,8
tick,0x7ffad1f6fb64,311496620,0,0x0,8
tick,0x7ffad1f6fb64,311511666,0,0x0,8
tick,0x7ffad1f6fb64,311527662,0,0x0,8
tick,0x7ffad1f6fb64,311542667,0,0x0,8
tick,0x7ffad1f6fb64,311558676,0,0x0,8
tick,0x7ffad1f6fb64,311574732,0,0x0,8
tick,0x7ffad1f6fb64,311589698,0,0x0,8
tick,0x7ffad1f6fb64,311605744,0,0x0,8
tick,0x7ffad1f6fb64,311620740,0,0x0,8
tick,0x7ffad1f6fb64,311636781,0,0x0,8
tick,0x7ffad1f6fb64,311652764,0,0x0,8
tick,0x7ffad1f6fb64,311667815,0,0x0,8
tick,0x7ffad1f6fb64,311682818,0,0x0,8
tick,0x7ffad1f6fb64,311697796,0,0x0,8
tick,0x7ffad1f6fb64,311713810,0,0x0,8
tick,0x7ffad1f6fb64,311729831,0,0x0,8
tick,0x7ffad1f6fb64,311745906,0,0x0,8
tick,0x7ffad1f6fb64,311761873,0,0x0,8
tick,0x7ffad1f6fb64,311776871,0,0x0,8
tick,0x7ffad1f6fb64,311792919,0,0x0,8
tick,0x7ffad1f6fb64,311807908,0,0x0,8
tick,0x7ffad1f6fb64,311823916,0,0x0,8
tick,0x7ffad1f6fb64,311839930,0,0x0,8
tick,0x7ffad1f6fb64,311855946,0,0x0,8
tick,0x7ffad1f6fb64,311871970,0,0x0,8
tick,0x7ffad1f6fb64,311886982,0,0x0,8
tick,0x7ffad1f6fb64,311902985,0,0x0,8
tick,0x7ffad1f6fb64,311919012,0,0x0,8
tick,0x7ffad1f6fb64,311935036,0,0x0,8
tick,0x7ffad1f6fb64,311950022,0,0x0,8
tick,0x7ffad1f6fb64,311966056,0,0x0,8
tick,0x7ffad1f6fb64,311982058,0,0x0,8
tick,0x7ffad1f6fb64,311998077,0,0x0,8
tick,0x7ffad1f6fb64,312014101,0,0x0,8
tick,0x7ffad1f6fb64,312030102,0,0x0,8
tick,0x7ffad1f6fb64,312046107,0,0x0,8
tick,0x7ffad1f6fb64,312062126,0,0x0,8
tick,0x7ffad1f6fb64,312078157,0,0x0,8
tick,0x7ffad1f6fb64,312094157,0,0x0,8
tick,0x7ffad1f6fb64,312110197,0,0x0,8
tick,0x7ffad1f6fb64,312126195,0,0x0,8
tick,0x7ffad1f6fb64,312142196,0,0x0,8
tick,0x7ffad1f6fb64,312158199,0,0x0,8
tick,0x7ffad1f6fb64,312174255,0,0x0,8
tick,0x7ffad1f6fb64,312190266,0,0x0,8
tick,0x7ffad1f6fb64,312206250,0,0x0,8
tick,0x7ffad1f6fb64,312221268,0,0x0,8
tick,0x7ffad1f6fb64,312237278,0,0x0,8
tick,0x7ffad1f6fb64,312253287,0,0x0,8
tick,0x7ffad1f6fb64,312269324,0,0x0,8
tick,0x7ffad1f6fb64,312285342,0,0x0,8
tick,0x7ffad1f6fb64,312301346,0,0x0,8
tick,0x7ffad1f6fb64,312316357,0,0x0,8
tick,0x7ffad1f6fb64,312332366,0,0x0,8
tick,0x7ffad1f6fb64,312347407,0,0x0,8
tick,0x7ffad1f6fb64,312362400,0,0x0,8
tick,0x7ffad1f6fb64,312377414,0,0x0,8
tick,0x7ffad1f6fb64,312393424,0,0x0,8
tick,0x7ffad1f6fb64,312408452,0,0x0,8
tick,0x7ffad1f6fb64,312423471,0,0x0,8
tick,0x7ffad1f6fb64,312439488,0,0x0,8
tick,0x7ffad1f6fb64,312455514,0,0x0,8
tick,0x7ffad1f6fb64,312471546,0,0x0,8
tick,0x7ffad1f6fb64,312487530,0,0x0,8
tick,0x7ffad1f6fb64,312502547,0,0x0,8
tick,0x7ffad1f6fb64,312517600,0,0x0,8
tick,0x7ffad1f6fb64,312533574,0,0x0,8
tick,0x7ffad1f6fb64,312548594,0,0x0,8
tick,0x7ffad1f6fb64,312564605,0,0x0,8
tick,0x7ffad1f6fb64,312580615,0,0x0,8
tick,0x7ffad1f6fb64,312595670,0,0x0,8
tick,0x7ffad1f6fb64,312610638,0,0x0,8
tick,0x7ffad1f6fb64,312625671,0,0x0,8
tick,0x7ffad1f6fb64,312640675,0,0x0,8
tick,0x7ffad1f6fb64,312656684,0,0x0,8
tick,0x7ffad1f6fb64,312672695,0,0x0,8
tick,0x7ffad1f6fb64,312688713,0,0x0,8
tick,0x7ffad1f6fb64,312703717,0,0x0,8
tick,0x7ffad1f6fb64,312719741,0,0x0,8
tick,0x7ffad1f6fb64,312735762,0,0x0,8
tick,0x7ffad1f6fb64,312750752,0,0x0,8
tick,0x7ffad1f6fb64,312766776,0,0x0,8
tick,0x7ffad1f6fb64,312781776,0,0x0,8
tick,0x7ffad1f6fb64,312797817,0,0x0,8
tick,0x7ffad1f6fb64,312813808,0,0x0,8
tick,0x7ffad1f6fb64,312829831,0,0x0,8
tick,0x7ffad1f6fb64,312845889,0,0x0,8
tick,0x7ffad1f6fb64,312861856,0,0x0,8
tick,0x7ffad1f6fb64,312877879,0,0x0,8
tick,0x7ffad1f6fb64,312893909,0,0x0,8
tick,0x7ffad1f6fb64,312908927,0,0x0,8
tick,0x7ffad1f6fb64,312924922,0,0x0,8
tick,0x7ffad1f6fb64,312940941,0,0x0,8
tick,0x7ffad1f6fb64,312956947,0,0x0,8
tick,0x7ffad1f6fb64,312973012,0,0x0,8
tick,0x7ffad1f6fb64,312989013,0,0x0,8
tick,0x7ffad1f6fb64,313005004,0,0x0,8
tick,0x7ffad1f6fb64,313020997,0,0x0,8
tick,0x7ffad1f6fb64,313037015,0,0x0,8
tick,0x7ffad1f6fb64,313053086,0,0x0,8
tick,0x7ffad1f6fb64,313069059,0,0x0,8
tick,0x7ffad1f6fb64,313084085,0,0x0,8
tick,0x7ffad1f6fb64,313100076,0,0x0,8
tick,0x7ffad1f6fb64,313116090,0,0x0,8
tick,0x7ffad1f6fb64,313132125,0,0x0,8
tick,0x7ffad1f6fb64,313148098,0,0x0,8
tick,0x7ffad1f6fb64,313164131,0,0x0,8
tick,0x7ffad1f6fb64,313180159,0,0x0,8
tick,0x7ffad1f6fb64,313196168,0,0x0,8
tick,0x7ffad1f6fb64,313212199,0,0x0,8
tick,0x7ffad1f6fb64,313228184,0,0x0,8
tick,0x7ffad1f6fb64,313244207,0,0x0,8
tick,0x7ffad1f6fb64,313260219,0,0x0,8
tick,0x7ffad1f6fb64,313276253,0,0x0,8
tick,0x7ffad1f6fb64,313292270,0,0x0,8
tick,0x7ffad1f6fb64,313307285,0,0x0,8
tick,0x7ffad1f6fb64,313322314,0,0x0,8
tick,0x7ffad1f6fb64,313337297,0,0x0,8
tick,0x7ffad1f6fb64,313353317,0,0x0,8
tick,0x7ffad1f6fb64,313369341,0,0x0,8
tick,0x7ffad1f6fb64,313385340,0,0x0,8
tick,0x7ffad1f6fb64,313400452,0,0x0,8
tick,0x7ffad1f6fb64,313416373,0,0x0,8
tick,0x7ffad1f6fb64,313432378,0,0x0,8
tick,0x7ffad1f6fb64,313447412,0,0x0,8
tick,0x7ffad1f6fb64,313463420,0,0x0,8
tick,0x7ffad1f6fb64,313478465,0,0x0,8
tick,0x7ffad1f6fb64,313493563,0,0x0,8
tick,0x7ffad1f6fb64,313509475,0,0x0,8
tick,0x7ffad1f6fb64,313525454,0,0x0,8
tick,0x7ffad1f6fb64,313540491,0,0x0,8
tick,0x7ffad1f6fb64,313555495,0,0x0,8
tick,0x7ffad1f6fb64,313571525,0,0x0,8
tick,0x7ffad1f6fb64,313587513,0,0x0,8
tick,0x7ffad1f6fb64,313603526,0,0x0,8
tick,0x7ffad1f6fb64,313619598,0,0x0,8
tick,0x7ffad1f6fb64,313634604,0,0x0,8
tick,0x7ffad1f6fb64,313649574,0,0x0,8
tick,0x7ffad1f6fb64,313664593,0,0x0,8
tick,0x7ffad1f6fb64,313680613,0,0x0,8
tick,0x7ffad1f6fb64,313695619,0,0x0,8
tick,0x7ffad1f6fb64,313710620,0,0x0,8
tick,0x7ffad1f6fb64,313725654,0,0x0,8
tick,0x7ffad1f6fb64,313740664,0,0x0,8
tick,0x7ffad1f6fb64,313756677,0,0x0,8
tick,0x7ffad1f6fb64,313772675,0,0x0,8
tick,0x7ffad1f6fb64,313788706,0,0x0,8
tick,0x7ffad1f6fb64,313804705,0,0x0,8
tick,0x7ffad1f6fb64,313819751,0,0x0,8
tick,0x7ffad1f6fb64,313834747,0,0x0,8
tick,0x7ffad1f6fb64,313850765,0,0x0,8
tick,0x7ffad1f6fb64,313866828,0,0x0,8
tick,0x7ffad1f6fb64,313881794,0,0x0,8
tick,0x7ffad1f6fb64,313897808,0,0x0,8
tick,0x7ffad1f6fb64,313912824,0,0x0,8
tick,0x7ffad1f6fb64,313928833,0,0x0,8
tick,0x7ffad1f6fb64,313943852,0,0x0,8
tick,0x7ffad1f6fb64,313958845,0,0x0,8
tick,0x7ffad1f6fb64,313974868,0,0x0,8
tick,0x7ffad1f6fb64,313989898,0,0x0,8
tick,0x7ffad1f6fb64,314005879,0,0x0,8
tick,0x7ffad1f6fb64,314021897,0,0x0,8
tick,0x7ffad1f6fb64,314037934,0,0x0,8
tick,0x7ffad1f6fb64,314053943,0,0x0,8
tick,0x7ffad1f6fb64,314068969,0,0x0,8
tick,0x7ffad1f6fb64,314085112,0,0x0,8
tick,0x7ffad1f6fb64,314100990,0,0x0,8
tick,0x7ffad1f6fb64,314117011,0,0x0,8
tick,0x7ffad1f6fb64,314131999,0,0x0,8
tick,0x7ffad1f6fb64,314147060,0,0x0,8
tick,0x7ffad1f6fb64,314163051,0,0x0,8
tick,0x7ffad1f6fb64,314179053,0,0x0,8
tick,0x7ffad1f6fb64,314195073,0,0x0,8
tick,0x7ffad1f6fb64,314211082,0,0x0,8
tick,0x7ffad1f6fb64,314227088,0,0x0,8
tick,0x7ffad1f6fb64,314243108,0,0x0,8
tick,0x7ffad1f6fb64,314259125,0,0x0,8
tick,0x7ffad1f6fb64,314275148,0,0x0,8
tick,0x7ffad1f6fb64,314291168,0,0x0,8
tick,0x7ffad1f6fb64,314306219,0,0x0,8
tick,0x7ffad1f6fb64,314321226,0,0x0,8
tick,0x7ffad1f6fb64,314337211,0,0x0,8
tick,0x7ffad1f6fb64,314352196,0,0x0,8
tick,0x7ffad1f6fb64,314367211,0,0x0,8
tick,0x7ffad1f6fb64,314382226,0,0x0,8
tick,0x7ffad1f6fb64,314398231,0,0x0,8
tick,0x7ffad1f6fb64,314413258,0,0x0,8
tick,0x7ffad1f6fb64,314429282,0,0x0,8
tick,0x7ffad1f6fb64,314445279,0,0x0,8
tick,0x7ffad1f6fb64,314461292,0,0x0,8
tick,0x7ffad1f6fb64,314476310,0,0x0,8
tick,0x7ffad1f6fb64,314491360,0,0x0,8
tick,0x7ffad1f6fb64,314506337,0,0x0,8
tick,0x7ffad1f6fb64,314522361,0,0x0,8
tick,0x7ffad1f6fb64,314537373,0,0x0,8
tick,0x7ffad1f6fb64,314553388,0,0x0,8
tick,0x7ffad1f6fb64,314569418,0,0x0,8
tick,0x7ffad1f6fb64,314584427,0,0x0,8
tick,0x7ffad1f6fb64,314599441,0,0x0,8
tick,0x7ffad1f6fb64,314615459,0,0x0,8
tick,0x7ffad1f6fb64,314631472,0,0x0,8
tick,0x7ffad1f6fb64,314646476,0,0x0,8
tick,0x7ffad1f6fb64,314662519,0,0x0,8
tick,0x7ffad1f6fb64,314677502,0,0x0,8
tick,0x7ffad1f6fb64,314693621,0,0x0,8
tick,0x7ffad1f6fb64,314708535,0,0x0,8
tick,0x7ffad1f6fb64,314724546,0,0x0,8
tick,0x7ffad1f6fb64,314740570,0,0x0,8
tick,0x7ffad1f6fb64,314755588,0,0x0,8
tick,0x7ffad1f6fb64,314771600,0,0x0,8
tick,0x7ffad1f6fb64,314787620,0,0x0,8
tick,0x7ffad1f6fb64,314803631,0,0x0,8
tick,0x7ffad1f6fb64,314819686,0,0x0,8
tick,0x7ffad1f6fb64,314835664,0,0x0,8
tick,0x7ffad1f6fb64,314850692,0,0x0,8
tick,0x7ffad1f6fb64,314866692,0,0x0,8
tick,0x7ffad1f6fb64,314881699,0,0x0,8
tick,0x7ffad1f6fb64,314897715,0,0x0,8
tick,0x7ffad1f6fb64,314913735,0,0x0,8
tick,0x7ffad1f6fb64,314929744,0,0x0,8
tick,0x7ffad1f6fb64,314944753,0,0x0,8
tick,0x7ffad1f6fb64,314960757,0,0x0,8
tick,0x7ffad1f6fb64,314975780,0,0x0,8
tick,0x7ffad1f6fb64,314991824,0,0x0,8
tick,0x7ffad1f6fb64,315007819,0,0x0,8
tick,0x7ffad1f6fb64,315023816,0,0x0,8
tick,0x7ffad1f6fb64,315038843,0,0x0,8
tick,0x7ffad1f6fb64,315054837,0,0x0,8
tick,0x7ffad1f6fb64,315070887,0,0x0,8
tick,0x7ffad1f6fb64,315085898,0,0x0,8
tick,0x7ffad1f6fb64,315100905,0,0x0,8
tick,0x7ffad1f6fb64,315115913,0,0x0,8
tick,0x7ffad1f6fb64,315131923,0,0x0,8
tick,0x7ffad1f6fb64,315147117,0,0x0,8
tick,0x7ffad1f6fb64,315161982,0,0x0,8
tick,0x7ffad1f6fb64,315178009,0,0x0,8
tick,0x7ffad1f6fb64,315193997,0,0x0,8
tick,0x7ffad1f6fb64,315210004,0,0x0,8
tick,0x7ffad1f6fb64,315226006,0,0x0,8
tick,0x7ffad1f6fb64,315242021,0,0x0,8
tick,0x7ffad1f6fb64,315257046,0,0x0,8
tick,0x7ffad1f6fb64,315273043,0,0x0,8
tick,0x7ffad1f6fb64,315289065,0,0x0,8
tick,0x7ffad1f6fb64,315305096,0,0x0,8
tick,0x7ffad1f6fb64,315320091,0,0x0,8
tick,0x7ffad1f6fb64,315336114,0,0x0,8
tick,0x7ffad1f6fb64,315352126,0,0x0,8
tick,0x7ffad1f6fb64,315367161,0,0x0,8
tick,0x7ffad1f6fb64,315382142,0,0x0,8
tick,0x7ffad1f6fb64,315397166,0,0x0,8
tick,0x7ffad1f6fb64,315413162,0,0x0,8
tick,0x7ffad1f6fb64,315429194,0,0x0,8
tick,0x7ffad1f6fb64,315444220,0,0x0,8
tick,0x7ffad1f6fb64,315460232,0,0x0,8
tick,0x7ffad1f6fb64,315476309,0,0x0,8
tick,0x7ffad1f6fb64,315492302,0,0x0,8
tick,0x7ffad1f6fb64,315507277,0,0x0,8
tick,0x7ffad1f6fb64,315522300,0,0x0,8
tick,0x7ffad1f6fb64,315538289,0,0x0,8
tick,0x7ffad1f6fb64,315554311,0,0x0,8
tick,0x7ffad1f6fb64,315570346,0,0x0,8
tick,0x7ffad1f6fb64,315586368,0,0x0,8
tick,0x7ffad1f6fb64,315602359,0,0x0,8
tick,0x7ffad1f6fb64,315617378,0,0x0,8
tick,0x7ffad1f6fb64,315633397,0,0x0,8
tick,0x7ffad1f6fb64,315649386,0,0x0,8
tick,0x7ffad1f6fb64,315665421,0,0x0,8
tick,0x7ffad1f6fb64,315680646,0,0x0,8
tick,0x7ffad1f6fb64,315696468,0,0x0,8
tick,0x7ffad1f6fb64,315712457,0,0x0,8
tick,0x7ffad1f6fb64,315727453,0,0x0,8
tick,0x7ffad1f6fb64,315743472,0,0x0,8
tick,0x7ffad1f6fb64,315759495,0,0x0,8
tick,0x7ffad1f6fb64,315775497,0,0x0,8
tick,0x7ffad1f6fb64,315791514,0,0x0,8
tick,0x7ffad1f6fb64,315807546,0,0x0,8
tick,0x7ffad1f6fb64,315823545,0,0x0,8
tick,0x7ffad1f6fb64,315839561,0,0x0,8
tick,0x7ffad1f6fb64,315855590,0,0x0,8
tick,0x7ffad1f6fb64,315871609,0,0x0,8
tick,0x7ffad1f6fb64,315886609,0,0x0,8
tick,0x7ffad1f6fb64,315901632,0,0x0,8
tick,0x7ffad1f6fb64,315916636,0,0x0,8
tick,0x7ffad1f6fb64,315932654,0,0x0,8
tick,0x7ffad1f6fb64,315948681,0,0x0,8
tick,0x7ffad1f6fb64,315964713,0,0x0,8
tick,0x7ffad1f6fb64,315979708,0,0x0,8
tick,0x7ffad1f6fb64,315995732,0,0x0,8
tick,0x7ffad1f6fb64,316011726,0,0x0,8
tick,0x7ffad1f6fb64,316027774,0,0x0,8
tick,0x7ffad1f6fb64,316042744,0,0x0,8
tick,0x7ffad1f6fb64,316058782,0,0x0,8
tick,0x7ffad1f6fb64,316074808,0,0x0,8
tick,0x7ffad1f6fb64,316090795,0,0x0,8
tick,0x7ffad1f6fb64,316106829,0,0x0,8
tick,0x7ffad1f6fb64,316122841,0,0x0,8
tick,0x7ffad1f6fb64,316138841,0,0x0,8
tick,0x7ffad1f6fb64,316153842,0,0x0,8
tick,0x7ffad1f6fb64,316169872,0,0x0,8
tick,0x7ffad1f6fb64,316185961,0,0x0,8
tick,0x7ffad1f6fb64,316200913,0,0x0,8
tick,0x7ffad1f6fb64,316216928,0,0x0,8
tick,0x7ffad1f6fb64,316232907,0,0x0,8
tick,0x7ffad1f6fb64,316248948,0,0x0,8
tick,0x7ffad1f6fb64,316263955,0,0x0,8
tick,0x7ffad1f6fb64,316279970,0,0x0,8
tick,0x7ffad1f6fb64,316295973,0,0x0,8
tick,0x7ffad1f6fb64,316312022,0,0x0,8
tick,0x7ffad1f6fb64,316328013,0,0x0,8
tick,0x7ffad1f6fb64,316344023,0,0x0,8
tick,0x7ffad1f6fb64,316360050,0,0x0,8
tick,0x7ffad1f6fb64,316376062,0,0x0,8
tick,0x7ffad1f6fb64,316392072,0,0x0,8
tick,0x7ffad1f6fb64,316408077,0,0x0,8
tick,0x7ffad1f6fb64,316424093,0,0x0,8
tick,0x7ffad1f6fb64,316440108,0,0x0,8
tick,0x7ffad1f6fb64,316456117,0,0x0,8
tick,0x7ffad1f6fb64,316472153,0,0x0,8
tick,0x7ffad1f6fb64,316487167,0,0x0,8
tick,0x7ffad1f6fb64,316503202,0,0x0,8
tick,0x7ffad1f6fb64,316519195,0,0x0,8
tick,0x7ffad1f6fb64,316535233,0,0x0,8
tick,0x7ffad1f6fb64,316550217,0,0x0,8
tick,0x7ffad1f6fb64,316565251,0,0x0,8
tick,0x7ffad1f6fb64,316580261,0,0x0,8
tick,0x7ffad1f6fb64,316596275,0,0x0,8
tick,0x7ffad1f6fb64,316612293,0,0x0,8
tick,0x7ffad1f6fb64,316627280,0,0x0,8
tick,0x7ffad1f6fb64,316643300,0,0x0,8
tick,0x7ffad1f6fb64,316659316,0,0x0,8
tick,0x7ffad1f6fb64,316675341,0,0x0,8
tick,0x7ffad1f6fb64,316691380,0,0x0,8
tick,0x7ffad1f6fb64,316707362,0,0x0,8
tick,0x7ffad1f6fb64,316722379,0,0x0,8
tick,0x7ffad1f6fb64,316737393,0,0x0,8
tick,0x7ffad1f6fb64,316752394,0,0x0,8
tick,0x7ffad1f6fb64,316768426,0,0x0,8
tick,0x7ffad1f6fb64,316784423,0,0x0,8
tick,0x7ffad1f6fb64,316799442,0,0x0,8
tick,0x7ffad1f6fb64,316815511,0,0x0,8
tick,0x7ffad1f6fb64,316831483,0,0x0,8
tick,0x7ffad1f6fb64,316847475,0,0x0,8
tick,0x7ffad1f6fb64,316863510,0,0x0,8
tick,0x7ffad1f6fb64,316878507,0,0x0,8
tick,0x7ffad1f6fb64,316894520,0,0x0,8
tick,0x7ffad1f6fb64,316910554,0,0x0,8
tick,0x7ffad1f6fb64,316925564,0,0x0,8
tick,0x7ffad1f6fb64,316940580,0,0x0,8
tick,0x7ffad1f6fb64,316956614,0,0x0,8
tick,0x7ffad1f6fb64,316972612,0,0x0,8
tick,0x7ffad1f6fb64,316987630,0,0x0,8
tick,0x7ffad1f6fb64,317003674,0,0x0,8
tick,0x7ffad1f6fb64,317019678,0,0x0,8
tick,0x7ffad1f6fb64,317035664,0,0x0,8
tick,0x7ffad1f6fb64,317050687,0,0x0,8
tick,0x7ffad1f6fb64,317066727,0,0x0,8
tick,0x7ffad1f6fb64,317081735,0,0x0,8
tick,0x7ffad1f6fb64,317096747,0,0x0,8
tick,0x7ffad1f6fb64,317112734,0,0x0,8
tick,0x7ffad1f6fb64,317128802,0,0x0,8
tick,0x7ffad1f6fb64,317143758,0,0x0,8
tick,0x7ffad1f6fb64,317159789,0,0x0,8
tick,0x7ffad1f6fb64,317175815,0,0x0,8
tick,0x7ffad1f6fb64,317191819,0,0x0,8
tick,0x7ffad1f6fb64,317207912,0,0x0,8
tick,0x7ffad1f6fb64,317223841,0,0x0,8
tick,0x7ffad1f6fb64,317239856,0,0x0,8
tick,0x7ffad1f6fb64,317255858,0,0x0,8
tick,0x7ffad1f6fb64,317271874,0,0x0,8
tick,0x7ffad1f6fb64,317287891,0,0x0,8
tick,0x7ffad1f6fb64,317302890,0,0x0,8
tick,0x7ffad1f6fb64,317318921,0,0x0,8
tick,0x7ffad1f6fb64,317334962,0,0x0,8
tick,0x7ffad1f6fb64,317350938,0,0x0,8
tick,0x7ffad1f6fb64,317366966,0,0x0,8
tick,0x7ffad1f6fb64,317381991,0,0x0,8
tick,0x7ffad1f6fb64,317396995,0,0x0,8
tick,0x7ffad1f6fb64,317413002,0,0x0,8
tick,0x7ffad1f6fb64,317429028,0,0x0,8
tick,0x7ffad1f6fb64,317444027,0,0x0,8
tick,0x7ffad1f6fb64,317460058,0,0x0,8
tick,0x7ffad1f6fb64,317476063,0,0x0,8
tick,0x7ffad1f6fb64,317492093,0,0x0,8
tick,0x7ffad1f6fb64,317508122,0,0x0,8
tick,0x7ffad1f6fb64,317524102,0,0x0,8
tick,0x7ffad1f6fb64,317539155,0,0x0,8
tick,0x7ffad1f6fb64,317555118,0,0x0,8
tick,0x7ffad1f6fb64,317570210,0,0x0,8
tick,0x7ffad1f6fb64,317586191,0,0x0,8
tick,0x7ffad1f6fb64,317601374,0,0x0,8
tick,0x7ffad1f6fb64,317617200,0,0x0,8
tick,0x7ffad1f6fb64,317633229,0,0x0,8
tick,0x7ffad1f6fb64,317649211,0,0x0,8
tick,0x7ffad1f6fb64,317665228,0,0x0,8
tick,0x7ffad1f6fb64,317680304,0,0x0,8
tick,0x7ffad1f6fb64,317696270,0,0x0,8
tick,0x7ffad1f6fb64,317712294,0,0x0,8
tick,0x7ffad1f6fb64,317727307,0,0x0,8
tick,0x7ffad1f6fb64,317742304,0,0x0,8
tick,0x7ffad1f6fb64,317757361,0,0x0,8
tick,0x7ffad1f6fb64,317773365,0,0x0,8
tick,0x7ffad1f6fb64,317789387,0,0x0,8
tick,0x7ffad1f6fb64,317805381,0,0x0,8
tick,0x7ffad1f6fb64,317820389,0,0x0,8
tick,0x7ffad1f6fb64,317835399,0,0x0,8
tick,0x7ffad1f6fb64,317850402,0,0x0,8
tick,0x7ffad1f6fb64,317866422,0,0x0,8
tick,0x7ffad1f6fb64,317881524,0,0x0,8
tick,0x7ffad1f6fb64,317897468,0,0x0,8
tick,0x7ffad1f6fb64,317912470,0,0x0,8
tick,0x7ffad1f6fb64,317927485,0,0x0,8
tick,0x7ffad1f6fb64,317943502,0,0x0,8
tick,0x7ffad1f6fb64,317959506,0,0x0,8
tick,0x7ffad1f6fb64,317975550,0,0x0,8
tick,0x7ffad1f6fb64,317990556,0,0x0,8
tick,0x7ffad1f6fb64,318006589,0,0x0,8
tick,0x7ffad1f6fb64,318021580,0,0x0,8
tick,0x7ffad1f6fb64,318036591,0,0x0,8
tick,0x7ffad1f6fb64,318052588,0,0x0,8
tick,0x7ffad1f6fb64,318068640,0,0x0,8
tick,0x7ffad1f6fb64,318084625,0,0x0,8
tick,0x7ffad1f6fb64,318099636,0,0x0,8
tick,0x7ffad1f6fb64,318115663,0,0x0,8
tick,0x7ffad1f6fb64,318130657,0,0x0,8
tick,0x7ffad1f6fb64,318146678,0,0x0,8
tick,0x7ffad1f6fb64,318161721,0,0x0,8
tick,0x7ffad1f6fb64,318177703,0,0x0,8
tick,0x7ffad1f6fb64,318193715,0,0x0,8
tick,0x7ffad1f6fb64,318209722,0,0x0,8
tick,0x7ffad1f6fb64,318224773,0,0x0,8
tick,0x7ffad1f6fb64,318239749,0,0x0,8
tick,0x7ffad1f6fb64,318255766,0,0x0,8
tick,0x7ffad1f6fb64,318271794,0,0x0,8
tick,0x7ffad1f6fb64,318286807,0,0x0,8
tick,0x7ffad1f6fb64,318302819,0,0x0,8
tick,0x7ffad1f6fb64,318318834,0,0x0,8
tick,0x7ffad1f6fb64,318333857,0,0x0,8
tick,0x7ffad1f6fb64,318349856,0,0x0,8
tick,0x7ffad1f6fb64,318365872,0,0x0,8
tick,0x7ffad1f6fb64,318381926,0,0x0,8
tick,0x7ffad1f6fb64,318396891,0,0x0,8
tick,0x7ffad1f6fb64,318411905,0,0x0,8
tick,0x7ffad1f6fb64,318427927,0,0x0,8
tick,0x7ffad1f6fb64,318443973,0,0x0,8
tick,0x7ffad1f6fb64,318458948,0,0x0,8
tick,0x7ffad1f6fb64,318474974,0,0x0,8
tick,0x7ffad1f6fb64,318491000,0,0x0,8
tick,0x7ffad1f6fb64,318505993,0,0x0,8
tick,0x7ffad1f6fb64,318521010,0,0x0,8
tick,0x7ffad1f6fb64,318536028,0,0x0,8
tick,0x7ffad1f6fb64,318552022,0,0x0,8
tick,0x7ffad1f6fb64,318567067,0,0x0,8
tick,0x7ffad1f6fb64,318583101,0,0x0,8
tick,0x7ffad1f6fb64,318598096,0,0x0,8
tick,0x7ffad1f6fb64,318614108,0,0x0,8
tick,0x7ffad1f6fb64,318630147,0,0x0,8
tick,0x7ffad1f6fb64,318646158,0,0x0,8
tick,0x7ffad1f6fb64,318662178,0,0x0,8
tick,0x7ffad1f6fb64,318677196,0,0x0,8
tick,0x7ffad1f6fb64,318692199,0,0x0,8
tick,0x7ffad1f6fb64,318707257,0,0x0,8
tick,0x7ffad1f6fb64,318722267,0,0x0,8
tick,0x7ffad1f6fb64,318737294,0,0x0,8
tick,0x7ffad1f6fb64,318753299,0,0x0,8
tick,0x7ffad1f6fb64,318769284,0,0x0,8
tick,0x7ffad1f6fb64,318785313,0,0x0,8
tick,0x7ffad1f6fb64,318801308,0,0x0,8
tick,0x7ffad1f6fb64,318817337,0,0x0,8
tick,0x7ffad1f6fb64,318833340,0,0x0,8
tick,0x7ffad1f6fb64,318849351,0,0x0,8
tick,0x7ffad1f6fb64,318865323,0,0x0,8
tick,0x7ffad1f6fb64,318880371,0,0x0,8
tick,0x7ffad1f6fb64,318896603,0,0x0,8
tick,0x7ffad1f6fb64,318911386,0,0x0,8
tick,0x7ffad1f6fb64,318927446,0,0x0,8
tick,0x7ffad1f6fb64,318943454,0,0x0,8
tick,0x7ffad1f6fb64,318959429,0,0x0,8
tick,0x7ffad1f6fb64,318974411,0,0x0,8
tick,0x7ffad1f6fb64,318990483,0,0x0,8
tick,0x7ffad1f6fb64,319005483,0,0x0,8
tick,0x7ffad1f6fb64,319021521,0,0x0,8
tick,0x7ffad1f6fb64,319036518,0,0x0,8
tick,0x7ffad1f6fb64,319051503,0,0x0,8
tick,0x7ffad1f6fb64,319067575,0,0x0,8
tick,0x7ffad1f6fb64,319083596,0,0x0,8
tick,0x7ffad1f6fb64,319099605,0,0x0,8
tick,0x7ffad1f6fb64,319115610,0,0x0,8
tick,0x7ffad1f6fb64,319130697,0,0x0,8
tick,0x7ffad1f6fb64,319145596,0,0x0,8
tick,0x7ffad1f6fb64,319161807,0,0x0,8
tick,0x7ffad1f6fb64,319177783,0,0x0,8
tick,0x7ffad1f6fb64,319192670,0,0x0,8
tick,0x7ffad1f6fb64,319208647,0,0x0,8
tick,0x7ffad1f6fb64,319224667,0,0x0,8
tick,0x7ffad1f6fb64,319239903,0,0x0,8
tick,0x7ffad1f6fb64,319255705,0,0x0,8
tick,0x7ffad1f6fb64,319271695,0,0x0,8
tick,0x7ffad1f6fb64,319286716,0,0x0,8
tick,0x7ffad1f6fb64,319302719,0,0x0,8
tick,0x7ffad1f6fb64,319317768,0,0x0,8
tick,0x7ffad1f6fb64,319333750,0,0x0,8
tick,0x7ffad1f6fb64,319349775,0,0x0,8
tick,0x7ffad1f6fb64,319364786,0,0x0,8
tick,0x7ffad1f6fb64,319380806,0,0x0,8
tick,0x7ffad1f6fb64,319395812,0,0x0,8
tick,0x7ffad1f6fb64,319410812,0,0x0,8
tick,0x7ffad1f6fb64,319426865,0,0x0,8
tick,0x7ffad1f6fb64,319442022,0,0x0,8
tick,0x7ffad1f6fb64,319457863,0,0x0,8
tick,0x7ffad1f6fb64,319473869,0,0x0,8
tick,0x7ffad1f6fb64,319488891,0,0x0,8
tick,0x7ffad1f6fb64,319503936,0,0x0,8
tick,0x7ffad1f6fb64,319519960,0,0x0,8
tick,0x7ffad1f6fb64,319535960,0,0x0,8
tick,0x7ffad1f6fb64,319551938,0,0x0,8
tick,0x7ffad1f6fb64,319566971,0,0x0,8
tick,0x7ffad1f6fb64,319581993,0,0x0,8
tick,0x7ffad1f6fb64,319598025,0,0x0,8
tick,0x7ffad1f6fb64,319614010,0,0x0,8
tick,0x7ffad1f6fb64,319629092,0,0x0,8
tick,0x7ffad1f6fb64,319645061,0,0x0,8
tick,0x7ffad1f6fb64,319660042,0,0x0,8
tick,0x7ffad1f6fb64,319675062,0,0x0,8
tick,0x7ffad1f6fb64,319691090,0,0x0,8
tick,0x7ffad1f6fb64,319706114,0,0x0,8
tick,0x7ffad1f6fb64,319721105,0,0x0,8
tick,0x7ffad1f6fb64,319736122,0,0x0,8
tick,0x7ffad1f6fb64,319752157,0,0x0,8
tick,0x7ffad1f6fb64,319767160,0,0x0,8
tick,0x7ffad1f6fb64,319782161,0,0x0,8
tick,0x7ffad1f6fb64,319798175,0,0x0,8
tick,0x7ffad1f6fb64,319814167,0,0x0,8
tick,0x7ffad1f6fb64,319830226,0,0x0,8
tick,0x7ffad1f6fb64,319845220,0,0x0,8
tick,0x7ffad1f6fb64,319861237,0,0x0,8
tick,0x7ffad1f6fb64,319877249,0,0x0,8
tick,0x7ffad1f6fb64,319893242,0,0x0,8
tick,0x7ffad1f6fb64,319908273,0,0x0,8
tick,0x7ffad1f6fb64,319924293,0,0x0,8
tick,0x7ffad1f6fb64,319940303,0,0x0,8
tick,0x7ffad1f6fb64,319956324,0,0x0,8
tick,0x7ffad1f6fb64,319972363,0,0x0,8
tick,0x7ffad1f6fb64,319988344,0,0x0,8
tick,0x7ffad1f6fb64,320004369,0,0x0,8
tick,0x7ffad1f6fb64,320020382,0,0x0,8
tick,0x7ffad1f6fb64,320035390,0,0x0,8
tick,0x7ffad1f6fb64,320050386,0,0x0,8
tick,0x7ffad1f6fb64,320065443,0,0x0,8
tick,0x7ffad1f6fb64,320081453,0,0x0,8
tick,0x7ffad1f6fb64,320097466,0,0x0,8
tick,0x7ffad1f6fb64,320113468,0,0x0,8
tick,0x7ffad1f6fb64,320128501,0,0x0,8
tick,0x7ffad1f6fb64,320144479,0,0x0,8
tick,0x7ffad1f6fb64,320159529,0,0x0,8
tick,0x7ffad1f6fb64,320175589,0,0x0,8
tick,0x7ffad1f6fb64,320191560,0,0x0,8
tick,0x7ffad1f6fb64,320207557,0,0x0,8
tick,0x7ffad1f6fb64,320222562,0,0x0,8
tick,0x7ffad1f6fb64,320237585,0,0x0,8
tick,0x7ffad1f6fb64,320253678,0,0x0,8
tick,0x7ffad1f6fb64,320268613,0,0x0,8
tick,0x7ffad1f6fb64,320283605,0,0x0,8
tick,0x7ffad1f6fb64,320299630,0,0x0,8
tick,0x7ffad1f6fb64,320315649,0,0x0,8
tick,0x7ffad1f6fb64,320331667,0,0x0,8
tick,0x7ffad1f6fb64,320346664,0,0x0,8
tick,0x7ffad1f6fb64,320362677,0,0x0,8
tick,0x7ffad1f6fb64,320378700,0,0x0,8
tick,0x7ffad1f6fb64,320393707,0,0x0,8
tick,0x7ffad1f6fb64,320409763,0,0x0,8
tick,0x7ffad1f6fb64,320424750,0,0x0,8
tick,0x7ffad1f6fb64,320440768,0,0x0,8
tick,0x7ffad1f6fb64,320456829,0,0x0,8
tick,0x7ffad1f6fb64,320471840,0,0x0,8
tick,0x7ffad1f6fb64,320486856,0,0x0,8
tick,0x7ffad1f6fb64,320502868,0,0x0,8
tick,0x7ffad1f6fb64,320518884,0,0x0,8
tick,0x7ffad1f6fb64,320533852,0,0x0,8
tick,0x7ffad1f6fb64,320548857,0,0x0,8
tick,0x7ffad1f6fb64,320564907,0,0x0,8
tick,0x7ffad1f6fb64,320579903,0,0x0,8
tick,0x7ffad1f6fb64,320595915,0,0x0,8
tick,0x7ffad1f6fb64,320611927,0,0x0,8
tick,0x7ffad1f6fb64,320627949,0,0x0,8
tick,0x7ffad1f6fb64,320642971,0,0x0,8
tick,0x7ffad1f6fb64,320658957,0,0x0,8
tick,0x7ffad1f6fb64,320674975,0,0x0,8
tick,0x7ffad1f6fb64,320690989,0,0x0,8
tick,0x7ffad1f6fb64,320706003,0,0x0,8
tick,0x7ffad1f6fb64,320721030,0,0x0,8
tick,0x7ffad1f6fb64,320736105,0,0x0,8
tick,0x7ffad1f6fb64,320752047,0,0x0,8
tick,0x7ffad1f6fb64,320768077,0,0x0,8
tick,0x7ffad1f6fb64,320783081,0,0x0,8
tick,0x7ffad1f6fb64,320798094,0,0x0,8
tick,0x7ffad1f6fb64,320813107,0,0x0,8
tick,0x7ffad1f6fb64,320829211,0,0x0,8
tick,0x7ffad1f6fb64,320845153,0,0x0,8
tick,0x7ffad1f6fb64,320861151,0,0x0,8
tick,0x7ffad1f6fb64,320877165,0,0x0,8
tick,0x7ffad1f6fb64,320893172,0,0x0,8
tick,0x7ffad1f6fb64,320908172,0,0x0,8
tick,0x7ffad1f6fb64,320924219,0,0x0,8
tick,0x7ffad1f6fb64,320939212,0,0x0,8
tick,0x7ffad1f6fb64,320954234,0,0x0,8
tick,0x7ffad1f6fb64,320970230,0,0x0,8
tick,0x7ffad1f6fb64,320986274,0,0x0,8
tick,0x7ffad1f6fb64,321002278,0,0x0,8
tick,0x7ffad1f6fb64,321018295,0,0x0,8
tick,0x7ffad1f6fb64,321034312,0,0x0,8
tick,0x7ffad1f6fb64,321049298,0,0x0,8
tick,0x7ffad1f6fb64,321065342,0,0x0,8
tick,0x7ffad1f6fb64,321080377,0,0x0,8
tick,0x7ffad1f6fb64,321096366,0,0x0,8
tick,0x7ffad1f6fb64,321112390,0,0x0,8
tick,0x7ffad1f6fb64,321127380,0,0x0,8
tick,0x7ffad1f6fb64,321143393,0,0x0,8
tick,0x7ffad1f6fb64,321159436,0,0x0,8
tick,0x7ffad1f6fb64,321174438,0,0x0,8
tick,0x7ffad1f6fb64,321189440,0,0x0,8
tick,0x7ffad1f6fb64,321205449,0,0x0,8
tick,0x7ffad1f6fb64,321221469,0,0x0,8
tick,0x7ffad1f6fb64,321236479,0,0x0,8
tick,0x7ffad1f6fb64,321252484,0,0x0,8
tick,0x7ffad1f6fb64,321268516,0,0x0,8
tick,0x7ffad1f6fb64,321284563,0,0x0,8
tick,0x7ffad1f6fb64,321299516,0,0x0,8
tick,0x7ffad1f6fb64,321315558,0,0x0,8
tick,0x7ffad1f6fb64,321331565,0,0x0,8
tick,0x7ffad1f6fb64,321347583,0,0x0,8
tick,0x7ffad1f6fb64,321363592,0,0x0,8
tick,0x7ffad1f6fb64,321378614,0,0x0,8
tick,0x7ffad1f6fb64,321394656,0,0x0,8
tick,0x7ffad1f6fb64,321410629,0,0x0,8
tick,0x7ffad1f6fb64,321425662,0,0x0,8
tick,0x7ffad1f6fb64,321440685,0,0x0,8
tick,0x7ffad1f6fb64,321455702,0,0x0,8
tick,0x7ffad1f6fb64,321470747,0,0x0,8
tick,0x7ffad1f6fb64,321486724,0,0x0,8
tick,0x7ffad1f6fb64,321502735,0,0x0,8
tick,0x7ffad1f6fb64,321517745,0,0x0,8
tick,0x7ffad1f6fb64,321533770,0,0x0,8
tick,0x7ffad1f6fb64,321549769,0,0x0,8
tick,0x7ffad1f6fb64,321565828,0,0x0,8
tick,0x7ffad1f6fb64,321581818,0,0x0,8
tick,0x7ffad1f6fb64,321597864,0,0x0,8
tick,0x7ffad1f6fb64,321612830,0,0x0,8
tick,0x7ffad1f6fb64,321627854,0,0x0,8
tick,0x7ffad1f6fb64,321642868,0,0x0,8
tick,0x7ffad1f6fb64,321657880,0,0x0,8
tick,0x7ffad1f6fb64,321672895,0,0x0,8
tick,0x7ffad1f6fb64,321688893,0,0x0,8
tick,0x7ffad1f6fb64,321703918,0,0x0,8
tick,0x7ffad1f6fb64,321719949,0,0x0,8
tick,0x7ffad1f6fb64,321734925,0,0x0,8
tick,0x7ffad1f6fb64,321749945,0,0x0,8
tick,0x7ffad1f6fb64,321764966,0,0x0,8
tick,0x7ffad1f6fb64,321779974,0,0x0,8
tick,0x7ffad1f6fb64,321796043,0,0x0,8
tick,0x7ffad1f6fb64,321812017,0,0x0,8
tick,0x7ffad1f6fb64,321828036,0,0x0,8
tick,0x7ffad1f6fb64,321844023,0,0x0,8
tick,0x7ffad1f6fb64,321860046,0,0x0,8
tick,0x7ffad1f6fb64,321875071,0,0x0,8
tick,0x7ffad1f6fb64,321891071,0,0x0,8
tick,0x7ffad1f6fb64,321906081,0,0x0,8
tick,0x7ffad1f6fb64,321921090,0,0x0,8
tick,0x7ffad1f6fb64,321936145,0,0x0,8
tick,0x7ffad1f6fb64,321952129,0,0x0,8
tick,0x7ffad1f6fb64,321968171,0,0x0,8
tick,0x7ffad1f6fb64,321984162,0,0x0,8
tick,0x7ffad1f6fb64,322000191,0,0x0,8
tick,0x7ffad1f6fb64,322016272,0,0x0,8
tick,0x7ffad1f6fb64,322031194,0,0x0,8
tick,0x7ffad1f6fb64,322047241,0,0x0,8
tick,0x7ffad1f6fb64,322063246,0,0x0,8
tick,0x7ffad1f6fb64,322078263,0,0x0,8
tick,0x7ffad1f6fb64,322094267,0,0x0,8
tick,0x7ffad1f6fb64,322110275,0,0x0,8
tick,0x7ffad1f6fb64,322126315,0,0x0,8
tick,0x7ffad1f6fb64,322142308,0,0x0,8
tick,0x7ffad1f6fb64,322158328,0,0x0,8
tick,0x7ffad1f6fb64,322173330,0,0x0,8
tick,0x7ffad1f6fb64,322189519,0,0x0,8
tick,0x7ffad1f6fb64,322205375,0,0x0,8
tick,0x7ffad1f6fb64,322220392,0,0x0,8
tick,0x7ffad1f6fb64,322235416,0,0x0,8
tick,0x7ffad1f6fb64,322251417,0,0x0,8
tick,0x7ffad1f6fb64,322267451,0,0x0,8
tick,0x7ffad1f6fb64,322282461,0,0x0,8
tick,0x7ffad1f6fb64,322298499,0,0x0,8
tick,0x7ffad1f6fb64,322314481,0,0x0,8
tick,0x7ffad1f6fb64,322329480,0,0x0,8
tick,0x7ffad1f6fb64,322345486,0,0x0,8
tick,0x7ffad1f6fb64,322360511,0,0x0,8
tick,0x7ffad1f6fb64,322375563,0,0x0,8
tick,0x7ffad1f6fb64,322391558,0,0x0,8
tick,0x7ffad1f6fb64,322407544,0,0x0,8
tick,0x7ffad1f6fb64,322423579,0,0x0,8
tick,0x7ffad1f6fb64,322439574,0,0x0,8
tick,0x7ffad1f6fb64,322455587,0,0x0,8
tick,0x7ffad1f6fb64,322470654,0,0x0,8
tick,0x7ffad1f6fb64,322486633,0,0x0,8
tick,0x7ffad1f6fb64,322501649,0,0x0,8
tick,0x7ffad1f6fb64,322516640,0,0x0,8
tick,0x7ffad1f6fb64,322532662,0,0x0,8
tick,0x7ffad1f6fb64,322547670,0,0x0,8
tick,0x7ffad1f6fb64,322563700,0,0x0,8
tick,0x7ffad1f6fb64,322579758,0,0x0,8
tick,0x7ffad1f6fb64,322594757,0,0x0,8
tick,0x7ffad1f6fb64,322609761,0,0x0,8
tick,0x7ffad1f6fb64,322624766,0,0x0,8
tick,0x7ffad1f6fb64,322640790,0,0x0,8
tick,0x7ffad1f6fb64,322655781,0,0x0,8
tick,0x7ffad1f6fb64,322671810,0,0x0,8
tick,0x7ffad1f6fb64,322686822,0,0x0,8
tick,0x7ffad1f6fb64,322702969,0,0x0,8
tick,0x7ffad1f6fb64,322717828,0,0x0,8
tick,0x7ffad1f6fb64,322733833,0,0x0,8
tick,0x7ffad1f6fb64,322749872,0,0x0,8
tick,0x7ffad1f6fb64,322765952,0,0x0,8
tick,0x7ffad1f6fb64,322780889,0,0x0,8
tick,0x7ffad1f6fb64,322795899,0,0x0,8
tick,0x7ffad1f6fb64,322811956,0,0x0,8
tick,0x7ffad1f6fb64,322827972,0,0x0,8
tick,0x7ffad1f6fb64,322843197,0,0x0,8
tick,0x7ffad1f6fb64,322858988,0,0x0,8
tick,0x7ffad1f6fb64,322874993,0,0x0,8
tick,0x7ffad1f6fb64,322890993,0,0x0,8
tick,0x7ffad1f6fb64,322906001,0,0x0,8
tick,0x7ffad1f6fb64,322921030,0,0x0,8
tick,0x7ffad1f6fb64,322936087,0,0x0,8
tick,0x7ffad1f6fb64,322952061,0,0x0,8
tick,0x7ffad1f6fb64,322968056,0,0x0,8
tick,0x7ffad1f6fb64,322984083,0,0x0,8
tick,0x7ffad1f6fb64,322999114,0,0x0,8
tick,0x7ffad1f6fb64,323015123,0,0x0,8
tick,0x7ffad1f6fb64,323031173,0,0x0,8
tick,0x7ffad1f6fb64,323047121,0,0x0,8
tick,0x7ffad1f6fb64,323063162,0,0x0,8
tick,0x7ffad1f6fb64,323078167,0,0x0,8
tick,0x7ffad1f6fb64,323094180,0,0x0,8
tick,0x7ffad1f6fb64,323110218,0,0x0,8
tick,0x7ffad1f6fb64,323126227,0,0x0,8
tick,0x7ffad1f6fb64,323141229,0,0x0,8
tick,0x7ffad1f6fb64,323157220,0,0x0,8
tick,0x7ffad1f6fb64,323172252,0,0x0,8
tick,0x7ffad1f6fb64,323188279,0,0x0,8
tick,0x7ffad1f6fb64,323204290,0,0x0,8
tick,0x7ffad1f6fb64,323219273,0,0x0,8
tick,0x7ffad1f6fb64,323235302,0,0x0,8
tick,0x7ffad1f6fb64,323250337,0,0x0,8
tick,0x7ffad1f6fb64,323266328,0,0x0,8
tick,0x7ffad1f6fb64,323282360,0,0x0,8
tick,0x7ffad1f6fb64,323297368,0,0x0,8
tick,0x7ffad1f6fb64,323313393,0,0x0,8
tick,0x7ffad1f6fb64,323329394,0,0x0,8
tick,0x7ffad1f6fb64,323345404,0,0x0,8
tick,0x7ffad1f6fb64,323361430,0,0x0,8
tick,0x7ffad1f6fb64,323377439,0,0x0,8
tick,0x7ffad1f6fb64,323393511,0,0x0,8
tick,0x7ffad1f6fb64,323408460,0,0x0,8
tick,0x7ffad1f6fb64,323424475,0,0x0,8
tick,0x7ffad1f6fb64,323440513,0,0x0,8
tick,0x7ffad1f6fb64,323456513,0,0x0,8
tick,0x7ffad1f6fb64,323471565,0,0x0,8
tick,0x7ffad1f6fb64,323486615,0,0x0,8
tick,0x7ffad1f6fb64,323501576,0,0x0,8
tick,0x7ffad1f6fb64,323516573,0,0x0,8
tick,0x7ffad1f6fb64,323532597,0,0x0,8
tick,0x7ffad1f6fb64,323547573,0,0x0,8
tick,0x7ffad1f6fb64,323562640,0,0x0,8
tick,0x7ffad1f6fb64,323577652,0,0x0,8
tick,0x7ffad1f6fb64,323592646,0,0x0,8
tick,0x7ffad1f6fb64,323607685,0,0x0,8
tick,0x7ffad1f6fb64,323623696,0,0x0,8
tick,0x7ffad1f6fb64,323638706,0,0x0,8
tick,0x7ffad1f6fb64,323654678,0,0x0,8
tick,0x7ffad1f6fb64,323670725,0,0x0,8
tick,0x7ffad1f6fb64,323686749,0,0x0,8
tick,0x7ffad1f6fb64,323702736,0,0x0,8
tick,0x7ffad1f6fb64,323718785,0,0x0,8
tick,0x7ffad1f6fb64,323734757,0,0x0,8
tick,0x7ffad1f6fb64,323749774,0,0x0,8
tick,0x7ffad1f6fb64,323764782,0,0x0,8
tick,0x7ffad1f6fb64,323780810,0,0x0,8
tick,0x7ffad1f6fb64,323795832,0,0x0,8
tick,0x7ffad1f6fb64,323810859,0,0x0,8
tick,0x7ffad1f6fb64,323826051,0,0x0,8
tick,0x7ffad1f6fb64,323841860,0,0x0,8
tick,0x7ffad1f6fb64,323856911,0,0x0,8
tick,0x7ffad1f6fb64,323872884,0,0x0,8
tick,0x7ffad1f6fb64,323888908,0,0x0,8
tick,0x7ffad1f6fb64,323904904,0,0x0,8
tick,0x7ffad1f6fb64,323920948,0,0x0,8
tick,0x7ffad1f6fb64,323935950,0,0x0,8
tick,0x7ffad1f6fb64,323951960,0,0x0,8
tick,0x7ffad1f6fb64,323967964,0,0x0,8
tick,0x7ffad1f6fb64,323983980,0,0x0,8
tick,0x7ffad1f6fb64,324000001,0,0x0,8
tick,0x7ffad1f6fb64,324016022,0,0x0,8
tick,0x7ffad1f6fb64,324032020,0,0x0,8
tick,0x7ffad1f6fb64,324047031,0,0x0,8
tick,0x7ffad1f6fb64,324063065,0,0x0,8
tick,0x7ffad1f6fb64,324079084,0,0x0,8
tick,0x7ffad1f6fb64,324095092,0,0x0,8
tick,0x7ffad1f6fb64,324110105,0,0x0,8
tick,0x7ffad1f6fb64,324126143,0,0x0,8
tick,0x7ffad1f6fb64,324142147,0,0x0,8
tick,0x7ffad1f6fb64,324158158,0,0x0,8
tick,0x7ffad1f6fb64,324174157,0,0x0,8
tick,0x7ffad1f6fb64,324189169,0,0x0,8
tick,0x7ffad1f6fb64,324205211,0,0x0,8
tick,0x7ffad1f6fb64,324220213,0,0x0,8
tick,0x7ffad1f6fb64,324236231,0,0x0,8
tick,0x7ffad1f6fb64,324252228,0,0x0,8
tick,0x7ffad1f6fb64,324268245,0,0x0,8
tick,0x7ffad1f6fb64,324283269,0,0x0,8
tick,0x7ffad1f6fb64,324298306,0,0x0,8
tick,0x7ffad1f6fb64,324314295,0,0x0,8
tick,0x7ffad1f6fb64,324330321,0,0x0,8
tick,0x7ffad1f6fb64,324346303,0,0x0,8
tick,0x7ffad1f6fb64,324361332,0,0x0,8
tick,0x7ffad1f6fb64,324376354,0,0x0,8
tick,0x7ffad1f6fb64,324392377,0,0x0,8
tick,0x7ffad1f6fb64,324407399,0,0x0,8
tick,0x7ffad1f6fb64,324422398,0,0x0,8
tick,0x7ffad1f6fb64,324437399,0,0x0,8
tick,0x7ffad1f6fb64,324453409,0,0x0,8
tick,0x7ffad1f6fb64,324469439,0,0x0,8
tick,0x7ffad1f6fb64,324484458,0,0x0,8
tick,0x7ffad1f6fb64,324499474,0,0x0,8
tick,0x7ffad1f6fb64,324515489,0,0x0,8
tick,0x7ffad1f6fb64,324530490,0,0x0,8
tick,0x7ffad1f6fb64,324546512,0,0x0,8
tick,0x7ffad1f6fb64,324561557,0,0x0,8
tick,0x7ffad1f6fb64,324576562,0,0x0,8
tick,0x7ffad1f6fb64,324592563,0,0x0,8
tick,0x7ffad1f6fb64,324607563,0,0x0,8
tick,0x7ffad1f6fb64,324622590,0,0x0,8
tick,0x7ffad1f6fb64,324637627,0,0x0,8
tick,0x7ffad1f6fb64,324652603,0,0x0,8
tick,0x7ffad1f6fb64,324667622,0,0x0,8
tick,0x7ffad1f6fb64,324683844,0,0x0,8
tick,0x7ffad1f6fb64,324699644,0,0x0,8
tick,0x7ffad1f6fb64,324714656,0,0x0,8
tick,0x7ffad1f6fb64,324730676,0,0x0,8
tick,0x7ffad1f6fb64,324746684,0,0x0,8
tick,0x7ffad1f6fb64,324762690,0,0x0,8
tick,0x7ffad1f6fb64,324777733,0,0x0,8
tick,0x7ffad1f6fb64,324792734,0,0x0,8
tick,0x7ffad1f6fb64,324808746,0,0x0,8
tick,0x7ffad1f6fb64,324823743,0,0x0,8
tick,0x7ffad1f6fb64,324838798,0,0x0,8
tick,0x7ffad1f6fb64,324854792,0,0x0,8
tick,0x7ffad1f6fb64,324870856,0,0x0,8
tick,0x7ffad1f6fb64,324885824,0,0x0,8
tick,0x7ffad1f6fb64,324901823,0,0x0,8
tick,0x7ffad1f6fb64,324917842,0,0x0,8
tick,0x7ffad1f6fb64,324933879,0,0x0,8
tick,0x7ffad1f6fb64,324948862,0,0x0,8
tick,0x7ffad1f6fb64,324964889,0,0x0,8
tick,0x7ffad1f6fb64,324979907,0,0x0,8
tick,0x7ffad1f6fb64,324994924,0,0x0,8
tick,0x7ffad1f6fb64,325010922,0,0x0,8
tick,0x7ffad1f6fb64,325026938,0,0x0,8
tick,0x7ffad1f6fb64,325041950,0,0x0,8
tick,0x7ffad1f6fb64,325056961,0,0x0,8
tick,0x7ffad1f6fb64,325071998,0,0x0,8
tick,0x7ffad1f6fb64,325088091,0,0x0,8
tick,0x7ffad1f6fb64,325103035,0,0x0,8
tick,0x7ffad1f6fb64,325119024,0,0x0,8
tick,0x7ffad1f6fb64,325134028,0,0x0,8
tick,0x7ffad1f6fb64,325150077,0,0x0,8
tick,0x7ffad1f6fb64,325165053,0,0x0,8
tick,0x7ffad1f6fb64,325180092,0,0x0,8
tick,0x7ffad1f6fb64,325196092,0,0x0,8
tick,0x7ffad1f6fb64,325211093,0,0x0,8
tick,0x7ffad1f6fb64,325227120,0,0x0,8
tick,0x7ffad1f6fb64,325243211,0,0x0,8
tick,0x7ffad1f6fb64,325259151,0,0x0,8
tick,0x7ffad1f6fb64,325274166,0,0x0,8
tick,0x7ffad1f6fb64,325290194,0,0x0,8
tick,0x7ffad1f6fb64,325306198,0,0x0,8
tick,0x7ffad1f6fb64,325321215,0,0x0,8
tick,0x7ffad1f6fb64,325336213,0,0x0,8
tick,0x7ffad1f6fb64,325352273,0,0x0,8
tick,0x7ffad1f6fb64,325368257,0,0x0,8
tick,0x7ffad1f6fb64,325383256,0,0x0,8
tick,0x7ffad1f6fb64,325398316,0,0x0,8
tick,0x7ffad1f6fb64,325414292,0,0x0,8
tick,0x7ffad1f6fb64,325430318,0,0x0,8
tick,0x7ffad1f6fb64,325446313,0,0x0,8
tick,0x7ffad1f6fb64,325462330,0,0x0,8
tick,0x7ffad1f6fb64,325477342,0,0x0,8
tick,0x7ffad1f6fb64,325492371,0,0x0,8
tick,0x7ffad1f6fb64,325507356,0,0x0,8
tick,0x7ffad1f6fb64,325522369,0,0x0,8
tick,0x7ffad1f6fb64,325537413,0,0x0,8
tick,0x7ffad1f6fb64,325553408,0,0x0,8
tick,0x7ffad1f6fb64,325568441,0,0x0,8
tick,0x7ffad1f6fb64,325583491,0,0x0,8
tick,0x7ffad1f6fb64,325598466,0,0x0,8
tick,0x7ffad1f6fb64,325614464,0,0x0,8
tick,0x7ffad1f6fb64,325630499,0,0x0,8
tick,0x7ffad1f6fb64,325645497,0,0x0,8
tick,0x7ffad1f6fb64,325660530,0,0x0,8
tick,0x7ffad1f6fb64,325675522,0,0x0,8
tick,0x7ffad1f6fb64,325690544,0,0x0,8
tick,0x7ffad1f6fb64,325706560,0,0x0,8
tick,0x7ffad1f6fb64,325722582,0,0x0,8
tick,0x7ffad1f6fb64,325737590,0,0x0,8
tick,0x7ffad1f6fb64,325752631,0,0x0,8
tick,0x7ffad1f6fb64,325768600,0,0x0,8
tick,0x7ffad1f6fb64,325784654,0,0x0,8
tick,0x7ffad1f6fb64,325799672,0,0x0,8
tick,0x7ffad1f6fb64,325815653,0,0x0,8
tick,0x7ffad1f6fb64,325830657,0,0x0,8
tick,0x7ffad1f6fb64,325845679,0,0x0,8
tick,0x7ffad1f6fb64,325861748,0,0x0,8
tick,0x7ffad1f6fb64,325877723,0,0x0,8
tick,0x7ffad1f6fb64,325893724,0,0x0,8
tick,0x7ffad1f6fb64,325908750,0,0x0,8
tick,0x7ffad1f6fb64,325923762,0,0x0,8
tick,0x7ffad1f6fb64,325938779,0,0x0,8
tick,0x7ffad1f6fb64,325954774,0,0x0,8
tick,0x7ffad1f6fb64,325970815,0,0x0,8
tick,0x7ffad1f6fb64,325986807,0,0x0,8
tick,0x7ffad1f6fb64,326001825,0,0x0,8
tick,0x7ffad1f6fb64,326016849,0,0x0,8
tick,0x7ffad1f6fb64,326031872,0,0x0,8
tick,0x7ffad1f6fb64,326047890,0,0x0,8
tick,0x7ffad1f6fb64,326062884,0,0x0,8
tick,0x7ffad1f6fb64,326077896,0,0x0,8
tick,0x7ffad1f6fb64,326093918,0,0x0,8
tick,0x7ffad1f6fb64,326108937,0,0x0,8
tick,0x7ffad1f6fb64,326124948,0,0x0,8
tick,0x7ffad1f6fb64,326139948,0,0x0,8
tick,0x7ffad1f6fb64,326154961,0,0x0,8
tick,0x7ffad1f6fb64,326170984,0,0x0,8
tick,0x7ffad1f6fb64,326186022,0,0x0,8
tick,0x7ffad1f6fb64,326202015,0,0x0,8
tick,0x7ffad1f6fb64,326218043,0,0x0,8
tick,0x7ffad1f6fb64,326234046,0,0x0,8
tick,0x7ffad1f6fb64,326250044,0,0x0,8
tick,0x7ffad1f6fb64,326266114,0,0x0,8
tick,0x7ffad1f6fb64,326281073,0,0x0,8
tick,0x7ffad1f6fb64,326296103,0,0x0,8
tick,0x7ffad1f6fb64,326311099,0,0x0,8
tick,0x7ffad1f6fb64,326327109,0,0x0,8
tick,0x7ffad1f6fb64,326343133,0,0x0,8
tick,0x7ffad1f6fb64,326359139,0,0x0,8
tick,0x7ffad1f6fb64,326375206,0,0x0,8
tick,0x7ffad1f6fb64,326391193,0,0x0,8
tick,0x7ffad1f6fb64,326406196,0,0x0,8
tick,0x7ffad1f6fb64,326421216,0,0x0,8
tick,0x7ffad1f6fb64,326436260,0,0x0,8
tick,0x7ffad1f6fb64,326452228,0,0x0,8
tick,0x7ffad1f6fb64,326468248,0,0x0,8
tick,0x7ffad1f6fb64,326484280,0,0x0,8
tick,0x7ffad1f6fb64,326500287,0,0x0,8
tick,0x7ffad1f6fb64,326515293,0,0x0,8
tick,0x7ffad1f6fb64,326531302,0,0x0,8
tick,0x7ffad1f6fb64,326547320,0,0x0,8
tick,0x7ffad1f6fb64,326562332,0,0x0,8
tick,0x7ffad1f6fb64,326577338,0,0x0,8
tick,0x7ffad1f6fb64,326592367,0,0x0,8
tick,0x7ffad1f6fb64,326607390,0,0x0,8
tick,0x7ffad1f6fb64,326622443,0,0x0,8
tick,0x7ffad1f6fb64,326637414,0,0x0,8
tick,0x7ffad1f6fb64,326653443,0,0x0,8
tick,0x7ffad1f6fb64,326669458,0,0x0,8
tick,0x7ffad1f6fb64,326685479,0,0x0,8
tick,0x7ffad1f6fb64,326700457,0,0x0,8
tick,0x7ffad1f6fb64,326716493,0,0x0,8
tick,0x7ffad1f6fb64,326732505,0,0x0,8
tick,0x7ffad1f6fb64,326747518,0,0x0,8
tick,0x7ffad1f6fb64,326763506,0,0x0,8
tick,0x7ffad1f6fb64,326779552,0,0x0,8
tick,0x7ffad1f6fb64,326794556,0,0x0,8
tick,0x7ffad1f6fb64,326809552,0,0x0,8
tick,0x7ffad1f6fb64,326824579,0,0x0,8
tick,0x7ffad1f6fb64,326840592,0,0x0,8
tick,0x7ffad1f6fb64,326856593,0,0x0,8
tick,0x7ffad1f6fb64,326872617,0,0x0,8
tick,0x7ffad1f6fb64,326887670,0,0x0,8
tick,0x7ffad1f6fb64,326903702,0,0x0,8
tick,0x7ffad1f6fb64,326919664,0,0x0,8
tick,0x7ffad1f6fb64,326934705,0,0x0,8
tick,0x7ffad1f6fb64,326949738,0,0x0,8
tick,0x7ffad1f6fb64,326964726,0,0x0,8
tick,0x7ffad1f6fb64,326979740,0,0x0,8
tick,0x7ffad1f6fb64,326994734,0,0x0,8
tick,0x7ffad1f6fb64,327009762,0,0x0,8
tick,0x7ffad1f6fb64,327025754,0,0x0,8
tick,0x7ffad1f6fb64,327040781,0,0x0,8
tick,0x7ffad1f6fb64,327055804,0,0x0,8
tick,0x7ffad1f6fb64,327070792,0,0x0,8
tick,0x7ffad1f6fb64,327086823,0,0x0,8
tick,0x7ffad1f6fb64,327102832,0,0x0,8
tick,0x7ffad1f6fb64,327118856,0,0x0,8
tick,0x7ffad1f6fb64,327133845,0,0x0,8
tick,0x7ffad1f6fb64,327149876,0,0x0,8
tick,0x7ffad1f6fb64,327165885,0,0x0,8
tick,0x7ffad1f6fb64,327181898,0,0x0,8
tick,0x7ffad1f6fb64,327196957,0,0x0,8
tick,0x7ffad1f6fb64,327212944,0,0x0,8
tick,0x7ffad1f6fb64,327228939,0,0x0,8
tick,0x7ffad1f6fb64,327244969,0,0x0,8
tick,0x7ffad1f6fb64,327260966,0,0x0,8
tick,0x7ffad1f6fb64,327276007,0,0x0,8
tick,0x7ffad1f6fb64,327292045,0,0x0,8
tick,0x7ffad1f6fb64,327308029,0,0x0,8
tick,0x7ffad1f6fb64,327324043,0,0x0,8
tick,0x7ffad1f6fb64,327340059,0,0x0,8
tick,0x7ffad1f6fb64,327356060,0,0x0,8
tick,0x7ffad1f6fb64,327372068,0,0x0,8
tick,0x7ffad1f6fb64,327387094,0,0x0,8
tick,0x7ffad1f6fb64,327403122,0,0x0,8
tick,0x7ffad1f6fb64,327419189,0,0x0,8
tick,0x7ffad1f6fb64,327435145,0,0x0,8
tick,0x7ffad1f6fb64,327450139,0,0x0,8
tick,0x7ffad1f6fb64,327466151,0,0x0,8
tick,0x7ffad1f6fb64,327481176,0,0x0,8
tick,0x7ffad1f6fb64,327497197,0,0x0,8
tick,0x7ffad1f6fb64,327512207,0,0x0,8
tick,0x7ffad1f6fb64,327528207,0,0x0,8
tick,0x7ffad1f6fb64,327544230,0,0x0,8
tick,0x7ffad1f6fb64,327560237,0,0x0,8
tick,0x7ffad1f6fb64,327576280,0,0x0,8
tick,0x7ffad1f6fb64,327591285,0,0x0,8
tick,0x7ffad1f6fb64,327606322,0,0x0,8
tick,0x7ffad1f6fb64,327621291,0,0x0,8
tick,0x7ffad1f6fb64,327636313,0,0x0,8
tick,0x7ffad1f6fb64,327651368,0,0x0,8
tick,0x7ffad1f6fb64,327666363,0,0x0,8
tick,0x7ffad1f6fb64,327681421,0,0x0,8
tick,0x7ffad1f6fb64,327696367,0,0x0,8
tick,0x7ffad1f6fb64,327711683,0,0x0,8
tick,0x7ffad1f6fb64,327726431,0,0x0,8
tick,0x7ffad1f6fb64,327742425,0,0x0,8
tick,0x7ffad1f6fb64,327757423,0,0x0,8
tick,0x7ffad1f6fb64,327773435,0,0x0,8
tick,0x7ffad1f6fb64,327788457,0,0x0,8
tick,0x7ffad1f6fb64,327804480,0,0x0,8
tick,0x7ffad1f6fb64,327820505,0,0x0,8
tick,0x7ffad1f6fb64,327836509,0,0x0,8
tick,0x7ffad1f6fb64,327852526,0,0x0,8
tick,0x7ffad1f6fb64,327868526,0,0x0,8
tick,0x7ffad1f6fb64,327884541,0,0x0,8
tick,0x7ffad1f6fb64,327899582,0,0x0,8
tick,0x7ffad1f6fb64,327915591,0,0x0,8
tick,0x7ffad1f6fb64,327931612,0,0x0,8
tick,0x7ffad1f6fb64,327946646,0,0x0,8
tick,0x7ffad1f6fb64,327962613,0,0x0,8
tick,0x7ffad1f6fb64,327978640,0,0x0,8
tick,0x7ffad1f6fb64,327994635,0,0x0,8
tick,0x7ffad1f6fb64,328010651,0,0x0,8
tick,0x7ffad1f6fb64,328025663,0,0x0,8
tick,0x7ffad1f6fb64,328040681,0,0x0,8
tick,0x7ffad1f6fb64,328055693,0,0x0,8
tick,0x7ffad1f6fb64,328070685,0,0x0,8
tick,0x7ffad1f6fb64,328086721,0,0x0,8
tick,0x7ffad1f6fb64,328101730,0,0x0,8
tick,0x7ffad1f6fb64,328117748,0,0x0,8
tick,0x7ffad1f6fb64,328132759,0,0x0,8
tick,0x7ffad1f6fb64,328148833,0,0x0,8
tick,0x7ffad1f6fb64,328163793,0,0x0,8
tick,0x7ffad1f6fb64,328179859,0,0x0,8
tick,0x7ffad1f6fb64,328195845,0,0x0,8
tick,0x7ffad1f6fb64,328210831,0,0x0,8
tick,0x7ffad1f6fb64,328226868,0,0x0,8
tick,0x7ffad1f6fb64,328241866,0,0x0,8
tick,0x7ffad1f6fb64,328256875,0,0x0,8
tick,0x7ffad1f6fb64,328271888,0,0x0,8
tick,0x7ffad1f6fb64,328287919,0,0x0,8
tick,0x7ffad1f6fb64,328302916,0,0x0,8
tick,0x7ffad1f6fb64,328318027,0,0x0,8
tick,0x7ffad1f6fb64,328333944,0,0x0,8
tick,0x7ffad1f6fb64,328349946,0,0x0,8
tick,0x7ffad1f6fb64,328365995,0,0x0,8
tick,0x7ffad1f6fb64,328380983,0,0x0,8
tick,0x7ffad1f6fb64,328395999,0,0x0,8
tick,0x7ffad1f6fb64,328411015,0,0x0,8
tick,0x7ffad1f6fb64,328427039,0,0x0,8
tick,0x7ffad1f6fb64,328443046,0,0x0,8
tick,0x7ffad1f6fb64,328459070,0,0x0,8
tick,0x7ffad1f6fb64,328474077,0,0x0,8
tick,0x7ffad1f6fb64,328490079,0,0x0,8
tick,0x7ffad1f6fb64,328506106,0,0x0,8
tick,0x7ffad1f6fb64,328521126,0,0x0,8
tick,0x7ffad1f6fb64,328536146,0,0x0,8
tick,0x7ffad1f6fb64,328552135,0,0x0,8
tick,0x7ffad1f6fb64,328567186,0,0x0,8
tick,0x7ffad1f6fb64,328582212,0,0x0,8
tick,0x7ffad1f6fb64,328597199,0,0x0,8
tick,0x7ffad1f6fb64,328613219,0,0x0,8
tick,0x7ffad1f6fb64,328628217,0,0x0,8
tick,0x7ffad1f6fb64,328643231,0,0x0,8
tick,0x7ffad1f6fb64,328658230,0,0x0,8
tick,0x7ffad1f6fb64,328673241,0,0x0,8
tick,0x7ffad1f6fb64,328688283,0,0x0,8
tick,0x7ffad1f6fb64,328704277,0,0x0,8
tick,0x7ffad1f6fb64,328720331,0,0x0,8
tick,0x7ffad1f6fb64,328736326,0,0x0,8
tick,0x7ffad1f6fb64,328751309,0,0x0,8
tick,0x7ffad1f6fb64,328766333,0,0x0,8
tick,0x7ffad1f6fb64,328781352,0,0x0,8
tick,0x7ffad1f6fb64,328797438,0,0x0,8
tick,0x7ffad1f6fb64,328812374,0,0x0,8
tick,0x7ffad1f6fb64,328827413,0,0x0,8
tick,0x7ffad1f6fb64,328842404,0,0x0,8
tick,0x7ffad1f6fb64,328857412,0,0x0,8
tick,0x7ffad1f6fb64,328873437,0,0x0,8
tick,0x7ffad1f6fb64,328888447,0,0x0,8
tick,0x7ffad1f6fb64,328903472,0,0x0,8
tick,0x7ffad1f6fb64,328919487,0,0x0,8
tick,0x7ffad1f6fb64,328935514,0,0x0,8
tick,0x7ffad1f6fb64,328951492,0,0x0,8
tick,0x7ffad1f6fb64,328966517,0,0x0,8
tick,0x7ffad1f6fb64,328981531,0,0x0,8
tick,0x7ffad1f6fb64,328996533,0,0x0,8
tick,0x7ffad1f6fb64,329012577,0,0x0,8
tick,0x7ffad1f6fb64,329027576,0,0x0,8
tick,0x7ffad1f6fb64,329043596,0,0x0,8
tick,0x7ffad1f6fb64,329059617,0,0x0,8
tick,0x7ffad1f6fb64,329074630,0,0x0,8
tick,0x7ffad1f6fb64,329090652,0,0x0,8
tick,0x7ffad1f6fb64,329105651,0,0x0,8
tick,0x7ffad1f6fb64,329121722,0,0x0,8
tick,0x7ffad1f6fb64,329137681,0,0x0,8
tick,0x7ffad1f6fb64,329153726,0,0x0,8
tick,0x7ffad1f6fb64,329168722,0,0x0,8
tick,0x7ffad1f6fb64,329183747,0,0x0,8
tick,0x7ffad1f6fb64,329199727,0,0x0,8
tick,0x7ffad1f6fb64,329215750,0,0x0,8
tick,0x7ffad1f6fb64,329231791,0,0x0,8
tick,0x7ffad1f6fb64,329247805,0,0x0,8
tick,0x7ffad1f6fb64,329263831,0,0x0,8
tick,0x7ffad1f6fb64,329278810,0,0x0,8
tick,0x7ffad1f6fb64,329293821,0,0x0,8
tick,0x7ffad1f6fb64,329309841,0,0x0,8
tick,0x7ffad1f6fb64,329325860,0,0x0,8
tick,0x7ffad1f6fb64,329340910,0,0x0,8
tick,0x7ffad1f6fb64,329355875,0,0x0,8
tick,0x7ffad1f6fb64,329371890,0,0x0,8
tick,0x7ffad1f6fb64,329387904,0,0x0,8
tick,0x7ffad1f6fb64,329402920,0,0x0,8
tick,0x7ffad1f6fb64,329418979,0,0x0,8
tick,0x7ffad1f6fb64,329433983,0,0x0,8
tick,0x7ffad1f6fb64,329449985,0,0x0,8
tick,0x7ffad1f6fb64,329465981,0,0x0,8
tick,0x7ffad1f6fb64,329482011,0,0x0,8
tick,0x7ffad1f6fb64,329496999,0,0x0,8
tick,0x7ffad1f6fb64,329513013,0,0x0,8
tick,0x7ffad1f6fb64,329529033,0,0x0,8
tick,0x7ffad1f6fb64,329544043,0,0x0,8
tick,0x7ffad1f6fb64,329559073,0,0x0,8
tick,0x7ffad1f6fb64,329575079,0,0x0,8
tick,0x7ffad1f6fb64,329591106,0,0x0,8
tick,0x7ffad1f6fb64,329606124,0,0x0,8
tick,0x7ffad1f6fb64,329621119,0,0x0,8
tick,0x7ffad1f6fb64,329636147,0,0x0,8
tick,0x7ffad1f6fb64,329652151,0,0x0,8
tick,0x7ffad1f6fb64,329668173,0,0x0,8
tick,0x7ffad1f6fb64,329684199,0,0x0,8
tick,0x7ffad1f6fb64,329700219,0,0x0,8
tick,0x7ffad1f6fb64,329715209,0,0x0,8
tick,0x7ffad1f6fb64,329731224,0,0x0,8
tick,0x7ffad1f6fb64,329746250,0,0x0,8
tick,0x7ffad1f6fb64,329762264,0,0x0,8
tick,0x7ffad1f6fb64,329777260,0,0x0,8
tick,0x7ffad1f6fb64,329793333,0,0x0,8
tick,0x7ffad1f6fb64,329808299,0,0x0,8
tick,0x7ffad1f6fb64,329824308,0,0x0,8
tick,0x7ffad1f6fb64,329840315,0,0x0,8
tick,0x7ffad1f6fb64,329855350,0,0x0,8
tick,0x7ffad1f6fb64,329871356,0,0x0,8
tick,0x7ffad1f6fb64,329886371,0,0x0,8
tick,0x7ffad1f6fb64,329902401,0,0x0,8
tick,0x7ffad1f6fb64,329917401,0,0x0,8
tick,0x7ffad1f6fb64,329933406,0,0x0,8
tick,0x7ffad1f6fb64,329949412,0,0x0,8
tick,0x7ffad1f6fb64,329964470,0,0x0,8
tick,0x7ffad1f6fb64,329979440,0,0x0,8
tick,0x7ffad1f6fb64,329995549,0,0x0,8
tick,0x7ffad1f6fb64,330010483,0,0x0,8
tick,0x7ffad1f6fb64,330025489,0,0x0,8
tick,0x7ffad1f6fb64,330040495,0,0x0,8
tick,0x7ffad1f6fb64,330056516,0,0x0,8
tick,0x7ffad1f6fb64,330072578,0,0x0,8
tick,0x7ffad1f6fb64,330088613,0,0x0,8
tick,0x7ffad1f6fb64,330103566,0,0x0,8
tick,0x7ffad1f6fb64,330119583,0,0x0,8
tick,0x7ffad1f6fb64,330135586,0,0x0,8
tick,0x7ffad1f6fb64,330151600,0,0x0,8
tick,0x7ffad1f6fb64,330166633,0,0x0,8
tick,0x7ffad1f6fb64,330181632,0,0x0,8
tick,0x7ffad1f6fb64,330197693,0,0x0,8
tick,0x7ffad1f6fb64,330213664,0,0x0,8
tick,0x7ffad1f6fb64,330228659,0,0x0,8
tick,0x7ffad1f6fb64,330244689,0,0x0,8
tick,0x7ffad1f6fb64,330260720,0,0x0,8
tick,0x7ffad1f6fb64,330275724,0,0x0,8
tick,0x7ffad1f6fb64,330291722,0,0x0,8
tick,0x7ffad1f6fb64,330307729,0,0x0,8
tick,0x7ffad1f6fb64,330323767,0,0x0,8
tick,0x7ffad1f6fb64,330338792,0,0x0,8
tick,0x7ffad1f6fb64,330353810,0,0x0,8
tick,0x7ffad1f6fb64,330369832,0,0x0,8
tick,0x7ffad1f6fb64,330384824,0,0x0,8
tick,0x7ffad1f6fb64,330400825,0,0x0,8
tick,0x7ffad1f6fb64,330416905,0,0x0,8
tick,0x7ffad1f6fb64,330432880,0,0x0,8
tick,0x7ffad1f6fb64,330448879,0,0x0,8
tick,0x7ffad1f6fb64,330463879,0,0x0,8
tick,0x7ffad1f6fb64,330479928,0,0x0,8
tick,0x7ffad1f6fb64,330494906,0,0x0,8
tick,0x7ffad1f6fb64,330509921,0,0x0,8
tick,0x7ffad1f6fb64,330524961,0,0x0,8
tick,0x7ffad1f6fb64,330539994,0,0x0,8
tick,0x7ffad1f6fb64,330555953,0,0x0,8
tick,0x7ffad1f6fb64,330572040,0,0x0,8
tick,0x7ffad1f6fb64,330588009,0,0x0,8
tick,0x7ffad1f6fb64,330603013,0,0x0,8
tick,0x7ffad1f6fb64,330618030,0,0x0,8
tick,0x7ffad1f6fb64,330633046,0,0x0,8
tick,0x7ffad1f6fb64,330649052,0,0x0,8
tick,0x7ffad1f6fb64,330664065,0,0x0,8
tick,0x7ffad1f6fb64,330679075,0,0x0,8
tick,0x7ffad1f6fb64,330694111,0,0x0,8
tick,0x7ffad1f6fb64,330709124,0,0x0,8
tick,0x7ffad1f6fb64,330725128,0,0x0,8
tick,0x7ffad1f6fb64,330740117,0,0x0,8
tick,0x7ffad1f6fb64,330756154,0,0x0,8
tick,0x7ffad1f6fb64,330771173,0,0x0,8
tick,0x7ffad1f6fb64,330787189,0,0x0,8
tick,0x7ffad1f6fb64,330802192,0,0x0,8
tick,0x7ffad1f6fb64,330817191,0,0x0,8
tick,0x7ffad1f6fb64,330833276,0,0x0,8
tick,0x7ffad1f6fb64,330848258,0,0x0,8
tick,0x7ffad1f6fb64,330863257,0,0x0,8
tick,0x7ffad1f6fb64,330878314,0,0x0,8
tick,0x7ffad1f6fb64,330894286,0,0x0,8
tick,0x7ffad1f6fb64,330910299,0,0x0,8
tick,0x7ffad1f6fb64,330926323,0,0x0,8
tick,0x7ffad1f6fb64,330941322,0,0x0,8
tick,0x7ffad1f6fb64,330957334,0,0x0,8
tick,0x7ffad1f6fb64,330973380,0,0x0,8
tick,0x7ffad1f6fb64,330989380,0,0x0,8
tick,0x7ffad1f6fb64,331005377,0,0x0,8
tick,0x7ffad1f6fb64,331020426,0,0x0,8
tick,0x7ffad1f6fb64,331036413,0,0x0,8
tick,0x7ffad1f6fb64,331051442,0,0x0,8
tick,0x7ffad1f6fb64,331066452,0,0x0,8
tick,0x7ffad1f6fb64,331081477,0,0x0,8
tick,0x7ffad1f6fb64,331097457,0,0x0,8
tick,0x7ffad1f6fb64,331113507,0,0x0,8
tick,0x7ffad1f6fb64,331128483,0,0x0,8
tick,0x7ffad1f6fb64,331144530,0,0x0,8
tick,0x7ffad1f6fb64,331160527,0,0x0,8
tick,0x7ffad1f6fb64,331175526,0,0x0,8
tick,0x7ffad1f6fb64,331190557,0,0x0,8
tick,0x7ffad1f6fb64,331205572,0,0x0,8
tick,0x7ffad1f6fb64,331221584,0,0x0,8
tick,0x7ffad1f6fb64,331237632,0,0x0,8
tick,0x7ffad1f6fb64,331253595,0,0x0,8
tick,0x7ffad1f6fb64,331269621,0,0x0,8
tick,0x7ffad1f6fb64,331284626,0,0x0,8
tick,0x7ffad1f6fb64,331299666,0,0x0,8
tick,0x7ffad1f6fb64,331315679,0,0x0,8
tick,0x7ffad1f6fb64,331330700,0,0x0,8
tick,0x7ffad1f6fb64,331346718,0,0x0,8
tick,0x7ffad1f6fb64,331362716,0,0x0,8
tick,0x7ffad1f6fb64,331378768,0,0x0,8
tick,0x7ffad1f6fb64,331393774,0,0x0,8
tick,0x7ffad1f6fb64,331408772,0,0x0,8
tick,0x7ffad1f6fb64,331424759,0,0x0,8
tick,0x7ffad1f6fb64,331439780,0,0x0,8
tick,0x7ffad1f6fb64,331454798,0,0x0,8
tick,0x7ffad1f6fb64,331470808,0,0x0,8
tick,0x7ffad1f6fb64,331486845,0,0x0,8
tick,0x7ffad1f6fb64,331502847,0,0x0,8
tick,0x7ffad1f6fb64,331518894,0,0x0,8
tick,0x7ffad1f6fb64,331533868,0,0x0,8
tick,0x7ffad1f6fb64,331549873,0,0x0,8
tick,0x7ffad1f6fb64,331565876,0,0x0,8
tick,0x7ffad1f6fb64,331581919,0,0x0,8
tick,0x7ffad1f6fb64,331596928,0,0x0,8
tick,0x7ffad1f6fb64,331611936,0,0x0,8
tick,0x7ffad1f6fb64,331627964,0,0x0,8
tick,0x7ffad1f6fb64,331643957,0,0x0,8
tick,0x7ffad1f6fb64,331659004,0,0x0,8
tick,0x7ffad1f6fb64,331675031,0,0x0,8
tick,0x7ffad1f6fb64,331690990,0,0x0,8
tick,0x7ffad1f6fb64,331706014,0,0x0,8
tick,0x7ffad1f6fb64,331721031,0,0x0,8
tick,0x7ffad1f6fb64,331736030,0,0x0,8
tick,0x7ffad1f6fb64,331752061,0,0x0,8
tick,0x7ffad1f6fb64,331768099,0,0x0,8
tick,0x7ffad1f6fb64,331784089,0,0x0,8
tick,0x7ffad1f6fb64,331799098,0,0x0,8
tick,0x7ffad1f6fb64,331814111,0,0x0,8
tick,0x7ffad1f6fb64,331830131,0,0x0,8
tick,0x7ffad1f6fb64,331846158,0,0x0,8
tick,0x7ffad1f6fb64,331861156,0,0x0,8
tick,0x7ffad1f6fb64,331877178,0,0x0,8
tick,0x7ffad1f6fb64,331892193,0,0x0,8
tick,0x7ffad1f6fb64,331908228,0,0x0,8
tick,0x7ffad1f6fb64,331923271,0,0x0,8
tick,0x7ffad1f6fb64,331938225,0,0x0,8
tick,0x7ffad1f6fb64,331954277,0,0x0,8
tick,0x7ffad1f6fb64,331970271,0,0x0,8
tick,0x7ffad1f6fb64,331985306,0,0x0,8
tick,0x7ffad1f6fb64,332001302,0,0x0,8
tick,0x7ffad1f6fb64,332016320,0,0x0,8
tick,0x7ffad1f6fb64,332032324,0,0x0,8
tick,0x7ffad1f6fb64,332047322,0,0x0,8
tick,0x7ffad1f6fb64,332062384,0,0x0,8
tick,0x7ffad1f6fb64,332077352,0,0x0,8
tick,0x7ffad1f6fb64,332093457,0,0x0,8
tick,0x7ffad1f6fb64,332109384,0,0x0,8
tick,0x7ffad1f6fb64,332125380,0,0x0,8
tick,0x7ffad1f6fb64,332140406,0,0x0,8
tick,0x7ffad1f6fb64,332155429,0,0x0,8
tick,0x7ffad1f6fb64,332171467,0,0x0,8
tick,0x7ffad1f6fb64,332187456,0,0x0,8
tick,0x7ffad1f6fb64,332202477,0,0x0,8
tick,0x7ffad1f6fb64,332217488,0,0x0,8
tick,0x7ffad1f6fb64,332233489,0,0x0,8
tick,0x7ffad1f6fb64,332248499,0,0x0,8
tick,0x7ffad1f6fb64,332263516,0,0x0,8
tick,0x7ffad1f6fb64,332278546,0,0x0,8
tick,0x7ffad1f6fb64,332294580,0,0x0,8
tick,0x7ffad1f6fb64,332310567,0,0x0,8
tick,0x7ffad1f6fb64,332325594,0,0x0,8
tick,0x7ffad1f6fb64,332340597,0,0x0,8
tick,0x7ffad1f6fb64,332356618,0,0x0,8
tick,0x7ffad1f6fb64,332372617,0,0x0,8
tick,0x7ffad1f6fb64,332387657,0,0x0,8
tick,0x7ffad1f6fb64,332402661,0,0x0,8
tick,0x7ffad1f6fb64,332417717,0,0x0,8
tick,0x7ffad1f6fb64,332433713,0,0x0,8
tick,0x7ffad1f6fb64,332449693,0,0x0,8
tick,0x7ffad1f6fb64,332465735,0,0x0,8
tick,0x7ffad1f6fb64,332481726,0,0x0,8
tick,0x7ffad1f6fb64,332497744,0,0x0,8
tick,0x7ffad1f6fb64,332513756,0,0x0,8
tick,0x7ffad1f6fb64,332528798,0,0x0,8
tick,0x7ffad1f6fb64,332544776,0,0x0,8
tick,0x7ffad1f6fb64,332559795,0,0x0,8
tick,0x7ffad1f6fb64,332574835,0,0x0,8
tick,0x7ffad1f6fb64,332590836,0,0x0,8
tick,0x7ffad1f6fb64,332605851,0,0x0,8
tick,0x7ffad1f6fb64,332620880,0,0x0,8
tick,0x7ffad1f6fb64,332636888,0,0x0,8
tick,0x7ffad1f6fb64,332652898,0,0x0,8
tick,0x7ffad1f6fb64,332667936,0,0x0,8
tick,0x7ffad1f6fb64,332683908,0,0x0,8
tick,0x7ffad1f6fb64,332698917,0,0x0,8
tick,0x7ffad1f6fb64,332713955,0,0x0,8
tick,0x7ffad1f6fb64,332729963,0,0x0,8
tick,0x7ffad1f6fb64,332745967,0,0x0,8
tick,0x7ffad1f6fb64,332760995,0,0x0,8
tick,0x7ffad1f6fb64,332775990,0,0x0,8
tick,0x7ffad1f6fb64,332791006,0,0x0,8
tick,0x7ffad1f6fb64,332806020,0,0x0,8
tick,0x7ffad1f6fb64,332821047,0,0x0,8
tick,0x7ffad1f6fb64,332836139,0,0x0,8
tick,0x7ffad1f6fb64,332851061,0,0x0,8
tick,0x7ffad1f6fb64,332866076,0,0x0,8
tick,0x7ffad1f6fb64,332881076,0,0x0,8
tick,0x7ffad1f6fb64,332897146,0,0x0,8
tick,0x7ffad1f6fb64,332913123,0,0x0,8
tick,0x7ffad1f6fb64,332928175,0,0x0,8
tick,0x7ffad1f6fb64,332943158,0,0x0,8
tick,0x7ffad1f6fb64,332959161,0,0x0,8
tick,0x7ffad1f6fb64,332974174,0,0x0,8
tick,0x7ffad1f6fb64,332990178,0,0x0,8
tick,0x7ffad1f6fb64,333006205,0,0x0,8
tick,0x7ffad1f6fb64,333021215,0,0x0,8
tick,0x7ffad1f6fb64,333036239,0,0x0,8
tick,0x7ffad1f6fb64,333051259,0,0x0,8
tick,0x7ffad1f6fb64,333066265,0,0x0,8
tick,0x7ffad1f6fb64,333081281,0,0x0,8
tick,0x7ffad1f6fb64,333097271,0,0x0,8
tick,0x7ffad1f6fb64,333113288,0,0x0,8
tick,0x7ffad1f6fb64,333129313,0,0x0,8
tick,0x7ffad1f6fb64,333144340,0,0x0,8
tick,0x7ffad1f6fb64,333160333,0,0x0,8
tick,0x7ffad1f6fb64,333175351,0,0x0,8
tick,0x7ffad1f6fb64,333190355,0,0x0,8
tick,0x7ffad1f6fb64,333206387,0,0x0,8
tick,0x7ffad1f6fb64,333222381,0,0x0,8
tick,0x7ffad1f6fb64,333237427,0,0x0,8
tick,0x7ffad1f6fb64,333253443,0,0x0,8
tick,0x7ffad1f6fb64,333269439,0,0x0,8
tick,0x7ffad1f6fb64,333285455,0,0x0,8
tick,0x7ffad1f6fb64,333301460,0,0x0,8
tick,0x7ffad1f6fb64,333317480,0,0x0,8
tick,0x7ffad1f6fb64,333332503,0,0x0,8
tick,0x7ffad1f6fb64,333348521,0,0x0,8
tick,0x7ffad1f6fb64,333363534,0,0x0,8
tick,0x7ffad1f6fb64,333379542,0,0x0,8
tick,0x7ffad1f6fb64,333395558,0,0x0,8
tick,0x7ffad1f6fb64,333410586,0,0x0,8
tick,0x7ffad1f6fb64,333425569,0,0x0,8
tick,0x7ffad1f6fb64,333440643,0,0x0,8
tick,0x7ffad1f6fb64,333456613,0,0x0,8
tick,0x7ffad1f6fb64,333472620,0,0x0,8
tick,0x7ffad1f6fb64,333488642,0,0x0,8
tick,0x7ffad1f6fb64,333503653,0,0x0,8
tick,0x7ffad1f6fb64,333519658,0,0x0,8
tick,0x7ffad1f6fb64,333534677,0,0x0,8
tick,0x7ffad1f6fb64,333549707,0,0x0,8
tick,0x7ffad1f6fb64,333565716,0,0x0,8
tick,0x7ffad1f6fb64,333581754,0,0x0,8
tick,0x7ffad1f6fb64,333597744,0,0x0,8
tick,0x7ffad1f6fb64,333612780,0,0x0,8
tick,0x7ffad1f6fb64,333627780,0,0x0,8
tick,0x7ffad1f6fb64,333642780,0,0x0,8
tick,0x7ffad1f6fb64,333657797,0,0x0,8
tick,0x7ffad1f6fb64,333673816,0,0x0,8
tick,0x7ffad1f6fb64,333689832,0,0x0,8
tick,0x7ffad1f6fb64,333704837,0,0x0,8
tick,0x7ffad1f6fb64,333720858,0,0x0,8
tick,0x7ffad1f6fb64,333736859,0,0x0,8
tick,0x7ffad1f6fb64,333752889,0,0x0,8
tick,0x7ffad1f6fb64,333767902,0,0x0,8
tick,0x7ffad1f6fb64,333783913,0,0x0,8
tick,0x7ffad1f6fb64,333798930,0,0x0,8
tick,0x7ffad1f6fb64,333813932,0,0x0,8
tick,0x7ffad1f6fb64,333828951,0,0x0,8
tick,0x7ffad1f6fb64,333843968,0,0x0,8
tick,0x7ffad1f6fb64,333860004,0,0x0,8
tick,0x7ffad1f6fb64,333875019,0,0x0,8
tick,0x7ffad1f6fb64,333891005,0,0x0,8
tick,0x7ffad1f6fb64,333906038,0,0x0,8
tick,0x7ffad1f6fb64,333921046,0,0x0,8
tick,0x7ffad1f6fb64,333936129,0,0x0,8
tick,0x7ffad1f6fb64,333951343,0,0x0,8
tick,0x7ffad1f6fb64,333966062,0,0x0,8
tick,0x7ffad1f6fb64,333981090,0,0x0,8
tick,0x7ffad1f6fb64,333997097,0,0x0,8
tick,0x7ffad1f6fb64,334013135,0,0x0,8
tick,0x7ffad1f6fb64,334029117,0,0x0,8
tick,0x7ffad1f6fb64,334045140,0,0x0,8
tick,0x7ffad1f6fb64,334060344,0,0x0,8
tick,0x7ffad1f6fb64,334076192,0,0x0,8
tick,0x7ffad1f6fb64,334092190,0,0x0,8
tick,0x7ffad1f6fb64,334107184,0,0x0,8
tick,0x7ffad1f6fb64,334122219,0,0x0,8
tick,0x7ffad1f6fb64,334138232,0,0x0,8
tick,0x7ffad1f6fb64,334154255,0,0x0,8
tick,0x7ffad1f6fb64,334170251,0,0x0,8
tick,0x7ffad1f6fb64,334185293,0,0x0,8
tick,0x7ffad1f6fb64,334201288,0,0x0,8
tick,0x7ffad1f6fb64,334217286,0,0x0,8
tick,0x7ffad1f6fb64,334233338,0,0x0,8
tick,0x7ffad1f6fb64,334248327,0,0x0,8
tick,0x7ffad1f6fb64,334264349,0,0x0,8
tick,0x7ffad1f6fb64,334280347,0,0x0,8
tick,0x7ffad1f6fb64,334295454,0,0x0,8
tick,0x7ffad1f6fb64,334311400,0,0x0,8
tick,0x7ffad1f6fb64,334327403,0,0x0,8
tick,0x7ffad1f6fb64,334343413,0,0x0,8
tick,0x7ffad1f6fb64,334359429,0,0x0,8
tick,0x7ffad1f6fb64,334374466,0,0x0,8
tick,0x7ffad1f6fb64,334390457,0,0x0,8
tick,0x7ffad1f6fb64,334406472,0,0x0,8
tick,0x7ffad1f6fb64,334422476,0,0x0,8
tick,0x7ffad1f6fb64,334437541,0,0x0,8
tick,0x7ffad1f6fb64,334453578,0,0x0,8
tick,0x7ffad1f6fb64,334469534,0,0x0,8
tick,0x7ffad1f6fb64,334484550,0,0x0,8
tick,0x7ffad1f6fb64,334499588,0,0x0,8
tick,0x7ffad1f6fb64,334515591,0,0x0,8
tick,0x7ffad1f6fb64,334530596,0,0x0,8
tick,0x7ffad1f6fb64,334546601,0,0x0,8
tick,0x7ffad1f6fb64,334562653,0,0x0,8
tick,0x7ffad1f6fb64,334577641,0,0x0,8
tick,0x7ffad1f6fb64,334593643,0,0x0,8
tick,0x7ffad1f6fb64,334609683,0,0x0,8
tick,0x7ffad1f6fb64,334625692,0,0x0,8
tick,0x7ffad1f6fb64,334640683,0,0x0,8
tick,0x7ffad1f6fb64,334655734,0,0x0,8
tick,0x7ffad1f6fb64,334671760,0,0x0,8
tick,0x7ffad1f6fb64,334686729,0,0x0,8
tick,0x7ffad1f6fb64,334701765,0,0x0,8
tick,0x7ffad1f6fb64,334717752,0,0x0,8
tick,0x7ffad1f6fb64,334733809,0,0x0,8
tick,0x7ffad1f6fb64,334748781,0,0x0,8
tick,0x7ffad1f6fb64,334763806,0,0x0,8
tick,0x7ffad1f6fb64,334779804,0,0x0,8
tick,0x7ffad1f6fb64,334795839,0,0x0,8
tick,0x7ffad1f6fb64,334811869,0,0x0,8
tick,0x7ffad1f6fb64,334827873,0,0x0,8
tick,0x7ffad1f6fb64,334843878,0,0x0,8
tick,0x7ffad1f6fb64,334859906,0,0x0,8
tick,0x7ffad1f6fb64,334874966,0,0x0,8
tick,0x7ffad1f6fb64,334889950,0,0x0,8
tick,0x7ffad1f6fb64,334905948,0,0x0,8
tick,0x7ffad1f6fb64,334921977,0,0x0,8
tick,0x7ffad1f6fb64,334937001,0,0x0,8
tick,0x7ffad1f6fb64,334952997,0,0x0,8
tick,0x7ffad1f6fb64,334969054,0,0x0,8
tick,0x7ffad1f6fb64,334985071,0,0x0,8
tick,0x7ffad1f6fb64,335000087,0,0x0,8
tick,0x7ffad1f6fb64,335015083,0,0x0,8
tick,0x7ffad1f6fb64,335030070,0,0x0,8
tick,0x7ffad1f6fb64,335045073,0,0x0,8
tick,0x7ffad1f6fb64,335061123,0,0x0,8
tick,0x7ffad1f6fb64,335077141,0,0x0,8
tick,0x7ffad1f6fb64,335092133,0,0x0,8
tick,0x7ffad1f6fb64,335107150,0,0x0,8
tick,0x7ffad1f6fb64,335122126,0,0x0,8
tick,0x7ffad1f6fb64,335138164,0,0x0,8
tick,0x7ffad1f6fb64,335154309,0,0x0,8
tick,0x7ffad1f6fb64,335170191,0,0x0,8
tick,0x7ffad1f6fb64,335186207,0,0x0,8
tick,0x7ffad1f6fb64,335201274,0,0x0,8
tick,0x7ffad1f6fb64,335216226,0,0x0,8
tick,0x7ffad1f6fb64,335232240,0,0x0,8
tick,0x7ffad1f6fb64,335248280,0,0x0,8
tick,0x7ffad1f6fb64,335264275,0,0x0,8
tick,0x7ffad1f6fb64,335279288,0,0x0,8
tick,0x7ffad1f6fb64,335294324,0,0x0,8
tick,0x7ffad1f6fb64,335309334,0,0x0,8
tick,0x7ffad1f6fb64,335325334,0,0x0,8
tick,0x7ffad1f6fb64,335340373,0,0x0,8
tick,0x7ffad1f6fb64,335356357,0,0x0,8
tick,0x7ffad1f6fb64,335372408,0,0x0,8
tick,0x7ffad1f6fb64,335387453,0,0x0,8
tick,0x7ffad1f6fb64,335403420,0,0x0,8
tick,0x7ffad1f6fb64,335418421,0,0x0,8
tick,0x7ffad1f6fb64,335434437,0,0x0,8
tick,0x7ffad1f6fb64,335449419,0,0x0,8
tick,0x7ffad1f6fb64,335464458,0,0x0,8
tick,0x7ffad1f6fb64,335479472,0,0x0,8
tick,0x7ffad1f6fb64,335495490,0,0x0,8
tick,0x7ffad1f6fb64,335510511,0,0x0,8
tick,0x7ffad1f6fb64,335525496,0,0x0,8
tick,0x7ffad1f6fb64,335540510,0,0x0,8
tick,0x7ffad1f6fb64,335555544,0,0x0,8
tick,0x7ffad1f6fb64,335571546,0,0x0,8
tick,0x7ffad1f6fb64,335586563,0,0x0,8
tick,0x7ffad1f6fb64,335601571,0,0x0,8
tick,0x7ffad1f6fb64,335617575,0,0x0,8
tick,0x7ffad1f6fb64,335632592,0,0x0,8
tick,0x7ffad1f6fb64,335648628,0,0x0,8
tick,0x7ffad1f6fb64,335663627,0,0x0,8
tick,0x7ffad1f6fb64,335679642,0,0x0,8
tick,0x7ffad1f6fb64,335695657,0,0x0,8
tick,0x7ffad1f6fb64,335710656,0,0x0,8
tick,0x7ffad1f6fb64,335725679,0,0x0,8
tick,0x7ffad1f6fb64,335740684,0,0x0,8
tick,0x7ffad1f6fb64,335756732,0,0x0,8
tick,0x7ffad1f6fb64,335771713,0,0x0,8
tick,0x7ffad1f6fb64,335787767,0,0x0,8
tick,0x7ffad1f6fb64,335802762,0,0x0,8
tick,0x7ffad1f6fb64,335817767,0,0x0,8
tick,0x7ffad1f6fb64,335832781,0,0x0,8
tick,0x7ffad1f6fb64,335848821,0,0x0,8
tick,0x7ffad1f6fb64,335863846,0,0x0,8
tick,0x7ffad1f6fb64,335878852,0,0x0,8
tick,0x7ffad1f6fb64,335893867,0,0x0,8
tick,0x7ffad1f6fb64,335908895,0,0x0,8
tick,0x7ffad1f6fb64,335924888,0,0x0,8
tick,0x7ffad1f6fb64,335939895,0,0x0,8
tick,0x7ffad1f6fb64,335956014,0,0x0,8
tick,0x7ffad1f6fb64,335971932,0,0x0,8
tick,0x7ffad1f6fb64,335987957,0,0x0,8
tick,0x7ffad1f6fb64,336002968,0,0x0,8
tick,0x7ffad1f6fb64,336018952,0,0x0,8
tick,0x7ffad1f6fb64,336033965,0,0x0,8
tick,0x7ffad1f6fb64,336050010,0,0x0,8
tick,0x7ffad1f6fb64,336066009,0,0x0,8
tick,0x7ffad1f6fb64,336081096,0,0x0,8
tick,0x7ffad1f6fb64,336096060,0,0x0,8
tick,0x7ffad1f6fb64,336112074,0,0x0,8
tick,0x7ffad1f6fb64,336127104,0,0x0,8
tick,0x7ffad1f6fb64,336143055,0,0x0,8
tick,0x7ffad1f6fb64,336158100,0,0x0,8
tick,0x7ffad1f6fb64,336174094,0,0x0,8
tick,0x7ffad1f6fb64,336190148,0,0x0,8
tick,0x7ffad1f6fb64,336206122,0,0x0,8
tick,0x7ffad1f6fb64,336221338,0,0x0,8
tick,0x7ffad1f6fb64,336237246,0,0x0,8
tick,0x7ffad1f6fb64,336253256,0,0x0,8
tick,0x7ffad1f6fb64,336269179,0,0x0,8
tick,0x7ffad1f6fb64,336285177,0,0x0,8
tick,0x7ffad1f6fb64,336300219,0,0x0,8
tick,0x7ffad1f6fb64,336316226,0,0x0,8
tick,0x7ffad1f6fb64,336331238,0,0x0,8
tick,0x7ffad1f6fb64,336346263,0,0x0,8
tick,0x7ffad1f6fb64,336362263,0,0x0,8
tick,0x7ffad1f6fb64,336377284,0,0x0,8
tick,0x7ffad1f6fb64,336393285,0,0x0,8
tick,0x7ffad1f6fb64,336408348,0,0x0,8
tick,0x7ffad1f6fb64,336424347,0,0x0,8
tick,0x7ffad1f6fb64,336439352,0,0x0,8
tick,0x7ffad1f6fb64,336455359,0,0x0,8
tick,0x7ffad1f6fb64,336471367,0,0x0,8
tick,0x7ffad1f6fb64,336486381,0,0x0,8
tick,0x7ffad1f6fb64,336502408,0,0x0,8
tick,0x7ffad1f6fb64,336517453,0,0x0,8
tick,0x7ffad1f6fb64,336533426,0,0x0,8
tick,0x7ffad1f6fb64,336549426,0,0x0,8
tick,0x7ffad1f6fb64,336564480,0,0x0,8
tick,0x7ffad1f6fb64,336579492,0,0x0,8
tick,0x7ffad1f6fb64,336594718,0,0x0,8
tick,0x7ffad1f6fb64,336609526,0,0x0,8
tick,0x7ffad1f6fb64,336624519,0,0x0,8
tick,0x7ffad1f6fb64,336639532,0,0x0,8
tick,0x7ffad1f6fb64,336654542,0,0x0,8
tick,0x7ffad1f6fb64,336670557,0,0x0,8
tick,0x7ffad1f6fb64,336685587,0,0x0,8
tick,0x7ffad1f6fb64,336701755,0,0x0,8
tick,0x7ffad1f6fb64,336716575,0,0x0,8
tick,0x7ffad1f6fb64,336731615,0,0x0,8
tick,0x7ffad1f6fb64,336747604,0,0x0,8
tick,0x7ffad1f6fb64,336763639,0,0x0,8
tick,0x7ffad1f6fb64,336779659,0,0x0,8
tick,0x7ffad1f6fb64,336794925,0,0x0,8
tick,0x7ffad1f6fb64,336810677,0,0x0,8
tick,0x7ffad1f6fb64,336825702,0,0x0,8
tick,0x7ffad1f6fb64,336840719,0,0x0,8
tick,0x7ffad1f6fb64,336856763,0,0x0,8
tick,0x7ffad1f6fb64,336872738,0,0x0,8
tick,0x7ffad1f6fb64,336888768,0,0x0,8
tick,0x7ffad1f6fb64,336903736,0,0x0,8
tick,0x7ffad1f6fb64,336918796,0,0x0,8
tick,0x7ffad1f6fb64,336934800,0,0x0,8
tick,0x7ffad1f6fb64,336949809,0,0x0,8
tick,0x7ffad1f6fb64,336965801,0,0x0,8
tick,0x7ffad1f6fb64,336980828,0,0x0,8
tick,0x7ffad1f6fb64,336995875,0,0x0,8
tick,0x7ffad1f6fb64,337011888,0,0x0,8
tick,0x7ffad1f6fb64,337027855,0,0x0,8
tick,0x7ffad1f6fb64,337043887,0,0x0,8
tick,0x7ffad1f6fb64,337058913,0,0x0,8
tick,0x7ffad1f6fb64,337074986,0,0x0,8
tick,0x7ffad1f6fb64,337090930,0,0x0,8
tick,0x7ffad1f6fb64,337105959,0,0x0,8
tick,0x7ffad1f6fb64,337121999,0,0x0,8
tick,0x7ffad1f6fb64,337136976,0,0x0,8
tick,0x7ffad1f6fb64,337152973,0,0x0,8
tick,0x7ffad1f6fb64,337169059,0,0x0,8
tick,0x7ffad1f6fb64,337184008,0,0x0,8
tick,0x7ffad1f6fb64,337199021,0,0x0,8
tick,0x7ffad1f6fb64,337214031,0,0x0,8
tick,0x7ffad1f6fb64,337229054,0,0x0,8
tick,0x7ffad1f6fb64,337245061,0,0x0,8
tick,0x7ffad1f6fb64,337261090,0,0x0,8
tick,0x7ffad1f6fb64,337276135,0,0x0,8
tick,0x7ffad1f6fb64,337291112,0,0x0,8
tick,0x7ffad1f6fb64,337306108,0,0x0,8
tick,0x7ffad1f6fb64,337321147,0,0x0,8
tick,0x7ffad1f6fb64,337336153,0,0x0,8
tick,0x7ffad1f6fb64,337351363,0,0x0,8
tick,0x7ffad1f6fb64,337366194,0,0x0,8
tick,0x7ffad1f6fb64,337381239,0,0x0,8
tick,0x7ffad1f6fb64,337397223,0,0x0,8
tick,0x7ffad1f6fb64,337413231,0,0x0,8
tick,0x7ffad1f6fb64,337428239,0,0x0,8
tick,0x7ffad1f6fb64,337444238,0,0x0,8
tick,0x7ffad1f6fb64,337459263,0,0x0,8
tick,0x7ffad1f6fb64,337475280,0,0x0,8
tick,0x7ffad1f6fb64,337491326,0,0x0,8
tick,0x7ffad1f6fb64,337507308,0,0x0,8
tick,0x7ffad1f6fb64,337522330,0,0x0,8
tick,0x7ffad1f6fb64,337538329,0,0x0,8
tick,0x7ffad1f6fb64,337554349,0,0x0,8
tick,0x7ffad1f6fb64,337570375,0,0x0,8
tick,0x7ffad1f6fb64,337586402,0,0x0,8
tick,0x7ffad1f6fb64,337602424,0,0x0,8
tick,0x7ffad1f6fb64,337617424,0,0x0,8
tick,0x7ffad1f6fb64,337632496,0,0x0,8
tick,0x7ffad1f6fb64,337647461,0,0x0,8
tick,0x7ffad1f6fb64,337663495,0,0x0,8
tick,0x7ffad1f6fb64,337678505,0,0x0,8
tick,0x7ffad1f6fb64,337694507,0,0x0,8
tick,0x7ffad1f6fb64,337710507,0,0x0,8
tick,0x7ffad1f6fb64,337725488,0,0x0,8
tick,0x7ffad1f6fb64,337740506,0,0x0,8
tick,0x7ffad1f6fb64,337756516,0,0x0,8
tick,0x7ffad1f6fb64,337772542,0,0x0,8
tick,0x7ffad1f6fb64,337788556,0,0x0,8
tick,0x7ffad1f6fb64,337803564,0,0x0,8
tick,0x7ffad1f6fb64,337819582,0,0x0,8
tick,0x7ffad1f6fb64,337834626,0,0x0,8
tick,0x7ffad1f6fb64,337849614,0,0x0,8
tick,0x7ffad1f6fb64,337864626,0,0x0,8
tick,0x7ffad1f6fb64,337879633,0,0x0,8
tick,0x7ffad1f6fb64,337895714,0,0x0,8
tick,0x7ffad1f6fb64,337910689,0,0x0,8
tick,0x7ffad1f6fb64,337925703,0,0x0,8
tick,0x7ffad1f6fb64,337940731,0,0x0,8
tick,0x7ffad1f6fb64,337956741,0,0x0,8
tick,0x7ffad1f6fb64,337971751,0,0x0,8
tick,0x7ffad1f6fb64,337987739,0,0x0,8
tick,0x7ffad1f6fb64,338002746,0,0x0,8
tick,0x7ffad1f6fb64,338018749,0,0x0,8
tick,0x7ffad1f6fb64,338033807,0,0x0,8
tick,0x7ffad1f6fb64,338048814,0,0x0,8
tick,0x7ffad1f6fb64,338063823,0,0x0,8
tick,0x7ffad1f6fb64,338078850,0,0x0,8
tick,0x7ffad1f6fb64,338094911,0,0x0,8
tick,0x7ffad1f6fb64,338110874,0,0x0,8
tick,0x7ffad1f6fb64,338126877,0,0x0,8
tick,0x7ffad1f6fb64,338142938,0,0x0,8
tick,0x7ffad1f6fb64,338157934,0,0x0,8
tick,0x7ffad1f6fb64,338173933,0,0x0,8
tick,0x7ffad1f6fb64,338189931,0,0x0,8
tick,0x7ffad1f6fb64,338204937,0,0x0,8
tick,0x7ffad1f6fb64,338220982,0,0x0,8
tick,0x7ffad1f6fb64,338237023,0,0x0,8
tick,0x7ffad1f6fb64,338251992,0,0x0,8
tick,0x7ffad1f6fb64,338266993,0,0x0,8
tick,0x7ffad1f6fb64,338283008,0,0x0,8
tick,0x7ffad1f6fb64,338298025,0,0x0,8
tick,0x7ffad1f6fb64,338314054,0,0x0,8
tick,0x7ffad1f6fb64,338329064,0,0x0,8
tick,0x7ffad1f6fb64,338345084,0,0x0,8
tick,0x7ffad1f6fb64,338360098,0,0x0,8
tick,0x7ffad1f6fb64,338375123,0,0x0,8
tick,0x7ffad1f6fb64,338391141,0,0x0,8
tick,0x7ffad1f6fb64,338406128,0,0x0,8
tick,0x7ffad1f6fb64,338421157,0,0x0,8
tick,0x7ffad1f6fb64,338436205,0,0x0,8
tick,0x7ffad1f6fb64,338451177,0,0x0,8
tick,0x7ffad1f6fb64,338466182,0,0x0,8
tick,0x7ffad1f6fb64,338481181,0,0x0,8
tick,0x7ffad1f6fb64,338496188,0,0x0,8
tick,0x7ffad1f6fb64,338512219,0,0x0,8
tick,0x7ffad1f6fb64,338528225,0,0x0,8
tick,0x7ffad1f6fb64,338544370,0,0x0,8
tick,0x7ffad1f6fb64,338559257,0,0x0,8
tick,0x7ffad1f6fb64,338574304,0,0x0,8
tick,0x7ffad1f6fb64,338590296,0,0x0,8
tick,0x7ffad1f6fb64,338606367,0,0x0,8
tick,0x7ffad1f6fb64,338621326,0,0x0,8
tick,0x7ffad1f6fb64,338637368,0,0x0,8
tick,0x7ffad1f6fb64,338653404,0,0x0,8
tick,0x7ffad1f6fb64,338668409,0,0x0,8
tick,0x7ffad1f6fb64,338684396,0,0x0,8
tick,0x7ffad1f6fb64,338699424,0,0x0,8
tick,0x7ffad1f6fb64,338714422,0,0x0,8
tick,0x7ffad1f6fb64,338730427,0,0x0,8
tick,0x7ffad1f6fb64,338746418,0,0x0,8
tick,0x7ffad1f6fb64,338761457,0,0x0,8
tick,0x7ffad1f6fb64,338777471,0,0x0,8
tick,0x7ffad1f6fb64,338792482,0,0x0,8
tick,0x7ffad1f6fb64,338808478,0,0x0,8
tick,0x7ffad1f6fb64,338824503,0,0x0,8
tick,0x7ffad1f6fb64,338839520,0,0x0,8
tick,0x7ffad1f6fb64,338855521,0,0x0,8
tick,0x7ffad1f6fb64,338870693,0,0x0,8
tick,0x7ffad1f6fb64,338885596,0,0x0,8
tick,0x7ffad1f6fb64,338901644,0,0x0,8
tick,0x7ffad1f6fb64,338917604,0,0x0,8
tick,0x7ffad1f6fb64,338932628,0,0x0,8
tick,0x7ffad1f6fb64,338948609,0,0x0,8
tick,0x7ffad1f6fb64,338963651,0,0x0,8
tick,0x7ffad1f6fb64,338979645,0,0x0,8
tick,0x7ffad1f6fb64,338995790,0,0x0,8
tick,0x7ffad1f6fb64,339011712,0,0x0,8
tick,0x7ffad1f6fb64,339026707,0,0x0,8
tick,0x7ffad1f6fb64,339041727,0,0x0,8
tick,0x7ffad1f6fb64,339056776,0,0x0,8
tick,0x7ffad1f6fb64,339072703,0,0x0,8
tick,0x7ffad1f6fb64,339088758,0,0x0,8
tick,0x7ffad1f6fb64,339104754,0,0x0,8
tick,0x7ffad1f6fb64,339120766,0,0x0,8
tick,0x7ffad1f6fb64,339135824,0,0x0,8
tick,0x7ffad1f6fb64,339151828,0,0x0,8
tick,0x7ffad1f6fb64,339166823,0,0x0,8
tick,0x7ffad1f6fb64,339181836,0,0x0,8
tick,0x7ffad1f6fb64,339196827,0,0x0,8
tick,0x7ffad1f6fb64,339212912,0,0x0,8
tick,0x7ffad1f6fb64,339227904,0,0x0,8
tick,0x7ffad1f6fb64,339242891,0,0x0,8
tick,0x7ffad1f6fb64,339258890,0,0x0,8
tick,0x7ffad1f6fb64,339274900,0,0x0,8
tick,0x7ffad1f6fb64,339290912,0,0x0,8
tick,0x7ffad1f6fb64,339305965,0,0x0,8
tick,0x7ffad1f6fb64,339320973,0,0x0,8
tick,0x7ffad1f6fb64,339336005,0,0x0,8
tick,0x7ffad1f6fb64,339351984,0,0x0,8
tick,0x7ffad1f6fb64,339368061,0,0x0,8
tick,0x7ffad1f6fb64,339384034,0,0x0,8
tick,0x7ffad1f6fb64,339399033,0,0x0,8
tick,0x7ffad1f6fb64,339414061,0,0x0,8
tick,0x7ffad1f6fb64,339429051,0,0x0,8
tick,0x7ffad1f6fb64,339445062,0,0x0,8
tick,0x7ffad1f6fb64,339461101,0,0x0,8
tick,0x7ffad1f6fb64,339477129,0,0x0,8
tick,0x7ffad1f6fb64,339492165,0,0x0,8
tick,0x7ffad1f6fb64,339508113,0,0x0,8
tick,0x7ffad1f6fb64,339524140,0,0x0,8
tick,0x7ffad1f6fb64,339539171,0,0x0,8
tick,0x7ffad1f6fb64,339554149,0,0x0,8
tick,0x7ffad1f6fb64,339570197,0,0x0,8
tick,0x7ffad1f6fb64,339586197,0,0x0,8
tick,0x7ffad1f6fb64,339601218,0,0x0,8
tick,0x7ffad1f6fb64,339616223,0,0x0,8
tick,0x7ffad1f6fb64,339631228,0,0x0,8
tick,0x7ffad1f6fb64,339646272,0,0x0,8
tick,0x7ffad1f6fb64,339661257,0,0x0,8
tick,0x7ffad1f6fb64,339677272,0,0x0,8
tick,0x7ffad1f6fb64,339693294,0,0x0,8
tick,0x7ffad1f6fb64,339709342,0,0x0,8
tick,0x7ffad1f6fb64,339725315,0,0x0,8
tick,0x7ffad1f6fb64,339740341,0,0x0,8
tick,0x7ffad1f6fb64,339755337,0,0x0,8
tick,0x7ffad1f6fb64,339771382,0,0x0,8
tick,0x7ffad1f6fb64,339787389,0,0x0,8
tick,0x7ffad1f6fb64,339803395,0,0x0,8
tick,0x7ffad1f6fb64,339819395,0,0x0,8
tick,0x7ffad1f6fb64,339834437,0,0x0,8
tick,0x7ffad1f6fb64,339849419,0,0x0,8
tick,0x7ffad1f6fb64,339864453,0,0x0,8
tick,0x7ffad1f6fb64,339879466,0,0x0,8
tick,0x7ffad1f6fb64,339894468,0,0x0,8
tick,0x7ffad1f6fb64,339910572,0,0x0,8
tick,0x7ffad1f6fb64,339925525,0,0x0,8
tick,0x7ffad1f6fb64,339940532,0,0x0,8
tick,0x7ffad1f6fb64,339956560,0,0x0,8
tick,0x7ffad1f6fb64,339972563,0,0x0,8
tick,0x7ffad1f6fb64,339988604,0,0x0,8
tick,0x7ffad1f6fb64,340003566,0,0x0,8
tick,0x7ffad1f6fb64,340019589,0,0x0,8
tick,0x7ffad1f6fb64,340035600,0,0x0,8
tick,0x7ffad1f6fb64,340050593,0,0x0,8
tick,0x7ffad1f6fb64,340066627,0,0x0,8
tick,0x7ffad1f6fb64,340081767,0,0x0,8
tick,0x7ffad1f6fb64,340097672,0,0x0,8
tick,0x7ffad1f6fb64,340113672,0,0x0,8
tick,0x7ffad1f6fb64,340129677,0,0x0,8
tick,0x7ffad1f6fb64,340145700,0,0x0,8
tick,0x7ffad1f6fb64,340160718,0,0x0,8
tick,0x7ffad1f6fb64,340175730,0,0x0,8
tick,0x7ffad1f6fb64,340190754,0,0x0,8
tick,0x7ffad1f6fb64,340206775,0,0x0,8
tick,0x7ffad1f6fb64,340221788,0,0x0,8
tick,0x7ffad1f6fb64,340237803,0,0x0,8
tick,0x7ffad1f6fb64,340253836,0,0x0,8
tick,0x7ffad1f6fb64,340268853,0,0x0,8
tick,0x7ffad1f6fb64,340284867,0,0x0,8
tick,0x7ffad1f6fb64,340299843,0,0x0,8
tick,0x7ffad1f6fb64,340315888,0,0x0,8
tick,0x7ffad1f6fb64,340331890,0,0x0,8
tick,0x7ffad1f6fb64,340346898,0,0x0,8
tick,0x7ffad1f6fb64,340362897,0,0x0,8
tick,0x7ffad1f6fb64,340378895,0,0x0,8
tick,0x7ffad1f6fb64,340393957,0,0x0,8
tick,0x7ffad1f6fb64,340409940,0,0x0,8
tick,0x7ffad1f6fb64,340425011,0,0x0,8
tick,0x7ffad1f6fb64,340439998,0,0x0,8
tick,0x7ffad1f6fb64,340456005,0,0x0,8
tick,0x7ffad1f6fb64,340471008,0,0x0,8
tick,0x7ffad1f6fb64,340487007,0,0x0,8
tick,0x7ffad1f6fb64,340502037,0,0x0,8
tick,0x7ffad1f6fb64,340518069,0,0x0,8
tick,0x7ffad1f6fb64,340534090,0,0x0,8
tick,0x7ffad1f6fb64,340549081,0,0x0,8
tick,0x7ffad1f6fb64,340564096,0,0x0,8
tick,0x7ffad1f6fb64,340580155,0,0x0,8
tick,0x7ffad1f6fb64,340595140,0,0x0,8
tick,0x7ffad1f6fb64,340611139,0,0x0,8
tick,0x7ffad1f6fb64,340626165,0,0x0,8
tick,0x7ffad1f6fb64,340641167,0,0x0,8
tick,0x7ffad1f6fb64,340657170,0,0x0,8
tick,0x7ffad1f6fb64,340672189,0,0x0,8
tick,0x7ffad1f6fb64,340688220,0,0x0,8
tick,0x7ffad1f6fb64,340704241,0,0x0,8
tick,0x7ffad1f6fb64,340719255,0,0x0,8
tick,0x7ffad1f6fb64,340735240,0,0x0,8
tick,0x7ffad1f6fb64,340750251,0,0x0,8
tick,0x7ffad1f6fb64,340766257,0,0x0,8
tick,0x7ffad1f6fb64,340781283,0,0x0,8
tick,0x7ffad1f6fb64,340797269,0,0x0,8
tick,0x7ffad1f6fb64,340813304,0,0x0,8
tick,0x7ffad1f6fb64,340829330,0,0x0,8
tick,0x7ffad1f6fb64,340845376,0,0x0,8
tick,0x7ffad1f6fb64,340861365,0,0x0,8
tick,0x7ffad1f6fb64,340876403,0,0x0,8
tick,0x7ffad1f6fb64,340892409,0,0x0,8
tick,0x7ffad1f6fb64,340907429,0,0x0,8
tick,0x7ffad1f6fb64,340922426,0,0x0,8
tick,0x7ffad1f6fb64,340937428,0,0x0,8
tick,0x7ffad1f6fb64,340952489,0,0x0,8
tick,0x7ffad1f6fb64,340968452,0,0x0,8
tick,0x7ffad1f6fb64,340984458,0,0x0,8
tick,0x7ffad1f6fb64,340999480,0,0x0,8
tick,0x7ffad1f6fb64,341014514,0,0x0,8
tick,0x7ffad1f6fb64,341030504,0,0x0,8
tick,0x7ffad1f6fb64,341046513,0,0x0,8
tick,0x7ffad1f6fb64,341062546,0,0x0,8
tick,0x7ffad1f6fb64,341077562,0,0x0,8
tick,0x7ffad1f6fb64,341093572,0,0x0,8
tick,0x7ffad1f6fb64,341109606,0,0x0,8
tick,0x7ffad1f6fb64,341125593,0,0x0,8
tick,0x7ffad1f6fb64,341140595,0,0x0,8
tick,0x7ffad1f6fb64,341156619,0,0x0,8
tick,0x7ffad1f6fb64,341172640,0,0x0,8
tick,0x7ffad1f6fb64,341188670,0,0x0,8
tick,0x7ffad1f6fb64,341204663,0,0x0,8
tick,0x7ffad1f6fb64,341219696,0,0x0,8
tick,0x7ffad1f6fb64,341234707,0,0x0,8
tick,0x7ffad1f6fb64,341249844,0,0x0,8
tick,0x7ffad1f6fb64,341265735,0,0x0,8
tick,0x7ffad1f6fb64,341281765,0,0x0,8
tick,0x7ffad1f6fb64,341296758,0,0x0,8
tick,0x7ffad1f6fb64,341311765,0,0x0,8
tick,0x7ffad1f6fb64,341327779,0,0x0,8
tick,0x7ffad1f6fb64,341343810,0,0x0,8
tick,0x7ffad1f6fb64,341359807,0,0x0,8
tick,0x7ffad1f6fb64,341375821,0,0x0,8
tick,0x7ffad1f6fb64,341391855,0,0x0,8
tick,0x7ffad1f6fb64,341407893,0,0x0,8
tick,0x7ffad1f6fb64,341422880,0,0x0,8
tick,0x7ffad1f6fb64,341438942,0,0x0,8
tick,0x7ffad1f6fb64,341453925,0,0x0,8
tick,0x7ffad1f6fb64,341468944,0,0x0,8
tick,0x7ffad1f6fb64,341484932,0,0x0,8
tick,0x7ffad1f6fb64,341500959,0,0x0,8
tick,0x7ffad1f6fb64,341517011,0,0x0,8
tick,0x7ffad1f6fb64,341532980,0,0x0,8
tick,0x7ffad1f6fb64,341548013,0,0x0,8
tick,0x7ffad1f6fb64,341563024,0,0x0,8
tick,0x7ffad1f6fb64,341579004,0,0x0,8
tick,0x7ffad1f6fb64,341595029,0,0x0,8
tick,0x7ffad1f6fb64,341610051,0,0x0,8
tick,0x7ffad1f6fb64,341625082,0,0x0,8
tick,0x7ffad1f6fb64,341640088,0,0x0,8
tick,0x7ffad1f6fb64,341655098,0,0x0,8
tick,0x7ffad1f6fb64,341670082,0,0x0,8
tick,0x7ffad1f6fb64,341686101,0,0x0,8
tick,0x7ffad1f6fb64,341702134,0,0x0,8
tick,0x7ffad1f6fb64,341718128,0,0x0,8
tick,0x7ffad1f6fb64,341733213,0,0x0,8
tick,0x7ffad1f6fb64,341749160,0,0x0,8
tick,0x7ffad1f6fb64,341764185,0,0x0,8
tick,0x7ffad1f6fb64,341780185,0,0x0,8
tick,0x7ffad1f6fb64,341795203,0,0x0,8
tick,0x7ffad1f6fb64,341811251,0,0x0,8
tick,0x7ffad1f6fb64,341827242,0,0x0,8
tick,0x7ffad1f6fb64,341842258,0,0x0,8
tick,0x7ffad1f6fb64,341857255,0,0x0,8
tick,0x7ffad1f6fb64,341873296,0,0x0,8
tick,0x7ffad1f6fb64,341889300,0,0x0,8
tick,0x7ffad1f6fb64,341904299,0,0x0,8
tick,0x7ffad1f6fb64,341920307,0,0x0,8
tick,0x7ffad1f6fb64,341936333,0,0x0,8
tick,0x7ffad1f6fb64,341951359,0,0x0,8
tick,0x7ffad1f6fb64,341966345,0,0x0,8
tick,0x7ffad1f6fb64,341981376,0,0x0,8
tick,0x7ffad1f6fb64,341997392,0,0x0,8
tick,0x7ffad1f6fb64,342013423,0,0x0,8
tick,0x7ffad1f6fb64,342029418,0,0x0,8
tick,0x7ffad1f6fb64,342045425,0,0x0,8
tick,0x7ffad1f6fb64,342060457,0,0x0,8
tick,0x7ffad1f6fb64,342075455,0,0x0,8
tick,0x7ffad1f6fb64,342091477,0,0x0,8
tick,0x7ffad1f6fb64,342106479,0,0x0,8
tick,0x7ffad1f6fb64,342122486,0,0x0,8
tick,0x7ffad1f6fb64,342137545,0,0x0,8
tick,0x7ffad1f6fb64,342153523,0,0x0,8
tick,0x7ffad1f6fb64,342169541,0,0x0,8
tick,0x7ffad1f6fb64,342185568,0,0x0,8
tick,0x7ffad1f6fb64,342200610,0,0x0,8
tick,0x7ffad1f6fb64,342216645,0,0x0,8
tick,0x7ffad1f6fb64,342232637,0,0x0,8
tick,0x7ffad1f6fb64,342248635,0,0x0,8
tick,0x7ffad1f6fb64,342263656,0,0x0,8
tick,0x7ffad1f6fb64,342278684,0,0x0,8
tick,0x7ffad1f6fb64,342293662,0,0x0,8
tick,0x7ffad1f6fb64,342308705,0,0x0,8
tick,0x7ffad1f6fb64,342324688,0,0x0,8
tick,0x7ffad1f6fb64,342339739,0,0x0,8
tick,0x7ffad1f6fb64,342354698,0,0x0,8
tick,0x7ffad1f6fb64,342370716,0,0x0,8
tick,0x7ffad1f6fb64,342386747,0,0x0,8
tick,0x7ffad1f6fb64,342401751,0,0x0,8
tick,0x7ffad1f6fb64,342416820,0,0x0,8
tick,0x7ffad1f6fb64,342431783,0,0x0,8
tick,0x7ffad1f6fb64,342447793,0,0x0,8
tick,0x7ffad1f6fb64,342463822,0,0x0,8
tick,0x7ffad1f6fb64,342479809,0,0x0,8
tick,0x7ffad1f6fb64,342494856,0,0x0,8
tick,0x7ffad1f6fb64,342510848,0,0x0,8
tick,0x7ffad1f6fb64,342525873,0,0x0,8
tick,0x7ffad1f6fb64,342541906,0,0x0,8
tick,0x7ffad1f6fb64,342557881,0,0x0,8
tick,0x7ffad1f6fb64,342573905,0,0x0,8
tick,0x7ffad1f6fb64,342589922,0,0x0,8
tick,0x7ffad1f6fb64,342605956,0,0x0,8
tick,0x7ffad1f6fb64,342620970,0,0x0,8
tick,0x7ffad1f6fb64,342637011,0,0x0,8
tick,0x7ffad1f6fb64,342652020,0,0x0,8
tick,0x7ffad1f6fb64,342667988,0,0x0,8
tick,0x7ffad1f6fb64,342683001,0,0x0,8
tick,0x7ffad1f6fb64,342698020,0,0x0,8
tick,0x7ffad1f6fb64,342714073,0,0x0,8
tick,0x7ffad1f6fb64,342730043,0,0x0,8
tick,0x7ffad1f6fb64,342745129,0,0x0,8
tick,0x7ffad1f6fb64,342761131,0,0x0,8
tick,0x7ffad1f6fb64,342777106,0,0x0,8
tick,0x7ffad1f6fb64,342793104,0,0x0,8
tick,0x7ffad1f6fb64,342808154,0,0x0,8
tick,0x7ffad1f6fb64,342824209,0,0x0,8
tick,0x7ffad1f6fb64,342840163,0,0x0,8
tick,0x7ffad1f6fb64,342856180,0,0x0,8
tick,0x7ffad1f6fb64,342872193,0,0x0,8
tick,0x7ffad1f6fb64,342888292,0,0x0,8
tick,0x7ffad1f6fb64,342903202,0,0x0,8
tick,0x7ffad1f6fb64,342919247,0,0x0,8
tick,0x7ffad1f6fb64,342934254,0,0x0,8
tick,0x7ffad1f6fb64,342950265,0,0x0,8
tick,0x7ffad1f6fb64,342966290,0,0x0,8
tick,0x7ffad1f6fb64,342981292,0,0x0,8
tick,0x7ffad1f6fb64,342996300,0,0x0,8
tick,0x7ffad1f6fb64,343012392,0,0x0,8
tick,0x7ffad1f6fb64,343027381,0,0x0,8
tick,0x7ffad1f6fb64,343043368,0,0x0,8
tick,0x7ffad1f6fb64,343059375,0,0x0,8
tick,0x7ffad1f6fb64,343074394,0,0x0,8
tick,0x7ffad1f6fb64,343090486,0,0x0,8
tick,0x7ffad1f6fb64,343106420,0,0x0,8
tick,0x7ffad1f6fb64,343122401,0,0x0,8
tick,0x7ffad1f6fb64,343137428,0,0x0,8
tick,0x7ffad1f6fb64,343153466,0,0x0,8
tick,0x7ffad1f6fb64,343168449,0,0x0,8
tick,0x7ffad1f6fb64,343184515,0,0x0,8
tick,0x7ffad1f6fb64,343199512,0,0x0,8
tick,0x7ffad1f6fb64,343215505,0,0x0,8
tick,0x7ffad1f6fb64,343231519,0,0x0,8
tick,0x7ffad1f6fb64,343247540,0,0x0,8
tick,0x7ffad1f6fb64,343262612,0,0x0,8
tick,0x7ffad1f6fb64,343277576,0,0x0,8
tick,0x7ffad1f6fb64,343293586,0,0x0,8
tick,0x7ffad1f6fb64,343308586,0,0x0,8
tick,0x7ffad1f6fb64,343323613,0,0x0,8
tick,0x7ffad1f6fb64,343338609,0,0x0,8
tick,0x7ffad1f6fb64,343354621,0,0x0,8
tick,0x7ffad1f6fb64,343370692,0,0x0,8
tick,0x7ffad1f6fb64,343385690,0,0x0,8
tick,0x7ffad1f6fb64,343401692,0,0x0,8
tick,0x7ffad1f6fb64,343416690,0,0x0,8
tick,0x7ffad1f6fb64,343431682,0,0x0,8
tick,0x7ffad1f6fb64,343446703,0,0x0,8
tick,0x7ffad1f6fb64,343462734,0,0x0,8
tick,0x7ffad1f6fb64,343478744,0,0x0,8
tick,0x7ffad1f6fb64,343493739,0,0x0,8
tick,0x7ffad1f6fb64,343508757,0,0x0,8
tick,0x7ffad1f6fb64,343524798,0,0x0,8
tick,0x7ffad1f6fb64,343540785,0,0x0,8
tick,0x7ffad1f6fb64,343555819,0,0x0,8
tick,0x7ffad1f6fb64,343570843,0,0x0,8
tick,0x7ffad1f6fb64,343585840,0,0x0,8
tick,0x7ffad1f6fb64,343601840,0,0x0,8
tick,0x7ffad1f6fb64,343616874,0,0x0,8
tick,0x7ffad1f6fb64,343632877,0,0x0,8
tick,0x7ffad1f6fb64,343648892,0,0x0,8
tick,0x7ffad1f6fb64,343663960,0,0x0,8
tick,0x7ffad1f6fb64,343679936,0,0x0,8
tick,0x7ffad1f6fb64,343695955,0,0x0,8
tick,0x7ffad1f6fb64,343711953,0,0x0,8
tick,0x7ffad1f6fb64,343727959,0,0x0,8
tick,0x7ffad1f6fb64,343742974,0,0x0,8
tick,0x7ffad1f6fb64,343759011,0,0x0,8
tick,0x7ffad1f6fb64,343775003,0,0x0,8
tick,0x7ffad1f6fb64,343791008,0,0x0,8
tick,0x7ffad1f6fb64,343806065,0,0x0,8
tick,0x7ffad1f6fb64,343821048,0,0x0,8
tick,0x7ffad1f6fb64,343836085,0,0x0,8
tick,0x7ffad1f6fb64,343851100,0,0x0,8
tick,0x7ffad1f6fb64,343867088,0,0x0,8
tick,0x7ffad1f6fb64,343882089,0,0x0,8
tick,0x7ffad1f6fb64,343898113,0,0x0,8
tick,0x7ffad1f6fb64,343914130,0,0x0,8
tick,0x7ffad1f6fb64,343930158,0,0x0,8
tick,0x7ffad1f6fb64,343946179,0,0x0,8
tick,0x7ffad1f6fb64,343962172,0,0x0,8
tick,0x7ffad1f6fb64,343977178,0,0x0,8
tick,0x7ffad1f6fb64,343993193,0,0x0,8
tick,0x7ffad1f6fb64,344008206,0,0x0,8
tick,0x7ffad1f6fb64,344024212,0,0x0,8
tick,0x7ffad1f6fb64,344040269,0,0x0,8
tick,0x7ffad1f6fb64,344056247,0,0x0,8
tick,0x7ffad1f6fb64,344071273,0,0x0,8
tick,0x7ffad1f6fb64,344087282,0,0x0,8
tick,0x7ffad1f6fb64,344103301,0,0x0,8
tick,0x7ffad1f6fb64,344119330,0,0x0,8
tick,0x7ffad1f6fb64,344135376,0,0x0,8
tick,0x7ffad1f6fb64,344150345,0,0x0,8
tick,0x7ffad1f6fb64,344166396,0,0x0,8
tick,0x7ffad1f6fb64,344182389,0,0x0,8
tick,0x7ffad1f6fb64,344197565,0,0x0,8
tick,0x7ffad1f6fb64,344213417,0,0x0,8
tick,0x7ffad1f6fb64,344228424,0,0x0,8
tick,0x7ffad1f6fb64,344244452,0,0x0,8
tick,0x7ffad1f6fb64,344260447,0,0x0,8
tick,0x7ffad1f6fb64,344275479,0,0x0,8
tick,0x7ffad1f6fb64,344290550,0,0x0,8
tick,0x7ffad1f6fb64,344306518,0,0x0,8
tick,0x7ffad1f6fb64,344321522,0,0x0,8
tick,0x7ffad1f6fb64,344336554,0,0x0,8
tick,0x7ffad1f6fb64,344352548,0,0x0,8
tick,0x7ffad1f6fb64,344367533,0,0x0,8
tick,0x7ffad1f6fb64,344383555,0,0x0,8
tick,0x7ffad1f6fb64,344399610,0,0x0,8
tick,0x7ffad1f6fb64,344415582,0,0x0,8
tick,0x7ffad1f6fb64,344431614,0,0x0,8
tick,0x7ffad1f6fb64,344446612,0,0x0,8
tick,0x7ffad1f6fb64,344462628,0,0x0,8
tick,0x7ffad1f6fb64,344478873,0,0x0,8
tick,0x7ffad1f6fb64,344493693,0,0x0,8
tick,0x7ffad1f6fb64,344509678,0,0x0,8
tick,0x7ffad1f6fb64,344524685,0,0x0,8
tick,0x7ffad1f6fb64,344539702,0,0x0,8
tick,0x7ffad1f6fb64,344555733,0,0x0,8
tick,0x7ffad1f6fb64,344570733,0,0x0,8
tick,0x7ffad1f6fb64,344585808,0,0x0,8
tick,0x7ffad1f6fb64,344600770,0,0x0,8
tick,0x7ffad1f6fb64,344616809,0,0x0,8
tick,0x7ffad1f6fb64,344631783,0,0x0,8
tick,0x7ffad1f6fb64,344647801,0,0x0,8
tick,0x7ffad1f6fb64,344663795,0,0x0,8
tick,0x7ffad1f6fb64,344679029,0,0x0,8
tick,0x7ffad1f6fb64,344693864,0,0x0,8
tick,0x7ffad1f6fb64,344709870,0,0x0,8
tick,0x7ffad1f6fb64,344725884,0,0x0,8
tick,0x7ffad1f6fb64,344740885,0,0x0,8
tick,0x7ffad1f6fb64,344756906,0,0x0,8
tick,0x7ffad1f6fb64,344772945,0,0x0,8
tick,0x7ffad1f6fb64,344788987,0,0x0,8
tick,0x7ffad1f6fb64,344804956,0,0x0,8
tick,0x7ffad1f6fb64,344820982,0,0x0,8
tick,0x7ffad1f6fb64,344835980,0,0x0,8
tick,0x7ffad1f6fb64,344851195,0,0x0,8
tick,0x7ffad1f6fb64,344867053,0,0x0,8
tick,0x7ffad1f6fb64,344882014,0,0x0,8
tick,0x7ffad1f6fb64,344897040,0,0x0,8
tick,0x7ffad1f6fb64,344912036,0,0x0,8
tick,0x7ffad1f6fb64,344927051,0,0x0,8
tick,0x7ffad1f6fb64,344943075,0,0x0,8
tick,0x7ffad1f6fb64,344958089,0,0x0,8
tick,0x7ffad1f6fb64,344974119,0,0x0,8
tick,0x7ffad1f6fb64,344989101,0,0x0,8
tick,0x7ffad1f6fb64,345005159,0,0x0,8
tick,0x7ffad1f6fb64,345020133,0,0x0,8
tick,0x7ffad1f6fb64,345036159,0,0x0,8
tick,0x7ffad1f6fb64,345052440,0,0x0,8
tick,0x7ffad1f6fb64,345068319,0,0x0,8
tick,0x7ffad1f6fb64,345083217,0,0x0,8
tick,0x7ffad1f6fb64,345098211,0,0x0,8
tick,0x7ffad1f6fb64,345113233,0,0x0,8
tick,0x7ffad1f6fb64,345128227,0,0x0,8
tick,0x7ffad1f6fb64,345144259,0,0x0,8
tick,0x7ffad1f6fb64,345160274,0,0x0,8
tick,0x7ffad1f6fb64,345175299,0,0x0,8
tick,0x7ffad1f6fb64,345191321,0,0x0,8
tick,0x7ffad1f6fb64,345206304,0,0x0,8
tick,0x7ffad1f6fb64,345221319,0,0x0,8
tick,0x7ffad1f6fb64,345237334,0,0x0,8
tick,0x7ffad1f6fb64,345253409,0,0x0,8
tick,0x7ffad1f6fb64,345268383,0,0x0,8
tick,0x7ffad1f6fb64,345284406,0,0x0,8
tick,0x7ffad1f6fb64,345300375,0,0x0,8
tick,0x7ffad1f6fb64,345316433,0,0x0,8
tick,0x7ffad1f6fb64,345332435,0,0x0,8
tick,0x7ffad1f6fb64,345348469,0,0x0,8
tick,0x7ffad1f6fb64,345364451,0,0x0,8
tick,0x7ffad1f6fb64,345379463,0,0x0,8
tick,0x7ffad1f6fb64,345395482,0,0x0,8
tick,0x7ffad1f6fb64,345411522,0,0x0,8
tick,0x7ffad1f6fb64,345427520,0,0x0,8
tick,0x7ffad1f6fb64,345442532,0,0x0,8
tick,0x7ffad1f6fb64,345458537,0,0x0,8
tick,0x7ffad1f6fb64,345474551,0,0x0,8
tick,0x7ffad1f6fb64,345490584,0,0x0,8
tick,0x7ffad1f6fb64,345506579,0,0x0,8
tick,0x7ffad1f6fb64,345522594,0,0x0,8
tick,0x7ffad1f6fb64,345537610,0,0x0,8
tick,0x7ffad1f6fb64,345553627,0,0x0,8
tick,0x7ffad1f6fb64,345568650,0,0x0,8
tick,0x7ffad1f6fb64,345584723,0,0x0,8
tick,0x7ffad1f6fb64,345599726,0,0x0,8
tick,0x7ffad1f6fb64,345615690,0,0x0,8
tick,0x7ffad1f6fb64,345630712,0,0x0,8
tick,0x7ffad1f6fb64,345646718,0,0x0,8
tick,0x7ffad1f6fb64,345662745,0,0x0,8
tick,0x7ffad1f6fb64,345677746,0,0x0,8
tick,0x7ffad1f6fb64,345693788,0,0x0,8
tick,0x7ffad1f6fb64,345709767,0,0x0,8
tick,0x7ffad1f6fb64,345725789,0,0x0,8
tick,0x7ffad1f6fb64,345740822,0,0x0,8
tick,0x7ffad1f6fb64,345756831,0,0x0,8
tick,0x7ffad1f6fb64,345771845,0,0x0,8
tick,0x7ffad1f6fb64,345786886,0,0x0,8
tick,0x7ffad1f6fb64,345801853,0,0x0,8
tick,0x7ffad1f6fb64,345817915,0,0x0,8
tick,0x7ffad1f6fb64,345832892,0,0x0,8
tick,0x7ffad1f6fb64,345848901,0,0x0,8
tick,0x7ffad1f6fb64,345865042,0,0x0,8
tick,0x7ffad1f6fb64,345880972,0,0x0,8
tick,0x7ffad1f6fb64,345895937,0,0x0,8
tick,0x7ffad1f6fb64,345911955,0,0x0,8
tick,0x7ffad1f6fb64,345927968,0,0x0,8
tick,0x7ffad1f6fb64,345944033,0,0x0,8
tick,0x7ffad1f6fb64,345959042,0,0x0,8
tick,0x7ffad1f6fb64,345975007,0,0x0,8
tick,0x7ffad1f6fb64,345991030,0,0x0,8
tick,0x7ffad1f6fb64,346006056,0,0x0,8
tick,0x7ffad1f6fb64,346021057,0,0x0,8
tick,0x7ffad1f6fb64,346037053,0,0x0,8
tick,0x7ffad1f6fb64,346052067,0,0x0,8
tick,0x7ffad1f6fb64,346067097,0,0x0,8
tick,0x7ffad1f6fb64,346082095,0,0x0,8
tick,0x7ffad1f6fb64,346098141,0,0x0,8
tick,0x7ffad1f6fb64,346114119,0,0x0,8
tick,0x7ffad1f6fb64,346130163,0,0x0,8
tick,0x7ffad1f6fb64,346146161,0,0x0,8
tick,0x7ffad1f6fb64,346161170,0,0x0,8
tick,0x7ffad1f6fb64,346177191,0,0x0,8
tick,0x7ffad1f6fb64,346193210,0,0x0,8
tick,0x7ffad1f6fb64,346208245,0,0x0,8
tick,0x7ffad1f6fb64,346224227,0,0x0,8
tick,0x7ffad1f6fb64,346240265,0,0x0,8
tick,0x7ffad1f6fb64,346255268,0,0x0,8
tick,0x7ffad1f6fb64,346270280,0,0x0,8
tick,0x7ffad1f6fb64,346286319,0,0x0,8
tick,0x7ffad1f6fb64,346301332,0,0x0,8
tick,0x7ffad1f6fb64,346317344,0,0x0,8
tick,0x7ffad1f6fb64,346333356,0,0x0,8
tick,0x7ffad1f6fb64,346348390,0,0x0,8
tick,0x7ffad1f6fb64,346363368,0,0x0,8
tick,0x7ffad1f6fb64,346378382,0,0x0,8
tick,0x7ffad1f6fb64,346393439,0,0x0,8
tick,0x7ffad1f6fb64,346408427,0,0x0,8
tick,0x7ffad1f6fb64,346423428,0,0x0,8
tick,0x7ffad1f6fb64,346439425,0,0x0,8
tick,0x7ffad1f6fb64,346454448,0,0x0,8
tick,0x7ffad1f6fb64,346469495,0,0x0,8
tick,0x7ffad1f6fb64,346484475,0,0x0,8
tick,0x7ffad1f6fb64,346499486,0,0x0,8
tick,0x7ffad1f6fb64,346515487,0,0x0,8
tick,0x7ffad1f6fb64,346531673,0,0x0,8
tick,0x7ffad1f6fb64,346547524,0,0x0,8
tick,0x7ffad1f6fb64,346562541,0,0x0,8
tick,0x7ffad1f6fb64,346577565,0,0x0,8
tick,0x7ffad1f6fb64,346592565,0,0x0,8
tick,0x7ffad1f6fb64,346607624,0,0x0,8
tick,0x7ffad1f6fb64,346622604,0,0x0,8
tick,0x7ffad1f6fb64,346637629,0,0x0,8
tick,0x7ffad1f6fb64,346653659,0,0x0,8
tick,0x7ffad1f6fb64,346669644,0,0x0,8
tick,0x7ffad1f6fb64,346684670,0,0x0,8
tick,0x7ffad1f6fb64,346699667,0,0x0,8
tick,0x7ffad1f6fb64,346715708,0,0x0,8
tick,0x7ffad1f6fb64,346731776,0,0x0,8
tick,0x7ffad1f6fb64,346747757,0,0x0,8
tick,0x7ffad1f6fb64,346763754,0,0x0,8
tick,0x7ffad1f6fb64,346778811,0,0x0,8
tick,0x7ffad1f6fb64,346794791,0,0x0,8
tick,0x7ffad1f6fb64,346810790,0,0x0,8
tick,0x7ffad1f6fb64,346826834,0,0x0,8
tick,0x7ffad1f6fb64,346841824,0,0x0,8
tick,0x7ffad1f6fb64,346857824,0,0x0,8
tick,0x7ffad1f6fb64,346873840,0,0x0,8
tick,0x7ffad1f6fb64,346888882,0,0x0,8
tick,0x7ffad1f6fb64,346903886,0,0x0,8
tick,0x7ffad1f6fb64,346919883,0,0x0,8
tick,0x7ffad1f6fb64,346935885,0,0x0,8
tick,0x7ffad1f6fb64,346951893,0,0x0,8
tick,0x7ffad1f6fb64,346966937,0,0x0,8
tick,0x7ffad1f6fb64,346981933,0,0x0,8
tick,0x7ffad1f6fb64,346997955,0,0x0,8
tick,0x7ffad1f6fb64,347012963,0,0x0,8
tick,0x7ffad1f6fb64,347028975,0,0x0,8
tick,0x7ffad1f6fb64,347045000,0,0x0,8
tick,0x7ffad1f6fb64,347060010,0,0x0,8
tick,0x7ffad1f6fb64,347076039,0,0x0,8
tick,0x7ffad1f6fb64,347092054,0,0x0,8
tick,0x7ffad1f6fb64,347108070,0,0x0,8
tick,0x7ffad1f6fb64,347123075,0,0x0,8
tick,0x7ffad1f6fb64,347139072,0,0x0,8
tick,0x7ffad1f6fb64,347155093,0,0x0,8
tick,0x7ffad1f6fb64,347171112,0,0x0,8
tick,0x7ffad1f6fb64,347187147,0,0x0,8
tick,0x7ffad1f6fb64,347203130,0,0x0,8
tick,0x7ffad1f6fb64,347218138,0,0x0,8
tick,0x7ffad1f6fb64,347234149,0,0x0,8
tick,0x7ffad1f6fb64,347250163,0,0x0,8
tick,0x7ffad1f6fb64,347265294,0,0x0,8
tick,0x7ffad1f6fb64,347280236,0,0x0,8
tick,0x7ffad1f6fb64,347295288,0,0x0,8
tick,0x7ffad1f6fb64,347310238,0,0x0,8
tick,0x7ffad1f6fb64,347325238,0,0x0,8
tick,0x7ffad1f6fb64,347340251,0,0x0,8
tick,0x7ffad1f6fb64,347355273,0,0x0,8
tick,0x7ffad1f6fb64,347371282,0,0x0,8
tick,0x7ffad1f6fb64,347386294,0,0x0,8
tick,0x7ffad1f6fb64,347401317,0,0x0,8
tick,0x7ffad1f6fb64,347416336,0,0x0,8
tick,0x7ffad1f6fb64,347432346,0,0x0,8
tick,0x7ffad1f6fb64,347448356,0,0x0,8
tick,0x7ffad1f6fb64,347463364,0,0x0,8
tick,0x7ffad1f6fb64,347478407,0,0x0,8
tick,0x7ffad1f6fb64,347494394,0,0x0,8
tick,0x7ffad1f6fb64,347509419,0,0x0,8
tick,0x7ffad1f6fb64,347525416,0,0x0,8
tick,0x7ffad1f6fb64,347540442,0,0x0,8
tick,0x7ffad1f6fb64,347555437,0,0x0,8
tick,0x7ffad1f6fb64,347571479,0,0x0,8
tick,0x7ffad1f6fb64,347587469,0,0x0,8
tick,0x7ffad1f6fb64,347603493,0,0x0,8
tick,0x7ffad1f6fb64,347618523,0,0x0,8
tick,0x7ffad1f6fb64,347634534,0,0x0,8
tick,0x7ffad1f6fb64,347649542,0,0x0,8
tick,0x7ffad1f6fb64,347665538,0,0x0,8
tick,0x7ffad1f6fb64,347680638,0,0x0,8
tick,0x7ffad1f6fb64,347695590,0,0x0,8
tick,0x7ffad1f6fb64,347710595,0,0x0,8
tick,0x7ffad1f6fb64,347725592,0,0x0,8
tick,0x7ffad1f6fb64,347740620,0,0x0,8
tick,0x7ffad1f6fb64,347756652,0,0x0,8
tick,0x7ffad1f6fb64,347772666,0,0x0,8
tick,0x7ffad1f6fb64,347787676,0,0x0,8
tick,0x7ffad1f6fb64,347802672,0,0x0,8
tick,0x7ffad1f6fb64,347817688,0,0x0,8
tick,0x7ffad1f6fb64,347832717,0,0x0,8
tick,0x7ffad1f6fb64,347848729,0,0x0,8
tick,0x7ffad1f6fb64,347863757,0,0x0,8
tick,0x7ffad1f6fb64,347879767,0,0x0,8
tick,0x7ffad1f6fb64,347895760,0,0x0,8
tick,0x7ffad1f6fb64,347910771,0,0x0,8
tick,0x7ffad1f6fb64,347926787,0,0x0,8
tick,0x7ffad1f6fb64,347941806,0,0x0,8
tick,0x7ffad1f6fb64,347956824,0,0x0,8
tick,0x7ffad1f6fb64,347972836,0,0x0,8
tick,0x7ffad1f6fb64,347988867,0,0x0,8
tick,0x7ffad1f6fb64,348004870,0,0x0,8
tick,0x7ffad1f6fb64,348019885,0,0x0,8
tick,0x7ffad1f6fb64,348035895,0,0x0,8
tick,0x7ffad1f6fb64,348050896,0,0x0,8
tick,0x7ffad1f6fb64,348066920,0,0x0,8
tick,0x7ffad1f6fb64,348081948,0,0x0,8
tick,0x7ffad1f6fb64,348096961,0,0x0,8
tick,0x7ffad1f6fb64,348111945,0,0x0,8
tick,0x7ffad1f6fb64,348126980,0,0x0,8
tick,0x7ffad1f6fb64,348142976,0,0x0,8
tick,0x7ffad1f6fb64,348158002,0,0x0,8
tick,0x7ffad1f6fb64,348174013,0,0x0,8
tick,0x7ffad1f6fb64,348190030,0,0x0,8
tick,0x7ffad1f6fb64,348206036,0,0x0,8
tick,0x7ffad1f6fb64,348221061,0,0x0,8
tick,0x7ffad1f6fb64,348237080,0,0x0,8
tick,0x7ffad1f6fb64,348252327,0,0x0,8
tick,0x7ffad1f6fb64,348268098,0,0x0,8
tick,0x7ffad1f6fb64,348284091,0,0x0,8
tick,0x7ffad1f6fb64,348299152,0,0x0,8
tick,0x7ffad1f6fb64,348315146,0,0x0,8
tick,0x7ffad1f6fb64,348331147,0,0x0,8
tick,0x7ffad1f6fb64,348347176,0,0x0,8
tick,0x7ffad1f6fb64,348363187,0,0x0,8
tick,0x7ffad1f6fb64,348378236,0,0x0,8
tick,0x7ffad1f6fb64,348394192,0,0x0,8
tick,0x7ffad1f6fb64,348410218,0,0x0,8
tick,0x7ffad1f6fb64,348426254,0,0x0,8
tick,0x7ffad1f6fb64,348441264,0,0x0,8
tick,0x7ffad1f6fb64,348457272,0,0x0,8
tick,0x7ffad1f6fb64,348473272,0,0x0,8
tick,0x7ffad1f6fb64,348489302,0,0x0,8
tick,0x7ffad1f6fb64,348504298,0,0x0,8
tick,0x7ffad1f6fb64,348519323,0,0x0,8
tick,0x7ffad1f6fb64,348534354,0,0x0,8
tick,0x7ffad1f6fb64,348550349,0,0x0,8
tick,0x7ffad1f6fb64,348566382,0,0x0,8
tick,0x7ffad1f6fb64,348581376,0,0x0,8
tick,0x7ffad1f6fb64,348597413,0,0x0,8
tick,0x7ffad1f6fb64,348613448,0,0x0,8
tick,0x7ffad1f6fb64,348629483,0,0x0,8
tick,0x7ffad1f6fb64,348645452,0,0x0,8
tick,0x7ffad1f6fb64,348661447,0,0x0,8
tick,0x7ffad1f6fb64,348676470,0,0x0,8
tick,0x7ffad1f6fb64,348691482,0,0x0,8
tick,0x7ffad1f6fb64,348706512,0,0x0,8
tick,0x7ffad1f6fb64,348721521,0,0x0,8
tick,0x7ffad1f6fb64,348737536,0,0x0,8
tick,0x7ffad1f6fb64,348752554,0,0x0,8
tick,0x7ffad1f6fb64,348768541,0,0x0,8
tick,0x7ffad1f6fb64,348784560,0,0x0,8
tick,0x7ffad1f6fb64,348799599,0,0x0,8
tick,0x7ffad1f6fb64,348814614,0,0x0,8
tick,0x7ffad1f6fb64,348829627,0,0x0,8
tick,0x7ffad1f6fb64,348845643,0,0x0,8
tick,0x7ffad1f6fb64,348860660,0,0x0,8
tick,0x7ffad1f6fb64,348875641,0,0x0,8
tick,0x7ffad1f6fb64,348890703,0,0x0,8
tick,0x7ffad1f6fb64,348906676,0,0x0,8
tick,0x7ffad1f6fb64,348922715,0,0x0,8
tick,0x7ffad1f6fb64,348937705,0,0x0,8
tick,0x7ffad1f6fb64,348953703,0,0x0,8
tick,0x7ffad1f6fb64,348969724,0,0x0,8
tick,0x7ffad1f6fb64,348985750,0,0x0,8
tick,0x7ffad1f6fb64,349000756,0,0x0,8
tick,0x7ffad1f6fb64,349016761,0,0x0,8
tick,0x7ffad1f6fb64,349032810,0,0x0,8
tick,0x7ffad1f6fb64,349048800,0,0x0,8
tick,0x7ffad1f6fb64,349063820,0,0x0,8
tick,0x7ffad1f6fb64,349079833,0,0x0,8
tick,0x7ffad1f6fb64,349094859,0,0x0,8
tick,0x7ffad1f6fb64,349109870,0,0x0,8
tick,0x7ffad1f6fb64,349124875,0,0x0,8
tick,0x7ffad1f6fb64,349139903,0,0x0,8
tick,0x7ffad1f6fb64,349154898,0,0x0,8
tick,0x7ffad1f6fb64,349169920,0,0x0,8
tick,0x7ffad1f6fb64,349185926,0,0x0,8
tick,0x7ffad1f6fb64,349201933,0,0x0,8
tick,0x7ffad1f6fb64,349217947,0,0x0,8
tick,0x7ffad1f6fb64,349232980,0,0x0,8
tick,0x7ffad1f6fb64,349249022,0,0x0,8
tick,0x7ffad1f6fb64,349264010,0,0x0,8
tick,0x7ffad1f6fb64,349280011,0,0x0,8
tick,0x7ffad1f6fb64,349296052,0,0x0,8
tick,0x7ffad1f6fb64,349312042,0,0x0,8
tick,0x7ffad1f6fb64,349328056,0,0x0,8
tick,0x7ffad1f6fb64,349344071,0,0x0,8
tick,0x7ffad1f6fb64,349359125,0,0x0,8
tick,0x7ffad1f6fb64,349374108,0,0x0,8
tick,0x7ffad1f6fb64,349389134,0,0x0,8
tick,0x7ffad1f6fb64,349405148,0,0x0,8
tick,0x7ffad1f6fb64,349420149,0,0x0,8
tick,0x7ffad1f6fb64,349436156,0,0x0,8
tick,0x7ffad1f6fb64,349452191,0,0x0,8
tick,0x7ffad1f6fb64,349468190,0,0x0,8
tick,0x7ffad1f6fb64,349483196,0,0x0,8
tick,0x7ffad1f6fb64,349498224,0,0x0,8
tick,0x7ffad1f6fb64,349513267,0,0x0,8
tick,0x7ffad1f6fb64,349529217,0,0x0,8
tick,0x7ffad1f6fb64,349545273,0,0x0,8
tick,0x7ffad1f6fb64,349561269,0,0x0,8
tick,0x7ffad1f6fb64,349577295,0,0x0,8
tick,0x7ffad1f6fb64,349592292,0,0x0,8
tick,0x7ffad1f6fb64,349608320,0,0x0,8
tick,0x7ffad1f6fb64,349624323,0,0x0,8
tick,0x7ffad1f6fb64,349640366,0,0x0,8
tick,0x7ffad1f6fb64,349655365,0,0x0,8
tick,0x7ffad1f6fb64,349671372,0,0x0,8
tick,0x7ffad1f6fb64,349687399,0,0x0,8
tick,0x7ffad1f6fb64,349703399,0,0x0,8
tick,0x7ffad1f6fb64,349719451,0,0x0,8
tick,0x7ffad1f6fb64,349734456,0,0x0,8
tick,0x7ffad1f6fb64,349749441,0,0x0,8
tick,0x7ffad1f6fb64,349765486,0,0x0,8
tick,0x7ffad1f6fb64,349781460,0,0x0,8
tick,0x7ffad1f6fb64,349796509,0,0x0,8
tick,0x7ffad1f6fb64,349812508,0,0x0,8
tick,0x7ffad1f6fb64,349827517,0,0x0,8
tick,0x7ffad1f6fb64,349843511,0,0x0,8
tick,0x7ffad1f6fb64,349858543,0,0x0,8
tick,0x7ffad1f6fb64,349874555,0,0x0,8
tick,0x7ffad1f6fb64,349889563,0,0x0,8
tick,0x7ffad1f6fb64,349904609,0,0x0,8
tick,0x7ffad1f6fb64,349920751,0,0x0,8
tick,0x7ffad1f6fb64,349936627,0,0x0,8
tick,0x7ffad1f6fb64,349952634,0,0x0,8
tick,0x7ffad1f6fb64,349967643,0,0x0,8
tick,0x7ffad1f6fb64,349983659,0,0x0,8
tick,0x7ffad1f6fb64,349999670,0,0x0,8
tick,0x7ffad1f6fb64,350014696,0,0x0,8
tick,0x7ffad1f6fb64,350029726,0,0x0,8
tick,0x7ffad1f6fb64,350045740,0,0x0,8
tick,0x7ffad1f6fb64,350061737,0,0x0,8
tick,0x7ffad1f6fb64,350077750,0,0x0,8
tick,0x7ffad1f6fb64,350093774,0,0x0,8
tick,0x7ffad1f6fb64,350108788,0,0x0,8
tick,0x7ffad1f6fb64,350124803,0,0x0,8
tick,0x7ffad1f6fb64,350139789,0,0x0,8
tick,0x7ffad1f6fb64,350154836,0,0x0,8
tick,0x7ffad1f6fb64,350169830,0,0x0,8
tick,0x7ffad1f6fb64,350185828,0,0x0,8
tick,0x7ffad1f6fb64,350201844,0,0x0,8
tick,0x7ffad1f6fb64,350217859,0,0x0,8
tick,0x7ffad1f6fb64,350232894,0,0x0,8
tick,0x7ffad1f6fb64,350247914,0,0x0,8
tick,0x7ffad1f6fb64,350263917,0,0x0,8
tick,0x7ffad1f6fb64,350279980,0,0x0,8
tick,0x7ffad1f6fb64,350294971,0,0x0,8
tick,0x7ffad1f6fb64,350310954,0,0x0,8
tick,0x7ffad1f6fb64,350326968,0,0x0,8
tick,0x7ffad1f6fb64,350341995,0,0x0,8
tick,0x7ffad1f6fb64,350358005,0,0x0,8
tick,0x7ffad1f6fb64,350373008,0,0x0,8
tick,0x7ffad1f6fb64,350389025,0,0x0,8
tick,0x7ffad1f6fb64,350404038,0,0x0,8
tick,0x7ffad1f6fb64,350419042,0,0x0,8
tick,0x7ffad1f6fb64,350434099,0,0x0,8
tick,0x7ffad1f6fb64,350450089,0,0x0,8
tick,0x7ffad1f6fb64,350466101,0,0x0,8
tick,0x7ffad1f6fb64,350481130,0,0x0,8
tick,0x7ffad1f6fb64,350496119,0,0x0,8
tick,0x7ffad1f6fb64,350512126,0,0x0,8
tick,0x7ffad1f6fb64,350528137,0,0x0,8
tick,0x7ffad1f6fb64,350543166,0,0x0,8
tick,0x7ffad1f6fb64,350559197,0,0x0,8
tick,0x7ffad1f6fb64,350575183,0,0x0,8
tick,0x7ffad1f6fb64,350591219,0,0x0,8
tick,0x7ffad1f6fb64,350606240,0,0x0,8
tick,0x7ffad1f6fb64,350621244,0,0x0,8
tick,0x7ffad1f6fb64,350637255,0,0x0,8
tick,0x7ffad1f6fb64,350653277,0,0x0,8
tick,0x7ffad1f6fb64,350668341,0,0x0,8
tick,0x7ffad1f6fb64,350684297,0,0x0,8
tick,0x7ffad1f6fb64,350699328,0,0x0,8
tick,0x7ffad1f6fb64,350714335,0,0x0,8
tick,0x7ffad1f6fb64,350730356,0,0x0,8
tick,0x7ffad1f6fb64,350746508,0,0x0,8
tick,0x7ffad1f6fb64,350762375,0,0x0,8
tick,0x7ffad1f6fb64,350777400,0,0x0,8
tick,0x7ffad1f6fb64,350793418,0,0x0,8
tick,0x7ffad1f6fb64,350809419,0,0x0,8
tick,0x7ffad1f6fb64,350825490,0,0x0,8
tick,0x7ffad1f6fb64,350840461,0,0x0,8
tick,0x7ffad1f6fb64,350855495,0,0x0,8
tick,0x7ffad1f6fb64,350871482,0,0x0,8
tick,0x7ffad1f6fb64,350887489,0,0x0,8
tick,0x7ffad1f6fb64,350902518,0,0x0,8
tick,0x7ffad1f6fb64,350917538,0,0x0,8
tick,0x7ffad1f6fb64,350932522,0,0x0,8
tick,0x7ffad1f6fb64,350948566,0,0x0,8
tick,0x7ffad1f6fb64,350963544,0,0x0,8
tick,0x7ffad1f6fb64,350979620,0,0x0,8
tick,0x7ffad1f6fb64,350995593,0,0x0,8
tick,0x7ffad1f6fb64,351011607,0,0x0,8
tick,0x7ffad1f6fb64,351027622,0,0x0,8
tick,0x7ffad1f6fb64,351042635,0,0x0,8
tick,0x7ffad1f6fb64,351057657,0,0x0,8
tick,0x7ffad1f6fb64,351073653,0,0x0,8
tick,0x7ffad1f6fb64,351089683,0,0x0,8
tick,0x7ffad1f6fb64,351104707,0,0x0,8
tick,0x7ffad1f6fb64,351120711,0,0x0,8
tick,0x7ffad1f6fb64,351136723,0,0x0,8
tick,0x7ffad1f6fb64,351152750,0,0x0,8
tick,0x7ffad1f6fb64,351167748,0,0x0,8
tick,0x7ffad1f6fb64,351182789,0,0x0,8
tick,0x7ffad1f6fb64,351197780,0,0x0,8
tick,0x7ffad1f6fb64,351213812,0,0x0,8
tick,0x7ffad1f6fb64,351228808,0,0x0,8
tick,0x7ffad1f6fb64,351244821,0,0x0,8
tick,0x7ffad1f6fb64,351260852,0,0x0,8
tick,0x7ffad1f6fb64,351276851,0,0x0,8
tick,0x7ffad1f6fb64,351291873,0,0x0,8
tick,0x7ffad1f6fb64,351306886,0,0x0,8
tick,0x7ffad1f6fb64,351321917,0,0x0,8
tick,0x7ffad1f6fb64,351336898,0,0x0,8
tick,0x7ffad1f6fb64,351352925,0,0x0,8
tick,0x7ffad1f6fb64,351368952,0,0x0,8
tick,0x7ffad1f6fb64,351383942,0,0x0,8
tick,0x7ffad1f6fb64,351398949,0,0x0,8
tick,0x7ffad1f6fb64,351415008,0,0x0,8
tick,0x7ffad1f6fb64,351430002,0,0x0,8
tick,0x7ffad1f6fb64,351445989,0,0x0,8
tick,0x7ffad1f6fb64,351461038,0,0x0,8
tick,0x7ffad1f6fb64,351477038,0,0x0,8
tick,0x7ffad1f6fb64,351493038,0,0x0,8
tick,0x7ffad1f6fb64,351509063,0,0x0,8
tick,0x7ffad1f6fb64,351525076,0,0x0,8
tick,0x7ffad1f6fb64,351540093,0,0x0,8
tick,0x7ffad1f6fb64,351555073,0,0x0,8
tick,0x7ffad1f6fb64,351570114,0,0x0,8
tick,0x7ffad1f6fb64,351586148,0,0x0,8
tick,0x7ffad1f6fb64,351601140,0,0x0,8
tick,0x7ffad1f6fb64,351617198,0,0x0,8
tick,0x7ffad1f6fb64,351633196,0,0x0,8
tick,0x7ffad1f6fb64,351648211,0,0x0,8
tick,0x7ffad1f6fb64,351663205,0,0x0,8
tick,0x7ffad1f6fb64,351678210,0,0x0,8
tick,0x7ffad1f6fb64,351694254,0,0x0,8
tick,0x7ffad1f6fb64,351710241,0,0x0,8
tick,0x7ffad1f6fb64,351726267,0,0x0,8
tick,0x7ffad1f6fb64,351742285,0,0x0,8
tick,0x7ffad1f6fb64,351757297,0,0x0,8
tick,0x7ffad1f6fb64,351772290,0,0x0,8
tick,0x7ffad1f6fb64,351787368,0,0x0,8
tick,0x7ffad1f6fb64,351803352,0,0x0,8
tick,0x7ffad1f6fb64,351819368,0,0x0,8
tick,0x7ffad1f6fb64,351834359,0,0x0,8
tick,0x7ffad1f6fb64,351850373,0,0x0,8
tick,0x7ffad1f6fb64,351866387,0,0x0,8
tick,0x7ffad1f6fb64,351881596,0,0x0,8
tick,0x7ffad1f6fb64,351896426,0,0x0,8
tick,0x7ffad1f6fb64,351911489,0,0x0,8
tick,0x7ffad1f6fb64,351926442,0,0x0,8
tick,0x7ffad1f6fb64,351942456,0,0x0,8
tick,0x7ffad1f6fb64,351958452,0,0x0,8
tick,0x7ffad1f6fb64,351974523,0,0x0,8
tick,0x7ffad1f6fb64,351990493,0,0x0,8
tick,0x7ffad1f6fb64,352005510,0,0x0,8
tick,0x7ffad1f6fb64,352020527,0,0x0,8
tick,0x7ffad1f6fb64,352035540,0,0x0,8
tick,0x7ffad1f6fb64,352051529,0,0x0,8
tick,0x7ffad1f6fb64,352066559,0,0x0,8
tick,0x7ffad1f6fb64,352081630,0,0x0,8
tick,0x7ffad1f6fb64,352097610,0,0x0,8
tick,0x7ffad1f6fb64,352113654,0,0x0,8
tick,0x7ffad1f6fb64,352129627,0,0x0,8
tick,0x7ffad1f6fb64,352145678,0,0x0,8
tick,0x7ffad1f6fb64,352160681,0,0x0,8
tick,0x7ffad1f6fb64,352175709,0,0x0,8
tick,0x7ffad1f6fb64,352190711,0,0x0,8
tick,0x7ffad1f6fb64,352206708,0,0x0,8
tick,0x7ffad1f6fb64,352221731,0,0x0,8
tick,0x7ffad1f6fb64,352237710,0,0x0,8
tick,0x7ffad1f6fb64,352253751,0,0x0,8
tick,0x7ffad1f6fb64,352268782,0,0x0,8
tick,0x7ffad1f6fb64,352284780,0,0x0,8
tick,0x7ffad1f6fb64,352299795,0,0x0,8
tick,0x7ffad1f6fb64,352314775,0,0x0,8
tick,0x7ffad1f6fb64,352330817,0,0x0,8
tick,0x7ffad1f6fb64,352346823,0,0x0,8
tick,0x7ffad1f6fb64,352361829,0,0x0,8
tick,0x7ffad1f6fb64,352377859,0,0x0,8
tick,0x7ffad1f6fb64,352393848,0,0x0,8
tick,0x7ffad1f6fb64,352408887,0,0x0,8
tick,0x7ffad1f6fb64,352424903,0,0x0,8
tick,0x7ffad1f6fb64,352439911,0,0x0,8
tick,0x7ffad1f6fb64,352454920,0,0x0,8
tick,0x7ffad1f6fb64,352470934,0,0x0,8
tick,0x7ffad1f6fb64,352485967,0,0x0,8
tick,0x7ffad1f6fb64,352500953,0,0x0,8
tick,0x7ffad1f6fb64,352516985,0,0x0,8
tick,0x7ffad1f6fb64,352532982,0,0x0,8
tick,0x7ffad1f6fb64,352549000,0,0x0,8
tick,0x7ffad1f6fb64,352565025,0,0x0,8
tick,0x7ffad1f6fb64,352580047,0,0x0,8
tick,0x7ffad1f6fb64,352595064,0,0x0,8
tick,0x7ffad1f6fb64,352611073,0,0x0,8
tick,0x7ffad1f6fb64,352627238,0,0x0,8
tick,0x7ffad1f6fb64,352642112,0,0x0,8
tick,0x7ffad1f6fb64,352658114,0,0x0,8
tick,0x7ffad1f6fb64,352673128,0,0x0,8
tick,0x7ffad1f6fb64,352689133,0,0x0,8
tick,0x7ffad1f6fb64,352705133,0,0x0,8
tick,0x7ffad1f6fb64,352720204,0,0x0,8
tick,0x7ffad1f6fb64,352736192,0,0x0,8
tick,0x7ffad1f6fb64,352752184,0,0x0,8
tick,0x7ffad1f6fb64,352768208,0,0x0,8
tick,0x7ffad1f6fb64,352783218,0,0x0,8
tick,0x7ffad1f6fb64,352798246,0,0x0,8
tick,0x7ffad1f6fb64,352813246,0,0x0,8
tick,0x7ffad1f6fb64,352829248,0,0x0,8
tick,0x7ffad1f6fb64,352845397,0,0x0,8
tick,0x7ffad1f6fb64,352860287,0,0x0,8
tick,0x7ffad1f6fb64,352876302,0,0x0,8
tick,0x7ffad1f6fb64,352892298,0,0x0,8
tick,0x7ffad1f6fb64,352908326,0,0x0,8
tick,0x7ffad1f6fb64,352924346,0,0x0,8
tick,0x7ffad1f6fb64,352939356,0,0x0,8
tick,0x7ffad1f6fb64,352954371,0,0x0,8
tick,0x7ffad1f6fb64,352970381,0,0x0,8
tick,0x7ffad1f6fb64,352986407,0,0x0,8
tick,0x7ffad1f6fb64,353001428,0,0x0,8
tick,0x7ffad1f6fb64,353017441,0,0x0,8
tick,0x7ffad1f6fb64,353033456,0,0x0,8
tick,0x7ffad1f6fb64,353048455,0,0x0,8
tick,0x7ffad1f6fb64,353064494,0,0x0,8
tick,0x7ffad1f6fb64,353079486,0,0x0,8
tick,0x7ffad1f6fb64,353094518,0,0x0,8
tick,0x7ffad1f6fb64,353110518,0,0x0,8
tick,0x7ffad1f6fb64,353125514,0,0x0,8
tick,0x7ffad1f6fb64,353140547,0,0x0,8
tick,0x7ffad1f6fb64,353155555,0,0x0,8
tick,0x7ffad1f6fb64,353171593,0,0x0,8
tick,0x7ffad1f6fb64,353187568,0,0x0,8
tick,0x7ffad1f6fb64,353203595,0,0x0,8
tick,0x7ffad1f6fb64,353218618,0,0x0,8
tick,0x7ffad1f6fb64,353234640,0,0x0,8
tick,0x7ffad1f6fb64,353249640,0,0x0,8
tick,0x7ffad1f6fb64,353265649,0,0x0,8
tick,0x7ffad1f6fb64,353281731,0,0x0,8
tick,0x7ffad1f6fb64,353297701,0,0x0,8
tick,0x7ffad1f6fb64,353313699,0,0x0,8
tick,0x7ffad1f6fb64,353328725,0,0x0,8
tick,0x7ffad1f6fb64,353344733,0,0x0,8
tick,0x7ffad1f6fb64,353360791,0,0x0,8
tick,0x7ffad1f6fb64,353375753,0,0x0,8
tick,0x7ffad1f6fb64,353391758,0,0x0,8
tick,0x7ffad1f6fb64,353407799,0,0x0,8
tick,0x7ffad1f6fb64,353422806,0,0x0,8
tick,0x7ffad1f6fb64,353437814,0,0x0,8
tick,0x7ffad1f6fb64,353453813,0,0x0,8
tick,0x7ffad1f6fb64,353468851,0,0x0,8
tick,0x7ffad1f6fb64,353484850,0,0x0,8
tick,0x7ffad1f6fb64,353500880,0,0x0,8
tick,0x7ffad1f6fb64,353515909,0,0x0,8
tick,0x7ffad1f6fb64,353531900,0,0x0,8
tick,0x7ffad1f6fb64,353547897,0,0x0,8
tick,0x7ffad1f6fb64,353562923,0,0x0,8
tick,0x7ffad1f6fb64,353578931,0,0x0,8
tick,0x7ffad1f6fb64,353594960,0,0x0,8
tick,0x7ffad1f6fb64,353610980,0,0x0,8
tick,0x7ffad1f6fb64,353626981,0,0x0,8
tick,0x7ffad1f6fb64,353643006,0,0x0,8
tick,0x7ffad1f6fb64,353658031,0,0x0,8
tick,0x7ffad1f6fb64,353673047,0,0x0,8
tick,0x7ffad1f6fb64,353688048,0,0x0,8
tick,0x7ffad1f6fb64,353704068,0,0x0,8
tick,0x7ffad1f6fb64,353720078,0,0x0,8
tick,0x7ffad1f6fb64,353736134,0,0x0,8
tick,0x7ffad1f6fb64,353752123,0,0x0,8
tick,0x7ffad1f6fb64,353767146,0,0x0,8
tick,0x7ffad1f6fb64,353782147,0,0x0,8
tick,0x7ffad1f6fb64,353797177,0,0x0,8
tick,0x7ffad1f6fb64,353812151,0,0x0,8
tick,0x7ffad1f6fb64,353827193,0,0x0,8
tick,0x7ffad1f6fb64,353843217,0,0x0,8
tick,0x7ffad1f6fb64,353858221,0,0x0,8
tick,0x7ffad1f6fb64,353874243,0,0x0,8
tick,0x7ffad1f6fb64,353889217,0,0x0,8
tick,0x7ffad1f6fb64,353905257,0,0x0,8
tick,0x7ffad1f6fb64,353920251,0,0x0,8
tick,0x7ffad1f6fb64,353936330,0,0x0,8
tick,0x7ffad1f6fb64,353952316,0,0x0,8
tick,0x7ffad1f6fb64,353967340,0,0x0,8
tick,0x7ffad1f6fb64,353982326,0,0x0,8
tick,0x7ffad1f6fb64,353998335,0,0x0,8
tick,0x7ffad1f6fb64,354014406,0,0x0,8
tick,0x7ffad1f6fb64,354029393,0,0x0,8
tick,0x7ffad1f6fb64,354045389,0,0x0,8
tick,0x7ffad1f6fb64,354061404,0,0x0,8
tick,0x7ffad1f6fb64,354077399,0,0x0,8
tick,0x7ffad1f6fb64,354092416,0,0x0,8
tick,0x7ffad1f6fb64,354107416,0,0x0,8
tick,0x7ffad1f6fb64,354122479,0,0x0,8
tick,0x7ffad1f6fb64,354137515,0,0x0,8
tick,0x7ffad1f6fb64,354153492,0,0x0,8
tick,0x7ffad1f6fb64,354168480,0,0x0,8
tick,0x7ffad1f6fb64,354183626,0,0x0,8
tick,0x7ffad1f6fb64,354199507,0,0x0,8
tick,0x7ffad1f6fb64,354215534,0,0x0,8
tick,0x7ffad1f6fb64,354231535,0,0x0,8
tick,0x7ffad1f6fb64,354246564,0,0x0,8
tick,0x7ffad1f6fb64,354262572,0,0x0,8
tick,0x7ffad1f6fb64,354278589,0,0x0,8
tick,0x7ffad1f6fb64,354294643,0,0x0,8
tick,0x7ffad1f6fb64,354310605,0,0x0,8
tick,0x7ffad1f6fb64,354325609,0,0x0,8
tick,0x7ffad1f6fb64,354340660,0,0x0,8
tick,0x7ffad1f6fb64,354356654,0,0x0,8
tick,0x7ffad1f6fb64,354371692,0,0x0,8
tick,0x7ffad1f6fb64,354387871,0,0x0,8
tick,0x7ffad1f6fb64,354402727,0,0x0,8
tick,0x7ffad1f6fb64,354418697,0,0x0,8
tick,0x7ffad1f6fb64,354433729,0,0x0,8
tick,0x7ffad1f6fb64,354449777,0,0x0,8
tick,0x7ffad1f6fb64,354465754,0,0x0,8
tick,0x7ffad1f6fb64,354481811,0,0x0,8
tick,0x7ffad1f6fb64,354497794,0,0x0,8
tick,0x7ffad1f6fb64,354513794,0,0x0,8
tick,0x7ffad1f6fb64,354528799,0,0x0,8
tick,0x7ffad1f6fb64,354544843,0,0x0,8
tick,0x7ffad1f6fb64,354560833,0,0x0,8
tick,0x7ffad1f6fb64,354576850,0,0x0,8
tick,0x7ffad1f6fb64,354591880,0,0x0,8
tick,0x7ffad1f6fb64,354607883,0,0x0,8
tick,0x7ffad1f6fb64,354623893,0,0x0,8
tick,0x7ffad1f6fb64,354638920,0,0x0,8
tick,0x7ffad1f6fb64,354653913,0,0x0,8
tick,0x7ffad1f6fb64,354669949,0,0x0,8
tick,0x7ffad1f6fb64,354685957,0,0x0,8
tick,0x7ffad1f6fb64,354700986,0,0x0,8
tick,0x7ffad1f6fb64,354716998,0,0x0,8
tick,0x7ffad1f6fb64,354732978,0,0x0,8
tick,0x7ffad1f6fb64,354749042,0,0x0,8
tick,0x7ffad1f6fb64,354765019,0,0x0,8
tick,0x7ffad1f6fb64,354780022,0,0x0,8
tick,0x7ffad1f6fb64,354796051,0,0x0,8
tick,0x7ffad1f6fb64,354812086,0,0x0,8
tick,0x7ffad1f6fb64,354828101,0,0x0,8
tick,0x7ffad1f6fb64,354843111,0,0x0,8
tick,0x7ffad1f6fb64,354859101,0,0x0,8
tick,0x7ffad1f6fb64,354874121,0,0x0,8
tick,0x7ffad1f6fb64,354889126,0,0x0,8
tick,0x7ffad1f6fb64,354904165,0,0x0,8
tick,0x7ffad1f6fb64,354920145,0,0x0,8
tick,0x7ffad1f6fb64,354936217,0,0x0,8
tick,0x7ffad1f6fb64,354951189,0,0x0,8
tick,0x7ffad1f6fb64,354966248,0,0x0,8
tick,0x7ffad1f6fb64,354981212,0,0x0,8
tick,0x7ffad1f6fb64,354996262,0,0x0,8
tick,0x7ffad1f6fb64,355012241,0,0x0,8
tick,0x7ffad1f6fb64,355027301,0,0x0,8
tick,0x7ffad1f6fb64,355043291,0,0x0,8
tick,0x7ffad1f6fb64,355059356,0,0x0,8
tick,0x7ffad1f6fb64,355074315,0,0x0,8
tick,0x7ffad1f6fb64,355090324,0,0x0,8
tick,0x7ffad1f6fb64,355105329,0,0x0,8
tick,0x7ffad1f6fb64,355120339,0,0x0,8
tick,0x7ffad1f6fb64,355135362,0,0x0,8
tick,0x7ffad1f6fb64,355150382,0,0x0,8
tick,0x7ffad1f6fb64,355166379,0,0x0,8
tick,0x7ffad1f6fb64,355181392,0,0x0,8
tick,0x7ffad1f6fb64,355197413,0,0x0,8
tick,0x7ffad1f6fb64,355212442,0,0x0,8
tick,0x7ffad1f6fb64,355227434,0,0x0,8
tick,0x7ffad1f6fb64,355242467,0,0x0,8
tick,0x7ffad1f6fb64,355257467,0,0x0,8
tick,0x7ffad1f6fb64,355273478,0,0x0,8
tick,0x7ffad1f6fb64,355289510,0,0x0,8
tick,0x7ffad1f6fb64,355305532,0,0x0,8
tick,0x7ffad1f6fb64,355320515,0,0x0,8
tick,0x7ffad1f6fb64,355335565,0,0x0,8
tick,0x7ffad1f6fb64,355350561,0,0x0,8
tick,0x7ffad1f6fb64,355366569,0,0x0,8
tick,0x7ffad1f6fb64,355381572,0,0x0,8
tick,0x7ffad1f6fb64,355397597,0,0x0,8
tick,0x7ffad1f6fb64,355413637,0,0x0,8
tick,0x7ffad1f6fb64,355428625,0,0x0,8
tick,0x7ffad1f6fb64,355444635,0,0x0,8
tick,0x7ffad1f6fb64,355460657,0,0x0,8
tick,0x7ffad1f6fb64,355475671,0,0x0,8
tick,0x7ffad1f6fb64,355491680,0,0x0,8
tick,0x7ffad1f6fb64,355507697,0,0x0,8
tick,0x7ffad1f6fb64,355523721,0,0x0,8
tick,0x7ffad1f6fb64,355539724,0,0x0,8
tick,0x7ffad1f6fb64,355554719,0,0x0,8
tick,0x7ffad1f6fb64,355569849,0,0x0,8
tick,0x7ffad1f6fb64,355584767,0,0x0,8
tick,0x7ffad1f6fb64,355599780,0,0x0,8
tick,0x7ffad1f6fb64,355615791,0,0x0,8
tick,0x7ffad1f6fb64,355630801,0,0x0,8
tick,0x7ffad1f6fb64,355646825,0,0x0,8
tick,0x7ffad1f6fb64,355662823,0,0x0,8
tick,0x7ffad1f6fb64,355677855,0,0x0,8
tick,0x7ffad1f6fb64,355693856,0,0x0,8
tick,0x7ffad1f6fb64,355708909,0,0x0,8
tick,0x7ffad1f6fb64,355724891,0,0x0,8
tick,0x7ffad1f6fb64,355739901,0,0x0,8
tick,0x7ffad1f6fb64,355754926,0,0x0,8
tick,0x7ffad1f6fb64,355770026,0,0x0,8
tick,0x7ffad1f6fb64,355785986,0,0x0,8
tick,0x7ffad1f6fb64,355801003,0,0x0,8
tick,0x7ffad1f6fb64,355817027,0,0x0,8
tick,0x7ffad1f6fb64,355832042,0,0x0,8
tick,0x7ffad1f6fb64,355847028,0,0x0,8
tick,0x7ffad1f6fb64,355863069,0,0x0,8
tick,0x7ffad1f6fb64,355878023,0,0x0,8
tick,0x7ffad1f6fb64,355894076,0,0x0,8
tick,0x7ffad1f6fb64,355910093,0,0x0,8
tick,0x7ffad1f6fb64,355926138,0,0x0,8
tick,0x7ffad1f6fb64,355941103,0,0x0,8
tick,0x7ffad1f6fb64,355957111,0,0x0,8
tick,0x7ffad1f6fb64,355973163,0,0x0,8
tick,0x7ffad1f6fb64,355988140,0,0x0,8
tick,0x7ffad1f6fb64,356003140,0,0x0,8
tick,0x7ffad1f6fb64,356019179,0,0x0,8
tick,0x7ffad1f6fb64,356035197,0,0x0,8
tick,0x7ffad1f6fb64,356050194,0,0x0,8
tick,0x7ffad1f6fb64,356066211,0,0x0,8
tick,0x7ffad1f6fb64,356081385,0,0x0,8
tick,0x7ffad1f6fb64,356096227,0,0x0,8
tick,0x7ffad1f6fb64,356112286,0,0x0,8
tick,0x7ffad1f6fb64,356127262,0,0x0,8
tick,0x7ffad1f6fb64,356143278,0,0x0,8
tick,0x7ffad1f6fb64,356158290,0,0x0,8
tick,0x7ffad1f6fb64,356174321,0,0x0,8
tick,0x7ffad1f6fb64,356189330,0,0x0,8
tick,0x7ffad1f6fb64,356205341,0,0x0,8
tick,0x7ffad1f6fb64,356220396,0,0x0,8
tick,0x7ffad1f6fb64,356236394,0,0x0,8
tick,0x7ffad1f6fb64,356252380,0,0x0,8
tick,0x7ffad1f6fb64,356268546,0,0x0,8
tick,0x7ffad1f6fb64,356284431,0,0x0,8
tick,0x7ffad1f6fb64,356299415,0,0x0,8
tick,0x7ffad1f6fb64,356314447,0,0x0,8
tick,0x7ffad1f6fb64,356330472,0,0x0,8
tick,0x7ffad1f6fb64,356345468,0,0x0,8
tick,0x7ffad1f6fb64,356360474,0,0x0,8
tick,0x7ffad1f6fb64,356375513,0,0x0,8
tick,0x7ffad1f6fb64,356391503,0,0x0,8
tick,0x7ffad1f6fb64,356407515,0,0x0,8
tick,0x7ffad1f6fb64,356422527,0,0x0,8
tick,0x7ffad1f6fb64,356437577,0,0x0,8
tick,0x7ffad1f6fb64,356453584,0,0x0,8
tick,0x7ffad1f6fb64,356468591,0,0x0,8
tick,0x7ffad1f6fb64,356484582,0,0x0,8
tick,0x7ffad1f6fb64,356499595,0,0x0,8
tick,0x7ffad1f6fb64,356515615,0,0x0,8
tick,0x7ffad1f6fb64,356531637,0,0x0,8
tick,0x7ffad1f6fb64,356546657,0,0x0,8
tick,0x7ffad1f6fb64,356562652,0,0x0,8
tick,0x7ffad1f6fb64,356578687,0,0x0,8
tick,0x7ffad1f6fb64,356593715,0,0x0,8
tick,0x7ffad1f6fb64,356609699,0,0x0,8
tick,0x7ffad1f6fb64,356624727,0,0x0,8
tick,0x7ffad1f6fb64,356639738,0,0x0,8
tick,0x7ffad1f6fb64,356654771,0,0x0,8
tick,0x7ffad1f6fb64,356670750,0,0x0,8
tick,0x7ffad1f6fb64,356686781,0,0x0,8
tick,0x7ffad1f6fb64,356702792,0,0x0,8
tick,0x7ffad1f6fb64,356718809,0,0x0,8
tick,0x7ffad1f6fb64,356733823,0,0x0,8
tick,0x7ffad1f6fb64,356749839,0,0x0,8
tick,0x7ffad1f6fb64,356764860,0,0x0,8
tick,0x7ffad1f6fb64,356779869,0,0x0,8
tick,0x7ffad1f6fb64,356795880,0,0x0,8
tick,0x7ffad1f6fb64,356811898,0,0x0,8
tick,0x7ffad1f6fb64,356827924,0,0x0,8
tick,0x7ffad1f6fb64,356842928,0,0x0,8
tick,0x7ffad1f6fb64,356858926,0,0x0,8
tick,0x7ffad1f6fb64,356874982,0,0x0,8
tick,0x7ffad1f6fb64,356890962,0,0x0,8
tick,0x7ffad1f6fb64,356905965,0,0x0,8
tick,0x7ffad1f6fb64,356920984,0,0x0,8
tick,0x7ffad1f6fb64,356937011,0,0x0,8
tick,0x7ffad1f6fb64,356953035,0,0x0,8
tick,0x7ffad1f6fb64,356968027,0,0x0,8
tick,0x7ffad1f6fb64,356984057,0,0x0,8
tick,0x7ffad1f6fb64,356999048,0,0x0,8
tick,0x7ffad1f6fb64,357015079,0,0x0,8
tick,0x7ffad1f6fb64,357031085,0,0x0,8
tick,0x7ffad1f6fb64,357046107,0,0x0,8
tick,0x7ffad1f6fb64,357062122,0,0x0,8
tick,0x7ffad1f6fb64,357077127,0,0x0,8
tick,0x7ffad1f6fb64,357093151,0,0x0,8
tick,0x7ffad1f6fb64,357109165,0,0x0,8
tick,0x7ffad1f6fb64,357125179,0,0x0,8
tick,0x7ffad1f6fb64,357140184,0,0x0,8
tick,0x7ffad1f6fb64,357155192,0,0x0,8
tick,0x7ffad1f6fb64,357171200,0,0x0,8
tick,0x7ffad1f6fb64,357187256,0,0x0,8
tick,0x7ffad1f6fb64,357202294,0,0x0,8
tick,0x7ffad1f6fb64,357218255,0,0x0,8
tick,0x7ffad1f6fb64,357234271,0,0x0,8
tick,0x7ffad1f6fb64,357249277,0,0x0,8
tick,0x7ffad1f6fb64,357265338,0,0x0,8
tick,0x7ffad1f6fb64,357280322,0,0x0,8
tick,0x7ffad1f6fb64,357295599,0,0x0,8
tick,0x7ffad1f6fb64,357310356,0,0x0,8
tick,0x7ffad1f6fb64,357325363,0,0x0,8
tick,0x7ffad1f6fb64,357340370,0,0x0,8
tick,0x7ffad1f6fb64,357356386,0,0x0,8
tick,0x7ffad1f6fb64,357372387,0,0x0,8
tick,0x7ffad1f6fb64,357388412,0,0x0,8
tick,0x7ffad1f6fb64,357404431,0,0x0,8
tick,0x7ffad1f6fb64,357420448,0,0x0,8
tick,0x7ffad1f6fb64,357435440,0,0x0,8
tick,0x7ffad1f6fb64,357451469,0,0x0,8
tick,0x7ffad1f6fb64,357466557,0,0x0,8
tick,0x7ffad1f6fb64,357481501,0,0x0,8
tick,0x7ffad1f6fb64,357497502,0,0x0,8
tick,0x7ffad1f6fb64,357513515,0,0x0,8
tick,0x7ffad1f6fb64,357529559,0,0x0,8
tick,0x7ffad1f6fb64,357545563,0,0x0,8
tick,0x7ffad1f6fb64,357560570,0,0x0,8
tick,0x7ffad1f6fb64,357575668,0,0x0,8
tick,0x7ffad1f6fb64,357591605,0,0x0,8
tick,0x7ffad1f6fb64,357607592,0,0x0,8
tick,0x7ffad1f6fb64,357622637,0,0x0,8
tick,0x7ffad1f6fb64,357637672,0,0x0,8
tick,0x7ffad1f6fb64,357652653,0,0x0,8
tick,0x7ffad1f6fb64,357668657,0,0x0,8
tick,0x7ffad1f6fb64,357684672,0,0x0,8
tick,0x7ffad1f6fb64,357699697,0,0x0,8
tick,0x7ffad1f6fb64,357715704,0,0x0,8
tick,0x7ffad1f6fb64,357731705,0,0x0,8
tick,0x7ffad1f6fb64,357747755,0,0x0,8
tick,0x7ffad1f6fb64,357763777,0,0x0,8
tick,0x7ffad1f6fb64,357778788,0,0x0,8
tick,0x7ffad1f6fb64,357794799,0,0x0,8
tick,0x7ffad1f6fb64,357809830,0,0x0,8
tick,0x7ffad1f6fb64,357824851,0,0x0,8
tick,0x7ffad1f6fb64,357839828,0,0x0,8
tick,0x7ffad1f6fb64,357854897,0,0x0,8
tick,0x7ffad1f6fb64,357870900,0,0x0,8
tick,0x7ffad1f6fb64,357886888,0,0x0,8
tick,0x7ffad1f6fb64,357901884,0,0x0,8
tick,0x7ffad1f6fb64,357916894,0,0x0,8
tick,0x7ffad1f6fb64,357932911,0,0x0,8
tick,0x7ffad1f6fb64,357949118,0,0x0,8
tick,0x7ffad1f6fb64,357964969,0,0x0,8
tick,0x7ffad1f6fb64,357980005,0,0x0,8
tick,0x7ffad1f6fb64,357996000,0,0x0,8
tick,0x7ffad1f6fb64,358011998,0,0x0,8
tick,0x7ffad1f6fb64,358027976,0,0x0,8
tick,0x7ffad1f6fb64,358043051,0,0x0,8
tick,0x7ffad1f6fb64,358059031,0,0x0,8
tick,0x7ffad1f6fb64,358075082,0,0x0,8
tick,0x7ffad1f6fb64,358090058,0,0x0,8
tick,0x7ffad1f6fb64,358105067,0,0x0,8
tick,0x7ffad1f6fb64,358120079,0,0x0,8
tick,0x7ffad1f6fb64,358136139,0,0x0,8
tick,0x7ffad1f6fb64,358152128,0,0x0,8
tick,0x7ffad1f6fb64,358167148,0,0x0,8
tick,0x7ffad1f6fb64,358182168,0,0x0,8
tick,0x7ffad1f6fb64,358198167,0,0x0,8
tick,0x7ffad1f6fb64,358214168,0,0x0,8
tick,0x7ffad1f6fb64,358230219,0,0x0,8
tick,0x7ffad1f6fb64,358245210,0,0x0,8
tick,0x7ffad1f6fb64,358260219,0,0x0,8
tick,0x7ffad1f6fb64,358276235,0,0x0,8
tick,0x7ffad1f6fb64,358292259,0,0x0,8
tick,0x7ffad1f6fb64,358308244,0,0x0,8
tick,0x7ffad1f6fb64,358323315,0,0x0,8
tick,0x7ffad1f6fb64,358339296,0,0x0,8
tick,0x7ffad1f6fb64,358355289,0,0x0,8
tick,0x7ffad1f6fb64,358370310,0,0x0,8
tick,0x7ffad1f6fb64,358386322,0,0x0,8
tick,0x7ffad1f6fb64,358402348,0,0x0,8
tick,0x7ffad1f6fb64,358417406,0,0x0,8
tick,0x7ffad1f6fb64,358433394,0,0x0,8
tick,0x7ffad1f6fb64,358448490,0,0x0,8
tick,0x7ffad1f6fb64,358464384,0,0x0,8
tick,0x7ffad1f6fb64,358480395,0,0x0,8
tick,0x7ffad1f6fb64,358495467,0,0x0,8
tick,0x7ffad1f6fb64,358510505,0,0x0,8
tick,0x7ffad1f6fb64,358525454,0,0x0,8
tick,0x7ffad1f6fb64,358540471,0,0x0,8
tick,0x7ffad1f6fb64,358555491,0,0x0,8
tick,0x7ffad1f6fb64,358570495,0,0x0,8
tick,0x7ffad1f6fb64,358586502,0,0x0,8
tick,0x7ffad1f6fb64,358602681,0,0x0,8
tick,0x7ffad1f6fb64,358617605,0,0x0,8
tick,0x7ffad1f6fb64,358632569,0,0x0,8
tick,0x7ffad1f6fb64,358647607,0,0x0,8
tick,0x7ffad1f6fb64,358662578,0,0x0,8
tick,0x7ffad1f6fb64,358678587,0,0x0,8
tick,0x7ffad1f6fb64,358694621,0,0x0,8
tick,0x7ffad1f6fb64,358710621,0,0x0,8
tick,0x7ffad1f6fb64,358725631,0,0x0,8
tick,0x7ffad1f6fb64,358740641,0,0x0,8
tick,0x7ffad1f6fb64,358755671,0,0x0,8
tick,0x7ffad1f6fb64,358770689,0,0x0,8
tick,0x7ffad1f6fb64,358786681,0,0x0,8
tick,0x7ffad1f6fb64,358802793,0,0x0,8
tick,0x7ffad1f6fb64,358818746,0,0x0,8
tick,0x7ffad1f6fb64,358833743,0,0x0,8
tick,0x7ffad1f6fb64,358848745,0,0x0,8
tick,0x7ffad1f6fb64,358864755,0,0x0,8
tick,0x7ffad1f6fb64,358879780,0,0x0,8
tick,0x7ffad1f6fb64,358895779,0,0x0,8
tick,0x7ffad1f6fb64,358910811,0,0x0,8
tick,0x7ffad1f6fb64,358926814,0,0x0,8
tick,0x7ffad1f6fb64,358942840,0,0x0,8
tick,0x7ffad1f6fb64,358958830,0,0x0,8
tick,0x7ffad1f6fb64,358973869,0,0x0,8
tick,0x7ffad1f6fb64,358989880,0,0x0,8
tick,0x7ffad1f6fb64,359005911,0,0x0,8
tick,0x7ffad1f6fb64,359020891,0,0x0,8
tick,0x7ffad1f6fb64,359035913,0,0x0,8
tick,0x7ffad1f6fb64,359051902,0,0x0,8
tick,0x7ffad1f6fb64,359066941,0,0x0,8
tick,0x7ffad1f6fb64,359082012,0,0x0,8
tick,0x7ffad1f6fb64,359096986,0,0x0,8
tick,0x7ffad1f6fb64,359112987,0,0x0,8
tick,0x7ffad1f6fb64,359128984,0,0x0,8
tick,0x7ffad1f6fb64,359144009,0,0x0,8
tick,0x7ffad1f6fb64,359160079,0,0x0,8
tick,0x7ffad1f6fb64,359175032,0,0x0,8
tick,0x7ffad1f6fb64,359191059,0,0x0,8
tick,0x7ffad1f6fb64,359206068,0,0x0,8
tick,0x7ffad1f6fb64,359221078,0,0x0,8
tick,0x7ffad1f6fb64,359237088,0,0x0,8
tick,0x7ffad1f6fb64,359253101,0,0x0,8
tick,0x7ffad1f6fb64,359269122,0,0x0,8
tick,0x7ffad1f6fb64,359284119,0,0x0,8
tick,0x7ffad1f6fb64,359299139,0,0x0,8
tick,0x7ffad1f6fb64,359315162,0,0x0,8
tick,0x7ffad1f6fb64,359331171,0,0x0,8
tick,0x7ffad1f6fb64,359347200,0,0x0,8
tick,0x7ffad1f6fb64,359362221,0,0x0,8
tick,0x7ffad1f6fb64,359377234,0,0x0,8
tick,0x7ffad1f6fb64,359393233,0,0x0,8
tick,0x7ffad1f6fb64,359408241,0,0x0,8
tick,0x7ffad1f6fb64,359424253,0,0x0,8
tick,0x7ffad1f6fb64,359440272,0,0x0,8
tick,0x7ffad1f6fb64,359456291,0,0x0,8
tick,0x7ffad1f6fb64,359471315,0,0x0,8
tick,0x7ffad1f6fb64,359487328,0,0x0,8
tick,0x7ffad1f6fb64,359503337,0,0x0,8
tick,0x7ffad1f6fb64,359519383,0,0x0,8
tick,0x7ffad1f6fb64,359534362,0,0x0,8
tick,0x7ffad1f6fb64,359550437,0,0x0,8
tick,0x7ffad1f6fb64,359566391,0,0x0,8
tick,0x7ffad1f6fb64,359581386,0,0x0,8
tick,0x7ffad1f6fb64,359597429,0,0x0,8
tick,0x7ffad1f6fb64,359613431,0,0x0,8
tick,0x7ffad1f6fb64,359629463,0,0x0,8
tick,0x7ffad1f6fb64,359645492,0,0x0,8
tick,0x7ffad1f6fb64,359660502,0,0x0,8
tick,0x7ffad1f6fb64,359675515,0,0x0,8
tick,0x7ffad1f6fb64,359691501,0,0x0,8
tick,0x7ffad1f6fb64,359706528,0,0x0,8
tick,0x7ffad1f6fb64,359722523,0,0x0,8
tick,0x7ffad1f6fb64,359737545,0,0x0,8
tick,0x7ffad1f6fb64,359753562,0,0x0,8
tick,0x7ffad1f6fb64,359769573,0,0x0,8
tick,0x7ffad1f6fb64,359785573,0,0x0,8
tick,0x7ffad1f6fb64,359800593,0,0x0,8
tick,0x7ffad1f6fb64,359816641,0,0x0,8
tick,0x7ffad1f6fb64,359831652,0,0x0,8
tick,0x7ffad1f6fb64,359847649,0,0x0,8
tick,0x7ffad1f6fb64,359863681,0,0x0,8
tick,0x7ffad1f6fb64,359878674,0,0x0,8
tick,0x7ffad1f6fb64,359893687,0,0x0,8
tick,0x7ffad1f6fb64,359908703,0,0x0,8
tick,0x7ffad1f6fb64,359923722,0,0x0,8
tick,0x7ffad1f6fb64,359939729,0,0x0,8
tick,0x7ffad1f6fb64,359955746,0,0x0,8
tick,0x7ffad1f6fb64,359970767,0,0x0,8
tick,0x7ffad1f6fb64,359986779,0,0x0,8
tick,0x7ffad1f6fb64,360002788,0,0x0,8
tick,0x7ffad1f6fb64,360018789,0,0x0,8
tick,0x7ffad1f6fb64,360033829,0,0x0,8
tick,0x7ffad1f6fb64,360048814,0,0x0,8
tick,0x7ffad1f6fb64,360064850,0,0x0,8
tick,0x7ffad1f6fb64,360079862,0,0x0,8
tick,0x7ffad1f6fb64,360094873,0,0x0,8
tick,0x7ffad1f6fb64,360110891,0,0x0,8
tick,0x7ffad1f6fb64,360126903,0,0x0,8
tick,0x7ffad1f6fb64,360141916,0,0x0,8
tick,0x7ffad1f6fb64,360157937,0,0x0,8
tick,0x7ffad1f6fb64,360172972,0,0x0,8
tick,0x7ffad1f6fb64,360189050,0,0x0,8
tick,0x7ffad1f6fb64,360204958,0,0x0,8
tick,0x7ffad1f6fb64,360219985,0,0x0,8
tick,0x7ffad1f6fb64,360234990,0,0x0,8
tick,0x7ffad1f6fb64,360250015,0,0x0,8
tick,0x7ffad1f6fb64,360266028,0,0x0,8
tick,0x7ffad1f6fb64,360281035,0,0x0,8
tick,0x7ffad1f6fb64,360296059,0,0x0,8
tick,0x7ffad1f6fb64,360312069,0,0x0,8
tick,0x7ffad1f6fb64,360327084,0,0x0,8
tick,0x7ffad1f6fb64,360343099,0,0x0,8
tick,0x7ffad1f6fb64,360359140,0,0x0,8
tick,0x7ffad1f6fb64,360374140,0,0x0,8
tick,0x7ffad1f6fb64,360390143,0,0x0,8
tick,0x7ffad1f6fb64,360406159,0,0x0,8
tick,0x7ffad1f6fb64,360421152,0,0x0,8
tick,0x7ffad1f6fb64,360436179,0,0x0,8
tick,0x7ffad1f6fb64,360452195,0,0x0,8
tick,0x7ffad1f6fb64,360468228,0,0x0,8
tick,0x7ffad1f6fb64,360484222,0,0x0,8
tick,0x7ffad1f6fb64,360499240,0,0x0,8
tick,0x7ffad1f6fb64,360514286,0,0x0,8
tick,0x7ffad1f6fb64,360530333,0,0x0,8
tick,0x7ffad1f6fb64,360546358,0,0x0,8
tick,0x7ffad1f6fb64,360561315,0,0x0,8
tick,0x7ffad1f6fb64,360577323,0,0x0,8
tick,0x7ffad1f6fb64,360593340,0,0x0,8
tick,0x7ffad1f6fb64,360609339,0,0x0,8
tick,0x7ffad1f6fb64,360624456,0,0x0,8
tick,0x7ffad1f6fb64,360639426,0,0x0,8
tick,0x7ffad1f6fb64,360654400,0,0x0,8
tick,0x7ffad1f6fb64,360669405,0,0x0,8
tick,0x7ffad1f6fb64,360685433,0,0x0,8
tick,0x7ffad1f6fb64,360700464,0,0x0,8
tick,0x7ffad1f6fb64,360716441,0,0x0,8
tick,0x7ffad1f6fb64,360732452,0,0x0,8
tick,0x7ffad1f6fb64,360747464,0,0x0,8
tick,0x7ffad1f6fb64,360763484,0,0x0,8
tick,0x7ffad1f6fb64,360779497,0,0x0,8
tick,0x7ffad1f6fb64,360794519,0,0x0,8
tick,0x7ffad1f6fb64,360809521,0,0x0,8
tick,0x7ffad1f6fb64,360825562,0,0x0,8
tick,0x7ffad1f6fb64,360840609,0,0x0,8
tick,0x7ffad1f6fb64,360856578,0,0x0,8
tick,0x7ffad1f6fb64,360871586,0,0x0,8
tick,0x7ffad1f6fb64,360886627,0,0x0,8
tick,0x7ffad1f6fb64,360902633,0,0x0,8
tick,0x7ffad1f6fb64,360917634,0,0x0,8
tick,0x7ffad1f6fb64,360933652,0,0x0,8
tick,0x7ffad1f6fb64,360949647,0,0x0,8
tick,0x7ffad1f6fb64,360964704,0,0x0,8
tick,0x7ffad1f6fb64,360979666,0,0x0,8
tick,0x7ffad1f6fb64,360995686,0,0x0,8
tick,0x7ffad1f6fb64,361011732,0,0x0,8
tick,0x7ffad1f6fb64,361027734,0,0x0,8
tick,0x7ffad1f6fb64,361043741,0,0x0,8
tick,0x7ffad1f6fb64,361059786,0,0x0,8
tick,0x7ffad1f6fb64,361074774,0,0x0,8
tick,0x7ffad1f6fb64,361089784,0,0x0,8
tick,0x7ffad1f6fb64,361105780,0,0x0,8
tick,0x7ffad1f6fb64,361120818,0,0x0,8
tick,0x7ffad1f6fb64,361136923,0,0x0,8
tick,0x7ffad1f6fb64,361152837,0,0x0,8
tick,0x7ffad1f6fb64,361167844,0,0x0,8
tick,0x7ffad1f6fb64,361183862,0,0x0,8
tick,0x7ffad1f6fb64,361198871,0,0x0,8
tick,0x7ffad1f6fb64,361214922,0,0x0,8
tick,0x7ffad1f6fb64,361230909,0,0x0,8
tick,0x7ffad1f6fb64,361246922,0,0x0,8
tick,0x7ffad1f6fb64,361261935,0,0x0,8
tick,0x7ffad1f6fb64,361277952,0,0x0,8
tick,0x7ffad1f6fb64,361293952,0,0x0,8
tick,0x7ffad1f6fb64,361309984,0,0x0,8
tick,0x7ffad1f6fb64,361325983,0,0x0,8
tick,0x7ffad1f6fb64,361341030,0,0x0,8
tick,0x7ffad1f6fb64,361356026,0,0x0,8
tick,0x7ffad1f6fb64,361372047,0,0x0,8
tick,0x7ffad1f6fb64,361388054,0,0x0,8
tick,0x7ffad1f6fb64,361403092,0,0x0,8
tick,0x7ffad1f6fb64,361419075,0,0x0,8
tick,0x7ffad1f6fb64,361434083,0,0x0,8
tick,0x7ffad1f6fb64,361449115,0,0x0,8
tick,0x7ffad1f6fb64,361464120,0,0x0,8
tick,0x7ffad1f6fb64,361479153,0,0x0,8
tick,0x7ffad1f6fb64,361495145,0,0x0,8
tick,0x7ffad1f6fb64,361510155,0,0x0,8
tick,0x7ffad1f6fb64,361526180,0,0x0,8
tick,0x7ffad1f6fb64,361542191,0,0x0,8
tick,0x7ffad1f6fb64,361558216,0,0x0,8
tick,0x7ffad1f6fb64,361574209,0,0x0,8
tick,0x7ffad1f6fb64,361589256,0,0x0,8
tick,0x7ffad1f6fb64,361605258,0,0x0,8
tick,0x7ffad1f6fb64,361620256,0,0x0,8
tick,0x7ffad1f6fb64,361636273,0,0x0,8
tick,0x7ffad1f6fb64,361651309,0,0x0,8
tick,0x7ffad1f6fb64,361666315,0,0x0,8
tick,0x7ffad1f6fb64,361681328,0,0x0,8
tick,0x7ffad1f6fb64,361697346,0,0x0,8
tick,0x7ffad1f6fb64,361713343,0,0x0,8
tick,0x7ffad1f6fb64,361729396,0,0x0,8
tick,0x7ffad1f6fb64,361744368,0,0x0,8
tick,0x7ffad1f6fb64,361760381,0,0x0,8
tick,0x7ffad1f6fb64,361776414,0,0x0,8
tick,0x7ffad1f6fb64,361792424,0,0x0,8
tick,0x7ffad1f6fb64,361808428,0,0x0,8
tick,0x7ffad1f6fb64,361823450,0,0x0,8
tick,0x7ffad1f6fb64,361839457,0,0x0,8
tick,0x7ffad1f6fb64,361855470,0,0x0,8
tick,0x7ffad1f6fb64,361870581,0,0x0,8
tick,0x7ffad1f6fb64,361886515,0,0x0,8
tick,0x7ffad1f6fb64,361901526,0,0x0,8
tick,0x7ffad1f6fb64,361916518,0,0x0,8
tick,0x7ffad1f6fb64,361932542,0,0x0,8
tick,0x7ffad1f6fb64,361947571,0,0x0,8
tick,0x7ffad1f6fb64,361963570,0,0x0,8
tick,0x7ffad1f6fb64,361978585,0,0x0,8
tick,0x7ffad1f6fb64,361993633,0,0x0,8
tick,0x7ffad1f6fb64,362009617,0,0x0,8
tick,0x7ffad1f6fb64,362024629,0,0x0,8
tick,0x7ffad1f6fb64,362039653,0,0x0,8
tick,0x7ffad1f6fb64,362055649,0,0x0,8
tick,0x7ffad1f6fb64,362070695,0,0x0,8
tick,0x7ffad1f6fb64,362086719,0,0x0,8
tick,0x7ffad1f6fb64,362102746,0,0x0,8
tick,0x7ffad1f6fb64,362117733,0,0x0,8
tick,0x7ffad1f6fb64,362132759,0,0x0,8
tick,0x7ffad1f6fb64,362148770,0,0x0,8
tick,0x7ffad1f6fb64,362164801,0,0x0,8
tick,0x7ffad1f6fb64,362179782,0,0x0,8
tick,0x7ffad1f6fb64,362195819,0,0x0,8
tick,0x7ffad1f6fb64,362210817,0,0x0,8
tick,0x7ffad1f6fb64,362225822,0,0x0,8
tick,0x7ffad1f6fb64,362240865,0,0x0,8
tick,0x7ffad1f6fb64,362256857,0,0x0,8
tick,0x7ffad1f6fb64,362272861,0,0x0,8
tick,0x7ffad1f6fb64,362288866,0,0x0,8
tick,0x7ffad1f6fb64,362303893,0,0x0,8
tick,0x7ffad1f6fb64,362318931,0,0x0,8
tick,0x7ffad1f6fb64,362334919,0,0x0,8
tick,0x7ffad1f6fb64,362349923,0,0x0,8
tick,0x7ffad1f6fb64,362365942,0,0x0,8
tick,0x7ffad1f6fb64,362381963,0,0x0,8
tick,0x7ffad1f6fb64,362397963,0,0x0,8
tick,0x7ffad1f6fb64,362413974,0,0x0,8
tick,0x7ffad1f6fb64,362429006,0,0x0,8
tick,0x7ffad1f6fb64,362445011,0,0x0,8
tick,0x7ffad1f6fb64,362460019,0,0x0,8
tick,0x7ffad1f6fb64,362476034,0,0x0,8
tick,0x7ffad1f6fb64,362491056,0,0x0,8
tick,0x7ffad1f6fb64,362506059,0,0x0,8
tick,0x7ffad1f6fb64,362521100,0,0x0,8
tick,0x7ffad1f6fb64,362537124,0,0x0,8
tick,0x7ffad1f6fb64,362552095,0,0x0,8
tick,0x7ffad1f6fb64,362567133,0,0x0,8
tick,0x7ffad1f6fb64,362582141,0,0x0,8
tick,0x7ffad1f6fb64,362598183,0,0x0,8
tick,0x7ffad1f6fb64,362613163,0,0x0,8
tick,0x7ffad1f6fb64,362629183,0,0x0,8
tick,0x7ffad1f6fb64,362644211,0,0x0,8
tick,0x7ffad1f6fb64,362660219,0,0x0,8
tick,0x7ffad1f6fb64,362675242,0,0x0,8
tick,0x7ffad1f6fb64,362690242,0,0x0,8
tick,0x7ffad1f6fb64,362705241,0,0x0,8
tick,0x7ffad1f6fb64,362720254,0,0x0,8
tick,0x7ffad1f6fb64,362736267,0,0x0,8
tick,0x7ffad1f6fb64,362751311,0,0x0,8
tick,0x7ffad1f6fb64,362766295,0,0x0,8
tick,0x7ffad1f6fb64,362782323,0,0x0,8
tick,0x7ffad1f6fb64,362798334,0,0x0,8
tick,0x7ffad1f6fb64,362814353,0,0x0,8
tick,0x7ffad1f6fb64,362830366,0,0x0,8
tick,0x7ffad1f6fb64,362845384,0,0x0,8
tick,0x7ffad1f6fb64,362861397,0,0x0,8
tick,0x7ffad1f6fb64,362877413,0,0x0,8
tick,0x7ffad1f6fb64,362892420,0,0x0,8
tick,0x7ffad1f6fb64,362908428,0,0x0,8
tick,0x7ffad1f6fb64,362924428,0,0x0,8
tick,0x7ffad1f6fb64,362940457,0,0x0,8
tick,0x7ffad1f6fb64,362956480,0,0x0,8
tick,0x7ffad1f6fb64,362972501,0,0x0,8
tick,0x7ffad1f6fb64,362988513,0,0x0,8
tick,0x7ffad1f6fb64,363003513,0,0x0,8
tick,0x7ffad1f6fb64,363018540,0,0x0,8
tick,0x7ffad1f6fb64,363034564,0,0x0,8
tick,0x7ffad1f6fb64,363050635,0,0x0,8
tick,0x7ffad1f6fb64,363066571,0,0x0,8
tick,0x7ffad1f6fb64,363081606,0,0x0,8
tick,0x7ffad1f6fb64,363096638,0,0x0,8
tick,0x7ffad1f6fb64,363111641,0,0x0,8
tick,0x7ffad1f6fb64,363127638,0,0x0,8
tick,0x7ffad1f6fb64,363143636,0,0x0,8
tick,0x7ffad1f6fb64,363158658,0,0x0,8
tick,0x7ffad1f6fb64,363174697,0,0x0,8
tick,0x7ffad1f6fb64,363189735,0,0x0,8
tick,0x7ffad1f6fb64,363205713,0,0x0,8
tick,0x7ffad1f6fb64,363221726,0,0x0,8
tick,0x7ffad1f6fb64,363237748,0,0x0,8
tick,0x7ffad1f6fb64,363253773,0,0x0,8
tick,0x7ffad1f6fb64,363268782,0,0x0,8
tick,0x7ffad1f6fb64,363284788,0,0x0,8
tick,0x7ffad1f6fb64,363299789,0,0x0,8
tick,0x7ffad1f6fb64,363315805,0,0x0,8
tick,0x7ffad1f6fb64,363330821,0,0x0,8
tick,0x7ffad1f6fb64,363345843,0,0x0,8
tick,0x7ffad1f6fb64,363360847,0,0x0,8
tick,0x7ffad1f6fb64,363376868,0,0x0,8
tick,0x7ffad1f6fb64,363392880,0,0x0,8
tick,0x7ffad1f6fb64,363408899,0,0x0,8
tick,0x7ffad1f6fb64,363424917,0,0x0,8
tick,0x7ffad1f6fb64,363440935,0,0x0,8
tick,0x7ffad1f6fb64,363455937,0,0x0,8
tick,0x7ffad1f6fb64,363471950,0,0x0,8
tick,0x7ffad1f6fb64,363486966,0,0x0,8
tick,0x7ffad1f6fb64,363501969,0,0x0,8
tick,0x7ffad1f6fb64,363517990,0,0x0,8
tick,0x7ffad1f6fb64,363532996,0,0x0,8
tick,0x7ffad1f6fb64,363549023,0,0x0,8
tick,0x7ffad1f6fb64,363565008,0,0x0,8
tick,0x7ffad1f6fb64,363580034,0,0x0,8
tick,0x7ffad1f6fb64,363596061,0,0x0,8
tick,0x7ffad1f6fb64,363612105,0,0x0,8
tick,0x7ffad1f6fb64,363627165,0,0x0,8
tick,0x7ffad1f6fb64,363643098,0,0x0,8
tick,0x7ffad1f6fb64,363659188,0,0x0,8
tick,0x7ffad1f6fb64,363674155,0,0x0,8
tick,0x7ffad1f6fb64,363690156,0,0x0,8
tick,0x7ffad1f6fb64,363705147,0,0x0,8
tick,0x7ffad1f6fb64,363720169,0,0x0,8
tick,0x7ffad1f6fb64,363736183,0,0x0,8
tick,0x7ffad1f6fb64,363752191,0,0x0,8
tick,0x7ffad1f6fb64,363768235,0,0x0,8
tick,0x7ffad1f6fb64,363783218,0,0x0,8
tick,0x7ffad1f6fb64,363798242,0,0x0,8
tick,0x7ffad1f6fb64,363813261,0,0x0,8
tick,0x7ffad1f6fb64,363829271,0,0x0,8
tick,0x7ffad1f6fb64,363845311,0,0x0,8
tick,0x7ffad1f6fb64,363860294,0,0x0,8
tick,0x7ffad1f6fb64,363876329,0,0x0,8
tick,0x7ffad1f6fb64,363891331,0,0x0,8
tick,0x7ffad1f6fb64,363906331,0,0x0,8
tick,0x7ffad1f6fb64,363922364,0,0x0,8
tick,0x7ffad1f6fb64,363937386,0,0x0,8
tick,0x7ffad1f6fb64,363952372,0,0x0,8
tick,0x7ffad1f6fb64,363968405,0,0x0,8
tick,0x7ffad1f6fb64,363984415,0,0x0,8
tick,0x7ffad1f6fb64,363999430,0,0x0,8
tick,0x7ffad1f6fb64,364015447,0,0x0,8
tick,0x7ffad1f6fb64,364031455,0,0x0,8
tick,0x7ffad1f6fb64,364047462,0,0x0,8
tick,0x7ffad1f6fb64,364062489,0,0x0,8
tick,0x7ffad1f6fb64,364077547,0,0x0,8
tick,0x7ffad1f6fb64,364093507,0,0x0,8
tick,0x7ffad1f6fb64,364109530,0,0x0,8
tick,0x7ffad1f6fb64,364125529,0,0x0,8
tick,0x7ffad1f6fb64,364140574,0,0x0,8
tick,0x7ffad1f6fb64,364156574,0,0x0,8
tick,0x7ffad1f6fb64,364172597,0,0x0,8
tick,0x7ffad1f6fb64,364188601,0,0x0,8
tick,0x7ffad1f6fb64,364203614,0,0x0,8
tick,0x7ffad1f6fb64,364219637,0,0x0,8
tick,0x7ffad1f6fb64,364235646,0,0x0,8
tick,0x7ffad1f6fb64,364250660,0,0x0,8
tick,0x7ffad1f6fb64,364266679,0,0x0,8
tick,0x7ffad1f6fb64,364281714,0,0x0,8
tick,0x7ffad1f6fb64,364296709,0,0x0,8
tick,0x7ffad1f6fb64,364312745,0,0x0,8
tick,0x7ffad1f6fb64,364328722,0,0x0,8
tick,0x7ffad1f6fb64,364343734,0,0x0,8
tick,0x7ffad1f6fb64,364359741,0,0x0,8
tick,0x7ffad1f6fb64,364375768,0,0x0,8
tick,0x7ffad1f6fb64,364391789,0,0x0,8
tick,0x7ffad1f6fb64,364407785,0,0x0,8
tick,0x7ffad1f6fb64,364423815,0,0x0,8
tick,0x7ffad1f6fb64,364438834,0,0x0,8
tick,0x7ffad1f6fb64,364453835,0,0x0,8
tick,0x7ffad1f6fb64,364469855,0,0x0,8
tick,0x7ffad1f6fb64,364485878,0,0x0,8
tick,0x7ffad1f6fb64,364500887,0,0x0,8
tick,0x7ffad1f6fb64,364516894,0,0x0,8
tick,0x7ffad1f6fb64,364531911,0,0x0,8
tick,0x7ffad1f6fb64,364547930,0,0x0,8
tick,0x7ffad1f6fb64,364563945,0,0x0,8
tick,0x7ffad1f6fb64,364579963,0,0x0,8
tick,0x7ffad1f6fb64,364595983,0,0x0,8
tick,0x7ffad1f6fb64,364612009,0,0x0,8
tick,0x7ffad1f6fb64,364626997,0,0x0,8
tick,0x7ffad1f6fb64,364642039,0,0x0,8
tick,0x7ffad1f6fb64,364657034,0,0x0,8
tick,0x7ffad1f6fb64,364672058,0,0x0,8
tick,0x7ffad1f6fb64,364687056,0,0x0,8
tick,0x7ffad1f6fb64,364703066,0,0x0,8
tick,0x7ffad1f6fb64,364718092,0,0x0,8
tick,0x7ffad1f6fb64,364734087,0,0x0,8
tick,0x7ffad1f6fb64,364750119,0,0x0,8
tick,0x7ffad1f6fb64,364765124,0,0x0,8
tick,0x7ffad1f6fb64,364780137,0,0x0,8
tick,0x7ffad1f6fb64,364795173,0,0x0,8
tick,0x7ffad1f6fb64,364810190,0,0x0,8
tick,0x7ffad1f6fb64,364826192,0,0x0,8
tick,0x7ffad1f6fb64,364842188,0,0x0,8
tick,0x7ffad1f6fb64,364857222,0,0x0,8
tick,0x7ffad1f6fb64,364873229,0,0x0,8
tick,0x7ffad1f6fb64,364889229,0,0x0,8
tick,0x7ffad1f6fb64,364904298,0,0x0,8
tick,0x7ffad1f6fb64,364920274,0,0x0,8
tick,0x7ffad1f6fb64,364936286,0,0x0,8
tick,0x7ffad1f6fb64,364951285,0,0x0,8
tick,0x7ffad1f6fb64,364966298,0,0x0,8
tick,0x7ffad1f6fb64,364981321,0,0x0,8
tick,0x7ffad1f6fb64,364996352,0,0x0,8
tick,0x7ffad1f6fb64,365011340,0,0x0,8
tick,0x7ffad1f6fb64,365027358,0,0x0,8
tick,0x7ffad1f6fb64,365042399,0,0x0,8
tick,0x7ffad1f6fb64,365058388,0,0x0,8
tick,0x7ffad1f6fb64,365074408,0,0x0,8
tick,0x7ffad1f6fb64,365089432,0,0x0,8
tick,0x7ffad1f6fb64,365105454,0,0x0,8
tick,0x7ffad1f6fb64,365121442,0,0x0,8
tick,0x7ffad1f6fb64,365136459,0,0x0,8
tick,0x7ffad1f6fb64,365151488,0,0x0,8
tick,0x7ffad1f6fb64,365166503,0,0x0,8
tick,0x7ffad1f6fb64,365181534,0,0x0,8
tick,0x7ffad1f6fb64,365196526,0,0x0,8
tick,0x7ffad1f6fb64,365212516,0,0x0,8
tick,0x7ffad1f6fb64,365227555,0,0x0,8
tick,0x7ffad1f6fb64,365242563,0,0x0,8
tick,0x7ffad1f6fb64,365258568,0,0x0,8
tick,0x7ffad1f6fb64,365274593,0,0x0,8
tick,0x7ffad1f6fb64,365290613,0,0x0,8
tick,0x7ffad1f6fb64,365305682,0,0x0,8
tick,0x7ffad1f6fb64,365320645,0,0x0,8
tick,0x7ffad1f6fb64,365335641,0,0x0,8
tick,0x7ffad1f6fb64,365350658,0,0x0,8
tick,0x7ffad1f6fb64,365366674,0,0x0,8
tick,0x7ffad1f6fb64,365381668,0,0x0,8
tick,0x7ffad1f6fb64,365396705,0,0x0,8
tick,0x7ffad1f6fb64,365412719,0,0x0,8
tick,0x7ffad1f6fb64,365428726,0,0x0,8
tick,0x7ffad1f6fb64,365444755,0,0x0,8
tick,0x7ffad1f6fb64,365460753,0,0x0,8
tick,0x7ffad1f6fb64,365475778,0,0x0,8
tick,0x7ffad1f6fb64,365491791,0,0x0,8
tick,0x7ffad1f6fb64,365507806,0,0x0,8
tick,0x7ffad1f6fb64,365523802,0,0x0,8
tick,0x7ffad1f6fb64,365539825,0,0x0,8
tick,0x7ffad1f6fb64,365554831,0,0x0,8
tick,0x7ffad1f6fb64,365569854,0,0x0,8
tick,0x7ffad1f6fb64,365584869,0,0x0,8
tick,0x7ffad1f6fb64,365600901,0,0x0,8
tick,0x7ffad1f6fb64,365616913,0,0x0,8
tick,0x7ffad1f6fb64,365631913,0,0x0,8
tick,0x7ffad1f6fb64,365647940,0,0x0,8
tick,0x7ffad1f6fb64,365662957,0,0x0,8
tick,0x7ffad1f6fb64,365678962,0,0x0,8
tick,0x7ffad1f6fb64,365695010,0,0x0,8
tick,0x7ffad1f6fb64,365709975,0,0x0,8
tick,0x7ffad1f6fb64,365725986,0,0x0,8
tick,0x7ffad1f6fb64,365741020,0,0x0,8
tick,0x7ffad1f6fb64,365757019,0,0x0,8
tick,0x7ffad1f6fb64,365773026,0,0x0,8
tick,0x7ffad1f6fb64,365789063,0,0x0,8
tick,0x7ffad1f6fb64,365805085,0,0x0,8
tick,0x7ffad1f6fb64,365820089,0,0x0,8
tick,0x7ffad1f6fb64,365835116,0,0x0,8
tick,0x7ffad1f6fb64,365850119,0,0x0,8
tick,0x7ffad1f6fb64,365866118,0,0x0,8
tick,0x7ffad1f6fb64,365881159,0,0x0,8
tick,0x7ffad1f6fb64,365896148,0,0x0,8
tick,0x7ffad1f6fb64,365911192,0,0x0,8
tick,0x7ffad1f6fb64,365926183,0,0x0,8
tick,0x7ffad1f6fb64,365942195,0,0x0,8
tick,0x7ffad1f6fb64,365958216,0,0x0,8
tick,0x7ffad1f6fb64,365974244,0,0x0,8
tick,0x7ffad1f6fb64,365990262,0,0x0,8
tick,0x7ffad1f6fb64,366006266,0,0x0,8
tick,0x7ffad1f6fb64,366021291,0,0x0,8
tick,0x7ffad1f6fb64,366036294,0,0x0,8
tick,0x7ffad1f6fb64,366052282,0,0x0,8
tick,0x7ffad1f6fb64,366068341,0,0x0,8
tick,0x7ffad1f6fb64,366084322,0,0x0,8
tick,0x7ffad1f6fb64,366099347,0,0x0,8
tick,0x7ffad1f6fb64,366114349,0,0x0,8
tick,0x7ffad1f6fb64,366130442,0,0x0,8
tick,0x7ffad1f6fb64,366145402,0,0x0,8
tick,0x7ffad1f6fb64,366161406,0,0x0,8
tick,0x7ffad1f6fb64,366177519,0,0x0,8
tick,0x7ffad1f6fb64,366193439,0,0x0,8
tick,0x7ffad1f6fb64,366208439,0,0x0,8
tick,0x7ffad1f6fb64,366224460,0,0x0,8
tick,0x7ffad1f6fb64,366240596,0,0x0,8
tick,0x7ffad1f6fb64,366255500,0,0x0,8
tick,0x7ffad1f6fb64,366271522,0,0x0,8
tick,0x7ffad1f6fb64,366287534,0,0x0,8
tick,0x7ffad1f6fb64,366303538,0,0x0,8
tick,0x7ffad1f6fb64,366319552,0,0x0,8
tick,0x7ffad1f6fb64,366335622,0,0x0,8
tick,0x7ffad1f6fb64,366350629,0,0x0,8
tick,0x7ffad1f6fb64,366366638,0,0x0,8
tick,0x7ffad1f6fb64,366381607,0,0x0,8
tick,0x7ffad1f6fb64,366397661,0,0x0,8
tick,0x7ffad1f6fb64,366413631,0,0x0,8
tick,0x7ffad1f6fb64,366428633,0,0x0,8
tick,0x7ffad1f6fb64,366444669,0,0x0,8
tick,0x7ffad1f6fb64,366460708,0,0x0,8
tick,0x7ffad1f6fb64,366475737,0,0x0,8
tick,0x7ffad1f6fb64,366490736,0,0x0,8
tick,0x7ffad1f6fb64,366506712,0,0x0,8
tick,0x7ffad1f6fb64,366521718,0,0x0,8
tick,0x7ffad1f6fb64,366537748,0,0x0,8
tick,0x7ffad1f6fb64,366553764,0,0x0,8
tick,0x7ffad1f6fb64,366569790,0,0x0,8
tick,0x7ffad1f6fb64,366584799,0,0x0,8
tick,0x7ffad1f6fb64,366599828,0,0x0,8
tick,0x7ffad1f6fb64,366615808,0,0x0,8
tick,0x7ffad1f6fb64,366630814,0,0x0,8
tick,0x7ffad1f6fb64,366645876,0,0x0,8
tick,0x7ffad1f6fb64,366661881,0,0x0,8
tick,0x7ffad1f6fb64,366677891,0,0x0,8
tick,0x7ffad1f6fb64,366692923,0,0x0,8
tick,0x7ffad1f6fb64,366707913,0,0x0,8
tick,0x7ffad1f6fb64,366723918,0,0x0,8
tick,0x7ffad1f6fb64,366738970,0,0x0,8
tick,0x7ffad1f6fb64,366753983,0,0x0,8
tick,0x7ffad1f6fb64,366769958,0,0x0,8
tick,0x7ffad1f6fb64,366784982,0,0x0,8
tick,0x7ffad1f6fb64,366800981,0,0x0,8
tick,0x7ffad1f6fb64,366815996,0,0x0,8
tick,0x7ffad1f6fb64,366831999,0,0x0,8
tick,0x7ffad1f6fb64,366847075,0,0x0,8
tick,0x7ffad1f6fb64,366862022,0,0x0,8
tick,0x7ffad1f6fb64,366878051,0,0x0,8
tick,0x7ffad1f6fb64,366894076,0,0x0,8
tick,0x7ffad1f6fb64,366910091,0,0x0,8
tick,0x7ffad1f6fb64,366925106,0,0x0,8
tick,0x7ffad1f6fb64,366940126,0,0x0,8
tick,0x7ffad1f6fb64,366956119,0,0x0,8
tick,0x7ffad1f6fb64,366972133,0,0x0,8
tick,0x7ffad1f6fb64,366988164,0,0x0,8
tick,0x7ffad1f6fb64,367003170,0,0x0,8
tick,0x7ffad1f6fb64,367018176,0,0x0,8
tick,0x7ffad1f6fb64,367034198,0,0x0,8
tick,0x7ffad1f6fb64,367049266,0,0x0,8
tick,0x7ffad1f6fb64,367064236,0,0x0,8
tick,0x7ffad1f6fb64,367080251,0,0x0,8
tick,0x7ffad1f6fb64,367095273,0,0x0,8
tick,0x7ffad1f6fb64,367111270,0,0x0,8
tick,0x7ffad1f6fb64,367126314,0,0x0,8
tick,0x7ffad1f6fb64,367142312,0,0x0,8
tick,0x7ffad1f6fb64,367158321,0,0x0,8
tick,0x7ffad1f6fb64,367173337,0,0x0,8
tick,0x7ffad1f6fb64,367189367,0,0x0,8
tick,0x7ffad1f6fb64,367205390,0,0x0,8
tick,0x7ffad1f6fb64,367220441,0,0x0,8
tick,0x7ffad1f6fb64,367236444,0,0x0,8
tick,0x7ffad1f6fb64,367252400,0,0x0,8
tick,0x7ffad1f6fb64,367268409,0,0x0,8
tick,0x7ffad1f6fb64,367283445,0,0x0,8
tick,0x7ffad1f6fb64,367299491,0,0x0,8
tick,0x7ffad1f6fb64,367315453,0,0x0,8
tick,0x7ffad1f6fb64,367330473,0,0x0,8
tick,0x7ffad1f6fb64,367345487,0,0x0,8
tick,0x7ffad1f6fb64,367361569,0,0x0,8
tick,0x7ffad1f6fb64,367377555,0,0x0,8
tick,0x7ffad1f6fb64,367392683,0,0x0,8
tick,0x7ffad1f6fb64,367408552,0,0x0,8
tick,0x7ffad1f6fb64,367424557,0,0x0,8
tick,0x7ffad1f6fb64,367439564,0,0x0,8
tick,0x7ffad1f6fb64,367455565,0,0x0,8
tick,0x7ffad1f6fb64,367471597,0,0x0,8
tick,0x7ffad1f6fb64,367487621,0,0x0,8
tick,0x7ffad1f6fb64,367502618,0,0x0,8
tick,0x7ffad1f6fb64,367517633,0,0x0,8
tick,0x7ffad1f6fb64,367533646,0,0x0,8
tick,0x7ffad1f6fb64,367549668,0,0x0,8
tick,0x7ffad1f6fb64,367565666,0,0x0,8
tick,0x7ffad1f6fb64,367581708,0,0x0,8
tick,0x7ffad1f6fb64,367596750,0,0x0,8
tick,0x7ffad1f6fb64,367612763,0,0x0,8
tick,0x7ffad1f6fb64,367628739,0,0x0,8
tick,0x7ffad1f6fb64,367644743,0,0x0,8
tick,0x7ffad1f6fb64,367659833,0,0x0,8
tick,0x7ffad1f6fb64,367675777,0,0x0,8
tick,0x7ffad1f6fb64,367691811,0,0x0,8
tick,0x7ffad1f6fb64,367706833,0,0x0,8
tick,0x7ffad1f6fb64,367722843,0,0x0,8
tick,0x7ffad1f6fb64,367738839,0,0x0,8
tick,0x7ffad1f6fb64,367753868,0,0x0,8
tick,0x7ffad1f6fb64,367769871,0,0x0,8
tick,0x7ffad1f6fb64,367785882,0,0x0,8
tick,0x7ffad1f6fb64,367801895,0,0x0,8
tick,0x7ffad1f6fb64,367817908,0,0x0,8
tick,0x7ffad1f6fb64,367833958,0,0x0,8
tick,0x7ffad1f6fb64,367848952,0,0x0,8
tick,0x7ffad1f6fb64,367864956,0,0x0,8
tick,0x7ffad1f6fb64,367879959,0,0x0,8
tick,0x7ffad1f6fb64,367896014,0,0x0,8
tick,0x7ffad1f6fb64,367911990,0,0x0,8
tick,0x7ffad1f6fb64,367927996,0,0x0,8
tick,0x7ffad1f6fb64,367943044,0,0x0,8
tick,0x7ffad1f6fb64,367959044,0,0x0,8
tick,0x7ffad1f6fb64,367975057,0,0x0,8
tick,0x7ffad1f6fb64,367990086,0,0x0,8
tick,0x7ffad1f6fb64,368006076,0,0x0,8
tick,0x7ffad1f6fb64,368021135,0,0x0,8
tick,0x7ffad1f6fb64,368036118,0,0x0,8
tick,0x7ffad1f6fb64,368051123,0,0x0,8
tick,0x7ffad1f6fb64,368066147,0,0x0,8
tick,0x7ffad1f6fb64,368081156,0,0x0,8
tick,0x7ffad1f6fb64,368096189,0,0x0,8
tick,0x7ffad1f6fb64,368111160,0,0x0,8
tick,0x7ffad1f6fb64,368127376,0,0x0,8
tick,0x7ffad1f6fb64,368142199,0,0x0,8
tick,0x7ffad1f6fb64,368157219,0,0x0,8
tick,0x7ffad1f6fb64,368173240,0,0x0,8
tick,0x7ffad1f6fb64,368189244,0,0x0,8
tick,0x7ffad1f6fb64,368204262,0,0x0,8
tick,0x7ffad1f6fb64,368219495,0,0x0,8
tick,0x7ffad1f6fb64,368235280,0,0x0,8
tick,0x7ffad1f6fb64,368250304,0,0x0,8
tick,0x7ffad1f6fb64,368265316,0,0x0,8
tick,0x7ffad1f6fb64,368280328,0,0x0,8
tick,0x7ffad1f6fb64,368295386,0,0x0,8
tick,0x7ffad1f6fb64,368311386,0,0x0,8
tick,0x7ffad1f6fb64,368326415,0,0x0,8
tick,0x7ffad1f6fb64,368342410,0,0x0,8
tick,0x7ffad1f6fb64,368357395,0,0x0,8
tick,0x7ffad1f6fb64,368373447,0,0x0,8
tick,0x7ffad1f6fb64,368389437,0,0x0,8
tick,0x7ffad1f6fb64,368404443,0,0x0,8
tick,0x7ffad1f6fb64,368420462,0,0x0,8
tick,0x7ffad1f6fb64,368436560,0,0x0,8
tick,0x7ffad1f6fb64,368451470,0,0x0,8
tick,0x7ffad1f6fb64,368466487,0,0x0,8
tick,0x7ffad1f6fb64,368481511,0,0x0,8
tick,0x7ffad1f6fb64,368497523,0,0x0,8
tick,0x7ffad1f6fb64,368513580,0,0x0,8
tick,0x7ffad1f6fb64,368529566,0,0x0,8
tick,0x7ffad1f6fb64,368545564,0,0x0,8
tick,0x7ffad1f6fb64,368560582,0,0x0,8
tick,0x7ffad1f6fb64,368575599,0,0x0,8
tick,0x7ffad1f6fb64,368591623,0,0x0,8
tick,0x7ffad1f6fb64,368607618,0,0x0,8
tick,0x7ffad1f6fb64,368623648,0,0x0,8
tick,0x7ffad1f6fb64,368638683,0,0x0,8
tick,0x7ffad1f6fb64,368653732,0,0x0,8
tick,0x7ffad1f6fb64,368669721,0,0x0,8
tick,0x7ffad1f6fb64,368684698,0,0x0,8
tick,0x7ffad1f6fb64,368699802,0,0x0,8
tick,0x7ffad1f6fb64,368715741,0,0x0,8
tick,0x7ffad1f6fb64,368730782,0,0x0,8
tick,0x7ffad1f6fb64,368745775,0,0x0,8
tick,0x7ffad1f6fb64,368761772,0,0x0,8
tick,0x7ffad1f6fb64,368777807,0,0x0,8
tick,0x7ffad1f6fb64,368793838,0,0x0,8
tick,0x7ffad1f6fb64,368808875,0,0x0,8
tick,0x7ffad1f6fb64,368824864,0,0x0,8
tick,0x7ffad1f6fb64,368839887,0,0x0,8
tick,0x7ffad1f6fb64,368854897,0,0x0,8
tick,0x7ffad1f6fb64,368870876,0,0x0,8
tick,0x7ffad1f6fb64,368886930,0,0x0,8
tick,0x7ffad1f6fb64,368902913,0,0x0,8
tick,0x7ffad1f6fb64,368917937,0,0x0,8
tick,0x7ffad1f6fb64,368933932,0,0x0,8
tick,0x7ffad1f6fb64,368949951,0,0x0,8
tick,0x7ffad1f6fb64,368966007,0,0x0,8
tick,0x7ffad1f6fb64,368982002,0,0x0,8
tick,0x7ffad1f6fb64,368998002,0,0x0,8
tick,0x7ffad1f6fb64,369013004,0,0x0,8
tick,0x7ffad1f6fb64,369028052,0,0x0,8
tick,0x7ffad1f6fb64,369044019,0,0x0,8
tick,0x7ffad1f6fb64,369060054,0,0x0,8
tick,0x7ffad1f6fb64,369076078,0,0x0,8
tick,0x7ffad1f6fb64,369091092,0,0x0,8
tick,0x7ffad1f6fb64,369106078,0,0x0,8
tick,0x7ffad1f6fb64,369121093,0,0x0,8
tick,0x7ffad1f6fb64,369136109,0,0x0,8
tick,0x7ffad1f6fb64,369151141,0,0x0,8
tick,0x7ffad1f6fb64,369166147,0,0x0,8
tick,0x7ffad1f6fb64,369181188,0,0x0,8
tick,0x7ffad1f6fb64,369197172,0,0x0,8
tick,0x7ffad1f6fb64,369212190,0,0x0,8
tick,0x7ffad1f6fb64,369227205,0,0x0,8
tick,0x7ffad1f6fb64,369242236,0,0x0,8
tick,0x7ffad1f6fb64,369258214,0,0x0,8
tick,0x7ffad1f6fb64,369273254,0,0x0,8
tick,0x7ffad1f6fb64,369288240,0,0x0,8
tick,0x7ffad1f6fb64,369303269,0,0x0,8
tick,0x7ffad1f6fb64,369318290,0,0x0,8
tick,0x7ffad1f6fb64,369334300,0,0x0,8
tick,0x7ffad1f6fb64,369350298,0,0x0,8
tick,0x7ffad1f6fb64,369365314,0,0x0,8
tick,0x7ffad1f6fb64,369380344,0,0x0,8
tick,0x7ffad1f6fb64,369395379,0,0x0,8
tick,0x7ffad1f6fb64,369411361,0,0x0,8
tick,0x7ffad1f6fb64,369427385,0,0x0,8
tick,0x7ffad1f6fb64,369443393,0,0x0,8
tick,0x7ffad1f6fb64,369459411,0,0x0,8
tick,0x7ffad1f6fb64,369474434,0,0x0,8
tick,0x7ffad1f6fb64,369489428,0,0x0,8
tick,0x7ffad1f6fb64,369505449,0,0x0,8
tick,0x7ffad1f6fb64,369520465,0,0x0,8
tick,0x7ffad1f6fb64,369536487,0,0x0,8
tick,0x7ffad1f6fb64,369552477,0,0x0,8
tick,0x7ffad1f6fb64,369568516,0,0x0,8
tick,0x7ffad1f6fb64,369584516,0,0x0,8
tick,0x7ffad1f6fb64,369599546,0,0x0,8
tick,0x7ffad1f6fb64,369615560,0,0x0,8
tick,0x7ffad1f6fb64,369630565,0,0x0,8
tick,0x7ffad1f6fb64,369645577,0,0x0,8
tick,0x7ffad1f6fb64,369660614,0,0x0,8
tick,0x7ffad1f6fb64,369675610,0,0x0,8
tick,0x7ffad1f6fb64,369690618,0,0x0,8
tick,0x7ffad1f6fb64,369705648,0,0x0,8
tick,0x7ffad1f6fb64,369721673,0,0x0,8
tick,0x7ffad1f6fb64,369737649,0,0x0,8
tick,0x7ffad1f6fb64,369753709,0,0x0,8
tick,0x7ffad1f6fb64,369769725,0,0x0,8
tick,0x7ffad1f6fb64,369785697,0,0x0,8
tick,0x7ffad1f6fb64,369800712,0,0x0,8
tick,0x7ffad1f6fb64,369816732,0,0x0,8
tick,0x7ffad1f6fb64,369831761,0,0x0,8
tick,0x7ffad1f6fb64,369847831,0,0x0,8
tick,0x7ffad1f6fb64,369862851,0,0x0,8
tick,0x7ffad1f6fb64,369877780,0,0x0,8
tick,0x7ffad1f6fb64,369892809,0,0x0,8
tick,0x7ffad1f6fb64,369907820,0,0x0,8
tick,0x7ffad1f6fb64,369923819,0,0x0,8
tick,0x7ffad1f6fb64,369940085,0,0x0,8
tick,0x7ffad1f6fb64,369955869,0,0x0,8
tick,0x7ffad1f6fb64,369970894,0,0x0,8
tick,0x7ffad1f6fb64,369986913,0,0x0,8
tick,0x7ffad1f6fb64,370001935,0,0x0,8
tick,0x7ffad1f6fb64,370017938,0,0x0,8
tick,0x7ffad1f6fb64,370032918,0,0x0,8
tick,0x7ffad1f6fb64,370048976,0,0x0,8
tick,0x7ffad1f6fb64,370064960,0,0x0,8
tick,0x7ffad1f6fb64,370079989,0,0x0,8
tick,0x7ffad1f6fb64,370094985,0,0x0,8
tick,0x7ffad1f6fb64,370111009,0,0x0,8
tick,0x7ffad1f6fb64,370127040,0,0x0,8
tick,0x7ffad1f6fb64,370143033,0,0x0,8
tick,0x7ffad1f6fb64,370158068,0,0x0,8
tick,0x7ffad1f6fb64,370174068,0,0x0,8
tick,0x7ffad1f6fb64,370190074,0,0x0,8
tick,0x7ffad1f6fb64,370206153,0,0x0,8
tick,0x7ffad1f6fb64,370221123,0,0x0,8
tick,0x7ffad1f6fb64,370237117,0,0x0,8
tick,0x7ffad1f6fb64,370253123,0,0x0,8
tick,0x7ffad1f6fb64,370268156,0,0x0,8
tick,0x7ffad1f6fb64,370284146,0,0x0,8
tick,0x7ffad1f6fb64,370299182,0,0x0,8
tick,0x7ffad1f6fb64,370314221,0,0x0,8
tick,0x7ffad1f6fb64,370330223,0,0x0,8
tick,0x7ffad1f6fb64,370346224,0,0x0,8
tick,0x7ffad1f6fb64,370362227,0,0x0,8
tick,0x7ffad1f6fb64,370377294,0,0x0,8
tick,0x7ffad1f6fb64,370392284,0,0x0,8
tick,0x7ffad1f6fb64,370408272,0,0x0,8
tick,0x7ffad1f6fb64,370423323,0,0x0,8
tick,0x7ffad1f6fb64,370439366,0,0x0,8
tick,0x7ffad1f6fb64,370454312,0,0x0,8
tick,0x7ffad1f6fb64,370470328,0,0x0,8
tick,0x7ffad1f6fb64,370485363,0,0x0,8
tick,0x7ffad1f6fb64,370501356,0,0x0,8
tick,0x7ffad1f6fb64,370517372,0,0x0,8
tick,0x7ffad1f6fb64,370532378,0,0x0,8
tick,0x7ffad1f6fb64,370548380,0,0x0,8
tick,0x7ffad1f6fb64,370563408,0,0x0,8
tick,0x7ffad1f6fb64,370578419,0,0x0,8
tick,0x7ffad1f6fb64,370594462,0,0x0,8
tick,0x7ffad1f6fb64,370610433,0,0x0,8
tick,0x7ffad1f6fb64,370625504,0,0x0,8
tick,0x7ffad1f6fb64,370640496,0,0x0,8
tick,0x7ffad1f6fb64,370656484,0,0x0,8
tick,0x7ffad1f6fb64,370671502,0,0x0,8
tick,0x7ffad1f6fb64,370687540,0,0x0,8
tick,0x7ffad1f6fb64,370703525,0,0x0,8
tick,0x7ffad1f6fb64,370719559,0,0x0,8
tick,0x7ffad1f6fb64,370735572,0,0x0,8
tick,0x7ffad1f6fb64,370750572,0,0x0,8
tick,0x7ffad1f6fb64,370766571,0,0x0,8
tick,0x7ffad1f6fb64,370781631,0,0x0,8
tick,0x7ffad1f6fb64,370797621,0,0x0,8
tick,0x7ffad1f6fb64,370812657,0,0x0,8
tick,0x7ffad1f6fb64,370828634,0,0x0,8
tick,0x7ffad1f6fb64,370843673,0,0x0,8
tick,0x7ffad1f6fb64,370858671,0,0x0,8
tick,0x7ffad1f6fb64,370874717,0,0x0,8
tick,0x7ffad1f6fb64,370890704,0,0x0,8
tick,0x7ffad1f6fb64,370906723,0,0x0,8
tick,0x7ffad1f6fb64,370921757,0,0x0,8
tick,0x7ffad1f6fb64,370937796,0,0x0,8
tick,0x7ffad1f6fb64,370953842,0,0x0,8
tick,0x7ffad1f6fb64,370968775,0,0x0,8
tick,0x7ffad1f6fb64,370984794,0,0x0,8
tick,0x7ffad1f6fb64,370999795,0,0x0,8
tick,0x7ffad1f6fb64,371015841,0,0x0,8
tick,0x7ffad1f6fb64,371031836,0,0x0,8
tick,0x7ffad1f6fb64,371046854,0,0x0,8
tick,0x7ffad1f6fb64,371061882,0,0x0,8
tick,0x7ffad1f6fb64,371076926,0,0x0,8
tick,0x7ffad1f6fb64,371091903,0,0x0,8
tick,0x7ffad1f6fb64,371107927,0,0x0,8
tick,0x7ffad1f6fb64,371122926,0,0x0,8
tick,0x7ffad1f6fb64,371138946,0,0x0,8
tick,0x7ffad1f6fb64,371153966,0,0x0,8
tick,0x7ffad1f6fb64,371169957,0,0x0,8
tick,0x7ffad1f6fb64,371185975,0,0x0,8
tick,0x7ffad1f6fb64,371200983,0,0x0,8
tick,0x7ffad1f6fb64,371216995,0,0x0,8
tick,0x7ffad1f6fb64,371233014,0,0x0,8
tick,0x7ffad1f6fb64,371248059,0,0x0,8
tick,0x7ffad1f6fb64,371264033,0,0x0,8
tick,0x7ffad1f6fb64,371280048,0,0x0,8
tick,0x7ffad1f6fb64,371296093,0,0x0,8
tick,0x7ffad1f6fb64,371311072,0,0x0,8
tick,0x7ffad1f6fb64,371327305,0,0x0,8
tick,0x7ffad1f6fb64,371343118,0,0x0,8
tick,0x7ffad1f6fb64,371358138,0,0x0,8
tick,0x7ffad1f6fb64,371373148,0,0x0,8
tick,0x7ffad1f6fb64,371389168,0,0x0,8
tick,0x7ffad1f6fb64,371405160,0,0x0,8
tick,0x7ffad1f6fb64,371420184,0,0x0,8
tick,0x7ffad1f6fb64,371436206,0,0x0,8
tick,0x7ffad1f6fb64,371452249,0,0x0,8
tick,0x7ffad1f6fb64,371468243,0,0x0,8
tick,0x7ffad1f6fb64,371483244,0,0x0,8
tick,0x7ffad1f6fb64,371498262,0,0x0,8
tick,0x7ffad1f6fb64,371514277,0,0x0,8
tick,0x7ffad1f6fb64,371530292,0,0x0,8
tick,0x7ffad1f6fb64,371546289,0,0x0,8
tick,0x7ffad1f6fb64,371561313,0,0x0,8
tick,0x7ffad1f6fb64,371576341,0,0x0,8
tick,0x7ffad1f6fb64,371591395,0,0x0,8
tick,0x7ffad1f6fb64,371607347,0,0x0,8
tick,0x7ffad1f6fb64,371622363,0,0x0,8
tick,0x7ffad1f6fb64,371637399,0,0x0,8
tick,0x7ffad1f6fb64,371652403,0,0x0,8
tick,0x7ffad1f6fb64,371667415,0,0x0,8
tick,0x7ffad1f6fb64,371682451,0,0x0,8
tick,0x7ffad1f6fb64,371698471,0,0x0,8
tick,0x7ffad1f6fb64,371714516,0,0x0,8
tick,0x7ffad1f6fb64,371730493,0,0x0,8
tick,0x7ffad1f6fb64,371745495,0,0x0,8
tick,0x7ffad1f6fb64,371761510,0,0x0,8
tick,0x7ffad1f6fb64,371777564,0,0x0,8
tick,0x7ffad1f6fb64,371793564,0,0x0,8
tick,0x7ffad1f6fb64,371808569,0,0x0,8
tick,0x7ffad1f6fb64,371824713,0,0x0,8
tick,0x7ffad1f6fb64,371840091,0,0x0,8
tick,0x7ffad1f6fb64,371855158,0,0x0,8
tick,0x7ffad1f6fb64,371871152,0,0x0,8
tick,0x7ffad1f6fb64,371887149,0,0x0,8
tick,0x7ffad1f6fb64,371902133,0,0x0,8
tick,0x7ffad1f6fb64,371917168,0,0x0,8
tick,0x7ffad1f6fb64,371933172,0,0x0,8
tick,0x7ffad1f6fb64,371949182,0,0x0,8
tick,0x7ffad1f6fb64,371965211,0,0x0,8
tick,0x7ffad1f6fb64,371980213,0,0x0,8
tick,0x7ffad1f6fb64,371995257,0,0x0,8
tick,0x7ffad1f6fb64,372011260,0,0x0,8
tick,0x7ffad1f6fb64,372027266,0,0x0,8
tick,0x7ffad1f6fb64,372042272,0,0x0,8
tick,0x7ffad1f6fb64,372058296,0,0x0,8
tick,0x7ffad1f6fb64,372074307,0,0x0,8
tick,0x7ffad1f6fb64,372089305,0,0x0,8
tick,0x7ffad1f6fb64,372104329,0,0x0,8
tick,0x7ffad1f6fb64,372119380,0,0x0,8
tick,0x7ffad1f6fb64,372134458,0,0x0,8
tick,0x7ffad1f6fb64,372150383,0,0x0,8
tick,0x7ffad1f6fb64,372166365,0,0x0,8
tick,0x7ffad1f6fb64,372181392,0,0x0,8
tick,0x7ffad1f6fb64,372196475,0,0x0,8
tick,0x7ffad1f6fb64,372211426,0,0x0,8
tick,0x7ffad1f6fb64,372227504,0,0x0,8
tick,0x7ffad1f6fb64,372243503,0,0x0,8
tick,0x7ffad1f6fb64,372259536,0,0x0,8
tick,0x7ffad1f6fb64,372274596,0,0x0,8
tick,0x7ffad1f6fb64,372290627,0,0x0,8
tick,0x7ffad1f6fb64,372306601,0,0x0,8
tick,0x7ffad1f6fb64,372321706,0,0x0,8
tick,0x7ffad1f6fb64,372337632,0,0x0,8
tick,0x7ffad1f6fb64,372352648,0,0x0,8
tick,0x7ffad1f6fb64,372367657,0,0x0,8
tick,0x7ffad1f6fb64,372382665,0,0x0,8
tick,0x7ffad1f6fb64,372397678,0,0x0,8
tick,0x7ffad1f6fb64,372412689,0,0x0,8
tick,0x7ffad1f6fb64,372428675,0,0x0,8
tick,0x7ffad1f6fb64,372443738,0,0x0,8
tick,0x7ffad1f6fb64,372459709,0,0x0,8
tick,0x7ffad1f6fb64,372474766,0,0x0,8
tick,0x7ffad1f6fb64,372490742,0,0x0,8
tick,0x7ffad1f6fb64,372506750,0,0x0,8
tick,0x7ffad1f6fb64,372522781,0,0x0,8
tick,0x7ffad1f6fb64,372537771,0,0x0,8
tick,0x7ffad1f6fb64,372553852,0,0x0,8
tick,0x7ffad1f6fb64,372568820,0,0x0,8
tick,0x7ffad1f6fb64,372583813,0,0x0,8
tick,0x7ffad1f6fb64,372598839,0,0x0,8
tick,0x7ffad1f6fb64,372613890,0,0x0,8
tick,0x7ffad1f6fb64,372628905,0,0x0,8
tick,0x7ffad1f6fb64,372643897,0,0x0,8
tick,0x7ffad1f6fb64,372659920,0,0x0,8
tick,0x7ffad1f6fb64,372674917,0,0x0,8
tick,0x7ffad1f6fb64,372689988,0,0x0,8
tick,0x7ffad1f6fb64,372704928,0,0x0,8
tick,0x7ffad1f6fb64,372719934,0,0x0,8
tick,0x7ffad1f6fb64,372734968,0,0x0,8
tick,0x7ffad1f6fb64,372750047,0,0x0,8
tick,0x7ffad1f6fb64,372766062,0,0x0,8
tick,0x7ffad1f6fb64,372781067,0,0x0,8
tick,0x7ffad1f6fb64,372796365,0,0x0,8
tick,0x7ffad1f6fb64,372812064,0,0x0,8
tick,0x7ffad1f6fb64,372827053,0,0x0,8
tick,0x7ffad1f6fb64,372842080,0,0x0,8
tick,0x7ffad1f6fb64,372857079,0,0x0,8
tick,0x7ffad1f6fb64,372873152,0,0x0,8
tick,0x7ffad1f6fb64,372889372,0,0x0,8
tick,0x7ffad1f6fb64,372904136,0,0x0,8
tick,0x7ffad1f6fb64,372919141,0,0x0,8
tick,0x7ffad1f6fb64,372934147,0,0x0,8
tick,0x7ffad1f6fb64,372949326,0,0x0,8
tick,0x7ffad1f6fb64,372964163,0,0x0,8
tick,0x7ffad1f6fb64,372980213,0,0x0,8
tick,0x7ffad1f6fb64,372995228,0,0x0,8
tick,0x7ffad1f6fb64,373010210,0,0x0,8
tick,0x7ffad1f6fb64,373025222,0,0x0,8
tick,0x7ffad1f6fb64,373040232,0,0x0,8
tick,0x7ffad1f6fb64,373056234,0,0x0,8
tick,0x7ffad1f6fb64,373071285,0,0x0,8
tick,0x7ffad1f6fb64,373086306,0,0x0,8
tick,0x7ffad1f6fb64,373101304,0,0x0,8
tick,0x7ffad1f6fb64,373117284,0,0x0,8
tick,0x7ffad1f6fb64,373132302,0,0x0,8
tick,0x7ffad1f6fb64,373148341,0,0x0,8
tick,0x7ffad1f6fb64,373163364,0,0x0,8
tick,0x7ffad1f6fb64,373178364,0,0x0,8
tick,0x7ffad1f6fb64,373194389,0,0x0,8
tick,0x7ffad1f6fb64,373209381,0,0x0,8
tick,0x7ffad1f6fb64,373224405,0,0x0,8
tick,0x7ffad1f6fb64,373239422,0,0x0,8
tick,0x7ffad1f6fb64,373255450,0,0x0,8
tick,0x7ffad1f6fb64,373271460,0,0x0,8
tick,0x7ffad1f6fb64,373286458,0,0x0,8
tick,0x7ffad1f6fb64,373302514,0,0x0,8
tick,0x7ffad1f6fb64,373317508,0,0x0,8
tick,0x7ffad1f6fb64,373333619,0,0x0,8
tick,0x7ffad1f6fb64,373348523,0,0x0,8
tick,0x7ffad1f6fb64,373364545,0,0x0,8
tick,0x7ffad1f6fb64,373379538,0,0x0,8
tick,0x7ffad1f6fb64,373395567,0,0x0,8
tick,0x7ffad1f6fb64,373410587,0,0x0,8
tick,0x7ffad1f6fb64,373425634,0,0x0,8
tick,0x7ffad1f6fb64,373440603,0,0x0,8
tick,0x7ffad1f6fb64,373456608,0,0x0,8
tick,0x7ffad1f6fb64,373471628,0,0x0,8
tick,0x7ffad1f6fb64,373487673,0,0x0,8
tick,0x7ffad1f6fb64,373502655,0,0x0,8
tick,0x7ffad1f6fb64,373517697,0,0x0,8
tick,0x7ffad1f6fb64,373532676,0,0x0,8
tick,0x7ffad1f6fb64,373547701,0,0x0,8
tick,0x7ffad1f6fb64,373562712,0,0x0,8
tick,0x7ffad1f6fb64,373578708,0,0x0,8
tick,0x7ffad1f6fb64,373593724,0,0x0,8
tick,0x7ffad1f6fb64,373608780,0,0x0,8
tick,0x7ffad1f6fb64,373623822,0,0x0,8
tick,0x7ffad1f6fb64,373639807,0,0x0,8
tick,0x7ffad1f6fb64,373654827,0,0x0,8
tick,0x7ffad1f6fb64,373669822,0,0x0,8
tick,0x7ffad1f6fb64,373685834,0,0x0,8
tick,0x7ffad1f6fb64,373700852,0,0x0,8
tick,0x7ffad1f6fb64,373716836,0,0x0,8
tick,0x7ffad1f6fb64,373732868,0,0x0,8
tick,0x7ffad1f6fb64,373747885,0,0x0,8
tick,0x7ffad1f6fb64,373763903,0,0x0,8
tick,0x7ffad1f6fb64,373779904,0,0x0,8
tick,0x7ffad1f6fb64,373795914,0,0x0,8
tick,0x7ffad1f6fb64,373810975,0,0x0,8
tick,0x7ffad1f6fb64,373826940,0,0x0,8
tick,0x7ffad1f6fb64,373842005,0,0x0,8
tick,0x7ffad1f6fb64,373856978,0,0x0,8
tick,0x7ffad1f6fb64,373872088,0,0x0,8
tick,0x7ffad1f6fb64,373888023,0,0x0,8
tick,0x7ffad1f6fb64,373903024,0,0x0,8
tick,0x7ffad1f6fb64,373918024,0,0x0,8
tick,0x7ffad1f6fb64,373933036,0,0x0,8
tick,0x7ffad1f6fb64,373948061,0,0x0,8
tick,0x7ffad1f6fb64,373963065,0,0x0,8
tick,0x7ffad1f6fb64,373978092,0,0x0,8
tick,0x7ffad1f6fb64,373994134,0,0x0,8
tick,0x7ffad1f6fb64,374010104,0,0x0,8
tick,0x7ffad1f6fb64,374025111,0,0x0,8
tick,0x7ffad1f6fb64,374040135,0,0x0,8
tick,0x7ffad1f6fb64,374055129,0,0x0,8
tick,0x7ffad1f6fb64,374070149,0,0x0,8
tick,0x7ffad1f6fb64,374085168,0,0x0,8
tick,0x7ffad1f6fb64,374101204,0,0x0,8
tick,0x7ffad1f6fb64,374117202,0,0x0,8
tick,0x7ffad1f6fb64,374133231,0,0x0,8
tick,0x7ffad1f6fb64,374149229,0,0x0,8
tick,0x7ffad1f6fb64,374165317,0,0x0,8
tick,0x7ffad1f6fb64,374180274,0,0x0,8
tick,0x7ffad1f6fb64,374195286,0,0x0,8
tick,0x7ffad1f6fb64,374211334,0,0x0,8
tick,0x7ffad1f6fb64,374226332,0,0x0,8
tick,0x7ffad1f6fb64,374241323,0,0x0,8
tick,0x7ffad1f6fb64,374257340,0,0x0,8
tick,0x7ffad1f6fb64,374273354,0,0x0,8
tick,0x7ffad1f6fb64,374289359,0,0x0,8
tick,0x7ffad1f6fb64,374304422,0,0x0,8
tick,0x7ffad1f6fb64,374319399,0,0x0,8
tick,0x7ffad1f6fb64,374335387,0,0x0,8
tick,0x7ffad1f6fb64,374350535,0,0x0,8
tick,0x7ffad1f6fb64,374366444,0,0x0,8
tick,0x7ffad1f6fb64,374381451,0,0x0,8
tick,0x7ffad1f6fb64,374397452,0,0x0,8
tick,0x7ffad1f6fb64,374412496,0,0x0,8
tick,0x7ffad1f6fb64,374427489,0,0x0,8
tick,0x7ffad1f6fb64,374443522,0,0x0,8
tick,0x7ffad1f6fb64,374458510,0,0x0,8
tick,0x7ffad1f6fb64,374473529,0,0x0,8
tick,0x7ffad1f6fb64,374489548,0,0x0,8
tick,0x7ffad1f6fb64,374505622,0,0x0,8
tick,0x7ffad1f6fb64,374520574,0,0x0,8
tick,0x7ffad1f6fb64,374536600,0,0x0,8
tick,0x7ffad1f6fb64,374552597,0,0x0,8
tick,0x7ffad1f6fb64,374568614,0,0x0,8
tick,0x7ffad1f6fb64,374584625,0,0x0,8
tick,0x7ffad1f6fb64,374599652,0,0x0,8
tick,0x7ffad1f6fb64,374614659,0,0x0,8
tick,0x7ffad1f6fb64,374630675,0,0x0,8
tick,0x7ffad1f6fb64,374646705,0,0x0,8
tick,0x7ffad1f6fb64,374662730,0,0x0,8
tick,0x7ffad1f6fb64,374678721,0,0x0,8
tick,0x7ffad1f6fb64,374693727,0,0x0,8
tick,0x7ffad1f6fb64,374708760,0,0x0,8
tick,0x7ffad1f6fb64,374723771,0,0x0,8
tick,0x7ffad1f6fb64,374739772,0,0x0,8
tick,0x7ffad1f6fb64,374755788,0,0x0,8
tick,0x7ffad1f6fb64,374770808,0,0x0,8
tick,0x7ffad1f6fb64,374786823,0,0x0,8
tick,0x7ffad1f6fb64,374801831,0,0x0,8
tick,0x7ffad1f6fb64,374817871,0,0x0,8
tick,0x7ffad1f6fb64,374833858,0,0x0,8
tick,0x7ffad1f6fb64,374849892,0,0x0,8
tick,0x7ffad1f6fb64,374864931,0,0x0,8
tick,0x7ffad1f6fb64,374879921,0,0x0,8
tick,0x7ffad1f6fb64,374895916,0,0x0,8
tick,0x7ffad1f6fb64,374911943,0,0x0,8
tick,0x7ffad1f6fb64,374926975,0,0x0,8
tick,0x7ffad1f6fb64,374941954,0,0x0,8
tick,0x7ffad1f6fb64,374957971,0,0x0,8
tick,0x7ffad1f6fb64,374972992,0,0x0,8
tick,0x7ffad1f6fb64,374988022,0,0x0,8
tick,0x7ffad1f6fb64,375003019,0,0x0,8
tick,0x7ffad1f6fb64,375019037,0,0x0,8
tick,0x7ffad1f6fb64,375034079,0,0x0,8
tick,0x7ffad1f6fb64,375050052,0,0x0,8
tick,0x7ffad1f6fb64,375066110,0,0x0,8
tick,0x7ffad1f6fb64,375081113,0,0x0,8
tick,0x7ffad1f6fb64,375097127,0,0x0,8
tick,0x7ffad1f6fb64,375113126,0,0x0,8
tick,0x7ffad1f6fb64,375129161,0,0x0,8
tick,0x7ffad1f6fb64,375144159,0,0x0,8
tick,0x7ffad1f6fb64,375160198,0,0x0,8
tick,0x7ffad1f6fb64,375176208,0,0x0,8
tick,0x7ffad1f6fb64,375191208,0,0x0,8
tick,0x7ffad1f6fb64,375206208,0,0x0,8
tick,0x7ffad1f6fb64,375221243,0,0x0,8
tick,0x7ffad1f6fb64,375236246,0,0x0,8
tick,0x7ffad1f6fb64,375251273,0,0x0,8
tick,0x7ffad1f6fb64,375266264,0,0x0,8
tick,0x7ffad1f6fb64,375281320,0,0x0,8
tick,0x7ffad1f6fb64,375296302,0,0x0,8
tick,0x7ffad1f6fb64,375311287,0,0x0,8
tick,0x7ffad1f6fb64,375327310,0,0x0,8
tick,0x7ffad1f6fb64,375342356,0,0x0,8
tick,0x7ffad1f6fb64,375358336,0,0x0,8
tick,0x7ffad1f6fb64,375374350,0,0x0,8
tick,0x7ffad1f6fb64,375390397,0,0x0,8
tick,0x7ffad1f6fb64,375405404,0,0x0,8
tick,0x7ffad1f6fb64,375420428,0,0x0,8
tick,0x7ffad1f6fb64,375435420,0,0x0,8
tick,0x7ffad1f6fb64,375451433,0,0x0,8
tick,0x7ffad1f6fb64,375466476,0,0x0,8
tick,0x7ffad1f6fb64,375481481,0,0x0,8
tick,0x7ffad1f6fb64,375497497,0,0x0,8
tick,0x7ffad1f6fb64,375513526,0,0x0,8
tick,0x7ffad1f6fb64,375529559,0,0x0,8
tick,0x7ffad1f6fb64,375544530,0,0x0,8
tick,0x7ffad1f6fb64,375560557,0,0x0,8
tick,0x7ffad1f6fb64,375575587,0,0x0,8
tick,0x7ffad1f6fb64,375591572,0,0x0,8
tick,0x7ffad1f6fb64,375607590,0,0x0,8
tick,0x7ffad1f6fb64,375622600,0,0x0,8
tick,0x7ffad1f6fb64,375637613,0,0x0,8
tick,0x7ffad1f6fb64,375653623,0,0x0,8
tick,0x7ffad1f6fb64,375668696,0,0x0,8
tick,0x7ffad1f6fb64,375683673,0,0x0,8
tick,0x7ffad1f6fb64,375699664,0,0x0,8
tick,0x7ffad1f6fb64,375714705,0,0x0,8
tick,0x7ffad1f6fb64,375730709,0,0x0,8
tick,0x7ffad1f6fb64,375745730,0,0x0,8
tick,0x7ffad1f6fb64,375761728,0,0x0,8
tick,0x7ffad1f6fb64,375776743,0,0x0,8
tick,0x7ffad1f6fb64,375791771,0,0x0,8
tick,0x7ffad1f6fb64,375807757,0,0x0,8
tick,0x7ffad1f6fb64,375823800,0,0x0,8
tick,0x7ffad1f6fb64,375838815,0,0x0,8
tick,0x7ffad1f6fb64,375854796,0,0x0,8
tick,0x7ffad1f6fb64,375869824,0,0x0,8
tick,0x7ffad1f6fb64,375884857,0,0x0,8
tick,0x7ffad1f6fb64,375899837,0,0x0,8
tick,0x7ffad1f6fb64,375915883,0,0x0,8
tick,0x7ffad1f6fb64,375931925,0,0x0,8
tick,0x7ffad1f6fb64,375947913,0,0x0,8
tick,0x7ffad1f6fb64,375962934,0,0x0,8
tick,0x7ffad1f6fb64,375977985,0,0x0,8
tick,0x7ffad1f6fb64,375993959,0,0x0,8
tick,0x7ffad1f6fb64,376009062,0,0x0,8
tick,0x7ffad1f6fb64,376024962,0,0x0,8
tick,0x7ffad1f6fb64,376040024,0,0x0,8
tick,0x7ffad1f6fb64,376054999,0,0x0,8
tick,0x7ffad1f6fb64,376071054,0,0x0,8
tick,0x7ffad1f6fb64,376087031,0,0x0,8
tick,0x7ffad1f6fb64,376103053,0,0x0,8
tick,0x7ffad1f6fb64,376118096,0,0x0,8
tick,0x7ffad1f6fb64,376134044,0,0x0,8
tick,0x7ffad1f6fb64,376149085,0,0x0,8
tick,0x7ffad1f6fb64,376164104,0,0x0,8
tick,0x7ffad1f6fb64,376180133,0,0x0,8
tick,0x7ffad1f6fb64,376195113,0,0x0,8
tick,0x7ffad1f6fb64,376211145,0,0x0,8
tick,0x7ffad1f6fb64,376227174,0,0x0,8
tick,0x7ffad1f6fb64,376243156,0,0x0,8
tick,0x7ffad1f6fb64,376258197,0,0x0,8
tick,0x7ffad1f6fb64,376273189,0,0x0,8
tick,0x7ffad1f6fb64,376288204,0,0x0,8
tick,0x7ffad1f6fb64,376304208,0,0x0,8
tick,0x7ffad1f6fb64,376320212,0,0x0,8
tick,0x7ffad1f6fb64,376336252,0,0x0,8
tick,0x7ffad1f6fb64,376351280,0,0x0,8
tick,0x7ffad1f6fb64,376366261,0,0x0,8
tick,0x7ffad1f6fb64,376381281,0,0x0,8
tick,0x7ffad1f6fb64,376397318,0,0x0,8
tick,0x7ffad1f6fb64,376413316,0,0x0,8
tick,0x7ffad1f6fb64,376429342,0,0x0,8
tick,0x7ffad1f6fb64,376444338,0,0x0,8
tick,0x7ffad1f6fb64,376459366,0,0x0,8
tick,0x7ffad1f6fb64,376475451,0,0x0,8
tick,0x7ffad1f6fb64,376491393,0,0x0,8
tick,0x7ffad1f6fb64,376507389,0,0x0,8
tick,0x7ffad1f6fb64,376522418,0,0x0,8
tick,0x7ffad1f6fb64,376537451,0,0x0,8
tick,0x7ffad1f6fb64,376552462,0,0x0,8
tick,0x7ffad1f6fb64,376568445,0,0x0,8
tick,0x7ffad1f6fb64,376584479,0,0x0,8
tick,0x7ffad1f6fb64,376599477,0,0x0,8
tick,0x7ffad1f6fb64,376615504,0,0x0,8
tick,0x7ffad1f6fb64,376631514,0,0x0,8
tick,0x7ffad1f6fb64,376647545,0,0x0,8
tick,0x7ffad1f6fb64,376663553,0,0x0,8
tick,0x7ffad1f6fb64,376678561,0,0x0,8
tick,0x7ffad1f6fb64,376694573,0,0x0,8
tick,0x7ffad1f6fb64,376709573,0,0x0,8
tick,0x7ffad1f6fb64,376725591,0,0x0,8
tick,0x7ffad1f6fb64,376740627,0,0x0,8
tick,0x7ffad1f6fb64,376755843,0,0x0,8
tick,0x7ffad1f6fb64,376770651,0,0x0,8
tick,0x7ffad1f6fb64,376786663,0,0x0,8
tick,0x7ffad1f6fb64,376801662,0,0x0,8
tick,0x7ffad1f6fb64,376816679,0,0x0,8
tick,0x7ffad1f6fb64,376832697,0,0x0,8
tick,0x7ffad1f6fb64,376848702,0,0x0,8
tick,0x7ffad1f6fb64,376864717,0,0x0,8
tick,0x7ffad1f6fb64,376879717,0,0x0,8
tick,0x7ffad1f6fb64,376894741,0,0x0,8
tick,0x7ffad1f6fb64,376910854,0,0x0,8
tick,0x7ffad1f6fb64,376925785,0,0x0,8
tick,0x7ffad1f6fb64,376940914,0,0x0,8
tick,0x7ffad1f6fb64,376955857,0,0x0,8
tick,0x7ffad1f6fb64,376971818,0,0x0,8
tick,0x7ffad1f6fb64,376987864,0,0x0,8
tick,0x7ffad1f6fb64,377002848,0,0x0,8
tick,0x7ffad1f6fb64,377017875,0,0x0,8
tick,0x7ffad1f6fb64,377032896,0,0x0,8
tick,0x7ffad1f6fb64,377048899,0,0x0,8
tick,0x7ffad1f6fb64,377063921,0,0x0,8
tick,0x7ffad1f6fb64,377079941,0,0x0,8
tick,0x7ffad1f6fb64,377094932,0,0x0,8
tick,0x7ffad1f6fb64,377110958,0,0x0,8
tick,0x7ffad1f6fb64,377126978,0,0x0,8
tick,0x7ffad1f6fb64,377141983,0,0x0,8
tick,0x7ffad1f6fb64,377157994,0,0x0,8
tick,0x7ffad1f6fb64,377174023,0,0x0,8
tick,0x7ffad1f6fb64,377190019,0,0x0,8
tick,0x7ffad1f6fb64,377206062,0,0x0,8
tick,0x7ffad1f6fb64,377221038,0,0x0,8
tick,0x7ffad1f6fb64,377237081,0,0x0,8
tick,0x7ffad1f6fb64,377252087,0,0x0,8
tick,0x7ffad1f6fb64,377268136,0,0x0,8
tick,0x7ffad1f6fb64,377284149,0,0x0,8
tick,0x7ffad1f6fb64,377299141,0,0x0,8
tick,0x7ffad1f6fb64,377314141,0,0x0,8
tick,0x7ffad1f6fb64,377330153,0,0x0,8
tick,0x7ffad1f6fb64,377345185,0,0x0,8
tick,0x7ffad1f6fb64,377361202,0,0x0,8
tick,0x7ffad1f6fb64,377377211,0,0x0,8
tick,0x7ffad1f6fb64,377393227,0,0x0,8
tick,0x7ffad1f6fb64,377409292,0,0x0,8
tick,0x7ffad1f6fb64,377424237,0,0x0,8
tick,0x7ffad1f6fb64,377439274,0,0x0,8
tick,0x7ffad1f6fb64,377455284,0,0x0,8
tick,0x7ffad1f6fb64,377471281,0,0x0,8
tick,0x7ffad1f6fb64,377486294,0,0x0,8
tick,0x7ffad1f6fb64,377502307,0,0x0,8
tick,0x7ffad1f6fb64,377518341,0,0x0,8
tick,0x7ffad1f6fb64,377534357,0,0x0,8
tick,0x7ffad1f6fb64,377549344,0,0x0,8
tick,0x7ffad1f6fb64,377564398,0,0x0,8
tick,0x7ffad1f6fb64,377579392,0,0x0,8
tick,0x7ffad1f6fb64,377595390,0,0x0,8
tick,0x7ffad1f6fb64,377611436,0,0x0,8
tick,0x7ffad1f6fb64,377627439,0,0x0,8
tick,0x7ffad1f6fb64,377643461,0,0x0,8
tick,0x7ffad1f6fb64,377658469,0,0x0,8
tick,0x7ffad1f6fb64,377674478,0,0x0,8
tick,0x7ffad1f6fb64,377690517,0,0x0,8
tick,0x7ffad1f6fb64,377705525,0,0x0,8
tick,0x7ffad1f6fb64,377720538,0,0x0,8
tick,0x7ffad1f6fb64,377736534,0,0x0,8
tick,0x7ffad1f6fb64,377752561,0,0x0,8
tick,0x7ffad1f6fb64,377768581,0,0x0,8
tick,0x7ffad1f6fb64,377784572,0,0x0,8
tick,0x7ffad1f6fb64,377799591,0,0x0,8
tick,0x7ffad1f6fb64,377815592,0,0x0,8
tick,0x7ffad1f6fb64,377830607,0,0x0,8
tick,0x7ffad1f6fb64,377846647,0,0x0,8
tick,0x7ffad1f6fb64,377861654,0,0x0,8
tick,0x7ffad1f6fb64,377877637,0,0x0,8
tick,0x7ffad1f6fb64,377893652,0,0x0,8
tick,0x7ffad1f6fb64,377909688,0,0x0,8
tick,0x7ffad1f6fb64,377924676,0,0x0,8
tick,0x7ffad1f6fb64,377939733,0,0x0,8
tick,0x7ffad1f6fb64,377955715,0,0x0,8
tick,0x7ffad1f6fb64,377970746,0,0x0,8
tick,0x7ffad1f6fb64,377986773,0,0x0,8
tick,0x7ffad1f6fb64,378001797,0,0x0,8
tick,0x7ffad1f6fb64,378016825,0,0x0,8
tick,0x7ffad1f6fb64,378031815,0,0x0,8
tick,0x7ffad1f6fb64,378047857,0,0x0,8
tick,0x7ffad1f6fb64,378062840,0,0x0,8
tick,0x7ffad1f6fb64,378078869,0,0x0,8
tick,0x7ffad1f6fb64,378094890,0,0x0,8
tick,0x7ffad1f6fb64,378109882,0,0x0,8
tick,0x7ffad1f6fb64,378124873,0,0x0,8
tick,0x7ffad1f6fb64,378139899,0,0x0,8
tick,0x7ffad1f6fb64,378155896,0,0x0,8
tick,0x7ffad1f6fb64,378171959,0,0x0,8
tick,0x7ffad1f6fb64,378186953,0,0x0,8
tick,0x7ffad1f6fb64,378202949,0,0x0,8
tick,0x7ffad1f6fb64,378218982,0,0x0,8
tick,0x7ffad1f6fb64,378235003,0,0x0,8
tick,0x7ffad1f6fb64,378250000,0,0x0,8
tick,0x7ffad1f6fb64,378265010,0,0x0,8
tick,0x7ffad1f6fb64,378280017,0,0x0,8
tick,0x7ffad1f6fb64,378296076,0,0x0,8
tick,0x7ffad1f6fb64,378312058,0,0x0,8
tick,0x7ffad1f6fb64,378328068,0,0x0,8
tick,0x7ffad1f6fb64,378343247,0,0x0,8
tick,0x7ffad1f6fb64,378359095,0,0x0,8
tick,0x7ffad1f6fb64,378374132,0,0x0,8
tick,0x7ffad1f6fb64,378389104,0,0x0,8
tick,0x7ffad1f6fb64,378404127,0,0x0,8
tick,0x7ffad1f6fb64,378420137,0,0x0,8
tick,0x7ffad1f6fb64,378436158,0,0x0,8
tick,0x7ffad1f6fb64,378451214,0,0x0,8
tick,0x7ffad1f6fb64,378466193,0,0x0,8
tick,0x7ffad1f6fb64,378481201,0,0x0,8
tick,0x7ffad1f6fb64,378497224,0,0x0,8
tick,0x7ffad1f6fb64,378513263,0,0x0,8
tick,0x7ffad1f6fb64,378529249,0,0x0,8
tick,0x7ffad1f6fb64,378545251,0,0x0,8
tick,0x7ffad1f6fb64,378561278,0,0x0,8
tick,0x7ffad1f6fb64,378577295,0,0x0,8
tick,0x7ffad1f6fb64,378592301,0,0x0,8
tick,0x7ffad1f6fb64,378607458,0,0x0,8
tick,0x7ffad1f6fb64,378622347,0,0x0,8
tick,0x7ffad1f6fb64,378638347,0,0x0,8
tick,0x7ffad1f6fb64,378654387,0,0x0,8
tick,0x7ffad1f6fb64,378670356,0,0x0,8
tick,0x7ffad1f6fb64,378685392,0,0x0,8
tick,0x7ffad1f6fb64,378701439,0,0x0,8
tick,0x7ffad1f6fb64,378716580,0,0x0,8
tick,0x7ffad1f6fb64,378732473,0,0x0,8
tick,0x7ffad1f6fb64,378748443,0,0x0,8
tick,0x7ffad1f6fb64,378764475,0,0x0,8
tick,0x7ffad1f6fb64,378779462,0,0x0,8
tick,0x7ffad1f6fb64,378795471,0,0x0,8
tick,0x7ffad1f6fb64,378811493,0,0x0,8
tick,0x7ffad1f6fb64,378826520,0,0x0,8
tick,0x7ffad1f6fb64,378841524,0,0x0,8
tick,0x7ffad1f6fb64,378857553,0,0x0,8
tick,0x7ffad1f6fb64,378873582,0,0x0,8
tick,0x7ffad1f6fb64,378889574,0,0x0,8
tick,0x7ffad1f6fb64,378904564,0,0x0,8
tick,0x7ffad1f6fb64,378920627,0,0x0,8
tick,0x7ffad1f6fb64,378936643,0,0x0,8
tick,0x7ffad1f6fb64,378952622,0,0x0,8
tick,0x7ffad1f6fb64,378967632,0,0x0,8
tick,0x7ffad1f6fb64,378982704,0,0x0,8
tick,0x7ffad1f6fb64,378998664,0,0x0,8
tick,0x7ffad1f6fb64,379013739,0,0x0,8
tick,0x7ffad1f6fb64,379029712,0,0x0,8
tick,0x7ffad1f6fb64,379044733,0,0x0,8
tick,0x7ffad1f6fb64,379060734,0,0x0,8
tick,0x7ffad1f6fb64,379075733,0,0x0,8
tick,0x7ffad1f6fb64,379090767,0,0x0,8
tick,0x7ffad1f6fb64,379106774,0,0x0,8
tick,0x7ffad1f6fb64,379121842,0,0x0,8
tick,0x7ffad1f6fb64,379137821,0,0x0,8
tick,0x7ffad1f6fb64,379152804,0,0x0,8
tick,0x7ffad1f6fb64,379168832,0,0x0,8
tick,0x7ffad1f6fb64,379184839,0,0x0,8
tick,0x7ffad1f6fb64,379199865,0,0x0,8
tick,0x7ffad1f6fb64,379215865,0,0x0,8
tick,0x7ffad1f6fb64,379231888,0,0x0,8
tick,0x7ffad1f6fb64,379246905,0,0x0,8
tick,0x7ffad1f6fb64,379262944,0,0x0,8
tick,0x7ffad1f6fb64,379277950,0,0x0,8
tick,0x7ffad1f6fb64,379293940,0,0x0,8
tick,0x7ffad1f6fb64,379309943,0,0x0,8
tick,0x7ffad1f6fb64,379325991,0,0x0,8
tick,0x7ffad1f6fb64,379340973,0,0x0,8
tick,0x7ffad1f6fb64,379356984,0,0x0,8
tick,0x7ffad1f6fb64,379373005,0,0x0,8
tick,0x7ffad1f6fb64,379388029,0,0x0,8
tick,0x7ffad1f6fb64,379403018,0,0x0,8
tick,0x7ffad1f6fb64,379418045,0,0x0,8
tick,0x7ffad1f6fb64,379433042,0,0x0,8
tick,0x7ffad1f6fb64,379449085,0,0x0,8
tick,0x7ffad1f6fb64,379464122,0,0x0,8
tick,0x7ffad1f6fb64,379480099,0,0x0,8
tick,0x7ffad1f6fb64,379495116,0,0x0,8
tick,0x7ffad1f6fb64,379511120,0,0x0,8
tick,0x7ffad1f6fb64,379527150,0,0x0,8
tick,0x7ffad1f6fb64,379543151,0,0x0,8
tick,0x7ffad1f6fb64,379559155,0,0x0,8
tick,0x7ffad1f6fb64,379574173,0,0x0,8
tick,0x7ffad1f6fb64,379589192,0,0x0,8
tick,0x7ffad1f6fb64,379605195,0,0x0,8
tick,0x7ffad1f6fb64,379620233,0,0x0,8
tick,0x7ffad1f6fb64,379636279,0,0x0,8
tick,0x7ffad1f6fb64,379652272,0,0x0,8
tick,0x7ffad1f6fb64,379667311,0,0x0,8
tick,0x7ffad1f6fb64,379682282,0,0x0,8
tick,0x7ffad1f6fb64,379698343,0,0x0,8
tick,0x7ffad1f6fb64,379714337,0,0x0,8
tick,0x7ffad1f6fb64,379730308,0,0x0,8
tick,0x7ffad1f6fb64,379746354,0,0x0,8
tick,0x7ffad1f6fb64,379761356,0,0x0,8
tick,0x7ffad1f6fb64,379776375,0,0x0,8
tick,0x7ffad1f6fb64,379791373,0,0x0,8
tick,0x7ffad1f6fb64,379807401,0,0x0,8
tick,0x7ffad1f6fb64,379822427,0,0x0,8
tick,0x7ffad1f6fb64,379837429,0,0x0,8
tick,0x7ffad1f6fb64,379853429,0,0x0,8
tick,0x7ffad1f6fb64,379869458,0,0x0,8
tick,0x7ffad1f6fb64,379884468,0,0x0,8
tick,0x7ffad1f6fb64,379899475,0,0x0,8
tick,0x7ffad1f6fb64,379915477,0,0x0,8
tick,0x7ffad1f6fb64,379930511,0,0x0,8
tick,0x7ffad1f6fb64,379945525,0,0x0,8
tick,0x7ffad1f6fb64,379960529,0,0x0,8
tick,0x7ffad1f6fb64,379975560,0,0x0,8
tick,0x7ffad1f6fb64,379990580,0,0x0,8
tick,0x7ffad1f6fb64,380005570,0,0x0,8
tick,0x7ffad1f6fb64,380020597,0,0x0,8
tick,0x7ffad1f6fb64,380036641,0,0x0,8
tick,0x7ffad1f6fb64,380052603,0,0x0,8
tick,0x7ffad1f6fb64,380067657,0,0x0,8
tick,0x7ffad1f6fb64,380083658,0,0x0,8
tick,0x7ffad1f6fb64,380098660,0,0x0,8
tick,0x7ffad1f6fb64,380113667,0,0x0,8
tick,0x7ffad1f6fb64,380129697,0,0x0,8
tick,0x7ffad1f6fb64,380144717,0,0x0,8
tick,0x7ffad1f6fb64,380160698,0,0x0,8
tick,0x7ffad1f6fb64,380175738,0,0x0,8
tick,0x7ffad1f6fb64,380190759,0,0x0,8
tick,0x7ffad1f6fb64,380205757,0,0x0,8
tick,0x7ffad1f6fb64,380221766,0,0x0,8
tick,0x7ffad1f6fb64,380237788,0,0x0,8
tick,0x7ffad1f6fb64,380253809,0,0x0,8
tick,0x7ffad1f6fb64,380268817,0,0x0,8
tick,0x7ffad1f6fb64,380284840,0,0x0,8
tick,0x7ffad1f6fb64,380300844,0,0x0,8
tick,0x7ffad1f6fb64,380315866,0,0x0,8
tick,0x7ffad1f6fb64,380331877,0,0x0,8
tick,0x7ffad1f6fb64,380347888,0,0x0,8
tick,0x7ffad1f6fb64,380363909,0,0x0,8
tick,0x7ffad1f6fb64,380379923,0,0x0,8
tick,0x7ffad1f6fb64,380394925,0,0x0,8
tick,0x7ffad1f6fb64,380410935,0,0x0,8
tick,0x7ffad1f6fb64,380426961,0,0x0,8
tick,0x7ffad1f6fb64,380442962,0,0x0,8
tick,0x7ffad1f6fb64,380457972,0,0x0,8
tick,0x7ffad1f6fb64,380474005,0,0x0,8
tick,0x7ffad1f6fb64,380490031,0,0x0,8
tick,0x7ffad1f6fb64,380506028,0,0x0,8
tick,0x7ffad1f6fb64,380521055,0,0x0,8
tick,0x7ffad1f6fb64,380537075,0,0x0,8
tick,0x7ffad1f6fb64,380553073,0,0x0,8
tick,0x7ffad1f6fb64,380569102,0,0x0,8
tick,0x7ffad1f6fb64,380585118,0,0x0,8
tick,0x7ffad1f6fb64,380601125,0,0x0,8
tick,0x7ffad1f6fb64,380616129,0,0x0,8
tick,0x7ffad1f6fb64,380632167,0,0x0,8
tick,0x7ffad1f6fb64,380647186,0,0x0,8
tick,0x7ffad1f6fb64,380663175,0,0x0,8
tick,0x7ffad1f6fb64,380678197,0,0x0,8
tick,0x7ffad1f6fb64,380694244,0,0x0,8
tick,0x7ffad1f6fb64,380710210,0,0x0,8
tick,0x7ffad1f6fb64,380726312,0,0x0,8
tick,0x7ffad1f6fb64,380741244,0,0x0,8
tick,0x7ffad1f6fb64,380756258,0,0x0,8
tick,0x7ffad1f6fb64,380771268,0,0x0,8
tick,0x7ffad1f6fb64,380787284,0,0x0,8
tick,0x7ffad1f6fb64,380803306,0,0x0,8
tick,0x7ffad1f6fb64,380818306,0,0x0,8
tick,0x7ffad1f6fb64,380834329,0,0x0,8
tick,0x7ffad1f6fb64,380850347,0,0x0,8
tick,0x7ffad1f6fb64,380866347,0,0x0,8
tick,0x7ffad1f6fb64,380881387,0,0x0,8
tick,0x7ffad1f6fb64,380897386,0,0x0,8
tick,0x7ffad1f6fb64,380913395,0,0x0,8
tick,0x7ffad1f6fb64,380929394,0,0x0,8
tick,0x7ffad1f6fb64,380944466,0,0x0,8
tick,0x7ffad1f6fb64,380960440,0,0x0,8
tick,0x7ffad1f6fb64,380975456,0,0x0,8
tick,0x7ffad1f6fb64,380991482,0,0x0,8
tick,0x7ffad1f6fb64,381007470,0,0x0,8
tick,0x7ffad1f6fb64,381022506,0,0x0,8
tick,0x7ffad1f6fb64,381037509,0,0x0,8
tick,0x7ffad1f6fb64,381053520,0,0x0,8
tick,0x7ffad1f6fb64,381068547,0,0x0,8
tick,0x7ffad1f6fb64,381084554,0,0x0,8
tick,0x7ffad1f6fb64,381099549,0,0x0,8
tick,0x7ffad1f6fb64,381115577,0,0x0,8
tick,0x7ffad1f6fb64,381131611,0,0x0,8
tick,0x7ffad1f6fb64,381146608,0,0x0,8
tick,0x7ffad1f6fb64,381161748,0,0x0,8
tick,0x7ffad1f6fb64,381177637,0,0x0,8
tick,0x7ffad1f6fb64,381192664,0,0x0,8
tick,0x7ffad1f6fb64,381208657,0,0x0,8
tick,0x7ffad1f6fb64,381224670,0,0x0,8
tick,0x7ffad1f6fb64,381239716,0,0x0,8
tick,0x7ffad1f6fb64,381255703,0,0x0,8
tick,0x7ffad1f6fb64,381270731,0,0x0,8
tick,0x7ffad1f6fb64,381285748,0,0x0,8
tick,0x7ffad1f6fb64,381300779,0,0x0,8
tick,0x7ffad1f6fb64,381316783,0,0x0,8
tick,0x7ffad1f6fb64,381332792,0,0x0,8
tick,0x7ffad1f6fb64,381347831,0,0x0,8
tick,0x7ffad1f6fb64,381363816,0,0x0,8
tick,0x7ffad1f6fb64,381379853,0,0x0,8
tick,0x7ffad1f6fb64,381394939,0,0x0,8
tick,0x7ffad1f6fb64,381410853,0,0x0,8
tick,0x7ffad1f6fb64,381425868,0,0x0,8
tick,0x7ffad1f6fb64,381440917,0,0x0,8
tick,0x7ffad1f6fb64,381456885,0,0x0,8
tick,0x7ffad1f6fb64,381472896,0,0x0,8
tick,0x7ffad1f6fb64,381488924,0,0x0,8
tick,0x7ffad1f6fb64,381503950,0,0x0,8
tick,0x7ffad1f6fb64,381519937,0,0x0,8
tick,0x7ffad1f6fb64,381535963,0,0x0,8
tick,0x7ffad1f6fb64,381550952,0,0x0,8
tick,0x7ffad1f6fb64,381566002,0,0x0,8
tick,0x7ffad1f6fb64,381580997,0,0x0,8
tick,0x7ffad1f6fb64,381596011,0,0x0,8
tick,0x7ffad1f6fb64,381612016,0,0x0,8
tick,0x7ffad1f6fb64,381628061,0,0x0,8
tick,0x7ffad1f6fb64,381644053,0,0x0,8
tick,0x7ffad1f6fb64,381660072,0,0x0,8
tick,0x7ffad1f6fb64,381675122,0,0x0,8
tick,0x7ffad1f6fb64,381691148,0,0x0,8
tick,0x7ffad1f6fb64,381706142,0,0x0,8
tick,0x7ffad1f6fb64,381721132,0,0x0,8
tick,0x7ffad1f6fb64,381736151,0,0x0,8
tick,0x7ffad1f6fb64,381751168,0,0x0,8
tick,0x7ffad1f6fb64,381766196,0,0x0,8
tick,0x7ffad1f6fb64,381781215,0,0x0,8
tick,0x7ffad1f6fb64,381797186,0,0x0,8
tick,0x7ffad1f6fb64,381813229,0,0x0,8
tick,0x7ffad1f6fb64,381829238,0,0x0,8
tick,0x7ffad1f6fb64,381845256,0,0x0,8
tick,0x7ffad1f6fb64,381861290,0,0x0,8
tick,0x7ffad1f6fb64,381876282,0,0x0,8
tick,0x7ffad1f6fb64,381891307,0,0x0,8
tick,0x7ffad1f6fb64,381907312,0,0x0,8
tick,0x7ffad1f6fb64,381922314,0,0x0,8
tick,0x7ffad1f6fb64,381938361,0,0x0,8
tick,0x7ffad1f6fb64,381954351,0,0x0,8
tick,0x7ffad1f6fb64,381970355,0,0x0,8
tick,0x7ffad1f6fb64,381986409,0,0x0,8
tick,0x7ffad1f6fb64,382001424,0,0x0,8
tick,0x7ffad1f6fb64,382017441,0,0x0,8
tick,0x7ffad1f6fb64,382033426,0,0x0,8
tick,0x7ffad1f6fb64,382049459,0,0x0,8
tick,0x7ffad1f6fb64,382064465,0,0x0,8
tick,0x7ffad1f6fb64,382079484,0,0x0,8
tick,0x7ffad1f6fb64,382094491,0,0x0,8
tick,0x7ffad1f6fb64,382109503,0,0x0,8
tick,0x7ffad1f6fb64,382124555,0,0x0,8
tick,0x7ffad1f6fb64,382139534,0,0x0,8
tick,0x7ffad1f6fb64,382155557,0,0x0,8
tick,0x7ffad1f6fb64,382171553,0,0x0,8
tick,0x7ffad1f6fb64,382187596,0,0x0,8
tick,0x7ffad1f6fb64,382203595,0,0x0,8
tick,0x7ffad1f6fb64,382218642,0,0x0,8
tick,0x7ffad1f6fb64,382234625,0,0x0,8
tick,0x7ffad1f6fb64,382249621,0,0x0,8
tick,0x7ffad1f6fb64,382265640,0,0x0,8
tick,0x7ffad1f6fb64,382280648,0,0x0,8
tick,0x7ffad1f6fb64,382295661,0,0x0,8
tick,0x7ffad1f6fb64,382311682,0,0x0,8
tick,0x7ffad1f6fb64,382327716,0,0x0,8
tick,0x7ffad1f6fb64,382343696,0,0x0,8
tick,0x7ffad1f6fb64,382359719,0,0x0,8
tick,0x7ffad1f6fb64,382375733,0,0x0,8
tick,0x7ffad1f6fb64,382391743,0,0x0,8
tick,0x7ffad1f6fb64,382406747,0,0x0,8
tick,0x7ffad1f6fb64,382422804,0,0x0,8
tick,0x7ffad1f6fb64,382438788,0,0x0,8
tick,0x7ffad1f6fb64,382454790,0,0x0,8
tick,0x7ffad1f6fb64,382470844,0,0x0,8
tick,0x7ffad1f6fb64,382486821,0,0x0,8
tick,0x7ffad1f6fb64,382501834,0,0x0,8
tick,0x7ffad1f6fb64,382517856,0,0x0,8
tick,0x7ffad1f6fb64,382532884,0,0x0,8
tick,0x7ffad1f6fb64,382548892,0,0x0,8
tick,0x7ffad1f6fb64,382563894,0,0x0,8
tick,0x7ffad1f6fb64,382578901,0,0x0,8
tick,0x7ffad1f6fb64,382593940,0,0x0,8
tick,0x7ffad1f6fb64,382609938,0,0x0,8
tick,0x7ffad1f6fb64,382625954,0,0x0,8
tick,0x7ffad1f6fb64,382640995,0,0x0,8
tick,0x7ffad1f6fb64,382656982,0,0x0,8
tick,0x7ffad1f6fb64,382673001,0,0x0,8
tick,0x7ffad1f6fb64,382689120,0,0x0,8
tick,0x7ffad1f6fb64,382704030,0,0x0,8
tick,0x7ffad1f6fb64,382720038,0,0x0,8
tick,0x7ffad1f6fb64,382735061,0,0x0,8
tick,0x7ffad1f6fb64,382750085,0,0x0,8
tick,0x7ffad1f6fb64,382766107,0,0x0,8
tick,0x7ffad1f6fb64,382781102,0,0x0,8
tick,0x7ffad1f6fb64,382797121,0,0x0,8
tick,0x7ffad1f6fb64,382812127,0,0x0,8
tick,0x7ffad1f6fb64,382828157,0,0x0,8
tick,0x7ffad1f6fb64,382844162,0,0x0,8
tick,0x7ffad1f6fb64,382860198,0,0x0,8
tick,0x7ffad1f6fb64,382875194,0,0x0,8
tick,0x7ffad1f6fb64,382890216,0,0x0,8
tick,0x7ffad1f6fb64,382906233,0,0x0,8
tick,0x7ffad1f6fb64,382921234,0,0x0,8
tick,0x7ffad1f6fb64,382937310,0,0x0,8
tick,0x7ffad1f6fb64,382953273,0,0x0,8
tick,0x7ffad1f6fb64,382969290,0,0x0,8
tick,0x7ffad1f6fb64,382985296,0,0x0,8
tick,0x7ffad1f6fb64,383000278,0,0x0,8
tick,0x7ffad1f6fb64,383016321,0,0x0,8
tick,0x7ffad1f6fb64,383032344,0,0x0,8
tick,0x7ffad1f6fb64,383047371,0,0x0,8
tick,0x7ffad1f6fb64,383063365,0,0x0,8
tick,0x7ffad1f6fb64,383078369,0,0x0,8
tick,0x7ffad1f6fb64,383093387,0,0x0,8
tick,0x7ffad1f6fb64,383108398,0,0x0,8
tick,0x7ffad1f6fb64,383124430,0,0x0,8
tick,0x7ffad1f6fb64,383139433,0,0x0,8
tick,0x7ffad1f6fb64,383154417,0,0x0,8
tick,0x7ffad1f6fb64,383170456,0,0x0,8
tick,0x7ffad1f6fb64,383186457,0,0x0,8
tick,0x7ffad1f6fb64,383201483,0,0x0,8
tick,0x7ffad1f6fb64,383217497,0,0x0,8
tick,0x7ffad1f6fb64,383232517,0,0x0,8
tick,0x7ffad1f6fb64,383248527,0,0x0,8
tick,0x7ffad1f6fb64,383264532,0,0x0,8
tick,0x7ffad1f6fb64,383279551,0,0x0,8
tick,0x7ffad1f6fb64,383295568,0,0x0,8
tick,0x7ffad1f6fb64,383311638,0,0x0,8
tick,0x7ffad1f6fb64,383326595,0,0x0,8
tick,0x7ffad1f6fb64,383341617,0,0x0,8
tick,0x7ffad1f6fb64,383357635,0,0x0,8
tick,0x7ffad1f6fb64,383373636,0,0x0,8
tick,0x7ffad1f6fb64,383389652,0,0x0,8
tick,0x7ffad1f6fb64,383405671,0,0x0,8
tick,0x7ffad1f6fb64,383421670,0,0x0,8
tick,0x7ffad1f6fb64,383436698,0,0x0,8
tick,0x7ffad1f6fb64,383452701,0,0x0,8
tick,0x7ffad1f6fb64,383468725,0,0x0,8
tick,0x7ffad1f6fb64,383484728,0,0x0,8
tick,0x7ffad1f6fb64,383499748,0,0x0,8
tick,0x7ffad1f6fb64,383515764,0,0x0,8
tick,0x7ffad1f6fb64,383531805,0,0x0,8
tick,0x7ffad1f6fb64,383546873,0,0x0,8
tick,0x7ffad1f6fb64,383562846,0,0x0,8
tick,0x7ffad1f6fb64,383578825,0,0x0,8
tick,0x7ffad1f6fb64,383593850,0,0x0,8
tick,0x7ffad1f6fb64,383609850,0,0x0,8
tick,0x7ffad1f6fb64,383625866,0,0x0,8
tick,0x7ffad1f6fb64,383640889,0,0x0,8
tick,0x7ffad1f6fb64,383656909,0,0x0,8
tick,0x7ffad1f6fb64,383671911,0,0x0,8
tick,0x7ffad1f6fb64,383687933,0,0x0,8
tick,0x7ffad1f6fb64,383702993,0,0x0,8
tick,0x7ffad1f6fb64,383718975,0,0x0,8
tick,0x7ffad1f6fb64,383734960,0,0x0,8
tick,0x7ffad1f6fb64,383749989,0,0x0,8
tick,0x7ffad1f6fb64,383764984,0,0x0,8
tick,0x7ffad1f6fb64,383779993,0,0x0,8
tick,0x7ffad1f6fb64,383796015,0,0x0,8
tick,0x7ffad1f6fb64,383811027,0,0x0,8
tick,0x7ffad1f6fb64,383827056,0,0x0,8
tick,0x7ffad1f6fb64,383842073,0,0x0,8
tick,0x7ffad1f6fb64,383857077,0,0x0,8
tick,0x7ffad1f6fb64,383873091,0,0x0,8
tick,0x7ffad1f6fb64,383888117,0,0x0,8
tick,0x7ffad1f6fb64,383904110,0,0x0,8
tick,0x7ffad1f6fb64,383920138,0,0x0,8
tick,0x7ffad1f6fb64,383936147,0,0x0,8
tick,0x7ffad1f6fb64,383952154,0,0x0,8
tick,0x7ffad1f6fb64,383968172,0,0x0,8
tick,0x7ffad1f6fb64,383983189,0,0x0,8
tick,0x7ffad1f6fb64,383998259,0,0x0,8
tick,0x7ffad1f6fb64,384014218,0,0x0,8
tick,0x7ffad1f6fb64,384030217,0,0x0,8
tick,0x7ffad1f6fb64,384045247,0,0x0,8
tick,0x7ffad1f6fb64,384060317,0,0x0,8
tick,0x7ffad1f6fb64,384075292,0,0x0,8
tick,0x7ffad1f6fb64,384090291,0,0x0,8
tick,0x7ffad1f6fb64,384106301,0,0x0,8
tick,0x7ffad1f6fb64,384121318,0,0x0,8
tick,0x7ffad1f6fb64,384137324,0,0x0,8
tick,0x7ffad1f6fb64,384153347,0,0x0,8
tick,0x7ffad1f6fb64,384168352,0,0x0,8
tick,0x7ffad1f6fb64,384183386,0,0x0,8
tick,0x7ffad1f6fb64,384199385,0,0x0,8
tick,0x7ffad1f6fb64,384215426,0,0x0,8
tick,0x7ffad1f6fb64,384230420,0,0x0,8
tick,0x7ffad1f6fb64,384246430,0,0x0,8
tick,0x7ffad1f6fb64,384261437,0,0x0,8
tick,0x7ffad1f6fb64,384277451,0,0x0,8
tick,0x7ffad1f6fb64,384293473,0,0x0,8
tick,0x7ffad1f6fb64,384308488,0,0x0,8
tick,0x7ffad1f6fb64,384324499,0,0x0,8
tick,0x7ffad1f6fb64,384339516,0,0x0,8
tick,0x7ffad1f6fb64,384354548,0,0x0,8
tick,0x7ffad1f6fb64,384370543,0,0x0,8
tick,0x7ffad1f6fb64,384386587,0,0x0,8
tick,0x7ffad1f6fb64,384402574,0,0x0,8
tick,0x7ffad1f6fb64,384417589,0,0x0,8
tick,0x7ffad1f6fb64,384433614,0,0x0,8
tick,0x7ffad1f6fb64,384449616,0,0x0,8
tick,0x7ffad1f6fb64,384465632,0,0x0,8
tick,0x7ffad1f6fb64,384480649,0,0x0,8
tick,0x7ffad1f6fb64,384495654,0,0x0,8
tick,0x7ffad1f6fb64,384511667,0,0x0,8
tick,0x7ffad1f6fb64,384527686,0,0x0,8
tick,0x7ffad1f6fb64,384543698,0,0x0,8
tick,0x7ffad1f6fb64,384559710,0,0x0,8
tick,0x7ffad1f6fb64,384575734,0,0x0,8
tick,0x7ffad1f6fb64,384590840,0,0x0,8
tick,0x7ffad1f6fb64,384606759,0,0x0,8
tick,0x7ffad1f6fb64,384622800,0,0x0,8
tick,0x7ffad1f6fb64,384638811,0,0x0,8
tick,0x7ffad1f6fb64,384654817,0,0x0,8
tick,0x7ffad1f6fb64,384669831,0,0x0,8
tick,0x7ffad1f6fb64,384685835,0,0x0,8
tick,0x7ffad1f6fb64,384701852,0,0x0,8
tick,0x7ffad1f6fb64,384716889,0,0x0,8
tick,0x7ffad1f6fb64,384732863,0,0x0,8
tick,0x7ffad1f6fb64,384747891,0,0x0,8
tick,0x7ffad1f6fb64,384763924,0,0x0,8
tick,0x7ffad1f6fb64,384779937,0,0x0,8
tick,0x7ffad1f6fb64,384795931,0,0x0,8
tick,0x7ffad1f6fb64,384810944,0,0x0,8
tick,0x7ffad1f6fb64,384826966,0,0x0,8
tick,0x7ffad1f6fb64,384841989,0,0x0,8
tick,0x7ffad1f6fb64,384857980,0,0x0,8
tick,0x7ffad1f6fb64,384873003,0,0x0,8
tick,0x7ffad1f6fb64,384888015,0,0x0,8
tick,0x7ffad1f6fb64,384903029,0,0x0,8
tick,0x7ffad1f6fb64,384919035,0,0x0,8
tick,0x7ffad1f6fb64,384935068,0,0x0,8
tick,0x7ffad1f6fb64,384950081,0,0x0,8
tick,0x7ffad1f6fb64,384966109,0,0x0,8
tick,0x7ffad1f6fb64,384981158,0,0x0,8
tick,0x7ffad1f6fb64,384996118,0,0x0,8
tick,0x7ffad1f6fb64,385012115,0,0x0,8
tick,0x7ffad1f6fb64,385028150,0,0x0,8
tick,0x7ffad1f6fb64,385043144,0,0x0,8
tick,0x7ffad1f6fb64,385059173,0,0x0,8
tick,0x7ffad1f6fb64,385074184,0,0x0,8
tick,0x7ffad1f6fb64,385090194,0,0x0,8
tick,0x7ffad1f6fb64,385105220,0,0x0,8
tick,0x7ffad1f6fb64,385120221,0,0x0,8
tick,0x7ffad1f6fb64,385135259,0,0x0,8
tick,0x7ffad1f6fb64,385150247,0,0x0,8
tick,0x7ffad1f6fb64,385166281,0,0x0,8
tick,0x7ffad1f6fb64,385181282,0,0x0,8
tick,0x7ffad1f6fb64,385197304,0,0x0,8
tick,0x7ffad1f6fb64,385213309,0,0x0,8
tick,0x7ffad1f6fb64,385229330,0,0x0,8
tick,0x7ffad1f6fb64,385245347,0,0x0,8
tick,0x7ffad1f6fb64,385260356,0,0x0,8
tick,0x7ffad1f6fb64,385276379,0,0x0,8
tick,0x7ffad1f6fb64,385291379,0,0x0,8
tick,0x7ffad1f6fb64,385307404,0,0x0,8
tick,0x7ffad1f6fb64,385322400,0,0x0,8
tick,0x7ffad1f6fb64,385337426,0,0x0,8
tick,0x7ffad1f6fb64,385353429,0,0x0,8
tick,0x7ffad1f6fb64,385369472,0,0x0,8
tick,0x7ffad1f6fb64,385384481,0,0x0,8
tick,0x7ffad1f6fb64,385399473,0,0x0,8
tick,0x7ffad1f6fb64,385414491,0,0x0,8
tick,0x7ffad1f6fb64,385430515,0,0x0,8
tick,0x7ffad1f6fb64,385446521,0,0x0,8
tick,0x7ffad1f6fb64,385462522,0,0x0,8
tick,0x7ffad1f6fb64,385477562,0,0x0,8
tick,0x7ffad1f6fb64,385493613,0,0x0,8
tick,0x7ffad1f6fb64,385508568,0,0x0,8
tick,0x7ffad1f6fb64,385523585,0,0x0,8
tick,0x7ffad1f6fb64,385538607,0,0x0,8
tick,0x7ffad1f6fb64,385554608,0,0x0,8
tick,0x7ffad1f6fb64,385570637,0,0x0,8
tick,0x7ffad1f6fb64,385585658,0,0x0,8
tick,0x7ffad1f6fb64,385600675,0,0x0,8
tick,0x7ffad1f6fb64,385616686,0,0x0,8
tick,0x7ffad1f6fb64,385632695,0,0x0,8
tick,0x7ffad1f6fb64,385648705,0,0x0,8
tick,0x7ffad1f6fb64,385664716,0,0x0,8
tick,0x7ffad1f6fb64,385679763,0,0x0,8
tick,0x7ffad1f6fb64,385695744,0,0x0,8
tick,0x7ffad1f6fb64,385710770,0,0x0,8
tick,0x7ffad1f6fb64,385726772,0,0x0,8
tick,0x7ffad1f6fb64,385741874,0,0x0,8
tick,0x7ffad1f6fb64,385757786,0,0x0,8
tick,0x7ffad1f6fb64,385773812,0,0x0,8
tick,0x7ffad1f6fb64,385788837,0,0x0,8
tick,0x7ffad1f6fb64,385803857,0,0x0,8
tick,0x7ffad1f6fb64,385819865,0,0x0,8
tick,0x7ffad1f6fb64,385834875,0,0x0,8
tick,0x7ffad1f6fb64,385849893,0,0x0,8
tick,0x7ffad1f6fb64,385865902,0,0x0,8
tick,0x7ffad1f6fb64,385880951,0,0x0,8
tick,0x7ffad1f6fb64,385895925,0,0x0,8
tick,0x7ffad1f6fb64,385910932,0,0x0,8
tick,0x7ffad1f6fb64,385926977,0,0x0,8
tick,0x7ffad1f6fb64,385942972,0,0x0,8
tick,0x7ffad1f6fb64,385958991,0,0x0,8
tick,0x7ffad1f6fb64,385975006,0,0x0,8
tick,0x7ffad1f6fb64,385991006,0,0x0,8
tick,0x7ffad1f6fb64,386006021,0,0x0,8
tick,0x7ffad1f6fb64,386021036,0,0x0,8
tick,0x7ffad1f6fb64,386037055,0,0x0,8
tick,0x7ffad1f6fb64,386053052,0,0x0,8
tick,0x7ffad1f6fb64,386069088,0,0x0,8
tick,0x7ffad1f6fb64,386084106,0,0x0,8
tick,0x7ffad1f6fb64,386099104,0,0x0,8
tick,0x7ffad1f6fb64,386114154,0,0x0,8
tick,0x7ffad1f6fb64,386130157,0,0x0,8
tick,0x7ffad1f6fb64,386145192,0,0x0,8
tick,0x7ffad1f6fb64,386160171,0,0x0,8
tick,0x7ffad1f6fb64,386175190,0,0x0,8
tick,0x7ffad1f6fb64,386191203,0,0x0,8
tick,0x7ffad1f6fb64,386206227,0,0x0,8
tick,0x7ffad1f6fb64,386221217,0,0x0,8
tick,0x7ffad1f6fb64,386237288,0,0x0,8
tick,0x7ffad1f6fb64,386253279,0,0x0,8
tick,0x7ffad1f6fb64,386269272,0,0x0,8
tick,0x7ffad1f6fb64,386285315,0,0x0,8
tick,0x7ffad1f6fb64,386301314,0,0x0,8
tick,0x7ffad1f6fb64,386317312,0,0x0,8
tick,0x7ffad1f6fb64,386332347,0,0x0,8
tick,0x7ffad1f6fb64,386348360,0,0x0,8
tick,0x7ffad1f6fb64,386363378,0,0x0,8
tick,0x7ffad1f6fb64,386378381,0,0x0,8
tick,0x7ffad1f6fb64,386394407,0,0x0,8
tick,0x7ffad1f6fb64,386409416,0,0x0,8
tick,0x7ffad1f6fb64,386424411,0,0x0,8
tick,0x7ffad1f6fb64,386440440,0,0x0,8
tick,0x7ffad1f6fb64,386456440,0,0x0,8
tick,0x7ffad1f6fb64,386472457,0,0x0,8
tick,0x7ffad1f6fb64,386488485,0,0x0,8
tick,0x7ffad1f6fb64,386504508,0,0x0,8
tick,0x7ffad1f6fb64,386519509,0,0x0,8
tick,0x7ffad1f6fb64,386535517,0,0x0,8
tick,0x7ffad1f6fb64,386550520,0,0x0,8
tick,0x7ffad1f6fb64,386565554,0,0x0,8
tick,0x7ffad1f6fb64,386581592,0,0x0,8
tick,0x7ffad1f6fb64,386597573,0,0x0,8
tick,0x7ffad1f6fb64,386613663,0,0x0,8
tick,0x7ffad1f6fb64,386629628,0,0x0,8
tick,0x7ffad1f6fb64,386644662,0,0x0,8
tick,0x7ffad1f6fb64,386659645,0,0x0,8
tick,0x7ffad1f6fb64,386674650,0,0x0,8
tick,0x7ffad1f6fb64,386689678,0,0x0,8
tick,0x7ffad1f6fb64,386705661,0,0x0,8
tick,0x7ffad1f6fb64,386720694,0,0x0,8
tick,0x7ffad1f6fb64,386736708,0,0x0,8
tick,0x7ffad1f6fb64,386751702,0,0x0,8
tick,0x7ffad1f6fb64,386766753,0,0x0,8
tick,0x7ffad1f6fb64,386781737,0,0x0,8
tick,0x7ffad1f6fb64,386797779,0,0x0,8
tick,0x7ffad1f6fb64,386813764,0,0x0,8
tick,0x7ffad1f6fb64,386829778,0,0x0,8
tick,0x7ffad1f6fb64,386844789,0,0x0,8
tick,0x7ffad1f6fb64,386860807,0,0x0,8
tick,0x7ffad1f6fb64,386876817,0,0x0,8
tick,0x7ffad1f6fb64,386891840,0,0x0,8
tick,0x7ffad1f6fb64,386906911,0,0x0,8
tick,0x7ffad1f6fb64,386922884,0,0x0,8
tick,0x7ffad1f6fb64,386937891,0,0x0,8
tick,0x7ffad1f6fb64,386953904,0,0x0,8
tick,0x7ffad1f6fb64,386968901,0,0x0,8
tick,0x7ffad1f6fb64,386984927,0,0x0,8
tick,0x7ffad1f6fb64,387000924,0,0x0,8
tick,0x7ffad1f6fb64,387016971,0,0x0,8
tick,0x7ffad1f6fb64,387032964,0,0x0,8
tick,0x7ffad1f6fb64,387048979,0,0x0,8
tick,0x7ffad1f6fb64,387065000,0,0x0,8
tick,0x7ffad1f6fb64,387080037,0,0x0,8
tick,0x7ffad1f6fb64,387095020,0,0x0,8
tick,0x7ffad1f6fb64,387111034,0,0x0,8
tick,0x7ffad1f6fb64,387126073,0,0x0,8
tick,0x7ffad1f6fb64,387141068,0,0x0,8
tick,0x7ffad1f6fb64,387157138,0,0x0,8
tick,0x7ffad1f6fb64,387172094,0,0x0,8
tick,0x7ffad1f6fb64,387187145,0,0x0,8
tick,0x7ffad1f6fb64,387203120,0,0x0,8
tick,0x7ffad1f6fb64,387219130,0,0x0,8
tick,0x7ffad1f6fb64,387234194,0,0x0,8
tick,0x7ffad1f6fb64,387249200,0,0x0,8
tick,0x7ffad1f6fb64,387265198,0,0x0,8
tick,0x7ffad1f6fb64,387280226,0,0x0,8
tick,0x7ffad1f6fb64,387295233,0,0x0,8
tick,0x7ffad1f6fb64,387311223,0,0x0,8
tick,0x7ffad1f6fb64,387327254,0,0x0,8
tick,0x7ffad1f6fb64,387343269,0,0x0,8
tick,0x7ffad1f6fb64,387358273,0,0x0,8
tick,0x7ffad1f6fb64,387373279,0,0x0,8
tick,0x7ffad1f6fb64,387389285,0,0x0,8
tick,0x7ffad1f6fb64,387405330,0,0x0,8
tick,0x7ffad1f6fb64,387420343,0,0x0,8
tick,0x7ffad1f6fb64,387436333,0,0x0,8
tick,0x7ffad1f6fb64,387451389,0,0x0,8
tick,0x7ffad1f6fb64,387466359,0,0x0,8
tick,0x7ffad1f6fb64,387481385,0,0x0,8
tick,0x7ffad1f6fb64,387497392,0,0x0,8
tick,0x7ffad1f6fb64,387512392,0,0x0,8
tick,0x7ffad1f6fb64,387527414,0,0x0,8
tick,0x7ffad1f6fb64,387542449,0,0x0,8
tick,0x7ffad1f6fb64,387558507,0,0x0,8
tick,0x7ffad1f6fb64,387573471,0,0x0,8
tick,0x7ffad1f6fb64,387589486,0,0x0,8
tick,0x7ffad1f6fb64,387605529,0,0x0,8
tick,0x7ffad1f6fb64,387621502,0,0x0,8
tick,0x7ffad1f6fb64,387636526,0,0x0,8
tick,0x7ffad1f6fb64,387652547,0,0x0,8
tick,0x7ffad1f6fb64,387667590,0,0x0,8
tick,0x7ffad1f6fb64,387683548,0,0x0,8
tick,0x7ffad1f6fb64,387699577,0,0x0,8
tick,0x7ffad1f6fb64,387715591,0,0x0,8
tick,0x7ffad1f6fb64,387731596,0,0x0,8
tick,0x7ffad1f6fb64,387746603,0,0x0,8
tick,0x7ffad1f6fb64,387762639,0,0x0,8
tick,0x7ffad1f6fb64,387778635,0,0x0,8
tick,0x7ffad1f6fb64,387793711,0,0x0,8
tick,0x7ffad1f6fb64,387808677,0,0x0,8
tick,0x7ffad1f6fb64,387824694,0,0x0,8
tick,0x7ffad1f6fb64,387839835,0,0x0,8
tick,0x7ffad1f6fb64,387855721,0,0x0,8
tick,0x7ffad1f6fb64,387871735,0,0x0,8
tick,0x7ffad1f6fb64,387887756,0,0x0,8
tick,0x7ffad1f6fb64,387902761,0,0x0,8
tick,0x7ffad1f6fb64,387917787,0,0x0,8
tick,0x7ffad1f6fb64,387933810,0,0x0,8
tick,0x7ffad1f6fb64,387949799,0,0x0,8
tick,0x7ffad1f6fb64,387965848,0,0x0,8
tick,0x7ffad1f6fb64,387980849,0,0x0,8
tick,0x7ffad1f6fb64,387995859,0,0x0,8
tick,0x7ffad1f6fb64,388011844,0,0x0,8
tick,0x7ffad1f6fb64,388027907,0,0x0,8
tick,0x7ffad1f6fb64,388043879,0,0x0,8
tick,0x7ffad1f6fb64,388059892,0,0x0,8
tick,0x7ffad1f6fb64,388074913,0,0x0,8
tick,0x7ffad1f6fb64,388090931,0,0x0,8
tick,0x7ffad1f6fb64,388105951,0,0x0,8
tick,0x7ffad1f6fb64,388120956,0,0x0,8
tick,0x7ffad1f6fb64,388136988,0,0x0,8
tick,0x7ffad1f6fb64,388152991,0,0x0,8
tick,0x7ffad1f6fb64,388168023,0,0x0,8
tick,0x7ffad1f6fb64,388183025,0,0x0,8
tick,0x7ffad1f6fb64,388198020,0,0x0,8
tick,0x7ffad1f6fb64,388214053,0,0x0,8
tick,0x7ffad1f6fb64,388230104,0,0x0,8
tick,0x7ffad1f6fb64,388246081,0,0x0,8
tick,0x7ffad1f6fb64,388261095,0,0x0,8
tick,0x7ffad1f6fb64,388277104,0,0x0,8
tick,0x7ffad1f6fb64,388293328,0,0x0,8
tick,0x7ffad1f6fb64,388308161,0,0x0,8
tick,0x7ffad1f6fb64,388323154,0,0x0,8
tick,0x7ffad1f6fb64,388339160,0,0x0,8
tick,0x7ffad1f6fb64,388355179,0,0x0,8
tick,0x7ffad1f6fb64,388370188,0,0x0,8
tick,0x7ffad1f6fb64,388385210,0,0x0,8
tick,0x7ffad1f6fb64,388400206,0,0x0,8
tick,0x7ffad1f6fb64,388416242,0,0x0,8
tick,0x7ffad1f6fb64,388432276,0,0x0,8
tick,0x7ffad1f6fb64,388448281,0,0x0,8
tick,0x7ffad1f6fb64,388464261,0,0x0,8
tick,0x7ffad1f6fb64,388480276,0,0x0,8
tick,0x7ffad1f6fb64,388495294,0,0x0,8
tick,0x7ffad1f6fb64,388510302,0,0x0,8
tick,0x7ffad1f6fb64,388526332,0,0x0,8
tick,0x7ffad1f6fb64,388541347,0,0x0,8
tick,0x7ffad1f6fb64,388556352,0,0x0,8
tick,0x7ffad1f6fb64,388572381,0,0x0,8
tick,0x7ffad1f6fb64,388587409,0,0x0,8
tick,0x7ffad1f6fb64,388603418,0,0x0,8
tick,0x7ffad1f6fb64,388619407,0,0x0,8
tick,0x7ffad1f6fb64,388634439,0,0x0,8
tick,0x7ffad1f6fb64,388649476,0,0x0,8
tick,0x7ffad1f6fb64,388664476,0,0x0,8
tick,0x7ffad1f6fb64,388679478,0,0x0,8
tick,0x7ffad1f6fb64,388695506,0,0x0,8
tick,0x7ffad1f6fb64,388710491,0,0x0,8
tick,0x7ffad1f6fb64,388725517,0,0x0,8
tick,0x7ffad1f6fb64,388740535,0,0x0,8
tick,0x7ffad1f6fb64,388756547,0,0x0,8
tick,0x7ffad1f6fb64,388772560,0,0x0,8
tick,0x7ffad1f6fb64,388788594,0,0x0,8
tick,0x7ffad1f6fb64,388803614,0,0x0,8
tick,0x7ffad1f6fb64,388819650,0,0x0,8
tick,0x7ffad1f6fb64,388834619,0,0x0,8
tick,0x7ffad1f6fb64,388849636,0,0x0,8
tick,0x7ffad1f6fb64,388864651,0,0x0,8
tick,0x7ffad1f6fb64,388879686,0,0x0,8
tick,0x7ffad1f6fb64,388894668,0,0x0,8
tick,0x7ffad1f6fb64,388910706,0,0x0,8
tick,0x7ffad1f6fb64,388925709,0,0x0,8
tick,0x7ffad1f6fb64,388940716,0,0x0,8
tick,0x7ffad1f6fb64,388956732,0,0x0,8
tick,0x7ffad1f6fb64,388972750,0,0x0,8
tick,0x7ffad1f6fb64,388987752,0,0x0,8
tick,0x7ffad1f6fb64,389002783,0,0x0,8
tick,0x7ffad1f6fb64,389018767,0,0x0,8
tick,0x7ffad1f6fb64,389033807,0,0x0,8
tick,0x7ffad1f6fb64,389049793,0,0x0,8
tick,0x7ffad1f6fb64,389065822,0,0x0,8
tick,0x7ffad1f6fb64,389081834,0,0x0,8
tick,0x7ffad1f6fb64,389097852,0,0x0,8
tick,0x7ffad1f6fb64,389113866,0,0x0,8
tick,0x7ffad1f6fb64,389128861,0,0x0,8
tick,0x7ffad1f6fb64,389143885,0,0x0,8
tick,0x7ffad1f6fb64,389159898,0,0x0,8
tick,0x7ffad1f6fb64,389175914,0,0x0,8
tick,0x7ffad1f6fb64,389190942,0,0x0,8
tick,0x7ffad1f6fb64,389205981,0,0x0,8
tick,0x7ffad1f6fb64,389220965,0,0x0,8
tick,0x7ffad1f6fb64,389236982,0,0x0,8
tick,0x7ffad1f6fb64,389252975,0,0x0,8
tick,0x7ffad1f6fb64,389269021,0,0x0,8
tick,0x7ffad1f6fb64,389284061,0,0x0,8
tick,0x7ffad1f6fb64,389299058,0,0x0,8
tick,0x7ffad1f6fb64,389315060,0,0x0,8
tick,0x7ffad1f6fb64,389330116,0,0x0,8
tick,0x7ffad1f6fb64,389345076,0,0x0,8
tick,0x7ffad1f6fb64,389361091,0,0x0,8
tick,0x7ffad1f6fb64,389377119,0,0x0,8
tick,0x7ffad1f6fb64,389393106,0,0x0,8
tick,0x7ffad1f6fb64,389409141,0,0x0,8
tick,0x7ffad1f6fb64,389424156,0,0x0,8
tick,0x7ffad1f6fb64,389440368,0,0x0,8
tick,0x7ffad1f6fb64,389455181,0,0x0,8
tick,0x7ffad1f6fb64,389471209,0,0x0,8
tick,0x7ffad1f6fb64,389487196,0,0x0,8
tick,0x7ffad1f6fb64,389503227,0,0x0,8
tick,0x7ffad1f6fb64,389519262,0,0x0,8
tick,0x7ffad1f6fb64,389535253,0,0x0,8
tick,0x7ffad1f6fb64,389550252,0,0x0,8
tick,0x7ffad1f6fb64,389566276,0,0x0,8
tick,0x7ffad1f6fb64,389581331,0,0x0,8
tick,0x7ffad1f6fb64,389597322,0,0x0,8
tick,0x7ffad1f6fb64,389612324,0,0x0,8
tick,0x7ffad1f6fb64,389627360,0,0x0,8
tick,0x7ffad1f6fb64,389643338,0,0x0,8
tick,0x7ffad1f6fb64,389659374,0,0x0,8
tick,0x7ffad1f6fb64,389674375,0,0x0,8
tick,0x7ffad1f6fb64,389689377,0,0x0,8
tick,0x7ffad1f6fb64,389705406,0,0x0,8
tick,0x7ffad1f6fb64,389720496,0,0x0,8
tick,0x7ffad1f6fb64,389735426,0,0x0,8
tick,0x7ffad1f6fb64,389751428,0,0x0,8
tick,0x7ffad1f6fb64,389766447,0,0x0,8
tick,0x7ffad1f6fb64,389781477,0,0x0,8
tick,0x7ffad1f6fb64,389797480,0,0x0,8
tick,0x7ffad1f6fb64,389813504,0,0x0,8
tick,0x7ffad1f6fb64,389828520,0,0x0,8
tick,0x7ffad1f6fb64,389844564,0,0x0,8
tick,0x7ffad1f6fb64,389859537,0,0x0,8
tick,0x7ffad1f6fb64,389875594,0,0x0,8
tick,0x7ffad1f6fb64,389890600,0,0x0,8
tick,0x7ffad1f6fb64,389906589,0,0x0,8
tick,0x7ffad1f6fb64,389922610,0,0x0,8
tick,0x7ffad1f6fb64,389937616,0,0x0,8
tick,0x7ffad1f6fb64,389952636,0,0x0,8
tick,0x7ffad1f6fb64,389968633,0,0x0,8
tick,0x7ffad1f6fb64,389984702,0,0x0,8
tick,0x7ffad1f6fb64,389999666,0,0x0,8
tick,0x7ffad1f6fb64,390014680,0,0x0,8
tick,0x7ffad1f6fb64,390029687,0,0x0,8
tick,0x7ffad1f6fb64,390045723,0,0x0,8
tick,0x7ffad1f6fb64,390061746,0,0x0,8
tick,0x7ffad1f6fb64,390077739,0,0x0,8
tick,0x7ffad1f6fb64,390093778,0,0x0,8
tick,0x7ffad1f6fb64,390109763,0,0x0,8
tick,0x7ffad1f6fb64,390124782,0,0x0,8
tick,0x7ffad1f6fb64,390139788,0,0x0,8
tick,0x7ffad1f6fb64,390155817,0,0x0,8
tick,0x7ffad1f6fb64,390170867,0,0x0,8
tick,0x7ffad1f6fb64,390185880,0,0x0,8
tick,0x7ffad1f6fb64,390201898,0,0x0,8
tick,0x7ffad1f6fb64,390217881,0,0x0,8
tick,0x7ffad1f6fb64,390232900,0,0x0,8
tick,0x7ffad1f6fb64,390248891,0,0x0,8
tick,0x7ffad1f6fb64,390263911,0,0x0,8
tick,0x7ffad1f6fb64,390279940,0,0x0,8
tick,0x7ffad1f6fb64,390294934,0,0x0,8
tick,0x7ffad1f6fb64,390310965,0,0x0,8
tick,0x7ffad1f6fb64,390325962,0,0x0,8
tick,0x7ffad1f6fb64,390340978,0,0x0,8
tick,0x7ffad1f6fb64,390357036,0,0x0,8
tick,0x7ffad1f6fb64,390373012,0,0x0,8
tick,0x7ffad1f6fb64,390389034,0,0x0,8
tick,0x7ffad1f6fb64,390405041,0,0x0,8
tick,0x7ffad1f6fb64,390420055,0,0x0,8
tick,0x7ffad1f6fb64,390436098,0,0x0,8
tick,0x7ffad1f6fb64,390451091,0,0x0,8
tick,0x7ffad1f6fb64,390466080,0,0x0,8
tick,0x7ffad1f6fb64,390481106,0,0x0,8
tick,0x7ffad1f6fb64,390497159,0,0x0,8
tick,0x7ffad1f6fb64,390512123,0,0x0,8
tick,0x7ffad1f6fb64,390527225,0,0x0,8
tick,0x7ffad1f6fb64,390543155,0,0x0,8
tick,0x7ffad1f6fb64,390559178,0,0x0,8
tick,0x7ffad1f6fb64,390575191,0,0x0,8
tick,0x7ffad1f6fb64,390590208,0,0x0,8
tick,0x7ffad1f6fb64,390605228,0,0x0,8
tick,0x7ffad1f6fb64,390620224,0,0x0,8
tick,0x7ffad1f6fb64,390636252,0,0x0,8
tick,0x7ffad1f6fb64,390652259,0,0x0,8
tick,0x7ffad1f6fb64,390668267,0,0x0,8
tick,0x7ffad1f6fb64,390683282,0,0x0,8
tick,0x7ffad1f6fb64,390699296,0,0x0,8
tick,0x7ffad1f6fb64,390715338,0,0x0,8
tick,0x7ffad1f6fb64,390730334,0,0x0,8
tick,0x7ffad1f6fb64,390745385,0,0x0,8
tick,0x7ffad1f6fb64,390761381,0,0x0,8
tick,0x7ffad1f6fb64,390776394,0,0x0,8
tick,0x7ffad1f6fb64,390791405,0,0x0,8
tick,0x7ffad1f6fb64,390807412,0,0x0,8
tick,0x7ffad1f6fb64,390822437,0,0x0,8
tick,0x7ffad1f6fb64,390837459,0,0x0,8
tick,0x7ffad1f6fb64,390853453,0,0x0,8
tick,0x7ffad1f6fb64,390869512,0,0x0,8
tick,0x7ffad1f6fb64,390885477,0,0x0,8
tick,0x7ffad1f6fb64,390900503,0,0x0,8
tick,0x7ffad1f6fb64,390916513,0,0x0,8
tick,0x7ffad1f6fb64,390932564,0,0x0,8
tick,0x7ffad1f6fb64,390948544,0,0x0,8
tick,0x7ffad1f6fb64,390964562,0,0x0,8
tick,0x7ffad1f6fb64,390979580,0,0x0,8
tick,0x7ffad1f6fb64,390995616,0,0x0,8
tick,0x7ffad1f6fb64,391011606,0,0x0,8
tick,0x7ffad1f6fb64,391026635,0,0x0,8
tick,0x7ffad1f6fb64,391042632,0,0x0,8
tick,0x7ffad1f6fb64,391058678,0,0x0,8
tick,0x7ffad1f6fb64,391074103,0,0x0,8
tick,0x7ffad1f6fb64,391089737,0,0x0,8
tick,0x7ffad1f6fb64,391106161,0,0x0,8
tick,0x7ffad1f6fb64,391121728,0,0x0,8
tick,0x7ffad1f6fb64,391137732,0,0x0,8
tick,0x7ffad1f6fb64,391152744,0,0x0,8
tick,0x7ffad1f6fb64,391167739,0,0x0,8
tick,0x7ffad1f6fb64,391182782,0,0x0,8
tick,0x7ffad1f6fb64,391197779,0,0x0,8
tick,0x7ffad1f6fb64,391212798,0,0x0,8
tick,0x7ffad1f6fb64,391228818,0,0x0,8
tick,0x7ffad1f6fb64,391244822,0,0x0,8
tick,0x7ffad1f6fb64,391260854,0,0x0,8
tick,0x7ffad1f6fb64,391275844,0,0x0,8
tick,0x7ffad1f6fb64,391290862,0,0x0,8
tick,0x7ffad1f6fb64,391305864,0,0x0,8
tick,0x7ffad1f6fb64,391321878,0,0x0,8
tick,0x7ffad1f6fb64,391337904,0,0x0,8
tick,0x7ffad1f6fb64,391353903,0,0x0,8
tick,0x7ffad1f6fb64,391368930,0,0x0,8
tick,0x7ffad1f6fb64,391383950,0,0x0,8
tick,0x7ffad1f6fb64,391398960,0,0x0,8
tick,0x7ffad1f6fb64,391414970,0,0x0,8
tick,0x7ffad1f6fb64,391430991,0,0x0,8
tick,0x7ffad1f6fb64,391447004,0,0x0,8
tick,0x7ffad1f6fb64,391463015,0,0x0,8
tick,0x7ffad1f6fb64,391478028,0,0x0,8
tick,0x7ffad1f6fb64,391493034,0,0x0,8
tick,0x7ffad1f6fb64,391509053,0,0x0,8
tick,0x7ffad1f6fb64,391525082,0,0x0,8
tick,0x7ffad1f6fb64,391540099,0,0x0,8
tick,0x7ffad1f6fb64,391555074,0,0x0,8
tick,0x7ffad1f6fb64,391570095,0,0x0,8
tick,0x7ffad1f6fb64,391586164,0,0x0,8
tick,0x7ffad1f6fb64,391602163,0,0x0,8
tick,0x7ffad1f6fb64,391618170,0,0x0,8
tick,0x7ffad1f6fb64,391633178,0,0x0,8
tick,0x7ffad1f6fb64,391648217,0,0x0,8
tick,0x7ffad1f6fb64,391663198,0,0x0,8
tick,0x7ffad1f6fb64,391678198,0,0x0,8
tick,0x7ffad1f6fb64,391693217,0,0x0,8
tick,0x7ffad1f6fb64,391708231,0,0x0,8
tick,0x7ffad1f6fb64,391724265,0,0x0,8
tick,0x7ffad1f6fb64,391740269,0,0x0,8
tick,0x7ffad1f6fb64,391756270,0,0x0,8
tick,0x7ffad1f6fb64,391771304,0,0x0,8
tick,0x7ffad1f6fb64,391787301,0,0x0,8
tick,0x7ffad1f6fb64,391803302,0,0x0,8
tick,0x7ffad1f6fb64,391819315,0,0x0,8
tick,0x7ffad1f6fb64,391834355,0,0x0,8
tick,0x7ffad1f6fb64,391850362,0,0x0,8
tick,0x7ffad1f6fb64,391866358,0,0x0,8
tick,0x7ffad1f6fb64,391881390,0,0x0,8
tick,0x7ffad1f6fb64,391897479,0,0x0,8
tick,0x7ffad1f6fb64,391913434,0,0x0,8
tick,0x7ffad1f6fb64,391929427,0,0x0,8
tick,0x7ffad1f6fb64,391944437,0,0x0,8
tick,0x7ffad1f6fb64,391960476,0,0x0,8
tick,0x7ffad1f6fb64,391975490,0,0x0,8
tick,0x7ffad1f6fb64,391991514,0,0x0,8
tick,0x7ffad1f6fb64,392007521,0,0x0,8
tick,0x7ffad1f6fb64,392022532,0,0x0,8
tick,0x7ffad1f6fb64,392037559,0,0x0,8
tick,0x7ffad1f6fb64,392053545,0,0x0,8
tick,0x7ffad1f6fb64,392069595,0,0x0,8
tick,0x7ffad1f6fb64,392085595,0,0x0,8
tick,0x7ffad1f6fb64,392100605,0,0x0,8
tick,0x7ffad1f6fb64,392116649,0,0x0,8
tick,0x7ffad1f6fb64,392131651,0,0x0,8
tick,0x7ffad1f6fb64,392146648,0,0x0,8
tick,0x7ffad1f6fb64,392161638,0,0x0,8
tick,0x7ffad1f6fb64,392177699,0,0x0,8
tick,0x7ffad1f6fb64,392193665,0,0x0,8
tick,0x7ffad1f6fb64,392209690,0,0x0,8
tick,0x7ffad1f6fb64,392225711,0,0x0,8
tick,0x7ffad1f6fb64,392240735,0,0x0,8
tick,0x7ffad1f6fb64,392255794,0,0x0,8
tick,0x7ffad1f6fb64,392270774,0,0x0,8
tick,0x7ffad1f6fb64,392285760,0,0x0,8
tick,0x7ffad1f6fb64,392300773,0,0x0,8
tick,0x7ffad1f6fb64,392316779,0,0x0,8
tick,0x7ffad1f6fb64,392332798,0,0x0,8
tick,0x7ffad1f6fb64,392348824,0,0x0,8
tick,0x7ffad1f6fb64,392363829,0,0x0,8
tick,0x7ffad1f6fb64,392379837,0,0x0,8
tick,0x7ffad1f6fb64,392395870,0,0x0,8
tick,0x7ffad1f6fb64,392411866,0,0x0,8
tick,0x7ffad1f6fb64,392426884,0,0x0,8
tick,0x7ffad1f6fb64,392441894,0,0x0,8
tick,0x7ffad1f6fb64,392457934,0,0x0,8
tick,0x7ffad1f6fb64,392473926,0,0x0,8
tick,0x7ffad1f6fb64,392489940,0,0x0,8
tick,0x7ffad1f6fb64,392505949,0,0x0,8
tick,0x7ffad1f6fb64,392520988,0,0x0,8
tick,0x7ffad1f6fb64,392536986,0,0x0,8
tick,0x7ffad1f6fb64,392552010,0,0x0,8
tick,0x7ffad1f6fb64,392567043,0,0x0,8
tick,0x7ffad1f6fb64,392582045,0,0x0,8
tick,0x7ffad1f6fb64,392598056,0,0x0,8
tick,0x7ffad1f6fb64,392613054,0,0x0,8
tick,0x7ffad1f6fb64,392628248,0,0x0,8
tick,0x7ffad1f6fb64,392643091,0,0x0,8
tick,0x7ffad1f6fb64,392659091,0,0x0,8
tick,0x7ffad1f6fb64,392675130,0,0x0,8
tick,0x7ffad1f6fb64,392691175,0,0x0,8
tick,0x7ffad1f6fb64,392706153,0,0x0,8
tick,0x7ffad1f6fb64,392721161,0,0x0,8
tick,0x7ffad1f6fb64,392737182,0,0x0,8
tick,0x7ffad1f6fb64,392753177,0,0x0,8
tick,0x7ffad1f6fb64,392769193,0,0x0,8
tick,0x7ffad1f6fb64,392784215,0,0x0,8
tick,0x7ffad1f6fb64,392799240,0,0x0,8
tick,0x7ffad1f6fb64,392815254,0,0x0,8
tick,0x7ffad1f6fb64,392831303,0,0x0,8
tick,0x7ffad1f6fb64,392846292,0,0x0,8
tick,0x7ffad1f6fb64,392861292,0,0x0,8
tick,0x7ffad1f6fb64,392877280,0,0x0,8
tick,0x7ffad1f6fb64,392892325,0,0x0,8
tick,0x7ffad1f6fb64,392908536,0,0x0,8
tick,0x7ffad1f6fb64,392923364,0,0x0,8
tick,0x7ffad1f6fb64,392938357,0,0x0,8
tick,0x7ffad1f6fb64,392954366,0,0x0,8
tick,0x7ffad1f6fb64,392970379,0,0x0,8
tick,0x7ffad1f6fb64,392986383,0,0x0,8
tick,0x7ffad1f6fb64,393002393,0,0x0,8
tick,0x7ffad1f6fb64,393017433,0,0x0,8
tick,0x7ffad1f6fb64,393033434,0,0x0,8
tick,0x7ffad1f6fb64,393049445,0,0x0,8
tick,0x7ffad1f6fb64,393064514,0,0x0,8
tick,0x7ffad1f6fb64,393079489,0,0x0,8
tick,0x7ffad1f6fb64,393094494,0,0x0,8
tick,0x7ffad1f6fb64,393110549,0,0x0,8
tick,0x7ffad1f6fb64,393125528,0,0x0,8
tick,0x7ffad1f6fb64,393140538,0,0x0,8
tick,0x7ffad1f6fb64,393155555,0,0x0,8
tick,0x7ffad1f6fb64,393170560,0,0x0,8
tick,0x7ffad1f6fb64,393186631,0,0x0,8
tick,0x7ffad1f6fb64,393202581,0,0x0,8
tick,0x7ffad1f6fb64,393217610,0,0x0,8
tick,0x7ffad1f6fb64,393233618,0,0x0,8
tick,0x7ffad1f6fb64,393249645,0,0x0,8
tick,0x7ffad1f6fb64,393265656,0,0x0,8
tick,0x7ffad1f6fb64,393281667,0,0x0,8
tick,0x7ffad1f6fb64,393296661,0,0x0,8
tick,0x7ffad1f6fb64,393312699,0,0x0,8
tick,0x7ffad1f6fb64,393328743,0,0x0,8
tick,0x7ffad1f6fb64,393343713,0,0x0,8
tick,0x7ffad1f6fb64,393359721,0,0x0,8
tick,0x7ffad1f6fb64,393375743,0,0x0,8
tick,0x7ffad1f6fb64,393390771,0,0x0,8
tick,0x7ffad1f6fb64,393405784,0,0x0,8
tick,0x7ffad1f6fb64,393421791,0,0x0,8
tick,0x7ffad1f6fb64,393436845,0,0x0,8
tick,0x7ffad1f6fb64,393452821,0,0x0,8
tick,0x7ffad1f6fb64,393467844,0,0x0,8
tick,0x7ffad1f6fb64,393483852,0,0x0,8
tick,0x7ffad1f6fb64,393498853,0,0x0,8
tick,0x7ffad1f6fb64,393513866,0,0x0,8
tick,0x7ffad1f6fb64,393529879,0,0x0,8
tick,0x7ffad1f6fb64,393545896,0,0x0,8
tick,0x7ffad1f6fb64,393561902,0,0x0,8
tick,0x7ffad1f6fb64,393577950,0,0x0,8
tick,0x7ffad1f6fb64,393592946,0,0x0,8
tick,0x7ffad1f6fb64,393608945,0,0x0,8
tick,0x7ffad1f6fb64,393624966,0,0x0,8
tick,0x7ffad1f6fb64,393639999,0,0x0,8
tick,0x7ffad1f6fb64,393655032,0,0x0,8
tick,0x7ffad1f6fb64,393670085,0,0x0,8
tick,0x7ffad1f6fb64,393686025,0,0x0,8
tick,0x7ffad1f6fb64,393701051,0,0x0,8
tick,0x7ffad1f6fb64,393716056,0,0x0,8
tick,0x7ffad1f6fb64,393732083,0,0x0,8
tick,0x7ffad1f6fb64,393748073,0,0x0,8
tick,0x7ffad1f6fb64,393763116,0,0x0,8
tick,0x7ffad1f6fb64,393778111,0,0x0,8
tick,0x7ffad1f6fb64,393793131,0,0x0,8
tick,0x7ffad1f6fb64,393809131,0,0x0,8
tick,0x7ffad1f6fb64,393825171,0,0x0,8
tick,0x7ffad1f6fb64,393840169,0,0x0,8
tick,0x7ffad1f6fb64,393856183,0,0x0,8
tick,0x7ffad1f6fb64,393871208,0,0x0,8
tick,0x7ffad1f6fb64,393886215,0,0x0,8
tick,0x7ffad1f6fb64,393902226,0,0x0,8
tick,0x7ffad1f6fb64,393918237,0,0x0,8
tick,0x7ffad1f6fb64,393934263,0,0x0,8
tick,0x7ffad1f6fb64,393949313,0,0x0,8
tick,0x7ffad1f6fb64,393965286,0,0x0,8
tick,0x7ffad1f6fb64,393980338,0,0x0,8
tick,0x7ffad1f6fb64,393995314,0,0x0,8
tick,0x7ffad1f6fb64,394011323,0,0x0,8
tick,0x7ffad1f6fb64,394026337,0,0x0,8
tick,0x7ffad1f6fb64,394042356,0,0x0,8
tick,0x7ffad1f6fb64,394058362,0,0x0,8
tick,0x7ffad1f6fb64,394074376,0,0x0,8
tick,0x7ffad1f6fb64,394089446,0,0x0,8
tick,0x7ffad1f6fb64,394105405,0,0x0,8
tick,0x7ffad1f6fb64,394120450,0,0x0,8
tick,0x7ffad1f6fb64,394136438,0,0x0,8
tick,0x7ffad1f6fb64,394152461,0,0x0,8
tick,0x7ffad1f6fb64,394167526,0,0x0,8
tick,0x7ffad1f6fb64,394182496,0,0x0,8
tick,0x7ffad1f6fb64,394197549,0,0x0,8
tick,0x7ffad1f6fb64,394213543,0,0x0,8
tick,0x7ffad1f6fb64,394228558,0,0x0,8
tick,0x7ffad1f6fb64,394243595,0,0x0,8
tick,0x7ffad1f6fb64,394259600,0,0x0,8
tick,0x7ffad1f6fb64,394275625,0,0x0,8
tick,0x7ffad1f6fb64,394290618,0,0x0,8
tick,0x7ffad1f6fb64,394305624,0,0x0,8
tick,0x7ffad1f6fb64,394320626,0,0x0,8
tick,0x7ffad1f6fb64,394336222,0,0x0,8
tick,0x7ffad1f6fb64,394350657,0,0x0,8
tick,0x7ffad1f6fb64,394365672,0,0x0,8
tick,0x7ffad1f6fb64,394381719,0,0x0,8
tick,0x7ffad1f6fb64,394397674,0,0x0,8
tick,0x7ffad1f6fb64,394412706,0,0x0,8
tick,0x7ffad1f6fb64,394428852,0,0x0,8
tick,0x7ffad1f6fb64,394443737,0,0x0,8
tick,0x7ffad1f6fb64,394458765,0,0x0,8
tick,0x7ffad1f6fb64,394473755,0,0x0,8
tick,0x7ffad1f6fb64,394489764,0,0x0,8
tick,0x7ffad1f6fb64,394505796,0,0x0,8
tick,0x7ffad1f6fb64,394521794,0,0x0,8
tick,0x7ffad1f6fb64,394536825,0,0x0,8
tick,0x7ffad1f6fb64,394552806,0,0x0,8
tick,0x7ffad1f6fb64,394568855,0,0x0,8
tick,0x7ffad1f6fb64,394584855,0,0x0,8
tick,0x7ffad1f6fb64,394599903,0,0x0,8
tick,0x7ffad1f6fb64,394615920,0,0x0,8
tick,0x7ffad1f6fb64,394630925,0,0x0,8
tick,0x7ffad1f6fb64,394646900,0,0x0,8
tick,0x7ffad1f6fb64,394661915,0,0x0,8
tick,0x7ffad1f6fb64,394677934,0,0x0,8
tick,0x7ffad1f6fb64,394692969,0,0x0,8
tick,0x7ffad1f6fb64,394707953,0,0x0,8
tick,0x7ffad1f6fb64,394723028,0,0x0,8
tick,0x7ffad1f6fb64,394738994,0,0x0,8
tick,0x7ffad1f6fb64,394755000,0,0x0,8
tick,0x7ffad1f6fb64,394771013,0,0x0,8
tick,0x7ffad1f6fb64,394786038,0,0x0,8
tick,0x7ffad1f6fb64,394801026,0,0x0,8
tick,0x7ffad1f6fb64,394816059,0,0x0,8
tick,0x7ffad1f6fb64,394832079,0,0x0,8
tick,0x7ffad1f6fb64,394848318,0,0x0,8
tick,0x7ffad1f6fb64,394864099,0,0x0,8
tick,0x7ffad1f6fb64,394880114,0,0x0,8
tick,0x7ffad1f6fb64,394895133,0,0x0,8
tick,0x7ffad1f6fb64,394911167,0,0x0,8
tick,0x7ffad1f6fb64,394927159,0,0x0,8
tick,0x7ffad1f6fb64,394943188,0,0x0,8
tick,0x7ffad1f6fb64,394959201,0,0x0,8
tick,0x7ffad1f6fb64,394974287,0,0x0,8
tick,0x7ffad1f6fb64,394990234,0,0x0,8
tick,0x7ffad1f6fb64,395006240,0,0x0,8
tick,0x7ffad1f6fb64,395021233,0,0x0,8
tick,0x7ffad1f6fb64,395036266,0,0x0,8
tick,0x7ffad1f6fb64,395051260,0,0x0,8
tick,0x7ffad1f6fb64,395066303,0,0x0,8
tick,0x7ffad1f6fb64,395081307,0,0x0,8
tick,0x7ffad1f6fb64,395097335,0,0x0,8
tick,0x7ffad1f6fb64,395112348,0,0x0,8
tick,0x7ffad1f6fb64,395127343,0,0x0,8
tick,0x7ffad1f6fb64,395143367,0,0x0,8
tick,0x7ffad1f6fb64,395159370,0,0x0,8
tick,0x7ffad1f6fb64,395174395,0,0x0,8
tick,0x7ffad1f6fb64,395190592,0,0x0,8
tick,0x7ffad1f6fb64,395205447,0,0x0,8
tick,0x7ffad1f6fb64,395220436,0,0x0,8
tick,0x7ffad1f6fb64,395235449,0,0x0,8
tick,0x7ffad1f6fb64,395250453,0,0x0,8
tick,0x7ffad1f6fb64,395265467,0,0x0,8
tick,0x7ffad1f6fb64,395281490,0,0x0,8
tick,0x7ffad1f6fb64,395297522,0,0x0,8
tick,0x7ffad1f6fb64,395313530,0,0x0,8
tick,0x7ffad1f6fb64,395328522,0,0x0,8
tick,0x7ffad1f6fb64,395343541,0,0x0,8
tick,0x7ffad1f6fb64,395359593,0,0x0,8
tick,0x7ffad1f6fb64,395375571,0,0x0,8
tick,0x7ffad1f6fb64,395390609,0,0x0,8
tick,0x7ffad1f6fb64,395405592,0,0x0,8
tick,0x7ffad1f6fb64,395421608,0,0x0,8
tick,0x7ffad1f6fb64,395437647,0,0x0,8
tick,0x7ffad1f6fb64,395453640,0,0x0,8
tick,0x7ffad1f6fb64,395468650,0,0x0,8
tick,0x7ffad1f6fb64,395484685,0,0x0,8
tick,0x7ffad1f6fb64,395499763,0,0x0,8
tick,0x7ffad1f6fb64,395515705,0,0x0,8
tick,0x7ffad1f6fb64,395531728,0,0x0,8
tick,0x7ffad1f6fb64,395547728,0,0x0,8
tick,0x7ffad1f6fb64,395562759,0,0x0,8
tick,0x7ffad1f6fb64,395577775,0,0x0,8
tick,0x7ffad1f6fb64,395592793,0,0x0,8
tick,0x7ffad1f6fb64,395607869,0,0x0,8
tick,0x7ffad1f6fb64,395622820,0,0x0,8
tick,0x7ffad1f6fb64,395638849,0,0x0,8
tick,0x7ffad1f6fb64,395654835,0,0x0,8
tick,0x7ffad1f6fb64,395669854,0,0x0,8
tick,0x7ffad1f6fb64,395685910,0,0x0,8
tick,0x7ffad1f6fb64,395701887,0,0x0,8
tick,0x7ffad1f6fb64,395716920,0,0x0,8
tick,0x7ffad1f6fb64,395732897,0,0x0,8
tick,0x7ffad1f6fb64,395748918,0,0x0,8
tick,0x7ffad1f6fb64,395764014,0,0x0,8
tick,0x7ffad1f6fb64,395779956,0,0x0,8
tick,0x7ffad1f6fb64,395794950,0,0x0,8
tick,0x7ffad1f6fb64,395810996,0,0x0,8
tick,0x7ffad1f6fb64,395827013,0,0x0,8
tick,0x7ffad1f6fb64,395843016,0,0x0,8
tick,0x7ffad1f6fb64,395858028,0,0x0,8
tick,0x7ffad1f6fb64,395874059,0,0x0,8
tick,0x7ffad1f6fb64,395889100,0,0x0,8
tick,0x7ffad1f6fb64,395904050,0,0x0,8
tick,0x7ffad1f6fb64,395920083,0,0x0,8
tick,0x7ffad1f6fb64,395936163,0,0x0,8
tick,0x7ffad1f6fb64,395951372,0,0x0,8
tick,0x7ffad1f6fb64,395966172,0,0x0,8
tick,0x7ffad1f6fb64,395981125,0,0x0,8
tick,0x7ffad1f6fb64,395997179,0,0x0,8
tick,0x7ffad1f6fb64,396012159,0,0x0,8
tick,0x7ffad1f6fb64,396028200,0,0x0,8
tick,0x7ffad1f6fb64,396043231,0,0x0,8
tick,0x7ffad1f6fb64,396058268,0,0x0,8
tick,0x7ffad1f6fb64,396074227,0,0x0,8
tick,0x7ffad1f6fb64,396089229,0,0x0,8
tick,0x7ffad1f6fb64,396104230,0,0x0,8
tick,0x7ffad1f6fb64,396119287,0,0x0,8
tick,0x7ffad1f6fb64,396134273,0,0x0,8
tick,0x7ffad1f6fb64,396150315,0,0x0,8
tick,0x7ffad1f6fb64,396166285,0,0x0,8
tick,0x7ffad1f6fb64,396181314,0,0x0,8
tick,0x7ffad1f6fb64,396197335,0,0x0,8
tick,0x7ffad1f6fb64,396213334,0,0x0,8
tick,0x7ffad1f6fb64,396229568,0,0x0,8
tick,0x7ffad1f6fb64,396245362,0,0x0,8
tick,0x7ffad1f6fb64,396260378,0,0x0,8
tick,0x7ffad1f6fb64,396276389,0,0x0,8
tick,0x7ffad1f6fb64,396292409,0,0x0,8
tick,0x7ffad1f6fb64,396308414,0,0x0,8
tick,0x7ffad1f6fb64,396323462,0,0x0,8
tick,0x7ffad1f6fb64,396339484,0,0x0,8
tick,0x7ffad1f6fb64,396355452,0,0x0,8
tick,0x7ffad1f6fb64,396370488,0,0x0,8
tick,0x7ffad1f6fb64,396386600,0,0x0,8
tick,0x7ffad1f6fb64,396402501,0,0x0,8
tick,0x7ffad1f6fb64,396417645,0,0x0,8
tick,0x7ffad1f6fb64,396433547,0,0x0,8
tick,0x7ffad1f6fb64,396448562,0,0x0,8
tick,0x7ffad1f6fb64,396464562,0,0x0,8
tick,0x7ffad1f6fb64,396479586,0,0x0,8
tick,0x7ffad1f6fb64,396495602,0,0x0,8
tick,0x7ffad1f6fb64,396510739,0,0x0,8
tick,0x7ffad1f6fb64,396525633,0,0x0,8
tick,0x7ffad1f6fb64,396540660,0,0x0,8
tick,0x7ffad1f6fb64,396555673,0,0x0,8
tick,0x7ffad1f6fb64,396571688,0,0x0,8
tick,0x7ffad1f6fb64,396586745,0,0x0,8
tick,0x7ffad1f6fb64,396601696,0,0x0,8
tick,0x7ffad1f6fb64,396616746,0,0x0,8
tick,0x7ffad1f6fb64,396631743,0,0x0,8
tick,0x7ffad1f6fb64,396647760,0,0x0,8
tick,0x7ffad1f6fb64,396663739,0,0x0,8
tick,0x7ffad1f6fb64,396679778,0,0x0,8
tick,0x7ffad1f6fb64,396695814,0,0x0,8
tick,0x7ffad1f6fb64,396710874,0,0x0,8
tick,0x7ffad1f6fb64,396726837,0,0x0,8
tick,0x7ffad1f6fb64,396742844,0,0x0,8
tick,0x7ffad1f6fb64,396757844,0,0x0,8
tick,0x7ffad1f6fb64,396773847,0,0x0,8
tick,0x7ffad1f6fb64,396789895,0,0x0,8
tick,0x7ffad1f6fb64,396804917,0,0x0,8
tick,0x7ffad1f6fb64,396819934,0,0x0,8
tick,0x7ffad1f6fb64,396834940,0,0x0,8
tick,0x7ffad1f6fb64,396849905,0,0x0,8
tick,0x7ffad1f6fb64,396864909,0,0x0,8
tick,0x7ffad1f6fb64,396879932,0,0x0,8
tick,0x7ffad1f6fb64,396895936,0,0x0,8
tick,0x7ffad1f6fb64,396911099,0,0x0,8
tick,0x7ffad1f6fb64,396926990,0,0x0,8
tick,0x7ffad1f6fb64,396943001,0,0x0,8
tick,0x7ffad1f6fb64,396959038,0,0x0,8
tick,0x7ffad1f6fb64,396974084,0,0x0,8
tick,0x7ffad1f6fb64,396990071,0,0x0,8
tick,0x7ffad1f6fb64,397006112,0,0x0,8
tick,0x7ffad1f6fb64,397021114,0,0x0,8
tick,0x7ffad1f6fb64,397036168,0,0x0,8
tick,0x7ffad1f6fb64,397051151,0,0x0,8
tick,0x7ffad1f6fb64,397066153,0,0x0,8
tick,0x7ffad1f6fb64,397081125,0,0x0,8
tick,0x7ffad1f6fb64,397097179,0,0x0,8
tick,0x7ffad1f6fb64,397113164,0,0x0,8
tick,0x7ffad1f6fb64,397128182,0,0x0,8
tick,0x7ffad1f6fb64,397143175,0,0x0,8
tick,0x7ffad1f6fb64,397159206,0,0x0,8
tick,0x7ffad1f6fb64,397175205,0,0x0,8
tick,0x7ffad1f6fb64,397191284,0,0x0,8
tick,0x7ffad1f6fb64,397206254,0,0x0,8
tick,0x7ffad1f6fb64,397221299,0,0x0,8
tick,0x7ffad1f6fb64,397236329,0,0x0,8
tick,0x7ffad1f6fb64,397251310,0,0x0,8
tick,0x7ffad1f6fb64,397266290,0,0x0,8
tick,0x7ffad1f6fb64,397281303,0,0x0,8
tick,0x7ffad1f6fb64,397296356,0,0x0,8
tick,0x7ffad1f6fb64,397311391,0,0x0,8
tick,0x7ffad1f6fb64,397327358,0,0x0,8
tick,0x7ffad1f6fb64,397343354,0,0x0,8
tick,0x7ffad1f6fb64,397358373,0,0x0,8
tick,0x7ffad1f6fb64,397374389,0,0x0,8
tick,0x7ffad1f6fb64,397390440,0,0x0,8
tick,0x7ffad1f6fb64,397405436,0,0x0,8
tick,0x7ffad1f6fb64,397421424,0,0x0,8
tick,0x7ffad1f6fb64,397437445,0,0x0,8
tick,0x7ffad1f6fb64,397453474,0,0x0,8
tick,0x7ffad1f6fb64,397469468,0,0x0,8
tick,0x7ffad1f6fb64,397484482,0,0x0,8
tick,0x7ffad1f6fb64,397499499,0,0x0,8
tick,0x7ffad1f6fb64,397515504,0,0x0,8
tick,0x7ffad1f6fb64,397531538,0,0x0,8
tick,0x7ffad1f6fb64,397546550,0,0x0,8
tick,0x7ffad1f6fb64,397562552,0,0x0,8
tick,0x7ffad1f6fb64,397578576,0,0x0,8
tick,0x7ffad1f6fb64,397593597,0,0x0,8
tick,0x7ffad1f6fb64,397609623,0,0x0,8
tick,0x7ffad1f6fb64,397625615,0,0x0,8
tick,0x7ffad1f6fb64,397640632,0,0x0,8
tick,0x7ffad1f6fb64,397656706,0,0x0,8
tick,0x7ffad1f6fb64,397672681,0,0x0,8
tick,0x7ffad1f6fb64,397688744,0,0x0,8
tick,0x7ffad1f6fb64,397704699,0,0x0,8
tick,0x7ffad1f6fb64,397720715,0,0x0,8
tick,0x7ffad1f6fb64,397735729,0,0x0,8
tick,0x7ffad1f6fb64,397750769,0,0x0,8
tick,0x7ffad1f6fb64,397766801,0,0x0,8
tick,0x7ffad1f6fb64,397781785,0,0x0,8
tick,0x7ffad1f6fb64,397796815,0,0x0,8
tick,0x7ffad1f6fb64,397812805,0,0x0,8
tick,0x7ffad1f6fb64,397828881,0,0x0,8
tick,0x7ffad1f6fb64,397843886,0,0x0,8
tick,0x7ffad1f6fb64,397859886,0,0x0,8
tick,0x7ffad1f6fb64,397874820,0,0x0,8
tick,0x7ffad1f6fb64,397889887,0,0x0,8
tick,0x7ffad1f6fb64,397904901,0,0x0,8
tick,0x7ffad1f6fb64,397919937,0,0x0,8
tick,0x7ffad1f6fb64,397934904,0,0x0,8
tick,0x7ffad1f6fb64,397949982,0,0x0,8
tick,0x7ffad1f6fb64,397964965,0,0x0,8
tick,0x7ffad1f6fb64,397979942,0,0x0,8
tick,0x7ffad1f6fb64,397995972,0,0x0,8
tick,0x7ffad1f6fb64,398011951,0,0x0,8
tick,0x7ffad1f6fb64,398026972,0,0x0,8
tick,0x7ffad1f6fb64,398042023,0,0x0,8
tick,0x7ffad1f6fb64,398057024,0,0x0,8
tick,0x7ffad1f6fb64,398072014,0,0x0,8
tick,0x7ffad1f6fb64,398088054,0,0x0,8
tick,0x7ffad1f6fb64,398103086,0,0x0,8
tick,0x7ffad1f6fb64,398119072,0,0x0,8
tick,0x7ffad1f6fb64,398135101,0,0x0,8
tick,0x7ffad1f6fb64,398150246,0,0x0,8
tick,0x7ffad1f6fb64,398166139,0,0x0,8
tick,0x7ffad1f6fb64,398181139,0,0x0,8
tick,0x7ffad1f6fb64,398196143,0,0x0,8
tick,0x7ffad1f6fb64,398212182,0,0x0,8
tick,0x7ffad1f6fb64,398228168,0,0x0,8
tick,0x7ffad1f6fb64,398243186,0,0x0,8
tick,0x7ffad1f6fb64,398259235,0,0x0,8
tick,0x7ffad1f6fb64,398275236,0,0x0,8
tick,0x7ffad1f6fb64,398291234,0,0x0,8
tick,0x7ffad1f6fb64,398306223,0,0x0,8
tick,0x7ffad1f6fb64,398321273,0,0x0,8
tick,0x7ffad1f6fb64,398336273,0,0x0,8
tick,0x7ffad1f6fb64,398351597,0,0x0,8
tick,0x7ffad1f6fb64,398366281,0,0x0,8
tick,0x7ffad1f6fb64,398381304,0,0x0,8
tick,0x7ffad1f6fb64,398396304,0,0x0,8
tick,0x7ffad1f6fb64,398411345,0,0x0,8
tick,0x7ffad1f6fb64,398427411,0,0x0,8
tick,0x7ffad1f6fb64,398442367,0,0x0,8
tick,0x7ffad1f6fb64,398457375,0,0x0,8
tick,0x7ffad1f6fb64,398472408,0,0x0,8
tick,0x7ffad1f6fb64,398488405,0,0x0,8
tick,0x7ffad1f6fb64,398504413,0,0x0,8
tick,0x7ffad1f6fb64,398519423,0,0x0,8
tick,0x7ffad1f6fb64,398535468,0,0x0,8
tick,0x7ffad1f6fb64,398550471,0,0x0,8
tick,0x7ffad1f6fb64,398566476,0,0x0,8
tick,0x7ffad1f6fb64,398581478,0,0x0,8
tick,0x7ffad1f6fb64,398597497,0,0x0,8
tick,0x7ffad1f6fb64,398613514,0,0x0,8
tick,0x7ffad1f6fb64,398629541,0,0x0,8
tick,0x7ffad1f6fb64,398644588,0,0x0,8
tick,0x7ffad1f6fb64,398660537,0,0x0,8
tick,0x7ffad1f6fb64,398675650,0,0x0,8
tick,0x7ffad1f6fb64,398690609,0,0x0,8
tick,0x7ffad1f6fb64,398706603,0,0x0,8
tick,0x7ffad1f6fb64,398722689,0,0x0,8
tick,0x7ffad1f6fb64,398737656,0,0x0,8
tick,0x7ffad1f6fb64,398753672,0,0x0,8
tick,0x7ffad1f6fb64,398769677,0,0x0,8
tick,0x7ffad1f6fb64,398784689,0,0x0,8
tick,0x7ffad1f6fb64,398799684,0,0x0,8
tick,0x7ffad1f6fb64,398815707,0,0x0,8
tick,0x7ffad1f6fb64,398832088,0,0x0,8
tick,0x7ffad1f6fb64,398846798,0,0x0,8
tick,0x7ffad1f6fb64,398861759,0,0x0,8
tick,0x7ffad1f6fb64,398876780,0,0x0,8
tick,0x7ffad1f6fb64,398891763,0,0x0,8
tick,0x7ffad1f6fb64,398907790,0,0x0,8
tick,0x7ffad1f6fb64,398923840,0,0x0,8
tick,0x7ffad1f6fb64,398939832,0,0x0,8
tick,0x7ffad1f6fb64,398954838,0,0x0,8
tick,0x7ffad1f6fb64,398969873,0,0x0,8
tick,0x7ffad1f6fb64,398985855,0,0x0,8
tick,0x7ffad1f6fb64,399001860,0,0x0,8
tick,0x7ffad1f6fb64,399016887,0,0x0,8
tick,0x7ffad1f6fb64,399032907,0,0x0,8
tick,0x7ffad1f6fb64,399048895,0,0x0,8
tick,0x7ffad1f6fb64,399063941,0,0x0,8
tick,0x7ffad1f6fb64,399079950,0,0x0,8
tick,0x7ffad1f6fb64,399094957,0,0x0,8
tick,0x7ffad1f6fb64,399110992,0,0x0,8
tick,0x7ffad1f6fb64,399126975,0,0x0,8
tick,0x7ffad1f6fb64,399142990,0,0x0,8
tick,0x7ffad1f6fb64,399158005,0,0x0,8
tick,0x7ffad1f6fb64,399174039,0,0x0,8
tick,0x7ffad1f6fb64,399190060,0,0x0,8
tick,0x7ffad1f6fb64,399205348,0,0x0,8
tick,0x7ffad1f6fb64,399220092,0,0x0,8
tick,0x7ffad1f6fb64,399235225,0,0x0,8
tick,0x7ffad1f6fb64,399250127,0,0x0,8
tick,0x7ffad1f6fb64,399265124,0,0x0,8
tick,0x7ffad1f6fb64,399280164,0,0x0,8
tick,0x7ffad1f6fb64,399295145,0,0x0,8
tick,0x7ffad1f6fb64,399311169,0,0x0,8
tick,0x7ffad1f6fb64,399327178,0,0x0,8
tick,0x7ffad1f6fb64,399342194,0,0x0,8
tick,0x7ffad1f6fb64,399358199,0,0x0,8
tick,0x7ffad1f6fb64,399373216,0,0x0,8
tick,0x7ffad1f6fb64,399388208,0,0x0,8
tick,0x7ffad1f6fb64,399404272,0,0x0,8
tick,0x7ffad1f6fb64,399420262,0,0x0,8
tick,0x7ffad1f6fb64,399436283,0,0x0,8
tick,0x7ffad1f6fb64,399452452,0,0x0,8
tick,0x7ffad1f6fb64,399467306,0,0x0,8
tick,0x7ffad1f6fb64,399482306,0,0x0,8
tick,0x7ffad1f6fb64,399498331,0,0x0,8
tick,0x7ffad1f6fb64,399514358,0,0x0,8
tick,0x7ffad1f6fb64,399529354,0,0x0,8
tick,0x7ffad1f6fb64,399544362,0,0x0,8
tick,0x7ffad1f6fb64,399560370,0,0x0,8
tick,0x7ffad1f6fb64,399576434,0,0x0,8
tick,0x7ffad1f6fb64,399592449,0,0x0,8
tick,0x7ffad1f6fb64,399608437,0,0x0,8
tick,0x7ffad1f6fb64,399623457,0,0x0,8
tick,0x7ffad1f6fb64,399638459,0,0x0,8
tick,0x7ffad1f6fb64,399654487,0,0x0,8
tick,0x7ffad1f6fb64,399670472,0,0x0,8
tick,0x7ffad1f6fb64,399686526,0,0x0,8
tick,0x7ffad1f6fb64,399702509,0,0x0,8
tick,0x7ffad1f6fb64,399717540,0,0x0,8
tick,0x7ffad1f6fb64,399733545,0,0x0,8
tick,0x7ffad1f6fb64,399748535,0,0x0,8
tick,0x7ffad1f6fb64,399763559,0,0x0,8
tick,0x7ffad1f6fb64,399779591,0,0x0,8
tick,0x7ffad1f6fb64,399794627,0,0x0,8
tick,0x7ffad1f6fb64,399809643,0,0x0,8
tick,0x7ffad1f6fb64,399825655,0,0x0,8
tick,0x7ffad1f6fb64,399840678,0,0x0,8
tick,0x7ffad1f6fb64,399856686,0,0x0,8
tick,0x7ffad1f6fb64,399872718,0,0x0,8
tick,0x7ffad1f6fb64,399888728,0,0x0,8
tick,0x7ffad1f6fb64,399903718,0,0x0,8
tick,0x7ffad1f6fb64,399918777,0,0x0,8
tick,0x7ffad1f6fb64,399934743,0,0x0,8
tick,0x7ffad1f6fb64,399949829,0,0x0,8
tick,0x7ffad1f6fb64,399965853,0,0x0,8
tick,0x7ffad1f6fb64,399980790,0,0x0,8
tick,0x7ffad1f6fb64,399995875,0,0x0,8
tick,0x7ffad1f6fb64,400010832,0,0x0,8
tick,0x7ffad1f6fb64,400026847,0,0x0,8
tick,0x7ffad1f6fb64,400042852,0,0x0,8
tick,0x7ffad1f6fb64,400058884,0,0x0,8
tick,0x7ffad1f6fb64,400073863,0,0x0,8
tick,0x7ffad1f6fb64,400088960,0,0x0,8
tick,0x7ffad1f6fb64,400103899,0,0x0,8
tick,0x7ffad1f6fb64,400119917,0,0x0,8
tick,0x7ffad1f6fb64,400134948,0,0x0,8
tick,0x7ffad1f6fb64,400149954,0,0x0,8
tick,0x7ffad1f6fb64,400165025,0,0x0,8
tick,0x7ffad1f6fb64,400179981,0,0x0,8
tick,0x7ffad1f6fb64,400194982,0,0x0,8
tick,0x7ffad1f6fb64,400209984,0,0x0,8
tick,0x7ffad1f6fb64,400224995,0,0x0,8
tick,0x7ffad1f6fb64,400239995,0,0x0,8
tick,0x7ffad1f6fb64,400256042,0,0x0,8
tick,0x7ffad1f6fb64,400271040,0,0x0,8
tick,0x7ffad1f6fb64,400286033,0,0x0,8
tick,0x7ffad1f6fb64,400301059,0,0x0,8
tick,0x7ffad1f6fb64,400316105,0,0x0,8
tick,0x7ffad1f6fb64,400332109,0,0x0,8
tick,0x7ffad1f6fb64,400347102,0,0x0,8
tick,0x7ffad1f6fb64,400363121,0,0x0,8
tick,0x7ffad1f6fb64,400378163,0,0x0,8
tick,0x7ffad1f6fb64,400393156,0,0x0,8
tick,0x7ffad1f6fb64,400409159,0,0x0,8
tick,0x7ffad1f6fb64,400424167,0,0x0,8
tick,0x7ffad1f6fb64,400439182,0,0x0,8
tick,0x7ffad1f6fb64,400454195,0,0x0,8
tick,0x7ffad1f6fb64,400470225,0,0x0,8
tick,0x7ffad1f6fb64,400485247,0,0x0,8
tick,0x7ffad1f6fb64,400501236,0,0x0,8
tick,0x7ffad1f6fb64,400517295,0,0x0,8
tick,0x7ffad1f6fb64,400533248,0,0x0,8
tick,0x7ffad1f6fb64,400548270,0,0x0,8
tick,0x7ffad1f6fb64,400564473,0,0x0,8
tick,0x7ffad1f6fb64,400580341,0,0x0,8
tick,0x7ffad1f6fb64,400595374,0,0x0,8
tick,0x7ffad1f6fb64,400611356,0,0x0,8
tick,0x7ffad1f6fb64,400626366,0,0x0,8
tick,0x7ffad1f6fb64,400642375,0,0x0,8
tick,0x7ffad1f6fb64,400658407,0,0x0,8
tick,0x7ffad1f6fb64,400674410,0,0x0,8
tick,0x7ffad1f6fb64,400690408,0,0x0,8
tick,0x7ffad1f6fb64,400705456,0,0x0,8
tick,0x7ffad1f6fb64,400721438,0,0x0,8
tick,0x7ffad1f6fb64,400737482,0,0x0,8
tick,0x7ffad1f6fb64,400753461,0,0x0,8
tick,0x7ffad1f6fb64,400768469,0,0x0,8
tick,0x7ffad1f6fb64,400784520,0,0x0,8
tick,0x7ffad1f6fb64,400799502,0,0x0,8
tick,0x7ffad1f6fb64,400815520,0,0x0,8
tick,0x7ffad1f6fb64,400831567,0,0x0,8
tick,0x7ffad1f6fb64,400846561,0,0x0,8
tick,0x7ffad1f6fb64,400862590,0,0x0,8
tick,0x7ffad1f6fb64,400878565,0,0x0,8
tick,0x7ffad1f6fb64,400893594,0,0x0,8
tick,0x7ffad1f6fb64,400909591,0,0x0,8
tick,0x7ffad1f6fb64,400925649,0,0x0,8
tick,0x7ffad1f6fb64,400940648,0,0x0,8
tick,0x7ffad1f6fb64,400956650,0,0x0,8
tick,0x7ffad1f6fb64,400972654,0,0x0,8
tick,0x7ffad1f6fb64,400988676,0,0x0,8
tick,0x7ffad1f6fb64,401003681,0,0x0,8
tick,0x7ffad1f6fb64,401019712,0,0x0,8
tick,0x7ffad1f6fb64,401035734,0,0x0,8
tick,0x7ffad1f6fb64,401051718,0,0x0,8
tick,0x7ffad1f6fb64,401066750,0,0x0,8
tick,0x7ffad1f6fb64,401081779,0,0x0,8
tick,0x7ffad1f6fb64,401097962,0,0x0,8
tick,0x7ffad1f6fb64,401113784,0,0x0,8
tick,0x7ffad1f6fb64,401129808,0,0x0,8
tick,0x7ffad1f6fb64,401145838,0,0x0,8
tick,0x7ffad1f6fb64,401161837,0,0x0,8
tick,0x7ffad1f6fb64,401177944,0,0x0,8
tick,0x7ffad1f6fb64,401192863,0,0x0,8
tick,0x7ffad1f6fb64,401208876,0,0x0,8
tick,0x7ffad1f6fb64,401224884,0,0x0,8
tick,0x7ffad1f6fb64,401239908,0,0x0,8
tick,0x7ffad1f6fb64,401254922,0,0x0,8
tick,0x7ffad1f6fb64,401270941,0,0x0,8
tick,0x7ffad1f6fb64,401285962,0,0x0,8
tick,0x7ffad1f6fb64,401300966,0,0x0,8
tick,0x7ffad1f6fb64,401315965,0,0x0,8
tick,0x7ffad1f6fb64,401331987,0,0x0,8
tick,0x7ffad1f6fb64,401347996,0,0x0,8
tick,0x7ffad1f6fb64,401364001,0,0x0,8
tick,0x7ffad1f6fb64,401379032,0,0x0,8
tick,0x7ffad1f6fb64,401395042,0,0x0,8
tick,0x7ffad1f6fb64,401411060,0,0x0,8
tick,0x7ffad1f6fb64,401427061,0,0x0,8
tick,0x7ffad1f6fb64,401442087,0,0x0,8
tick,0x7ffad1f6fb64,401457134,0,0x0,8
tick,0x7ffad1f6fb64,401473171,0,0x0,8
tick,0x7ffad1f6fb64,401488197,0,0x0,8
tick,0x7ffad1f6fb64,401503221,0,0x0,8
tick,0x7ffad1f6fb64,401519164,0,0x0,8
tick,0x7ffad1f6fb64,401534186,0,0x0,8
tick,0x7ffad1f6fb64,401550181,0,0x0,8
tick,0x7ffad1f6fb64,401566217,0,0x0,8
tick,0x7ffad1f6fb64,401581282,0,0x0,8
tick,0x7ffad1f6fb64,401596238,0,0x0,8
tick,0x7ffad1f6fb64,401612244,0,0x0,8
tick,0x7ffad1f6fb64,401627273,0,0x0,8
tick,0x7ffad1f6fb64,401642279,0,0x0,8
tick,0x7ffad1f6fb64,401657307,0,0x0,8
tick,0x7ffad1f6fb64,401673330,0,0x0,8
tick,0x7ffad1f6fb64,401689330,0,0x0,8
tick,0x7ffad1f6fb64,401704309,0,0x0,8
tick,0x7ffad1f6fb64,401720329,0,0x0,8
tick,0x7ffad1f6fb64,401736351,0,0x0,8
tick,0x7ffad1f6fb64,401752572,0,0x0,8
tick,0x7ffad1f6fb64,401767401,0,0x0,8
tick,0x7ffad1f6fb64,401782403,0,0x0,8
tick,0x7ffad1f6fb64,401797442,0,0x0,8
tick,0x7ffad1f6fb64,401813428,0,0x0,8
tick,0x7ffad1f6fb64,401828451,0,0x0,8
tick,0x7ffad1f6fb64,401843456,0,0x0,8
tick,0x7ffad1f6fb64,401859473,0,0x0,8
tick,0x7ffad1f6fb64,401875483,0,0x0,8
tick,0x7ffad1f6fb64,401891497,0,0x0,8
tick,0x7ffad1f6fb64,401907530,0,0x0,8
tick,0x7ffad1f6fb64,401923522,0,0x0,8
tick,0x7ffad1f6fb64,401938559,0,0x0,8
tick,0x7ffad1f6fb64,401954566,0,0x0,8
tick,0x7ffad1f6fb64,401970575,0,0x0,8
tick,0x7ffad1f6fb64,401986599,0,0x0,8
tick,0x7ffad1f6fb64,402001625,0,0x0,8
tick,0x7ffad1f6fb64,402016677,0,0x0,8
tick,0x7ffad1f6fb64,402031681,0,0x0,8
tick,0x7ffad1f6fb64,402047666,0,0x0,8
tick,0x7ffad1f6fb64,402062676,0,0x0,8
tick,0x7ffad1f6fb64,402077726,0,0x0,8
tick,0x7ffad1f6fb64,402092724,0,0x0,8
tick,0x7ffad1f6fb64,402108737,0,0x0,8
tick,0x7ffad1f6fb64,402123805,0,0x0,8
tick,0x7ffad1f6fb64,402139769,0,0x0,8
tick,0x7ffad1f6fb64,402155767,0,0x0,8
tick,0x7ffad1f6fb64,402170796,0,0x0,8
tick,0x7ffad1f6fb64,402186796,0,0x0,8
tick,0x7ffad1f6fb64,402202809,0,0x0,8
tick,0x7ffad1f6fb64,402217802,0,0x0,8
tick,0x7ffad1f6fb64,402232860,0,0x0,8
tick,0x7ffad1f6fb64,402248868,0,0x0,8
tick,0x7ffad1f6fb64,402263890,0,0x0,8
tick,0x7ffad1f6fb64,402278898,0,0x0,8
tick,0x7ffad1f6fb64,402294890,0,0x0,8
tick,0x7ffad1f6fb64,402310935,0,0x0,8
tick,0x7ffad1f6fb64,402326928,0,0x0,8
tick,0x7ffad1f6fb64,402341963,0,0x0,8
tick,0x7ffad1f6fb64,402357928,0,0x0,8
tick,0x7ffad1f6fb64,402372992,0,0x0,8
tick,0x7ffad1f6fb64,402388992,0,0x0,8
tick,0x7ffad1f6fb64,402405078,0,0x0,8
tick,0x7ffad1f6fb64,402420027,0,0x0,8
tick,0x7ffad1f6fb64,402436015,0,0x0,8
tick,0x7ffad1f6fb64,402451044,0,0x0,8
tick,0x7ffad1f6fb64,402466036,0,0x0,8
tick,0x7ffad1f6fb64,402482084,0,0x0,8
tick,0x7ffad1f6fb64,402497090,0,0x0,8
tick,0x7ffad1f6fb64,402512339,0,0x0,8
tick,0x7ffad1f6fb64,402528115,0,0x0,8
tick,0x7ffad1f6fb64,402543184,0,0x0,8
tick,0x7ffad1f6fb64,402558156,0,0x0,8
tick,0x7ffad1f6fb64,402573122,0,0x0,8
tick,0x7ffad1f6fb64,402589135,0,0x0,8
tick,0x7ffad1f6fb64,402605197,0,0x0,8
tick,0x7ffad1f6fb64,402620191,0,0x0,8
tick,0x7ffad1f6fb64,402636268,0,0x0,8
tick,0x7ffad1f6fb64,402651198,0,0x0,8
tick,0x7ffad1f6fb64,402666214,0,0x0,8
tick,0x7ffad1f6fb64,402681229,0,0x0,8
tick,0x7ffad1f6fb64,402696282,0,0x0,8
tick,0x7ffad1f6fb64,402711268,0,0x0,8
tick,0x7ffad1f6fb64,402726324,0,0x0,8
tick,0x7ffad1f6fb64,402741342,0,0x0,8
tick,0x7ffad1f6fb64,402756340,0,0x0,8
tick,0x7ffad1f6fb64,402771415,0,0x0,8
tick,0x7ffad1f6fb64,402787335,0,0x0,8
tick,0x7ffad1f6fb64,402803343,0,0x0,8
tick,0x7ffad1f6fb64,402818616,0,0x0,8
tick,0x7ffad1f6fb64,402833409,0,0x0,8
tick,0x7ffad1f6fb64,402848368,0,0x0,8
tick,0x7ffad1f6fb64,402863384,0,0x0,8
tick,0x7ffad1f6fb64,402878471,0,0x0,8
tick,0x7ffad1f6fb64,402893412,0,0x0,8
tick,0x7ffad1f6fb64,402908428,0,0x0,8
tick,0x7ffad1f6fb64,402924458,0,0x0,8
tick,0x7ffad1f6fb64,402940479,0,0x0,8
tick,0x7ffad1f6fb64,402955471,0,0x0,8
tick,0x7ffad1f6fb64,402971502,0,0x0,8
tick,0x7ffad1f6fb64,402987511,0,0x0,8
tick,0x7ffad1f6fb64,403002519,0,0x0,8
tick,0x7ffad1f6fb64,403017546,0,0x0,8
tick,0x7ffad1f6fb64,403033557,0,0x0,8
tick,0x7ffad1f6fb64,403049537,0,0x0,8
tick,0x7ffad1f6fb64,403064574,0,0x0,8
tick,0x7ffad1f6fb64,403079594,0,0x0,8
tick,0x7ffad1f6fb64,403094607,0,0x0,8
tick,0x7ffad1f6fb64,403109615,0,0x0,8
tick,0x7ffad1f6fb64,403125609,0,0x0,8
tick,0x7ffad1f6fb64,403140712,0,0x0,8
tick,0x7ffad1f6fb64,403156660,0,0x0,8
tick,0x7ffad1f6fb64,403172682,0,0x0,8
tick,0x7ffad1f6fb64,403187732,0,0x0,8
tick,0x7ffad1f6fb64,403202727,0,0x0,8
tick,0x7ffad1f6fb64,403218950,0,0x0,8
tick,0x7ffad1f6fb64,403234735,0,0x0,8
tick,0x7ffad1f6fb64,403249754,0,0x0,8
tick,0x7ffad1f6fb64,403264811,0,0x0,8
tick,0x7ffad1f6fb64,403279881,0,0x0,8
tick,0x7ffad1f6fb64,403294784,0,0x0,8
tick,0x7ffad1f6fb64,403309820,0,0x0,8
tick,0x7ffad1f6fb64,403325851,0,0x0,8
tick,0x7ffad1f6fb64,403340861,0,0x0,8
tick,0x7ffad1f6fb64,403356850,0,0x0,8
tick,0x7ffad1f6fb64,403371858,0,0x0,8
tick,0x7ffad1f6fb64,403386863,0,0x0,8
tick,0x7ffad1f6fb64,403402865,0,0x0,8
tick,0x7ffad1f6fb64,403418930,0,0x0,8
tick,0x7ffad1f6fb64,403433948,0,0x0,8
tick,0x7ffad1f6fb64,403448936,0,0x0,8
tick,0x7ffad1f6fb64,403463943,0,0x0,8
tick,0x7ffad1f6fb64,403478939,0,0x0,8
tick,0x7ffad1f6fb64,403494963,0,0x0,8
tick,0x7ffad1f6fb64,403509987,0,0x0,8
tick,0x7ffad1f6fb64,403525032,0,0x0,8
tick,0x7ffad1f6fb64,403540088,0,0x0,8
tick,0x7ffad1f6fb64,403555034,0,0x0,8
tick,0x7ffad1f6fb64,403571066,0,0x0,8
tick,0x7ffad1f6fb64,403586067,0,0x0,8
tick,0x7ffad1f6fb64,403601074,0,0x0,8
tick,0x7ffad1f6fb64,403616102,0,0x0,8
tick,0x7ffad1f6fb64,403631163,0,0x0,8
tick,0x7ffad1f6fb64,403647393,0,0x0,8
tick,0x7ffad1f6fb64,403663132,0,0x0,8
tick,0x7ffad1f6fb64,403678147,0,0x0,8
tick,0x7ffad1f6fb64,403693221,0,0x0,8
tick,0x7ffad1f6fb64,403709160,0,0x0,8
tick,0x7ffad1f6fb64,403724200,0,0x0,8
tick,0x7ffad1f6fb64,403739276,0,0x0,8
tick,0x7ffad1f6fb64,403755222,0,0x0,8
tick,0x7ffad1f6fb64,403771240,0,0x0,8
tick,0x7ffad1f6fb64,403787264,0,0x0,8
tick,0x7ffad1f6fb64,403802285,0,0x0,8
tick,0x7ffad1f6fb64,403817290,0,0x0,8
tick,0x7ffad1f6fb64,403833288,0,0x0,8
tick,0x7ffad1f6fb64,403849299,0,0x0,8
tick,0x7ffad1f6fb64,403865325,0,0x0,8
tick,0x7ffad1f6fb64,403880338,0,0x0,8
tick,0x7ffad1f6fb64,403895345,0,0x0,8
tick,0x7ffad1f6fb64,403911336,0,0x0,8
tick,0x7ffad1f6fb64,403927400,0,0x0,8
tick,0x7ffad1f6fb64,403943388,0,0x0,8
tick,0x7ffad1f6fb64,403959407,0,0x0,8
tick,0x7ffad1f6fb64,403975408,0,0x0,8
tick,0x7ffad1f6fb64,403990422,0,0x0,8
tick,0x7ffad1f6fb64,404006457,0,0x0,8
tick,0x7ffad1f6fb64,404021442,0,0x0,8
tick,0x7ffad1f6fb64,404037481,0,0x0,8
tick,0x7ffad1f6fb64,404053467,0,0x0,8
tick,0x7ffad1f6fb64,404068511,0,0x0,8
tick,0x7ffad1f6fb64,404084550,0,0x0,8
tick,0x7ffad1f6fb64,404099531,0,0x0,8
tick,0x7ffad1f6fb64,404115598,0,0x0,8
tick,0x7ffad1f6fb64,404130555,0,0x0,8
tick,0x7ffad1f6fb64,404145564,0,0x0,8
tick,0x7ffad1f6fb64,404160582,0,0x0,8
tick,0x7ffad1f6fb64,404175589,0,0x0,8
tick,0x7ffad1f6fb64,404190591,0,0x0,8
tick,0x7ffad1f6fb64,404206659,0,0x0,8
tick,0x7ffad1f6fb64,404221618,0,0x0,8
tick,0x7ffad1f6fb64,404236653,0,0x0,8
tick,0x7ffad1f6fb64,404251684,0,0x0,8
tick,0x7ffad1f6fb64,404266684,0,0x0,8
tick,0x7ffad1f6fb64,404281699,0,0x0,8
tick,0x7ffad1f6fb64,404297677,0,0x0,8
tick,0x7ffad1f6fb64,404313768,0,0x0,8
tick,0x7ffad1f6fb64,404328743,0,0x0,8
tick,0x7ffad1f6fb64,404344725,0,0x0,8
tick,0x7ffad1f6fb64,404360782,0,0x0,8
tick,0x7ffad1f6fb64,404375908,0,0x0,8
tick,0x7ffad1f6fb64,404390805,0,0x0,8
tick,0x7ffad1f6fb64,404406819,0,0x0,8
tick,0x7ffad1f6fb64,404422824,0,0x0,8
tick,0x7ffad1f6fb64,404437841,0,0x0,8
tick,0x7ffad1f6fb64,404453861,0,0x0,8
tick,0x7ffad1f6fb64,404469878,0,0x0,8
tick,0x7ffad1f6fb64,404485906,0,0x0,8
tick,0x7ffad1f6fb64,404500941,0,0x0,8
tick,0x7ffad1f6fb64,404515895,0,0x0,8
tick,0x7ffad1f6fb64,404531904,0,0x0,8
tick,0x7ffad1f6fb64,404546942,0,0x0,8
tick,0x7ffad1f6fb64,404562927,0,0x0,8
tick,0x7ffad1f6fb64,404577977,0,0x0,8
tick,0x7ffad1f6fb64,404594037,0,0x0,8
tick,0x7ffad1f6fb64,404610046,0,0x0,8
tick,0x7ffad1f6fb64,404625989,0,0x0,8
tick,0x7ffad1f6fb64,404641010,0,0x0,8
tick,0x7ffad1f6fb64,404656009,0,0x0,8
tick,0x7ffad1f6fb64,404672100,0,0x0,8
tick,0x7ffad1f6fb64,404688060,0,0x0,8
tick,0x7ffad1f6fb64,404704059,0,0x0,8
tick,0x7ffad1f6fb64,404720090,0,0x0,8
tick,0x7ffad1f6fb64,404735102,0,0x0,8
tick,0x7ffad1f6fb64,404750110,0,0x0,8
tick,0x7ffad1f6fb64,404765119,0,0x0,8
tick,0x7ffad1f6fb64,404780156,0,0x0,8
tick,0x7ffad1f6fb64,404795170,0,0x0,8
tick,0x7ffad1f6fb64,404810175,0,0x0,8
tick,0x7ffad1f6fb64,404825178,0,0x0,8
tick,0x7ffad1f6fb64,404840207,0,0x0,8
tick,0x7ffad1f6fb64,404856234,0,0x0,8
tick,0x7ffad1f6fb64,404871232,0,0x0,8
tick,0x7ffad1f6fb64,404887292,0,0x0,8
tick,0x7ffad1f6fb64,404902241,0,0x0,8
tick,0x7ffad1f6fb64,404917255,0,0x0,8
tick,0x7ffad1f6fb64,404932278,0,0x0,8
tick,0x7ffad1f6fb64,404948292,0,0x0,8
tick,0x7ffad1f6fb64,404964316,0,0x0,8
tick,0x7ffad1f6fb64,404979339,0,0x0,8
tick,0x7ffad1f6fb64,404994323,0,0x0,8
tick,0x7ffad1f6fb64,405010361,0,0x0,8
tick,0x7ffad1f6fb64,405025411,0,0x0,8
tick,0x7ffad1f6fb64,405040388,0,0x0,8
tick,0x7ffad1f6fb64,405056370,0,0x0,8
tick,0x7ffad1f6fb64,405072389,0,0x0,8
tick,0x7ffad1f6fb64,405088409,0,0x0,8
tick,0x7ffad1f6fb64,405103429,0,0x0,8
tick,0x7ffad1f6fb64,405119455,0,0x0,8
tick,0x7ffad1f6fb64,405135463,0,0x0,8
tick,0x7ffad1f6fb64,405150467,0,0x0,8
tick,0x7ffad1f6fb64,405166491,0,0x0,8
tick,0x7ffad1f6fb64,405181543,0,0x0,8
tick,0x7ffad1f6fb64,405197511,0,0x0,8
tick,0x7ffad1f6fb64,405213526,0,0x0,8
tick,0x7ffad1f6fb64,405229544,0,0x0,8
tick,0x7ffad1f6fb64,405245549,0,0x0,8
tick,0x7ffad1f6fb64,405261576,0,0x0,8
tick,0x7ffad1f6fb64,405277625,0,0x0,8
tick,0x7ffad1f6fb64,405292606,0,0x0,8
tick,0x7ffad1f6fb64,405308619,0,0x0,8
tick,0x7ffad1f6fb64,405324629,0,0x0,8
tick,0x7ffad1f6fb64,405339628,0,0x0,8
tick,0x7ffad1f6fb64,405355652,0,0x0,8
tick,0x7ffad1f6fb64,405371683,0,0x0,8
tick,0x7ffad1f6fb64,405387670,0,0x0,8
tick,0x7ffad1f6fb64,405402694,0,0x0,8
tick,0x7ffad1f6fb64,405418715,0,0x0,8
tick,0x7ffad1f6fb64,405434722,0,0x0,8
tick,0x7ffad1f6fb64,405449770,0,0x0,8
tick,0x7ffad1f6fb64,405465768,0,0x0,8
tick,0x7ffad1f6fb64,405480817,0,0x0,8
tick,0x7ffad1f6fb64,405495786,0,0x0,8
tick,0x7ffad1f6fb64,405511806,0,0x0,8
tick,0x7ffad1f6fb64,405526841,0,0x0,8
tick,0x7ffad1f6fb64,405541880,0,0x0,8
tick,0x7ffad1f6fb64,405557857,0,0x0,8
tick,0x7ffad1f6fb64,405572884,0,0x0,8
tick,0x7ffad1f6fb64,405588895,0,0x0,8
tick,0x7ffad1f6fb64,405604910,0,0x0,8
tick,0x7ffad1f6fb64,405619996,0,0x0,8
tick,0x7ffad1f6fb64,405634940,0,0x0,8
tick,0x7ffad1f6fb64,405649934,0,0x0,8
tick,0x7ffad1f6fb64,405665951,0,0x0,8
tick,0x7ffad1f6fb64,405681956,0,0x0,8
tick,0x7ffad1f6fb64,405697047,0,0x0,8
tick,0x7ffad1f6fb64,405711972,0,0x0,8
tick,0x7ffad1f6fb64,405727023,0,0x0,8
tick,0x7ffad1f6fb64,405743007,0,0x0,8
tick,0x7ffad1f6fb64,405759027,0,0x0,8
tick,0x7ffad1f6fb64,405774042,0,0x0,8
tick,0x7ffad1f6fb64,405790059,0,0x0,8
tick,0x7ffad1f6fb64,405805083,0,0x0,8
tick,0x7ffad1f6fb64,405820072,0,0x0,8
tick,0x7ffad1f6fb64,405836124,0,0x0,8
tick,0x7ffad1f6fb64,405851115,0,0x0,8
tick,0x7ffad1f6fb64,405866106,0,0x0,8
tick,0x7ffad1f6fb64,405881136,0,0x0,8
tick,0x7ffad1f6fb64,405897150,0,0x0,8
tick,0x7ffad1f6fb64,405913176,0,0x0,8
tick,0x7ffad1f6fb64,405929163,0,0x0,8
tick,0x7ffad1f6fb64,405945189,0,0x0,8
tick,0x7ffad1f6fb64,405961218,0,0x0,8
tick,0x7ffad1f6fb64,405977230,0,0x0,8
tick,0x7ffad1f6fb64,405992224,0,0x0,8
tick,0x7ffad1f6fb64,406007248,0,0x0,8
tick,0x7ffad1f6fb64,406022270,0,0x0,8
tick,0x7ffad1f6fb64,406037276,0,0x0,8
tick,0x7ffad1f6fb64,406053289,0,0x0,8
tick,0x7ffad1f6fb64,406069301,0,0x0,8
tick,0x7ffad1f6fb64,406085335,0,0x0,8
tick,0x7ffad1f6fb64,406101332,0,0x0,8
tick,0x7ffad1f6fb64,406117357,0,0x0,8
tick,0x7ffad1f6fb64,406132362,0,0x0,8
tick,0x7ffad1f6fb64,406148369,0,0x0,8
tick,0x7ffad1f6fb64,406164395,0,0x0,8
tick,0x7ffad1f6fb64,406179396,0,0x0,8
tick,0x7ffad1f6fb64,406195422,0,0x0,8
tick,0x7ffad1f6fb64,406210478,0,0x0,8
tick,0x7ffad1f6fb64,406225451,0,0x0,8
tick,0x7ffad1f6fb64,406240460,0,0x0,8
tick,0x7ffad1f6fb64,406255458,0,0x0,8
tick,0x7ffad1f6fb64,406270475,0,0x0,8
tick,0x7ffad1f6fb64,406286515,0,0x0,8
tick,0x7ffad1f6fb64,406302543,0,0x0,8
tick,0x7ffad1f6fb64,406317559,0,0x0,8
tick,0x7ffad1f6fb64,406333557,0,0x0,8
tick,0x7ffad1f6fb64,406349614,0,0x0,8
tick,0x7ffad1f6fb64,406365602,0,0x0,8
tick,0x7ffad1f6fb64,406380637,0,0x0,8
tick,0x7ffad1f6fb64,406395667,0,0x0,8
tick,0x7ffad1f6fb64,406411643,0,0x0,8
tick,0x7ffad1f6fb64,406427627,0,0x0,8
tick,0x7ffad1f6fb64,406442661,0,0x0,8
tick,0x7ffad1f6fb64,406458698,0,0x0,8
tick,0x7ffad1f6fb64,406473717,0,0x0,8
tick,0x7ffad1f6fb64,406488710,0,0x0,8
tick,0x7ffad1f6fb64,406503746,0,0x0,8
tick,0x7ffad1f6fb64,406518727,0,0x0,8
tick,0x7ffad1f6fb64,406533744,0,0x0,8
tick,0x7ffad1f6fb64,406548742,0,0x0,8
tick,0x7ffad1f6fb64,406563766,0,0x0,8
tick,0x7ffad1f6fb64,406579959,0,0x0,8
tick,0x7ffad1f6fb64,406594881,0,0x0,8
tick,0x7ffad1f6fb64,406609823,0,0x0,8
tick,0x7ffad1f6fb64,406624830,0,0x0,8
tick,0x7ffad1f6fb64,406639840,0,0x0,8
tick,0x7ffad1f6fb64,406654852,0,0x0,8
tick,0x7ffad1f6fb64,406670868,0,0x0,8
tick,0x7ffad1f6fb64,406685875,0,0x0,8
tick,0x7ffad1f6fb64,406701938,0,0x0,8
tick,0x7ffad1f6fb64,406718071,0,0x0,8
tick,0x7ffad1f6fb64,406732936,0,0x0,8
tick,0x7ffad1f6fb64,406747938,0,0x0,8
tick,0x7ffad1f6fb64,406763945,0,0x0,8
tick,0x7ffad1f6fb64,406780061,0,0x0,8
tick,0x7ffad1f6fb64,406795982,0,0x0,8
tick,0x7ffad1f6fb64,406811020,0,0x0,8
tick,0x7ffad1f6fb64,406827022,0,0x0,8
tick,0x7ffad1f6fb64,406843001,0,0x0,8
tick,0x7ffad1f6fb64,406859035,0,0x0,8
tick,0x7ffad1f6fb64,406874064,0,0x0,8
tick,0x7ffad1f6fb64,406890087,0,0x0,8
tick,0x7ffad1f6fb64,406905105,0,0x0,8
tick,0x7ffad1f6fb64,406920096,0,0x0,8
tick,0x7ffad1f6fb64,406935112,0,0x0,8
tick,0x7ffad1f6fb64,406950102,0,0x0,8
tick,0x7ffad1f6fb64,406966175,0,0x0,8
tick,0x7ffad1f6fb64,406981183,0,0x0,8
tick,0x7ffad1f6fb64,406997170,0,0x0,8
tick,0x7ffad1f6fb64,407012182,0,0x0,8
tick,0x7ffad1f6fb64,407028215,0,0x0,8
tick,0x7ffad1f6fb64,407044222,0,0x0,8
tick,0x7ffad1f6fb64,407059239,0,0x0,8
tick,0x7ffad1f6fb64,407075233,0,0x0,8
tick,0x7ffad1f6fb64,407091240,0,0x0,8
tick,0x7ffad1f6fb64,407106280,0,0x0,8
tick,0x7ffad1f6fb64,407121269,0,0x0,8
tick,0x7ffad1f6fb64,407137290,0,0x0,8
tick,0x7ffad1f6fb64,407153409,0,0x0,8
tick,0x7ffad1f6fb64,407169336,0,0x0,8
tick,0x7ffad1f6fb64,407185315,0,0x0,8
tick,0x7ffad1f6fb64,407200328,0,0x0,8
tick,0x7ffad1f6fb64,407216392,0,0x0,8
tick,0x7ffad1f6fb64,407231388,0,0x0,8
tick,0x7ffad1f6fb64,407247421,0,0x0,8
tick,0x7ffad1f6fb64,407263433,0,0x0,8
tick,0x7ffad1f6fb64,407278432,0,0x0,8
tick,0x7ffad1f6fb64,407293461,0,0x0,8
tick,0x7ffad1f6fb64,407308445,0,0x0,8
tick,0x7ffad1f6fb64,407324466,0,0x0,8
tick,0x7ffad1f6fb64,407340489,0,0x0,8
tick,0x7ffad1f6fb64,407356477,0,0x0,8
tick,0x7ffad1f6fb64,407371503,0,0x0,8
tick,0x7ffad1f6fb64,407387505,0,0x0,8
tick,0x7ffad1f6fb64,407402530,0,0x0,8
tick,0x7ffad1f6fb64,407417551,0,0x0,8
tick,0x7ffad1f6fb64,407433564,0,0x0,8
tick,0x7ffad1f6fb64,407449564,0,0x0,8
tick,0x7ffad1f6fb64,407464576,0,0x0,8
tick,0x7ffad1f6fb64,407479580,0,0x0,8
tick,0x7ffad1f6fb64,407494591,0,0x0,8
tick,0x7ffad1f6fb64,407510625,0,0x0,8
tick,0x7ffad1f6fb64,407525638,0,0x0,8
tick,0x7ffad1f6fb64,407540684,0,0x0,8
tick,0x7ffad1f6fb64,407555688,0,0x0,8
tick,0x7ffad1f6fb64,407570671,0,0x0,8
tick,0x7ffad1f6fb64,407585706,0,0x0,8
tick,0x7ffad1f6fb64,407600698,0,0x0,8
tick,0x7ffad1f6fb64,407615745,0,0x0,8
tick,0x7ffad1f6fb64,407630729,0,0x0,8
tick,0x7ffad1f6fb64,407645758,0,0x0,8
tick,0x7ffad1f6fb64,407660780,0,0x0,8
tick,0x7ffad1f6fb64,407675794,0,0x0,8
tick,0x7ffad1f6fb64,407690785,0,0x0,8
tick,0x7ffad1f6fb64,407706800,0,0x0,8
tick,0x7ffad1f6fb64,407722811,0,0x0,8
tick,0x7ffad1f6fb64,407738836,0,0x0,8
tick,0x7ffad1f6fb64,407753852,0,0x0,8
tick,0x7ffad1f6fb64,407769871,0,0x0,8
tick,0x7ffad1f6fb64,407784876,0,0x0,8
tick,0x7ffad1f6fb64,407799874,0,0x0,8
tick,0x7ffad1f6fb64,407814897,0,0x0,8
tick,0x7ffad1f6fb64,407829914,0,0x0,8
tick,0x7ffad1f6fb64,407844937,0,0x0,8
tick,0x7ffad1f6fb64,407859953,0,0x0,8
tick,0x7ffad1f6fb64,407875976,0,0x0,8
tick,0x7ffad1f6fb64,407891971,0,0x0,8
tick,0x7ffad1f6fb64,407906988,0,0x0,8
tick,0x7ffad1f6fb64,407921984,0,0x0,8
tick,0x7ffad1f6fb64,407937011,0,0x0,8
tick,0x7ffad1f6fb64,407953009,0,0x0,8
tick,0x7ffad1f6fb64,407968054,0,0x0,8
tick,0x7ffad1f6fb64,407984041,0,0x0,8
tick,0x7ffad1f6fb64,407999061,0,0x0,8
tick,0x7ffad1f6fb64,408014081,0,0x0,8
tick,0x7ffad1f6fb64,408029092,0,0x0,8
tick,0x7ffad1f6fb64,408044085,0,0x0,8
tick,0x7ffad1f6fb64,408059112,0,0x0,8
tick,0x7ffad1f6fb64,408074187,0,0x0,8
tick,0x7ffad1f6fb64,408090160,0,0x0,8
tick,0x7ffad1f6fb64,408106165,0,0x0,8
tick,0x7ffad1f6fb64,408121201,0,0x0,8
tick,0x7ffad1f6fb64,408136188,0,0x0,8
tick,0x7ffad1f6fb64,408151186,0,0x0,8
tick,0x7ffad1f6fb64,408166207,0,0x0,8
tick,0x7ffad1f6fb64,408181286,0,0x0,8
tick,0x7ffad1f6fb64,408197257,0,0x0,8
tick,0x7ffad1f6fb64,408212245,0,0x0,8
tick,0x7ffad1f6fb64,408227289,0,0x0,8
tick,0x7ffad1f6fb64,408243284,0,0x0,8
tick,0x7ffad1f6fb64,408258312,0,0x0,8
tick,0x7ffad1f6fb64,408273325,0,0x0,8
tick,0x7ffad1f6fb64,408288351,0,0x0,8
tick,0x7ffad1f6fb64,408303340,0,0x0,8
tick,0x7ffad1f6fb64,408319373,0,0x0,8
tick,0x7ffad1f6fb64,408335385,0,0x0,8
tick,0x7ffad1f6fb64,408350392,0,0x0,8
tick,0x7ffad1f6fb64,408366388,0,0x0,8
tick,0x7ffad1f6fb64,408381425,0,0x0,8
tick,0x7ffad1f6fb64,408397471,0,0x0,8
tick,0x7ffad1f6fb64,408413526,0,0x0,8
tick,0x7ffad1f6fb64,408429551,0,0x0,8
tick,0x7ffad1f6fb64,408444455,0,0x0,8
tick,0x7ffad1f6fb64,408460567,0,0x0,8
tick,0x7ffad1f6fb64,408475518,0,0x0,8
tick,0x7ffad1f6fb64,408491541,0,0x0,8
tick,0x7ffad1f6fb64,408506562,0,0x0,8
tick,0x7ffad1f6fb64,408521523,0,0x0,8
tick,0x7ffad1f6fb64,408536582,0,0x0,8
tick,0x7ffad1f6fb64,408551570,0,0x0,8
tick,0x7ffad1f6fb64,408566618,0,0x0,8
tick,0x7ffad1f6fb64,408581609,0,0x0,8
tick,0x7ffad1f6fb64,408597610,0,0x0,8
tick,0x7ffad1f6fb64,408613645,0,0x0,8
tick,0x7ffad1f6fb64,408629723,0,0x0,8
tick,0x7ffad1f6fb64,408645666,0,0x0,8
tick,0x7ffad1f6fb64,408660721,0,0x0,8
tick,0x7ffad1f6fb64,408675709,0,0x0,8
tick,0x7ffad1f6fb64,408690838,0,0x0,8
tick,0x7ffad1f6fb64,408706714,0,0x0,8
tick,0x7ffad1f6fb64,408722807,0,0x0,8
tick,0x7ffad1f6fb64,408738744,0,0x0,8
tick,0x7ffad1f6fb64,408754796,0,0x0,8
tick,0x7ffad1f6fb64,408769812,0,0x0,8
tick,0x7ffad1f6fb64,408785839,0,0x0,8
tick,0x7ffad1f6fb64,408800836,0,0x0,8
tick,0x7ffad1f6fb64,408816828,0,0x0,8
tick,0x7ffad1f6fb64,408832854,0,0x0,8
tick,0x7ffad1f6fb64,408848875,0,0x0,8
tick,0x7ffad1f6fb64,408864900,0,0x0,8
tick,0x7ffad1f6fb64,408879899,0,0x0,8
tick,0x7ffad1f6fb64,408895906,0,0x0,8
tick,0x7ffad1f6fb64,408910917,0,0x0,8
tick,0x7ffad1f6fb64,408926929,0,0x0,8
tick,0x7ffad1f6fb64,408942950,0,0x0,8
tick,0x7ffad1f6fb64,408958971,0,0x0,8
tick,0x7ffad1f6fb64,408974094,0,0x0,8
tick,0x7ffad1f6fb64,408989978,0,0x0,8
tick,0x7ffad1f6fb64,409004980,0,0x0,8
tick,0x7ffad1f6fb64,409021013,0,0x0,8
tick,0x7ffad1f6fb64,409036059,0,0x0,8
tick,0x7ffad1f6fb64,409052068,0,0x0,8
tick,0x7ffad1f6fb64,409067077,0,0x0,8
tick,0x7ffad1f6fb64,409082052,0,0x0,8
tick,0x7ffad1f6fb64,409098070,0,0x0,8
tick,0x7ffad1f6fb64,409113072,0,0x0,8
tick,0x7ffad1f6fb64,409128111,0,0x0,8
tick,0x7ffad1f6fb64,409144156,0,0x0,8
tick,0x7ffad1f6fb64,409160149,0,0x0,8
tick,0x7ffad1f6fb64,409175130,0,0x0,8
tick,0x7ffad1f6fb64,409191173,0,0x0,8
tick,0x7ffad1f6fb64,409206183,0,0x0,8
tick,0x7ffad1f6fb64,409221201,0,0x0,8
tick,0x7ffad1f6fb64,409237211,0,0x0,8
tick,0x7ffad1f6fb64,409253224,0,0x0,8
tick,0x7ffad1f6fb64,409269229,0,0x0,8
tick,0x7ffad1f6fb64,409284241,0,0x0,8
tick,0x7ffad1f6fb64,409299253,0,0x0,8
tick,0x7ffad1f6fb64,409315320,0,0x0,8
tick,0x7ffad1f6fb64,409331275,0,0x0,8
tick,0x7ffad1f6fb64,409346321,0,0x0,8
tick,0x7ffad1f6fb64,409362312,0,0x0,8
tick,0x7ffad1f6fb64,409377342,0,0x0,8
tick,0x7ffad1f6fb64,409393481,0,0x0,8
tick,0x7ffad1f6fb64,409409382,0,0x0,8
tick,0x7ffad1f6fb64,409424381,0,0x0,8
tick,0x7ffad1f6fb64,409439417,0,0x0,8
tick,0x7ffad1f6fb64,409455385,0,0x0,8
tick,0x7ffad1f6fb64,409471420,0,0x0,8
tick,0x7ffad1f6fb64,409487643,0,0x0,8
tick,0x7ffad1f6fb64,409503455,0,0x0,8
tick,0x7ffad1f6fb64,409519514,0,0x0,8
tick,0x7ffad1f6fb64,409534471,0,0x0,8
tick,0x7ffad1f6fb64,409549480,0,0x0,8
tick,0x7ffad1f6fb64,409565544,0,0x0,8
tick,0x7ffad1f6fb64,409580510,0,0x0,8
tick,0x7ffad1f6fb64,409595550,0,0x0,8
tick,0x7ffad1f6fb64,409611557,0,0x0,8
tick,0x7ffad1f6fb64,409627567,0,0x0,8
tick,0x7ffad1f6fb64,409642584,0,0x0,8
tick,0x7ffad1f6fb64,409658889,0,0x0,8
tick,0x7ffad1f6fb64,409674610,0,0x0,8
tick,0x7ffad1f6fb64,409689615,0,0x0,8
tick,0x7ffad1f6fb64,409705648,0,0x0,8
tick,0x7ffad1f6fb64,409720635,0,0x0,8
tick,0x7ffad1f6fb64,409736660,0,0x0,8
tick,0x7ffad1f6fb64,409752691,0,0x0,8
tick,0x7ffad1f6fb64,409767752,0,0x0,8
tick,0x7ffad1f6fb64,409783755,0,0x0,8
tick,0x7ffad1f6fb64,409799724,0,0x0,8
tick,0x7ffad1f6fb64,409815744,0,0x0,8
tick,0x7ffad1f6fb64,409831749,0,0x0,8
tick,0x7ffad1f6fb64,409847778,0,0x0,8
tick,0x7ffad1f6fb64,409862796,0,0x0,8
tick,0x7ffad1f6fb64,409878789,0,0x0,8
tick,0x7ffad1f6fb64,409894809,0,0x0,8
tick,0x7ffad1f6fb64,409909862,0,0x0,8
tick,0x7ffad1f6fb64,409924891,0,0x0,8
tick,0x7ffad1f6fb64,409939860,0,0x0,8
tick,0x7ffad1f6fb64,409955874,0,0x0,8
tick,0x7ffad1f6fb64,409971877,0,0x0,8
tick,0x7ffad1f6fb64,409987890,0,0x0,8
tick,0x7ffad1f6fb64,410002908,0,0x0,8
tick,0x7ffad1f6fb64,410018919,0,0x0,8
tick,0x7ffad1f6fb64,410034957,0,0x0,8
tick,0x7ffad1f6fb64,410049944,0,0x0,8
tick,0x7ffad1f6fb64,410064971,0,0x0,8
tick,0x7ffad1f6fb64,410080097,0,0x0,8
tick,0x7ffad1f6fb64,410094978,0,0x0,8
tick,0x7ffad1f6fb64,410111010,0,0x0,8
tick,0x7ffad1f6fb64,410126025,0,0x0,8
tick,0x7ffad1f6fb64,410142087,0,0x0,8
tick,0x7ffad1f6fb64,410158046,0,0x0,8
tick,0x7ffad1f6fb64,410173082,0,0x0,8
tick,0x7ffad1f6fb64,410189052,0,0x0,8
tick,0x7ffad1f6fb64,410204077,0,0x0,8
tick,0x7ffad1f6fb64,410220088,0,0x0,8
tick,0x7ffad1f6fb64,410236141,0,0x0,8
tick,0x7ffad1f6fb64,410252135,0,0x0,8
tick,0x7ffad1f6fb64,410267154,0,0x0,8
tick,0x7ffad1f6fb64,410282284,0,0x0,8
tick,0x7ffad1f6fb64,410298196,0,0x0,8
tick,0x7ffad1f6fb64,410313278,0,0x0,8
tick,0x7ffad1f6fb64,410329193,0,0x0,8
tick,0x7ffad1f6fb64,410345183,0,0x0,8
tick,0x7ffad1f6fb64,410360229,0,0x0,8
tick,0x7ffad1f6fb64,410376241,0,0x0,8
tick,0x7ffad1f6fb64,410391286,0,0x0,8
tick,0x7ffad1f6fb64,410407364,0,0x0,8
tick,0x7ffad1f6fb64,410422327,0,0x0,8
tick,0x7ffad1f6fb64,410438310,0,0x0,8
tick,0x7ffad1f6fb64,410453394,0,0x0,8
tick,0x7ffad1f6fb64,410469347,0,0x0,8
tick,0x7ffad1f6fb64,410485339,0,0x0,8
tick,0x7ffad1f6fb64,410500377,0,0x0,8
tick,0x7ffad1f6fb64,410516468,0,0x0,8
tick,0x7ffad1f6fb64,410532395,0,0x0,8
tick,0x7ffad1f6fb64,410547512,0,0x0,8
tick,0x7ffad1f6fb64,410563408,0,0x0,8
tick,0x7ffad1f6fb64,410578418,0,0x0,8
tick,0x7ffad1f6fb64,410593435,0,0x0,8
tick,0x7ffad1f6fb64,410609443,0,0x0,8
tick,0x7ffad1f6fb64,410624451,0,0x0,8
tick,0x7ffad1f6fb64,410640486,0,0x0,8
tick,0x7ffad1f6fb64,410656479,0,0x0,8
tick,0x7ffad1f6fb64,410672483,0,0x0,8
tick,0x7ffad1f6fb64,410687563,0,0x0,8
tick,0x7ffad1f6fb64,410703546,0,0x0,8
tick,0x7ffad1f6fb64,410718525,0,0x0,8
tick,0x7ffad1f6fb64,410734546,0,0x0,8
tick,0x7ffad1f6fb64,410749559,0,0x0,8
tick,0x7ffad1f6fb64,410764592,0,0x0,8
tick,0x7ffad1f6fb64,410779586,0,0x0,8
tick,0x7ffad1f6fb64,410795686,0,0x0,8
tick,0x7ffad1f6fb64,410811646,0,0x0,8
tick,0x7ffad1f6fb64,410827658,0,0x0,8
tick,0x7ffad1f6fb64,410843667,0,0x0,8
tick,0x7ffad1f6fb64,410859669,0,0x0,8
tick,0x7ffad1f6fb64,410875680,0,0x0,8
tick,0x7ffad1f6fb64,410890688,0,0x0,8
tick,0x7ffad1f6fb64,410906710,0,0x0,8
tick,0x7ffad1f6fb64,410921708,0,0x0,8
tick,0x7ffad1f6fb64,410936746,0,0x0,8
tick,0x7ffad1f6fb64,410952745,0,0x0,8
tick,0x7ffad1f6fb64,410967766,0,0x0,8
tick,0x7ffad1f6fb64,410983783,0,0x0,8
tick,0x7ffad1f6fb64,410999793,0,0x0,8
tick,0x7ffad1f6fb64,411015845,0,0x0,8
tick,0x7ffad1f6fb64,411031805,0,0x0,8
tick,0x7ffad1f6fb64,411047870,0,0x0,8
tick,0x7ffad1f6fb64,411063892,0,0x0,8
tick,0x7ffad1f6fb64,411078856,0,0x0,8
tick,0x7ffad1f6fb64,411093893,0,0x0,8
tick,0x7ffad1f6fb64,411108891,0,0x0,8
tick,0x7ffad1f6fb64,411124918,0,0x0,8
tick,0x7ffad1f6fb64,411139918,0,0x0,8
tick,0x7ffad1f6fb64,411155965,0,0x0,8
tick,0x7ffad1f6fb64,411171960,0,0x0,8
tick,0x7ffad1f6fb64,411187966,0,0x0,8
tick,0x7ffad1f6fb64,411202990,0,0x0,8
tick,0x7ffad1f6fb64,411218985,0,0x0,8
tick,0x7ffad1f6fb64,411235015,0,0x0,8
tick,0x7ffad1f6fb64,411250018,0,0x0,8
tick,0x7ffad1f6fb64,411266057,0,0x0,8
tick,0x7ffad1f6fb64,411281047,0,0x0,8
tick,0x7ffad1f6fb64,411296056,0,0x0,8
tick,0x7ffad1f6fb64,411312095,0,0x0,8
tick,0x7ffad1f6fb64,411327122,0,0x0,8
tick,0x7ffad1f6fb64,411342125,0,0x0,8
tick,0x7ffad1f6fb64,411358129,0,0x0,8
tick,0x7ffad1f6fb64,411373208,0,0x0,8
tick,0x7ffad1f6fb64,411388208,0,0x0,8
tick,0x7ffad1f6fb64,411404146,0,0x0,8
tick,0x7ffad1f6fb64,411419192,0,0x0,8
tick,0x7ffad1f6fb64,411435224,0,0x0,8
tick,0x7ffad1f6fb64,411450248,0,0x0,8
tick,0x7ffad1f6fb64,411466219,0,0x0,8
tick,0x7ffad1f6fb64,411481245,0,0x0,8
tick,0x7ffad1f6fb64,411496273,0,0x0,8
tick,0x7ffad1f6fb64,411512272,0,0x0,8
tick,0x7ffad1f6fb64,411527269,0,0x0,8
tick,0x7ffad1f6fb64,411543303,0,0x0,8
tick,0x7ffad1f6fb64,411559325,0,0x0,8
tick,0x7ffad1f6fb64,411574329,0,0x0,8
tick,0x7ffad1f6fb64,411590322,0,0x0,8
tick,0x7ffad1f6fb64,411606336,0,0x0,8
tick,0x7ffad1f6fb64,411621375,0,0x0,8
tick,0x7ffad1f6fb64,411636400,0,0x0,8
tick,0x7ffad1f6fb64,411651395,0,0x0,8
tick,0x7ffad1f6fb64,411666416,0,0x0,8
tick,0x7ffad1f6fb64,411681399,0,0x0,8
tick,0x7ffad1f6fb64,411697424,0,0x0,8
tick,0x7ffad1f6fb64,411713481,0,0x0,8
tick,0x7ffad1f6fb64,411729460,0,0x0,8
tick,0x7ffad1f6fb64,411744466,0,0x0,8
tick,0x7ffad1f6fb64,411760490,0,0x0,8
tick,0x7ffad1f6fb64,411775515,0,0x0,8
tick,0x7ffad1f6fb64,411791520,0,0x0,8
tick,0x7ffad1f6fb64,411807547,0,0x0,8
tick,0x7ffad1f6fb64,411822560,0,0x0,8
tick,0x7ffad1f6fb64,411837581,0,0x0,8
tick,0x7ffad1f6fb64,411853584,0,0x0,8
tick,0x7ffad1f6fb64,411869600,0,0x0,8
tick,0x7ffad1f6fb64,411884627,0,0x0,8
tick,0x7ffad1f6fb64,411899615,0,0x0,8
tick,0x7ffad1f6fb64,411915628,0,0x0,8
tick,0x7ffad1f6fb64,411931658,0,0x0,8
tick,0x7ffad1f6fb64,411946657,0,0x0,8
tick,0x7ffad1f6fb64,411961681,0,0x0,8
tick,0x7ffad1f6fb64,411976687,0,0x0,8
tick,0x7ffad1f6fb64,411992736,0,0x0,8
tick,0x7ffad1f6fb64,412008747,0,0x0,8
tick,0x7ffad1f6fb64,412024760,0,0x0,8
tick,0x7ffad1f6fb64,412039824,0,0x0,8
tick,0x7ffad1f6fb64,412054747,0,0x0,8
tick,0x7ffad1f6fb64,412070773,0,0x0,8
tick,0x7ffad1f6fb64,412086791,0,0x0,8
tick,0x7ffad1f6fb64,412101911,0,0x0,8
tick,0x7ffad1f6fb64,412117819,0,0x0,8
tick,0x7ffad1f6fb64,412133840,0,0x0,8
tick,0x7ffad1f6fb64,412149835,0,0x0,8
tick,0x7ffad1f6fb64,412165861,0,0x0,8
tick,0x7ffad1f6fb64,412180892,0,0x0,8
tick,0x7ffad1f6fb64,412195867,0,0x0,8
tick,0x7ffad1f6fb64,412211930,0,0x0,8
tick,0x7ffad1f6fb64,412226963,0,0x0,8
tick,0x7ffad1f6fb64,412242948,0,0x0,8
tick,0x7ffad1f6fb64,412258951,0,0x0,8
tick,0x7ffad1f6fb64,412273945,0,0x0,8
tick,0x7ffad1f6fb64,412289955,0,0x0,8
tick,0x7ffad1f6fb64,412304981,0,0x0,8
tick,0x7ffad1f6fb64,412320018,0,0x0,8
tick,0x7ffad1f6fb64,412335991,0,0x0,8
tick,0x7ffad1f6fb64,412352121,0,0x0,8
tick,0x7ffad1f6fb64,412367032,0,0x0,8
tick,0x7ffad1f6fb64,412383039,0,0x0,8
tick,0x7ffad1f6fb64,412398068,0,0x0,8
tick,0x7ffad1f6fb64,412414125,0,0x0,8
tick,0x7ffad1f6fb64,412430114,0,0x0,8
tick,0x7ffad1f6fb64,412446118,0,0x0,8
tick,0x7ffad1f6fb64,412461136,0,0x0,8
tick,0x7ffad1f6fb64,412476188,0,0x0,8
tick,0x7ffad1f6fb64,412492177,0,0x0,8
tick,0x7ffad1f6fb64,412507190,0,0x0,8
tick,0x7ffad1f6fb64,412522186,0,0x0,8
tick,0x7ffad1f6fb64,412538214,0,0x0,8
tick,0x7ffad1f6fb64,412554207,0,0x0,8
tick,0x7ffad1f6fb64,412570242,0,0x0,8
tick,0x7ffad1f6fb64,412585243,0,0x0,8
tick,0x7ffad1f6fb64,412601252,0,0x0,8
tick,0x7ffad1f6fb64,412616314,0,0x0,8
tick,0x7ffad1f6fb64,412631285,0,0x0,8
tick,0x7ffad1f6fb64,412646318,0,0x0,8
tick,0x7ffad1f6fb64,412661346,0,0x0,8
tick,0x7ffad1f6fb64,412676352,0,0x0,8
tick,0x7ffad1f6fb64,412691348,0,0x0,8
tick,0x7ffad1f6fb64,412707358,0,0x0,8
tick,0x7ffad1f6fb64,412722414,0,0x0,8
tick,0x7ffad1f6fb64,412737469,0,0x0,8
tick,0x7ffad1f6fb64,412753416,0,0x0,8
tick,0x7ffad1f6fb64,412768431,0,0x0,8
tick,0x7ffad1f6fb64,412783436,0,0x0,8
tick,0x7ffad1f6fb64,412798448,0,0x0,8
tick,0x7ffad1f6fb64,412814456,0,0x0,8
tick,0x7ffad1f6fb64,412829488,0,0x0,8
tick,0x7ffad1f6fb64,412845478,0,0x0,8
tick,0x7ffad1f6fb64,412861518,0,0x0,8
tick,0x7ffad1f6fb64,412876530,0,0x0,8
tick,0x7ffad1f6fb64,412892517,0,0x0,8
tick,0x7ffad1f6fb64,412907545,0,0x0,8
tick,0x7ffad1f6fb64,412922559,0,0x0,8
tick,0x7ffad1f6fb64,412937569,0,0x0,8
tick,0x7ffad1f6fb64,412953564,0,0x0,8
tick,0x7ffad1f6fb64,412969606,0,0x0,8
tick,0x7ffad1f6fb64,412985631,0,0x0,8
tick,0x7ffad1f6fb64,413001625,0,0x0,8
tick,0x7ffad1f6fb64,413016662,0,0x0,8
tick,0x7ffad1f6fb64,413031656,0,0x0,8
tick,0x7ffad1f6fb64,413047675,0,0x0,8
tick,0x7ffad1f6fb64,413062691,0,0x0,8
tick,0x7ffad1f6fb64,413078705,0,0x0,8
tick,0x7ffad1f6fb64,413094707,0,0x0,8
tick,0x7ffad1f6fb64,413109733,0,0x0,8
tick,0x7ffad1f6fb64,413124735,0,0x0,8
tick,0x7ffad1f6fb64,413139763,0,0x0,8
tick,0x7ffad1f6fb64,413154841,0,0x0,8
tick,0x7ffad1f6fb64,413171013,0,0x0,8
tick,0x7ffad1f6fb64,413186834,0,0x0,8
tick,0x7ffad1f6fb64,413201789,0,0x0,8
tick,0x7ffad1f6fb64,413217826,0,0x0,8
tick,0x7ffad1f6fb64,413233836,0,0x0,8
tick,0x7ffad1f6fb64,413249863,0,0x0,8
tick,0x7ffad1f6fb64,413265861,0,0x0,8
tick,0x7ffad1f6fb64,413280883,0,0x0,8
tick,0x7ffad1f6fb64,413295905,0,0x0,8
tick,0x7ffad1f6fb64,413311899,0,0x0,8
tick,0x7ffad1f6fb64,413327924,0,0x0,8
tick,0x7ffad1f6fb64,413342957,0,0x0,8
tick,0x7ffad1f6fb64,413358961,0,0x0,8
tick,0x7ffad1f6fb64,413374988,0,0x0,8
tick,0x7ffad1f6fb64,413391026,0,0x0,8
tick,0x7ffad1f6fb64,413406007,0,0x0,8
tick,0x7ffad1f6fb64,413421019,0,0x0,8
tick,0x7ffad1f6fb64,413437035,0,0x0,8
tick,0x7ffad1f6fb64,413453034,0,0x0,8
tick,0x7ffad1f6fb64,413468059,0,0x0,8
tick,0x7ffad1f6fb64,413484065,0,0x0,8
tick,0x7ffad1f6fb64,413499105,0,0x0,8
tick,0x7ffad1f6fb64,413515119,0,0x0,8
tick,0x7ffad1f6fb64,413531124,0,0x0,8
tick,0x7ffad1f6fb64,413547137,0,0x0,8
tick,0x7ffad1f6fb64,413563155,0,0x0,8
tick,0x7ffad1f6fb64,413578168,0,0x0,8
tick,0x7ffad1f6fb64,413593166,0,0x0,8
tick,0x7ffad1f6fb64,413609217,0,0x0,8
tick,0x7ffad1f6fb64,413624215,0,0x0,8
tick,0x7ffad1f6fb64,413640196,0,0x0,8
tick,0x7ffad1f6fb64,413655255,0,0x0,8
tick,0x7ffad1f6fb64,413671236,0,0x0,8
tick,0x7ffad1f6fb64,413687241,0,0x0,8
tick,0x7ffad1f6fb64,413703263,0,0x0,8
tick,0x7ffad1f6fb64,413718287,0,0x0,8
tick,0x7ffad1f6fb64,413734314,0,0x0,8
tick,0x7ffad1f6fb64,413750301,0,0x0,8
tick,0x7ffad1f6fb64,413765329,0,0x0,8
tick,0x7ffad1f6fb64,413780330,0,0x0,8
tick,0x7ffad1f6fb64,413795351,0,0x0,8
tick,0x7ffad1f6fb64,413810346,0,0x0,8
tick,0x7ffad1f6fb64,413825441,0,0x0,8
tick,0x7ffad1f6fb64,413840412,0,0x0,8
tick,0x7ffad1f6fb64,413856396,0,0x0,8
tick,0x7ffad1f6fb64,413872409,0,0x0,8
tick,0x7ffad1f6fb64,413888422,0,0x0,8
tick,0x7ffad1f6fb64,413903424,0,0x0,8
tick,0x7ffad1f6fb64,413919449,0,0x0,8
tick,0x7ffad1f6fb64,413935462,0,0x0,8
tick,0x7ffad1f6fb64,413950480,0,0x0,8
tick,0x7ffad1f6fb64,413966549,0,0x0,8
tick,0x7ffad1f6fb64,413981520,0,0x0,8
tick,0x7ffad1f6fb64,413997534,0,0x0,8
tick,0x7ffad1f6fb64,414013549,0,0x0,8
tick,0x7ffad1f6fb64,414029559,0,0x0,8
tick,0x7ffad1f6fb64,414044575,0,0x0,8
tick,0x7ffad1f6fb64,414059604,0,0x0,8
tick,0x7ffad1f6fb64,414075602,0,0x0,8
tick,0x7ffad1f6fb64,414091614,0,0x0,8
tick,0x7ffad1f6fb64,414107616,0,0x0,8
tick,0x7ffad1f6fb64,414122637,0,0x0,8
tick,0x7ffad1f6fb64,414137654,0,0x0,8
tick,0x7ffad1f6fb64,414153674,0,0x0,8
tick,0x7ffad1f6fb64,414168722,0,0x0,8
tick,0x7ffad1f6fb64,414183736,0,0x0,8
tick,0x7ffad1f6fb64,414198727,0,0x0,8
tick,0x7ffad1f6fb64,414213757,0,0x0,8
tick,0x7ffad1f6fb64,414228751,0,0x0,8
tick,0x7ffad1f6fb64,414244759,0,0x0,8
tick,0x7ffad1f6fb64,414260847,0,0x0,8
tick,0x7ffad1f6fb64,414275833,0,0x0,8
tick,0x7ffad1f6fb64,414291829,0,0x0,8
tick,0x7ffad1f6fb64,414306811,0,0x0,8
tick,0x7ffad1f6fb64,414322843,0,0x0,8
tick,0x7ffad1f6fb64,414338849,0,0x0,8
tick,0x7ffad1f6fb64,414354854,0,0x0,8
tick,0x7ffad1f6fb64,414369875,0,0x0,8
tick,0x7ffad1f6fb64,414385906,0,0x0,8
tick,0x7ffad1f6fb64,414401019,0,0x0,8
tick,0x7ffad1f6fb64,414416919,0,0x0,8
tick,0x7ffad1f6fb64,414432933,0,0x0,8
tick,0x7ffad1f6fb64,414447957,0,0x0,8
tick,0x7ffad1f6fb64,414463970,0,0x0,8
tick,0x7ffad1f6fb64,414479958,0,0x0,8
tick,0x7ffad1f6fb64,414495995,0,0x0,8
tick,0x7ffad1f6fb64,414511011,0,0x0,8
tick,0x7ffad1f6fb64,414527039,0,0x0,8
tick,0x7ffad1f6fb64,414543039,0,0x0,8
tick,0x7ffad1f6fb64,414558033,0,0x0,8
tick,0x7ffad1f6fb64,414573056,0,0x0,8
tick,0x7ffad1f6fb64,414588065,0,0x0,8
tick,0x7ffad1f6fb64,414604112,0,0x0,8
tick,0x7ffad1f6fb64,414620085,0,0x0,8
tick,0x7ffad1f6fb64,414636232,0,0x0,8
tick,0x7ffad1f6fb64,414651116,0,0x0,8
tick,0x7ffad1f6fb64,414666134,0,0x0,8
tick,0x7ffad1f6fb64,414681152,0,0x0,8
tick,0x7ffad1f6fb64,414697169,0,0x0,8
tick,0x7ffad1f6fb64,414712208,0,0x0,8
tick,0x7ffad1f6fb64,414728194,0,0x0,8
tick,0x7ffad1f6fb64,414743204,0,0x0,8
tick,0x7ffad1f6fb64,414759219,0,0x0,8
tick,0x7ffad1f6fb64,414775227,0,0x0,8
tick,0x7ffad1f6fb64,414790268,0,0x0,8
tick,0x7ffad1f6fb64,414806250,0,0x0,8
tick,0x7ffad1f6fb64,414821280,0,0x0,8
tick,0x7ffad1f6fb64,414836289,0,0x0,8
tick,0x7ffad1f6fb64,414852310,0,0x0,8
tick,0x7ffad1f6fb64,414868331,0,0x0,8
tick,0x7ffad1f6fb64,414883319,0,0x0,8
tick,0x7ffad1f6fb64,414899337,0,0x0,8
tick,0x7ffad1f6fb64,414914367,0,0x0,8
tick,0x7ffad1f6fb64,414930390,0,0x0,8
tick,0x7ffad1f6fb64,414946376,0,0x0,8
tick,0x7ffad1f6fb64,414962395,0,0x0,8
tick,0x7ffad1f6fb64,414977429,0,0x0,8
tick,0x7ffad1f6fb64,414992433,0,0x0,8
tick,0x7ffad1f6fb64,415007445,0,0x0,8
tick,0x7ffad1f6fb64,415022456,0,0x0,8
tick,0x7ffad1f6fb64,415037544,0,0x0,8
tick,0x7ffad1f6fb64,415053467,0,0x0,8
tick,0x7ffad1f6fb64,415069518,0,0x0,8
tick,0x7ffad1f6fb64,415085529,0,0x0,8
tick,0x7ffad1f6fb64,415101527,0,0x0,8
tick,0x7ffad1f6fb64,415116557,0,0x0,8
tick,0x7ffad1f6fb64,415131558,0,0x0,8
tick,0x7ffad1f6fb64,415147567,0,0x0,8
tick,0x7ffad1f6fb64,415163593,0,0x0,8
tick,0x7ffad1f6fb64,415179608,0,0x0,8
tick,0x7ffad1f6fb64,415194613,0,0x0,8
tick,0x7ffad1f6fb64,415209695,0,0x0,8
tick,0x7ffad1f6fb64,415225667,0,0x0,8
tick,0x7ffad1f6fb64,415240669,0,0x0,8
tick,0x7ffad1f6fb64,415256682,0,0x0,8
tick,0x7ffad1f6fb64,415272697,0,0x0,8
tick,0x7ffad1f6fb64,415288698,0,0x0,8
tick,0x7ffad1f6fb64,415304742,0,0x0,8
tick,0x7ffad1f6fb64,415319722,0,0x0,8
tick,0x7ffad1f6fb64,415335725,0,0x0,8
tick,0x7ffad1f6fb64,415350783,0,0x0,8
tick,0x7ffad1f6fb64,415366798,0,0x0,8
tick,0x7ffad1f6fb64,415381782,0,0x0,8
tick,0x7ffad1f6fb64,415396799,0,0x0,8
tick,0x7ffad1f6fb64,415411814,0,0x0,8
tick,0x7ffad1f6fb64,415427871,0,0x0,8
tick,0x7ffad1f6fb64,415443824,0,0x0,8
tick,0x7ffad1f6fb64,415459836,0,0x0,8
tick,0x7ffad1f6fb64,415475938,0,0x0,8
tick,0x7ffad1f6fb64,415490879,0,0x0,8
tick,0x7ffad1f6fb64,415505901,0,0x0,8
tick,0x7ffad1f6fb64,415520934,0,0x0,8
tick,0x7ffad1f6fb64,415535945,0,0x0,8
tick,0x7ffad1f6fb64,415550999,0,0x0,8
tick,0x7ffad1f6fb64,415566973,0,0x0,8
tick,0x7ffad1f6fb64,415581987,0,0x0,8
tick,0x7ffad1f6fb64,415597012,0,0x0,8
tick,0x7ffad1f6fb64,415613015,0,0x0,8
tick,0x7ffad1f6fb64,415628038,0,0x0,8
tick,0x7ffad1f6fb64,415643027,0,0x0,8
tick,0x7ffad1f6fb64,415659057,0,0x0,8
tick,0x7ffad1f6fb64,415675083,0,0x0,8
tick,0x7ffad1f6fb64,415690098,0,0x0,8
tick,0x7ffad1f6fb64,415705190,0,0x0,8
tick,0x7ffad1f6fb64,415720387,0,0x0,8
tick,0x7ffad1f6fb64,415736139,0,0x0,8
tick,0x7ffad1f6fb64,415751138,0,0x0,8
tick,0x7ffad1f6fb64,415766144,0,0x0,8
tick,0x7ffad1f6fb64,415781149,0,0x0,8
tick,0x7ffad1f6fb64,415797191,0,0x0,8
tick,0x7ffad1f6fb64,415813195,0,0x0,8
tick,0x7ffad1f6fb64,415829206,0,0x0,8
tick,0x7ffad1f6fb64,415844218,0,0x0,8
tick,0x7ffad1f6fb64,415859233,0,0x0,8
tick,0x7ffad1f6fb64,415875275,0,0x0,8
tick,0x7ffad1f6fb64,415890281,0,0x0,8
tick,0x7ffad1f6fb64,415906310,0,0x0,8
tick,0x7ffad1f6fb64,415921270,0,0x0,8
tick,0x7ffad1f6fb64,415937321,0,0x0,8
tick,0x7ffad1f6fb64,415953307,0,0x0,8
tick,0x7ffad1f6fb64,415968346,0,0x0,8
tick,0x7ffad1f6fb64,415984333,0,0x0,8
tick,0x7ffad1f6fb64,415999350,0,0x0,8
tick,0x7ffad1f6fb64,416015409,0,0x0,8
tick,0x7ffad1f6fb64,416031373,0,0x0,8
tick,0x7ffad1f6fb64,416046403,0,0x0,8
tick,0x7ffad1f6fb64,416061430,0,0x0,8
tick,0x7ffad1f6fb64,416077455,0,0x0,8
tick,0x7ffad1f6fb64,416093466,0,0x0,8
tick,0x7ffad1f6fb64,416109476,0,0x0,8
tick,0x7ffad1f6fb64,416125472,0,0x0,8
tick,0x7ffad1f6fb64,416140482,0,0x0,8
tick,0x7ffad1f6fb64,416155489,0,0x0,8
tick,0x7ffad1f6fb64,416171547,0,0x0,8
tick,0x7ffad1f6fb64,416187546,0,0x0,8
tick,0x7ffad1f6fb64,416202530,0,0x0,8
tick,0x7ffad1f6fb64,416217604,0,0x0,8
tick,0x7ffad1f6fb64,416232590,0,0x0,8
tick,0x7ffad1f6fb64,416248575,0,0x0,8
tick,0x7ffad1f6fb64,416263632,0,0x0,8
tick,0x7ffad1f6fb64,416279619,0,0x0,8
tick,0x7ffad1f6fb64,416295630,0,0x0,8
tick,0x7ffad1f6fb64,416311646,0,0x0,8
tick,0x7ffad1f6fb64,416326675,0,0x0,8
tick,0x7ffad1f6fb64,416341699,0,0x0,8
tick,0x7ffad1f6fb64,416357679,0,0x0,8
tick,0x7ffad1f6fb64,416372721,0,0x0,8
tick,0x7ffad1f6fb64,416388712,0,0x0,8
tick,0x7ffad1f6fb64,416403728,0,0x0,8
tick,0x7ffad1f6fb64,416419742,0,0x0,8
tick,0x7ffad1f6fb64,416435754,0,0x0,8
tick,0x7ffad1f6fb64,416451788,0,0x0,8
tick,0x7ffad1f6fb64,416466796,0,0x0,8
tick,0x7ffad1f6fb64,416481816,0,0x0,8
tick,0x7ffad1f6fb64,416497815,0,0x0,8
tick,0x7ffad1f6fb64,416513849,0,0x0,8
tick,0x7ffad1f6fb64,416529828,0,0x0,8
tick,0x7ffad1f6fb64,416544928,0,0x0,8
tick,0x7ffad1f6fb64,416559879,0,0x0,8
tick,0x7ffad1f6fb64,416575883,0,0x0,8
tick,0x7ffad1f6fb64,416591908,0,0x0,8
tick,0x7ffad1f6fb64,416606899,0,0x0,8
tick,0x7ffad1f6fb64,416622925,0,0x0,8
tick,0x7ffad1f6fb64,416638943,0,0x0,8
tick,0x7ffad1f6fb64,416653946,0,0x0,8
tick,0x7ffad1f6fb64,416668994,0,0x0,8
tick,0x7ffad1f6fb64,416683991,0,0x0,8
tick,0x7ffad1f6fb64,416699017,0,0x0,8
tick,0x7ffad1f6fb64,416715002,0,0x0,8
tick,0x7ffad1f6fb64,416731018,0,0x0,8
tick,0x7ffad1f6fb64,416747045,0,0x0,8
tick,0x7ffad1f6fb64,416763071,0,0x0,8
tick,0x7ffad1f6fb64,416778090,0,0x0,8
tick,0x7ffad1f6fb64,416794076,0,0x0,8
tick,0x7ffad1f6fb64,416810292,0,0x0,8
tick,0x7ffad1f6fb64,416826108,0,0x0,8
tick,0x7ffad1f6fb64,416841141,0,0x0,8
tick,0x7ffad1f6fb64,416856131,0,0x0,8
tick,0x7ffad1f6fb64,416871145,0,0x0,8
tick,0x7ffad1f6fb64,416887179,0,0x0,8
tick,0x7ffad1f6fb64,416903177,0,0x0,8
tick,0x7ffad1f6fb64,416918206,0,0x0,8
tick,0x7ffad1f6fb64,416934210,0,0x0,8
tick,0x7ffad1f6fb64,416949216,0,0x0,8
tick,0x7ffad1f6fb64,416965251,0,0x0,8
tick,0x7ffad1f6fb64,416980245,0,0x0,8
tick,0x7ffad1f6fb64,416995246,0,0x0,8
tick,0x7ffad1f6fb64,417011267,0,0x0,8
tick,0x7ffad1f6fb64,417027299,0,0x0,8
tick,0x7ffad1f6fb64,417042313,0,0x0,8
tick,0x7ffad1f6fb64,417057323,0,0x0,8
tick,0x7ffad1f6fb64,417072348,0,0x0,8
tick,0x7ffad1f6fb64,417088360,0,0x0,8
tick,0x7ffad1f6fb64,417104337,0,0x0,8
tick,0x7ffad1f6fb64,417120377,0,0x0,8
tick,0x7ffad1f6fb64,417136374,0,0x0,8
tick,0x7ffad1f6fb64,417152400,0,0x0,8
tick,0x7ffad1f6fb64,417167416,0,0x0,8
tick,0x7ffad1f6fb64,417182414,0,0x0,8
tick,0x7ffad1f6fb64,417198458,0,0x0,8
tick,0x7ffad1f6fb64,417213468,0,0x0,8
tick,0x7ffad1f6fb64,417229473,0,0x0,8
tick,0x7ffad1f6fb64,417245533,0,0x0,8
tick,0x7ffad1f6fb64,417260504,0,0x0,8
tick,0x7ffad1f6fb64,417275517,0,0x0,8
tick,0x7ffad1f6fb64,417291523,0,0x0,8
tick,0x7ffad1f6fb64,417306551,0,0x0,8
tick,0x7ffad1f6fb64,417321559,0,0x0,8
tick,0x7ffad1f6fb64,417336568,0,0x0,8
tick,0x7ffad1f6fb64,417351603,0,0x0,8
tick,0x7ffad1f6fb64,417366585,0,0x0,8
tick,0x7ffad1f6fb64,417381593,0,0x0,8
tick,0x7ffad1f6fb64,417397619,0,0x0,8
tick,0x7ffad1f6fb64,417413645,0,0x0,8
tick,0x7ffad1f6fb64,417428658,0,0x0,8
tick,0x7ffad1f6fb64,417444656,0,0x0,8
tick,0x7ffad1f6fb64,417459694,0,0x0,8
tick,0x7ffad1f6fb64,417475717,0,0x0,8
tick,0x7ffad1f6fb64,417490710,0,0x0,8
tick,0x7ffad1f6fb64,417506709,0,0x0,8
tick,0x7ffad1f6fb64,417521748,0,0x0,8
tick,0x7ffad1f6fb64,417537752,0,0x0,8
tick,0x7ffad1f6fb64,417553734,0,0x0,8
tick,0x7ffad1f6fb64,417569753,0,0x0,8
tick,0x7ffad1f6fb64,417585792,0,0x0,8
tick,0x7ffad1f6fb64,417600818,0,0x0,8
tick,0x7ffad1f6fb64,417616815,0,0x0,8
tick,0x7ffad1f6fb64,417632846,0,0x0,8
tick,0x7ffad1f6fb64,417648857,0,0x0,8
tick,0x7ffad1f6fb64,417663878,0,0x0,8
tick,0x7ffad1f6fb64,417679877,0,0x0,8
tick,0x7ffad1f6fb64,417695893,0,0x0,8
tick,0x7ffad1f6fb64,417710921,0,0x0,8
tick,0x7ffad1f6fb64,417726926,0,0x0,8
tick,0x7ffad1f6fb64,417742935,0,0x0,8
tick,0x7ffad1f6fb64,417758959,0,0x0,8
tick,0x7ffad1f6fb64,417774975,0,0x0,8
tick,0x7ffad1f6fb64,417789977,0,0x0,8
tick,0x7ffad1f6fb64,417805012,0,0x0,8
tick,0x7ffad1f6fb64,417820004,0,0x0,8
tick,0x7ffad1f6fb64,417836021,0,0x0,8
tick,0x7ffad1f6fb64,417851020,0,0x0,8
tick,0x7ffad1f6fb64,417866066,0,0x0,8
tick,0x7ffad1f6fb64,417881047,0,0x0,8
tick,0x7ffad1f6fb64,417896067,0,0x0,8
tick,0x7ffad1f6fb64,417912095,0,0x0,8
tick,0x7ffad1f6fb64,417928108,0,0x0,8
tick,0x7ffad1f6fb64,417943114,0,0x0,8
tick,0x7ffad1f6fb64,417959131,0,0x0,8
tick,0x7ffad1f6fb64,417975166,0,0x0,8
tick,0x7ffad1f6fb64,417991167,0,0x0,8
tick,0x7ffad1f6fb64,418006161,0,0x0,8
tick,0x7ffad1f6fb64,418021183,0,0x0,8
tick,0x7ffad1f6fb64,418037360,0,0x0,8
tick,0x7ffad1f6fb64,418052214,0,0x0,8
tick,0x7ffad1f6fb64,418068241,0,0x0,8
tick,0x7ffad1f6fb64,418084257,0,0x0,8
tick,0x7ffad1f6fb64,418099254,0,0x0,8
tick,0x7ffad1f6fb64,418115285,0,0x0,8
tick,0x7ffad1f6fb64,418131304,0,0x0,8
tick,0x7ffad1f6fb64,418147312,0,0x0,8
tick,0x7ffad1f6fb64,418163319,0,0x0,8
tick,0x7ffad1f6fb64,418178323,0,0x0,8
tick,0x7ffad1f6fb64,418194361,0,0x0,8
tick,0x7ffad1f6fb64,418209354,0,0x0,8
tick,0x7ffad1f6fb64,418225385,0,0x0,8
tick,0x7ffad1f6fb64,418240386,0,0x0,8
tick,0x7ffad1f6fb64,418255389,0,0x0,8
tick,0x7ffad1f6fb64,418271413,0,0x0,8
tick,0x7ffad1f6fb64,418287440,0,0x0,8
tick,0x7ffad1f6fb64,418303456,0,0x0,8
tick,0x7ffad1f6fb64,418318491,0,0x0,8
tick,0x7ffad1f6fb64,418334490,0,0x0,8
tick,0x7ffad1f6fb64,418349487,0,0x0,8
tick,0x7ffad1f6fb64,418364508,0,0x0,8
tick,0x7ffad1f6fb64,418379538,0,0x0,8
tick,0x7ffad1f6fb64,418395556,0,0x0,8
tick,0x7ffad1f6fb64,418410566,0,0x0,8
tick,0x7ffad1f6fb64,418425572,0,0x0,8
tick,0x7ffad1f6fb64,418440566,0,0x0,8
tick,0x7ffad1f6fb64,418455593,0,0x0,8
tick,0x7ffad1f6fb64,418470610,0,0x0,8
tick,0x7ffad1f6fb64,418485606,0,0x0,8
tick,0x7ffad1f6fb64,418501631,0,0x0,8
tick,0x7ffad1f6fb64,418517699,0,0x0,8
tick,0x7ffad1f6fb64,418532658,0,0x0,8
tick,0x7ffad1f6fb64,418548668,0,0x0,8
tick,0x7ffad1f6fb64,418563700,0,0x0,8
tick,0x7ffad1f6fb64,418579703,0,0x0,8
tick,0x7ffad1f6fb64,418595729,0,0x0,8
tick,0x7ffad1f6fb64,418610971,0,0x0,8
tick,0x7ffad1f6fb64,418626751,0,0x0,8
tick,0x7ffad1f6fb64,418642767,0,0x0,8
tick,0x7ffad1f6fb64,418657767,0,0x0,8
tick,0x7ffad1f6fb64,418672786,0,0x0,8
tick,0x7ffad1f6fb64,418688802,0,0x0,8
tick,0x7ffad1f6fb64,418704844,0,0x0,8
tick,0x7ffad1f6fb64,418720826,0,0x0,8
tick,0x7ffad1f6fb64,418735850,0,0x0,8
tick,0x7ffad1f6fb64,418751849,0,0x0,8
tick,0x7ffad1f6fb64,418766877,0,0x0,8
tick,0x7ffad1f6fb64,418781902,0,0x0,8
tick,0x7ffad1f6fb64,418797906,0,0x0,8
tick,0x7ffad1f6fb64,418813928,0,0x0,8
tick,0x7ffad1f6fb64,418829938,0,0x0,8
tick,0x7ffad1f6fb64,418845957,0,0x0,8
tick,0x7ffad1f6fb64,418861936,0,0x0,8
tick,0x7ffad1f6fb64,418877968,0,0x0,8
tick,0x7ffad1f6fb64,418893075,0,0x0,8
tick,0x7ffad1f6fb64,418909000,0,0x0,8
tick,0x7ffad1f6fb64,418925009,0,0x0,8
tick,0x7ffad1f6fb64,418940018,0,0x0,8
tick,0x7ffad1f6fb64,418956048,0,0x0,8
tick,0x7ffad1f6fb64,418972054,0,0x0,8
tick,0x7ffad1f6fb64,418987070,0,0x0,8
tick,0x7ffad1f6fb64,419003097,0,0x0,8
tick,0x7ffad1f6fb64,419019091,0,0x0,8
tick,0x7ffad1f6fb64,419035115,0,0x0,8
tick,0x7ffad1f6fb64,419050106,0,0x0,8
tick,0x7ffad1f6fb64,419066146,0,0x0,8
tick,0x7ffad1f6fb64,419081187,0,0x0,8
tick,0x7ffad1f6fb64,419097178,0,0x0,8
tick,0x7ffad1f6fb64,419113169,0,0x0,8
tick,0x7ffad1f6fb64,419129204,0,0x0,8
tick,0x7ffad1f6fb64,419144402,0,0x0,8
tick,0x7ffad1f6fb64,419160224,0,0x0,8
tick,0x7ffad1f6fb64,419176250,0,0x0,8
tick,0x7ffad1f6fb64,419191251,0,0x0,8
tick,0x7ffad1f6fb64,419207268,0,0x0,8
tick,0x7ffad1f6fb64,419222277,0,0x0,8
tick,0x7ffad1f6fb64,419238294,0,0x0,8
tick,0x7ffad1f6fb64,419253319,0,0x0,8
tick,0x7ffad1f6fb64,419269333,0,0x0,8
tick,0x7ffad1f6fb64,419285360,0,0x0,8
tick,0x7ffad1f6fb64,419301346,0,0x0,8
tick,0x7ffad1f6fb64,419317368,0,0x0,8
tick,0x7ffad1f6fb64,419332388,0,0x0,8
tick,0x7ffad1f6fb64,419348405,0,0x0,8
tick,0x7ffad1f6fb64,419364407,0,0x0,8
tick,0x7ffad1f6fb64,419380415,0,0x0,8
tick,0x7ffad1f6fb64,419395480,0,0x0,8
tick,0x7ffad1f6fb64,419411452,0,0x0,8
tick,0x7ffad1f6fb64,419427457,0,0x0,8
tick,0x7ffad1f6fb64,419442474,0,0x0,8
tick,0x7ffad1f6fb64,419458503,0,0x0,8
tick,0x7ffad1f6fb64,419474491,0,0x0,8
tick,0x7ffad1f6fb64,419490504,0,0x0,8
tick,0x7ffad1f6fb64,419505554,0,0x0,8
tick,0x7ffad1f6fb64,419520547,0,0x0,8
tick,0x7ffad1f6fb64,419536580,0,0x0,8
tick,0x7ffad1f6fb64,419552556,0,0x0,8
tick,0x7ffad1f6fb64,419568584,0,0x0,8
tick,0x7ffad1f6fb64,419583658,0,0x0,8
tick,0x7ffad1f6fb64,419598633,0,0x0,8
tick,0x7ffad1f6fb64,419613694,0,0x0,8
tick,0x7ffad1f6fb64,419628660,0,0x0,8
tick,0x7ffad1f6fb64,419643688,0,0x0,8
tick,0x7ffad1f6fb64,419658684,0,0x0,8
tick,0x7ffad1f6fb64,419673696,0,0x0,8
tick,0x7ffad1f6fb64,419689716,0,0x0,8
tick,0x7ffad1f6fb64,419705747,0,0x0,8
tick,0x7ffad1f6fb64,419721769,0,0x0,8
tick,0x7ffad1f6fb64,419737769,0,0x0,8
tick,0x7ffad1f6fb64,419753763,0,0x0,8
tick,0x7ffad1f6fb64,419768806,0,0x0,8
tick,0x7ffad1f6fb64,419784832,0,0x0,8
tick,0x7ffad1f6fb64,419800834,0,0x0,8
tick,0x7ffad1f6fb64,419816839,0,0x0,8
tick,0x7ffad1f6fb64,419831866,0,0x0,8
tick,0x7ffad1f6fb64,419846875,0,0x0,8
tick,0x7ffad1f6fb64,419862852,0,0x0,8
tick,0x7ffad1f6fb64,419878900,0,0x0,8
tick,0x7ffad1f6fb64,419894911,0,0x0,8
tick,0x7ffad1f6fb64,419909943,0,0x0,8
tick,0x7ffad1f6fb64,419924949,0,0x0,8
tick,0x7ffad1f6fb64,419939940,0,0x0,8
tick,0x7ffad1f6fb64,419955951,0,0x0,8
tick,0x7ffad1f6fb64,419971998,0,0x0,8
tick,0x7ffad1f6fb64,419987073,0,0x0,8
tick,0x7ffad1f6fb64,420002997,0,0x0,8
tick,0x7ffad1f6fb64,420018040,0,0x0,8
tick,0x7ffad1f6fb64,420033015,0,0x0,8
tick,0x7ffad1f6fb64,420049027,0,0x0,8
tick,0x7ffad1f6fb64,420064062,0,0x0,8
tick,0x7ffad1f6fb64,420079334,0,0x0,8
tick,0x7ffad1f6fb64,420095139,0,0x0,8
tick,0x7ffad1f6fb64,420110089,0,0x0,8
tick,0x7ffad1f6fb64,420126096,0,0x0,8
tick,0x7ffad1f6fb64,420142115,0,0x0,8
tick,0x7ffad1f6fb64,420157157,0,0x0,8
tick,0x7ffad1f6fb64,420173136,0,0x0,8
tick,0x7ffad1f6fb64,420188159,0,0x0,8
tick,0x7ffad1f6fb64,420204177,0,0x0,8
tick,0x7ffad1f6fb64,420220182,0,0x0,8
tick,0x7ffad1f6fb64,420236201,0,0x0,8
tick,0x7ffad1f6fb64,420252213,0,0x0,8
tick,0x7ffad1f6fb64,420267259,0,0x0,8
tick,0x7ffad1f6fb64,420282250,0,0x0,8
tick,0x7ffad1f6fb64,420297260,0,0x0,8
tick,0x7ffad1f6fb64,420312270,0,0x0,8
tick,0x7ffad1f6fb64,420327291,0,0x0,8
tick,0x7ffad1f6fb64,420343289,0,0x0,8
tick,0x7ffad1f6fb64,420359308,0,0x0,8
tick,0x7ffad1f6fb64,420375408,0,0x0,8
tick,0x7ffad1f6fb64,420390376,0,0x0,8
tick,0x7ffad1f6fb64,420406371,0,0x0,8
tick,0x7ffad1f6fb64,420422387,0,0x0,8
tick,0x7ffad1f6fb64,420437377,0,0x0,8
tick,0x7ffad1f6fb64,420453405,0,0x0,8
tick,0x7ffad1f6fb64,420469423,0,0x0,8
tick,0x7ffad1f6fb64,420484453,0,0x0,8
tick,0x7ffad1f6fb64,420499440,0,0x0,8
tick,0x7ffad1f6fb64,420515465,0,0x0,8
tick,0x7ffad1f6fb64,420531711,0,0x0,8
tick,0x7ffad1f6fb64,420547478,0,0x0,8
tick,0x7ffad1f6fb64,420563497,0,0x0,8
tick,0x7ffad1f6fb64,420578521,0,0x0,8
tick,0x7ffad1f6fb64,420594547,0,0x0,8
tick,0x7ffad1f6fb64,420610537,0,0x0,8
tick,0x7ffad1f6fb64,420625548,0,0x0,8
tick,0x7ffad1f6fb64,420640604,0,0x0,8
tick,0x7ffad1f6fb64,420656590,0,0x0,8
tick,0x7ffad1f6fb64,420671628,0,0x0,8
tick,0x7ffad1f6fb64,420686623,0,0x0,8
tick,0x7ffad1f6fb64,420701651,0,0x0,8
tick,0x7ffad1f6fb64,420716668,0,0x0,8
tick,0x7ffad1f6fb64,420731678,0,0x0,8
tick,0x7ffad1f6fb64,420747784,0,0x0,8
tick,0x7ffad1f6fb64,420763710,0,0x0,8
tick,0x7ffad1f6fb64,420779714,0,0x0,8
tick,0x7ffad1f6fb64,420794741,0,0x0,8
tick,0x7ffad1f6fb64,420810767,0,0x0,8
tick,0x7ffad1f6fb64,420826796,0,0x0,8
tick,0x7ffad1f6fb64,420842806,0,0x0,8
tick,0x7ffad1f6fb64,420857816,0,0x0,8
tick,0x7ffad1f6fb64,420872784,0,0x0,8
tick,0x7ffad1f6fb64,420887827,0,0x0,8
tick,0x7ffad1f6fb64,420902804,0,0x0,8
tick,0x7ffad1f6fb64,420918848,0,0x0,8
tick,0x7ffad1f6fb64,420934879,0,0x0,8
tick,0x7ffad1f6fb64,420949910,0,0x0,8
tick,0x7ffad1f6fb64,420965892,0,0x0,8
tick,0x7ffad1f6fb64,420981889,0,0x0,8
tick,0x7ffad1f6fb64,420996925,0,0x0,8
tick,0x7ffad1f6fb64,421012945,0,0x0,8
tick,0x7ffad1f6fb64,421028979,0,0x0,8
tick,0x7ffad1f6fb64,421043973,0,0x0,8
tick,0x7ffad1f6fb64,421059952,0,0x0,8
tick,0x7ffad1f6fb64,421075981,0,0x0,8
tick,0x7ffad1f6fb64,421091002,0,0x0,8
tick,0x7ffad1f6fb64,421106046,0,0x0,8
tick,0x7ffad1f6fb64,421121263,0,0x0,8
tick,0x7ffad1f6fb64,421136054,0,0x0,8
tick,0x7ffad1f6fb64,421151074,0,0x0,8
tick,0x7ffad1f6fb64,421166094,0,0x0,8
tick,0x7ffad1f6fb64,421181089,0,0x0,8
tick,0x7ffad1f6fb64,421196086,0,0x0,8
tick,0x7ffad1f6fb64,421211106,0,0x0,8
tick,0x7ffad1f6fb64,421227110,0,0x0,8
tick,0x7ffad1f6fb64,421242126,0,0x0,8
tick,0x7ffad1f6fb64,421257149,0,0x0,8
tick,0x7ffad1f6fb64,421273155,0,0x0,8
tick,0x7ffad1f6fb64,421289173,0,0x0,8
tick,0x7ffad1f6fb64,421305176,0,0x0,8
tick,0x7ffad1f6fb64,421320198,0,0x0,8
tick,0x7ffad1f6fb64,421336205,0,0x0,8
tick,0x7ffad1f6fb64,421351230,0,0x0,8
tick,0x7ffad1f6fb64,421366249,0,0x0,8
tick,0x7ffad1f6fb64,421381250,0,0x0,8
tick,0x7ffad1f6fb64,421396272,0,0x0,8
tick,0x7ffad1f6fb64,421412303,0,0x0,8
tick,0x7ffad1f6fb64,421427322,0,0x0,8
tick,0x7ffad1f6fb64,421443414,0,0x0,8
tick,0x7ffad1f6fb64,421459331,0,0x0,8
tick,0x7ffad1f6fb64,421475338,0,0x0,8
tick,0x7ffad1f6fb64,421491361,0,0x0,8
tick,0x7ffad1f6fb64,421506433,0,0x0,8
tick,0x7ffad1f6fb64,421521554,0,0x0,8
tick,0x7ffad1f6fb64,421537409,0,0x0,8
tick,0x7ffad1f6fb64,421553438,0,0x0,8
tick,0x7ffad1f6fb64,421569451,0,0x0,8
tick,0x7ffad1f6fb64,421585446,0,0x0,8
tick,0x7ffad1f6fb64,421600468,0,0x0,8
tick,0x7ffad1f6fb64,421616471,0,0x0,8
tick,0x7ffad1f6fb64,421631480,0,0x0,8
tick,0x7ffad1f6fb64,421647496,0,0x0,8
tick,0x7ffad1f6fb64,421663501,0,0x0,8
tick,0x7ffad1f6fb64,421679571,0,0x0,8
tick,0x7ffad1f6fb64,421694584,0,0x0,8
tick,0x7ffad1f6fb64,421709557,0,0x0,8
tick,0x7ffad1f6fb64,421725577,0,0x0,8
tick,0x7ffad1f6fb64,421740629,0,0x0,8
tick,0x7ffad1f6fb64,421755582,0,0x0,8
tick,0x7ffad1f6fb64,421771606,0,0x0,8
tick,0x7ffad1f6fb64,421787650,0,0x0,8
tick,0x7ffad1f6fb64,421802625,0,0x0,8
tick,0x7ffad1f6fb64,421817663,0,0x0,8
tick,0x7ffad1f6fb64,421832680,0,0x0,8
tick,0x7ffad1f6fb64,421848672,0,0x0,8
tick,0x7ffad1f6fb64,421863681,0,0x0,8
tick,0x7ffad1f6fb64,421879732,0,0x0,8
tick,0x7ffad1f6fb64,421895727,0,0x0,8
tick,0x7ffad1f6fb64,421910719,0,0x0,8
tick,0x7ffad1f6fb64,421925739,0,0x0,8
tick,0x7ffad1f6fb64,421940746,0,0x0,8
tick,0x7ffad1f6fb64,421956842,0,0x0,8
tick,0x7ffad1f6fb64,421972803,0,0x0,8
tick,0x7ffad1f6fb64,421988794,0,0x0,8
tick,0x7ffad1f6fb64,422003828,0,0x0,8
tick,0x7ffad1f6fb64,422019846,0,0x0,8
tick,0x7ffad1f6fb64,422035860,0,0x0,8
tick,0x7ffad1f6fb64,422051844,0,0x0,8
tick,0x7ffad1f6fb64,422066906,0,0x0,8
tick,0x7ffad1f6fb64,422081877,0,0x0,8
tick,0x7ffad1f6fb64,422096895,0,0x0,8
tick,0x7ffad1f6fb64,422112943,0,0x0,8
tick,0x7ffad1f6fb64,422128930,0,0x0,8
tick,0x7ffad1f6fb64,422143925,0,0x0,8
tick,0x7ffad1f6fb64,422159969,0,0x0,8
tick,0x7ffad1f6fb64,422175984,0,0x0,8
tick,0x7ffad1f6fb64,422190995,0,0x0,8
tick,0x7ffad1f6fb64,422206007,0,0x0,8
tick,0x7ffad1f6fb64,422221053,0,0x0,8
tick,0x7ffad1f6fb64,422237031,0,0x0,8
tick,0x7ffad1f6fb64,422253099,0,0x0,8
tick,0x7ffad1f6fb64,422269057,0,0x0,8
tick,0x7ffad1f6fb64,422284081,0,0x0,8
tick,0x7ffad1f6fb64,422299072,0,0x0,8
tick,0x7ffad1f6fb64,422315119,0,0x0,8
tick,0x7ffad1f6fb64,422331123,0,0x0,8
tick,0x7ffad1f6fb64,422347137,0,0x0,8
tick,0x7ffad1f6fb64,422363140,0,0x0,8
tick,0x7ffad1f6fb64,422378164,0,0x0,8
tick,0x7ffad1f6fb64,422394167,0,0x0,8
tick,0x7ffad1f6fb64,422409173,0,0x0,8
tick,0x7ffad1f6fb64,422425201,0,0x0,8
tick,0x7ffad1f6fb64,422440241,0,0x0,8
tick,0x7ffad1f6fb64,422455248,0,0x0,8
tick,0x7ffad1f6fb64,422471293,0,0x0,8
tick,0x7ffad1f6fb64,422487256,0,0x0,8
tick,0x7ffad1f6fb64,422503255,0,0x0,8
tick,0x7ffad1f6fb64,422518275,0,0x0,8
tick,0x7ffad1f6fb64,422534299,0,0x0,8
tick,0x7ffad1f6fb64,422549309,0,0x0,8
tick,0x7ffad1f6fb64,422565319,0,0x0,8
tick,0x7ffad1f6fb64,422580346,0,0x0,8
tick,0x7ffad1f6fb64,422595361,0,0x0,8
tick,0x7ffad1f6fb64,422610353,0,0x0,8
tick,0x7ffad1f6fb64,422625393,0,0x0,8
tick,0x7ffad1f6fb64,422640390,0,0x0,8
tick,0x7ffad1f6fb64,422656412,0,0x0,8
tick,0x7ffad1f6fb64,422671425,0,0x0,8
tick,0x7ffad1f6fb64,422687451,0,0x0,8
tick,0x7ffad1f6fb64,422703444,0,0x0,8
tick,0x7ffad1f6fb64,422718514,0,0x0,8
tick,0x7ffad1f6fb64,422734499,0,0x0,8
tick,0x7ffad1f6fb64,422749493,0,0x0,8
tick,0x7ffad1f6fb64,422765509,0,0x0,8
tick,0x7ffad1f6fb64,422781513,0,0x0,8
tick,0x7ffad1f6fb64,422796538,0,0x0,8
tick,0x7ffad1f6fb64,422812543,0,0x0,8
tick,0x7ffad1f6fb64,422827573,0,0x0,8
tick,0x7ffad1f6fb64,422843570,0,0x0,8
tick,0x7ffad1f6fb64,422859581,0,0x0,8
tick,0x7ffad1f6fb64,422875610,0,0x0,8
tick,0x7ffad1f6fb64,422891629,0,0x0,8
tick,0x7ffad1f6fb64,422907638,0,0x0,8
tick,0x7ffad1f6fb64,422923645,0,0x0,8
tick,0x7ffad1f6fb64,422938662,0,0x0,8
tick,0x7ffad1f6fb64,422953668,0,0x0,8
tick,0x7ffad1f6fb64,422969674,0,0x0,8
tick,0x7ffad1f6fb64,422984713,0,0x0,8
tick,0x7ffad1f6fb64,422999717,0,0x0,8
tick,0x7ffad1f6fb64,423015725,0,0x0,8
tick,0x7ffad1f6fb64,423031738,0,0x0,8
tick,0x7ffad1f6fb64,423046738,0,0x0,8
tick,0x7ffad1f6fb64,423062763,0,0x0,8
tick,0x7ffad1f6fb64,423078783,0,0x0,8
tick,0x7ffad1f6fb64,423093852,0,0x0,8
tick,0x7ffad1f6fb64,423108804,0,0x0,8
tick,0x7ffad1f6fb64,423124855,0,0x0,8
tick,0x7ffad1f6fb64,423139838,0,0x0,8
tick,0x7ffad1f6fb64,423155857,0,0x0,8
tick,0x7ffad1f6fb64,423171871,0,0x0,8
tick,0x7ffad1f6fb64,423187912,0,0x0,8
tick,0x7ffad1f6fb64,423202906,0,0x0,8
tick,0x7ffad1f6fb64,423218921,0,0x0,8
tick,0x7ffad1f6fb64,423233953,0,0x0,8
tick,0x7ffad1f6fb64,423248953,0,0x0,8
tick,0x7ffad1f6fb64,423263980,0,0x0,8
tick,0x7ffad1f6fb64,423279968,0,0x0,8
tick,0x7ffad1f6fb64,423294984,0,0x0,8
tick,0x7ffad1f6fb64,423311035,0,0x0,8
tick,0x7ffad1f6fb64,423327017,0,0x0,8
tick,0x7ffad1f6fb64,423342042,0,0x0,8
tick,0x7ffad1f6fb64,423358049,0,0x0,8
tick,0x7ffad1f6fb64,423374071,0,0x0,8
tick,0x7ffad1f6fb64,423390090,0,0x0,8
tick,0x7ffad1f6fb64,423406114,0,0x0,8
tick,0x7ffad1f6fb64,423421130,0,0x0,8
tick,0x7ffad1f6fb64,423437144,0,0x0,8
tick,0x7ffad1f6fb64,423452139,0,0x0,8
tick,0x7ffad1f6fb64,423468192,0,0x0,8
tick,0x7ffad1f6fb64,423483172,0,0x0,8
tick,0x7ffad1f6fb64,423498248,0,0x0,8
tick,0x7ffad1f6fb64,423513186,0,0x0,8
tick,0x7ffad1f6fb64,423528221,0,0x0,8
tick,0x7ffad1f6fb64,423543226,0,0x0,8
tick,0x7ffad1f6fb64,423559276,0,0x0,8
tick,0x7ffad1f6fb64,423575267,0,0x0,8
tick,0x7ffad1f6fb64,423591268,0,0x0,8
tick,0x7ffad1f6fb64,423606327,0,0x0,8
tick,0x7ffad1f6fb64,423621307,0,0x0,8
tick,0x7ffad1f6fb64,423636389,0,0x0,8
tick,0x7ffad1f6fb64,423651348,0,0x0,8
tick,0x7ffad1f6fb64,423666402,0,0x0,8
tick,0x7ffad1f6fb64,423681364,0,0x0,8
tick,0x7ffad1f6fb64,423696366,0,0x0,8
tick,0x7ffad1f6fb64,423711370,0,0x0,8
tick,0x7ffad1f6fb64,423726427,0,0x0,8
tick,0x7ffad1f6fb64,423741472,0,0x0,8
tick,0x7ffad1f6fb64,423756421,0,0x0,8
tick,0x7ffad1f6fb64,423772422,0,0x0,8
tick,0x7ffad1f6fb64,423788451,0,0x0,8
tick,0x7ffad1f6fb64,423804451,0,0x0,8
tick,0x7ffad1f6fb64,423820452,0,0x0,8
tick,0x7ffad1f6fb64,423835490,0,0x0,8
tick,0x7ffad1f6fb64,423850498,0,0x0,8
tick,0x7ffad1f6fb64,423865506,0,0x0,8
tick,0x7ffad1f6fb64,423880518,0,0x0,8
tick,0x7ffad1f6fb64,423895527,0,0x0,8
tick,0x7ffad1f6fb64,423910529,0,0x0,8
tick,0x7ffad1f6fb64,423925539,0,0x0,8
tick,0x7ffad1f6fb64,423940559,0,0x0,8
tick,0x7ffad1f6fb64,423956588,0,0x0,8
tick,0x7ffad1f6fb64,423972590,0,0x0,8
tick,0x7ffad1f6fb64,423988627,0,0x0,8
tick,0x7ffad1f6fb64,424004649,0,0x0,8
tick,0x7ffad1f6fb64,424019655,0,0x0,8
tick,0x7ffad1f6fb64,424034657,0,0x0,8
tick,0x7ffad1f6fb64,424049667,0,0x0,8
tick,0x7ffad1f6fb64,424065699,0,0x0,8
tick,0x7ffad1f6fb64,424081692,0,0x0,8
tick,0x7ffad1f6fb64,424097729,0,0x0,8
tick,0x7ffad1f6fb64,424112749,0,0x0,8
tick,0x7ffad1f6fb64,424128755,0,0x0,8
tick,0x7ffad1f6fb64,424144755,0,0x0,8
tick,0x7ffad1f6fb64,424159769,0,0x0,8
tick,0x7ffad1f6fb64,424174790,0,0x0,8
tick,0x7ffad1f6fb64,424189811,0,0x0,8
tick,0x7ffad1f6fb64,424204818,0,0x0,8
tick,0x7ffad1f6fb64,424220843,0,0x0,8
tick,0x7ffad1f6fb64,424235861,0,0x0,8
tick,0x7ffad1f6fb64,424250867,0,0x0,8
tick,0x7ffad1f6fb64,424266886,0,0x0,8
tick,0x7ffad1f6fb64,424281886,0,0x0,8
tick,0x7ffad1f6fb64,424297910,0,0x0,8
tick,0x7ffad1f6fb64,424313905,0,0x0,8
tick,0x7ffad1f6fb64,424329931,0,0x0,8
tick,0x7ffad1f6fb64,424344930,0,0x0,8
tick,0x7ffad1f6fb64,424359970,0,0x0,8
tick,0x7ffad1f6fb64,424375952,0,0x0,8
tick,0x7ffad1f6fb64,424392007,0,0x0,8
tick,0x7ffad1f6fb64,424407981,0,0x0,8
tick,0x7ffad1f6fb64,424424005,0,0x0,8
tick,0x7ffad1f6fb64,424439051,0,0x0,8
tick,0x7ffad1f6fb64,424454044,0,0x0,8
tick,0x7ffad1f6fb64,424470063,0,0x0,8
tick,0x7ffad1f6fb64,424486073,0,0x0,8
tick,0x7ffad1f6fb64,424501093,0,0x0,8
tick,0x7ffad1f6fb64,424517256,0,0x0,8
tick,0x7ffad1f6fb64,424533177,0,0x0,8
tick,0x7ffad1f6fb64,424549132,0,0x0,8
tick,0x7ffad1f6fb64,424564153,0,0x0,8
tick,0x7ffad1f6fb64,424579160,0,0x0,8
tick,0x7ffad1f6fb64,424594203,0,0x0,8
tick,0x7ffad1f6fb64,424610229,0,0x0,8
tick,0x7ffad1f6fb64,424625210,0,0x0,8
tick,0x7ffad1f6fb64,424640223,0,0x0,8
tick,0x7ffad1f6fb64,424656250,0,0x0,8
tick,0x7ffad1f6fb64,424671256,0,0x0,8
tick,0x7ffad1f6fb64,424687279,0,0x0,8
tick,0x7ffad1f6fb64,424703275,0,0x0,8
tick,0x7ffad1f6fb64,424718307,0,0x0,8
tick,0x7ffad1f6fb64,424734310,0,0x0,8
tick,0x7ffad1f6fb64,424749346,0,0x0,8
tick,0x7ffad1f6fb64,424765342,0,0x0,8
tick,0x7ffad1f6fb64,424780355,0,0x0,8
tick,0x7ffad1f6fb64,424795354,0,0x0,8
tick,0x7ffad1f6fb64,424810350,0,0x0,8
tick,0x7ffad1f6fb64,424825385,0,0x0,8
tick,0x7ffad1f6fb64,424840385,0,0x0,8
tick,0x7ffad1f6fb64,424856412,0,0x0,8
tick,0x7ffad1f6fb64,424872422,0,0x0,8
tick,0x7ffad1f6fb64,424888427,0,0x0,8
tick,0x7ffad1f6fb64,424903435,0,0x0,8
tick,0x7ffad1f6fb64,424919455,0,0x0,8
tick,0x7ffad1f6fb64,424935487,0,0x0,8
tick,0x7ffad1f6fb64,424950479,0,0x0,8
tick,0x7ffad1f6fb64,424966503,0,0x0,8
tick,0x7ffad1f6fb64,424981532,0,0x0,8
tick,0x7ffad1f6fb64,424997544,0,0x0,8
tick,0x7ffad1f6fb64,425013539,0,0x0,8
tick,0x7ffad1f6fb64,425029597,0,0x0,8
tick,0x7ffad1f6fb64,425045649,0,0x0,8
tick,0x7ffad1f6fb64,425061591,0,0x0,8
tick,0x7ffad1f6fb64,425077599,0,0x0,8
tick,0x7ffad1f6fb64,425092639,0,0x0,8
tick,0x7ffad1f6fb64,425108634,0,0x0,8
tick,0x7ffad1f6fb64,425124644,0,0x0,8
tick,0x7ffad1f6fb64,425139687,0,0x0,8
tick,0x7ffad1f6fb64,425154679,0,0x0,8
tick,0x7ffad1f6fb64,425170704,0,0x0,8
tick,0x7ffad1f6fb64,425186718,0,0x0,8
tick,0x7ffad1f6fb64,425202758,0,0x0,8
tick,0x7ffad1f6fb64,425217740,0,0x0,8
tick,0x7ffad1f6fb64,425233789,0,0x0,8
tick,0x7ffad1f6fb64,425248771,0,0x0,8
tick,0x7ffad1f6fb64,425263814,0,0x0,8
tick,0x7ffad1f6fb64,425278817,0,0x0,8
tick,0x7ffad1f6fb64,425294872,0,0x0,8
tick,0x7ffad1f6fb64,425309881,0,0x0,8
tick,0x7ffad1f6fb64,425325857,0,0x0,8
tick,0x7ffad1f6fb64,425340862,0,0x0,8
tick,0x7ffad1f6fb64,425355880,0,0x0,8
tick,0x7ffad1f6fb64,425371922,0,0x0,8
tick,0x7ffad1f6fb64,425386936,0,0x0,8
tick,0x7ffad1f6fb64,425401937,0,0x0,8
tick,0x7ffad1f6fb64,425417961,0,0x0,8
tick,0x7ffad1f6fb64,425433963,0,0x0,8
tick,0x7ffad1f6fb64,425448989,0,0x0,8
tick,0x7ffad1f6fb64,425464998,0,0x0,8
tick,0x7ffad1f6fb64,425480122,0,0x0,8
tick,0x7ffad1f6fb64,425496084,0,0x0,8
tick,0x7ffad1f6fb64,425512031,0,0x0,8
tick,0x7ffad1f6fb64,425527046,0,0x0,8
tick,0x7ffad1f6fb64,425543277,0,0x0,8
tick,0x7ffad1f6fb64,425559064,0,0x0,8
tick,0x7ffad1f6fb64,425574121,0,0x0,8
tick,0x7ffad1f6fb64,425590138,0,0x0,8
tick,0x7ffad1f6fb64,425606118,0,0x0,8
tick,0x7ffad1f6fb64,425621141,0,0x0,8
tick,0x7ffad1f6fb64,425637142,0,0x0,8
tick,0x7ffad1f6fb64,425652177,0,0x0,8
tick,0x7ffad1f6fb64,425668190,0,0x0,8
tick,0x7ffad1f6fb64,425684201,0,0x0,8
tick,0x7ffad1f6fb64,425699218,0,0x0,8
tick,0x7ffad1f6fb64,425715198,0,0x0,8
tick,0x7ffad1f6fb64,425731231,0,0x0,8
tick,0x7ffad1f6fb64,425747270,0,0x0,8
tick,0x7ffad1f6fb64,425763250,0,0x0,8
tick,0x7ffad1f6fb64,425778292,0,0x0,8
tick,0x7ffad1f6fb64,425793303,0,0x0,8
tick,0x7ffad1f6fb64,425809322,0,0x0,8
tick,0x7ffad1f6fb64,425825308,0,0x0,8
tick,0x7ffad1f6fb64,425840336,0,0x0,8
tick,0x7ffad1f6fb64,425855372,0,0x0,8
tick,0x7ffad1f6fb64,425871363,0,0x0,8
tick,0x7ffad1f6fb64,425887370,0,0x0,8
tick,0x7ffad1f6fb64,425903366,0,0x0,8
tick,0x7ffad1f6fb64,425919393,0,0x0,8
tick,0x7ffad1f6fb64,425934429,0,0x0,8
tick,0x7ffad1f6fb64,425949413,0,0x0,8
tick,0x7ffad1f6fb64,425964476,0,0x0,8
tick,0x7ffad1f6fb64,425979453,0,0x0,8
tick,0x7ffad1f6fb64,425995457,0,0x0,8
tick,0x7ffad1f6fb64,426011459,0,0x0,8
tick,0x7ffad1f6fb64,426026519,0,0x0,8
tick,0x7ffad1f6fb64,426042496,0,0x0,8
tick,0x7ffad1f6fb64,426058515,0,0x0,8
tick,0x7ffad1f6fb64,426073524,0,0x0,8
tick,0x7ffad1f6fb64,426089525,0,0x0,8
tick,0x7ffad1f6fb64,426104548,0,0x0,8
tick,0x7ffad1f6fb64,426120568,0,0x0,8
tick,0x7ffad1f6fb64,426136644,0,0x0,8
tick,0x7ffad1f6fb64,426152612,0,0x0,8
tick,0x7ffad1f6fb64,426167637,0,0x0,8
tick,0x7ffad1f6fb64,426183625,0,0x0,8
tick,0x7ffad1f6fb64,426198640,0,0x0,8
tick,0x7ffad1f6fb64,426213677,0,0x0,8
tick,0x7ffad1f6fb64,426229666,0,0x0,8
tick,0x7ffad1f6fb64,426245692,0,0x0,8
tick,0x7ffad1f6fb64,426260688,0,0x0,8
tick,0x7ffad1f6fb64,426275715,0,0x0,8
tick,0x7ffad1f6fb64,426291715,0,0x0,8
tick,0x7ffad1f6fb64,426306958,0,0x0,8
tick,0x7ffad1f6fb64,426321759,0,0x0,8
tick,0x7ffad1f6fb64,426336776,0,0x0,8
tick,0x7ffad1f6fb64,426352767,0,0x0,8
tick,0x7ffad1f6fb64,426368782,0,0x0,8
tick,0x7ffad1f6fb64,426384809,0,0x0,8
tick,0x7ffad1f6fb64,426399831,0,0x0,8
tick,0x7ffad1f6fb64,426414827,0,0x0,8
tick,0x7ffad1f6fb64,426429844,0,0x0,8
tick,0x7ffad1f6fb64,426445865,0,0x0,8
tick,0x7ffad1f6fb64,426461891,0,0x0,8
tick,0x7ffad1f6fb64,426477893,0,0x0,8
tick,0x7ffad1f6fb64,426492887,0,0x0,8
tick,0x7ffad1f6fb64,426507916,0,0x0,8
tick,0x7ffad1f6fb64,426523925,0,0x0,8
tick,0x7ffad1f6fb64,426538937,0,0x0,8
tick,0x7ffad1f6fb64,426553928,0,0x0,8
tick,0x7ffad1f6fb64,426568955,0,0x0,8
tick,0x7ffad1f6fb64,426583957,0,0x0,8
tick,0x7ffad1f6fb64,426598992,0,0x0,8
tick,0x7ffad1f6fb64,426614011,0,0x0,8
tick,0x7ffad1f6fb64,426629037,0,0x0,8
tick,0x7ffad1f6fb64,426644037,0,0x0,8
tick,0x7ffad1f6fb64,426659045,0,0x0,8
tick,0x7ffad1f6fb64,426675063,0,0x0,8
tick,0x7ffad1f6fb64,426691079,0,0x0,8
tick,0x7ffad1f6fb64,426706108,0,0x0,8
tick,0x7ffad1f6fb64,426721108,0,0x0,8
tick,0x7ffad1f6fb64,426737126,0,0x0,8
tick,0x7ffad1f6fb64,426753136,0,0x0,8
tick,0x7ffad1f6fb64,426768147,0,0x0,8
tick,0x7ffad1f6fb64,426784155,0,0x0,8
tick,0x7ffad1f6fb64,426799207,0,0x0,8
tick,0x7ffad1f6fb64,426814197,0,0x0,8
tick,0x7ffad1f6fb64,426830221,0,0x0,8
tick,0x7ffad1f6fb64,426845219,0,0x0,8
tick,0x7ffad1f6fb64,426860262,0,0x0,8
tick,0x7ffad1f6fb64,426876269,0,0x0,8
tick,0x7ffad1f6fb64,426891271,0,0x0,8
tick,0x7ffad1f6fb64,426906292,0,0x0,8
tick,0x7ffad1f6fb64,426921300,0,0x0,8
tick,0x7ffad1f6fb64,426937304,0,0x0,8
tick,0x7ffad1f6fb64,426953325,0,0x0,8
tick,0x7ffad1f6fb64,426968330,0,0x0,8
tick,0x7ffad1f6fb64,426984336,0,0x0,8
tick,0x7ffad1f6fb64,426999362,0,0x0,8
tick,0x7ffad1f6fb64,427014372,0,0x0,8
tick,0x7ffad1f6fb64,427030400,0,0x0,8
tick,0x7ffad1f6fb64,427046402,0,0x0,8
tick,0x7ffad1f6fb64,427062412,0,0x0,8
tick,0x7ffad1f6fb64,427077444,0,0x0,8
tick,0x7ffad1f6fb64,427093468,0,0x0,8
tick,0x7ffad1f6fb64,427109486,0,0x0,8
tick,0x7ffad1f6fb64,427125480,0,0x0,8
tick,0x7ffad1f6fb64,427140526,0,0x0,8
tick,0x7ffad1f6fb64,427156531,0,0x0,8
tick,0x7ffad1f6fb64,427171514,0,0x0,8
tick,0x7ffad1f6fb64,427187568,0,0x0,8
tick,0x7ffad1f6fb64,427203552,0,0x0,8
tick,0x7ffad1f6fb64,427219575,0,0x0,8
tick,0x7ffad1f6fb64,427235587,0,0x0,8
tick,0x7ffad1f6fb64,427251599,0,0x0,8
tick,0x7ffad1f6fb64,427266605,0,0x0,8
tick,0x7ffad1f6fb64,427281629,0,0x0,8
tick,0x7ffad1f6fb64,427297643,0,0x0,8
tick,0x7ffad1f6fb64,427313653,0,0x0,8
tick,0x7ffad1f6fb64,427328676,0,0x0,8
tick,0x7ffad1f6fb64,427343686,0,0x0,8
tick,0x7ffad1f6fb64,427358699,0,0x0,8
tick,0x7ffad1f6fb64,427374706,0,0x0,8
tick,0x7ffad1f6fb64,427389722,0,0x0,8
tick,0x7ffad1f6fb64,427404772,0,0x0,8
tick,0x7ffad1f6fb64,427419732,0,0x0,8
tick,0x7ffad1f6fb64,427434730,0,0x0,8
tick,0x7ffad1f6fb64,427449751,0,0x0,8
tick,0x7ffad1f6fb64,427464780,0,0x0,8
tick,0x7ffad1f6fb64,427479803,0,0x0,8
tick,0x7ffad1f6fb64,427495806,0,0x0,8
tick,0x7ffad1f6fb64,427511826,0,0x0,8
tick,0x7ffad1f6fb64,427527836,0,0x0,8
tick,0x7ffad1f6fb64,427542912,0,0x0,8
tick,0x7ffad1f6fb64,427558867,0,0x0,8
tick,0x7ffad1f6fb64,427574899,0,0x0,8
tick,0x7ffad1f6fb64,427590924,0,0x0,8
tick,0x7ffad1f6fb64,427605924,0,0x0,8
tick,0x7ffad1f6fb64,427621925,0,0x0,8
tick,0x7ffad1f6fb64,427637960,0,0x0,8
tick,0x7ffad1f6fb64,427652948,0,0x0,8
tick,0x7ffad1f6fb64,427668973,0,0x0,8
tick,0x7ffad1f6fb64,427685026,0,0x0,8
tick,0x7ffad1f6fb64,427700012,0,0x0,8
tick,0x7ffad1f6fb64,427716022,0,0x0,8
tick,0x7ffad1f6fb64,427732028,0,0x0,8
tick,0x7ffad1f6fb64,427747046,0,0x0,8
tick,0x7ffad1f6fb64,427763066,0,0x0,8
tick,0x7ffad1f6fb64,427778076,0,0x0,8
tick,0x7ffad1f6fb64,427794100,0,0x0,8
tick,0x7ffad1f6fb64,427810097,0,0x0,8
tick,0x7ffad1f6fb64,427826132,0,0x0,8
tick,0x7ffad1f6fb64,427841135,0,0x0,8
tick,0x7ffad1f6fb64,427857153,0,0x0,8
tick,0x7ffad1f6fb64,427873167,0,0x0,8
tick,0x7ffad1f6fb64,427888164,0,0x0,8
tick,0x7ffad1f6fb64,427904208,0,0x0,8
tick,0x7ffad1f6fb64,427920199,0,0x0,8
tick,0x7ffad1f6fb64,427936216,0,0x0,8
tick,0x7ffad1f6fb64,427951212,0,0x0,8
tick,0x7ffad1f6fb64,427966236,0,0x0,8
tick,0x7ffad1f6fb64,427981262,0,0x0,8
tick,0x7ffad1f6fb64,427997291,0,0x0,8
tick,0x7ffad1f6fb64,428013287,0,0x0,8
tick,0x7ffad1f6fb64,428028299,0,0x0,8
tick,0x7ffad1f6fb64,428044314,0,0x0,8
tick,0x7ffad1f6fb64,428060316,0,0x0,8
tick,0x7ffad1f6fb64,428076350,0,0x0,8
tick,0x7ffad1f6fb64,428091381,0,0x0,8
tick,0x7ffad1f6fb64,428106376,0,0x0,8
tick,0x7ffad1f6fb64,428121389,0,0x0,8
tick,0x7ffad1f6fb64,428137415,0,0x0,8
tick,0x7ffad1f6fb64,428152416,0,0x0,8
tick,0x7ffad1f6fb64,428167442,0,0x0,8
tick,0x7ffad1f6fb64,428182429,0,0x0,8
tick,0x7ffad1f6fb64,428198460,0,0x0,8
tick,0x7ffad1f6fb64,428214518,0,0x0,8
tick,0x7ffad1f6fb64,428230480,0,0x0,8
tick,0x7ffad1f6fb64,428246502,0,0x0,8
tick,0x7ffad1f6fb64,428261557,0,0x0,8
tick,0x7ffad1f6fb64,428277529,0,0x0,8
tick,0x7ffad1f6fb64,428292543,0,0x0,8
tick,0x7ffad1f6fb64,428308556,0,0x0,8
tick,0x7ffad1f6fb64,428324553,0,0x0,8
tick,0x7ffad1f6fb64,428339604,0,0x0,8
tick,0x7ffad1f6fb64,428355598,0,0x0,8
tick,0x7ffad1f6fb64,428371625,0,0x0,8
tick,0x7ffad1f6fb64,428386637,0,0x0,8
tick,0x7ffad1f6fb64,428402640,0,0x0,8
tick,0x7ffad1f6fb64,428417679,0,0x0,8
tick,0x7ffad1f6fb64,428432678,0,0x0,8
tick,0x7ffad1f6fb64,428448680,0,0x0,8
tick,0x7ffad1f6fb64,428464690,0,0x0,8
tick,0x7ffad1f6fb64,428479699,0,0x0,8
tick,0x7ffad1f6fb64,428494737,0,0x0,8
tick,0x7ffad1f6fb64,428509736,0,0x0,8
tick,0x7ffad1f6fb64,428525769,0,0x0,8
tick,0x7ffad1f6fb64,428540796,0,0x0,8
tick,0x7ffad1f6fb64,428555843,0,0x0,8
tick,0x7ffad1f6fb64,428570810,0,0x0,8
tick,0x7ffad1f6fb64,428585825,0,0x0,8
tick,0x7ffad1f6fb64,428600860,0,0x0,8
tick,0x7ffad1f6fb64,428616858,0,0x0,8
tick,0x7ffad1f6fb64,428632848,0,0x0,8
tick,0x7ffad1f6fb64,428648877,0,0x0,8
tick,0x7ffad1f6fb64,428664985,0,0x0,8
tick,0x7ffad1f6fb64,428679916,0,0x0,8
tick,0x7ffad1f6fb64,428694959,0,0x0,8
tick,0x7ffad1f6fb64,428711089,0,0x0,8
tick,0x7ffad1f6fb64,428726965,0,0x0,8
tick,0x7ffad1f6fb64,428742975,0,0x0,8
tick,0x7ffad1f6fb64,428758966,0,0x0,8
tick,0x7ffad1f6fb64,428774012,0,0x0,8
tick,0x7ffad1f6fb64,428789216,0,0x0,8
tick,0x7ffad1f6fb64,428805021,0,0x0,8
tick,0x7ffad1f6fb64,428821023,0,0x0,8
tick,0x7ffad1f6fb64,428836055,0,0x0,8
tick,0x7ffad1f6fb64,428852081,0,0x0,8
tick,0x7ffad1f6fb64,428868100,0,0x0,8
tick,0x7ffad1f6fb64,428883122,0,0x0,8
tick,0x7ffad1f6fb64,428898100,0,0x0,8
tick,0x7ffad1f6fb64,428914130,0,0x0,8
tick,0x7ffad1f6fb64,428930165,0,0x0,8
tick,0x7ffad1f6fb64,428946161,0,0x0,8
tick,0x7ffad1f6fb64,428962272,0,0x0,8
tick,0x7ffad1f6fb64,428978165,0,0x0,8
tick,0x7ffad1f6fb64,428993207,0,0x0,8
tick,0x7ffad1f6fb64,429008180,0,0x0,8
tick,0x7ffad1f6fb64,429023198,0,0x0,8
tick,0x7ffad1f6fb64,429038206,0,0x0,8
tick,0x7ffad1f6fb64,429053203,0,0x0,8
tick,0x7ffad1f6fb64,429069254,0,0x0,8
tick,0x7ffad1f6fb64,429085277,0,0x0,8
tick,0x7ffad1f6fb64,429101272,0,0x0,8
tick,0x7ffad1f6fb64,429116292,0,0x0,8
tick,0x7ffad1f6fb64,429131313,0,0x0,8
tick,0x7ffad1f6fb64,429147320,0,0x0,8
tick,0x7ffad1f6fb64,429163347,0,0x0,8
tick,0x7ffad1f6fb64,429178372,0,0x0,8
tick,0x7ffad1f6fb64,429193377,0,0x0,8
tick,0x7ffad1f6fb64,429209403,0,0x0,8
tick,0x7ffad1f6fb64,429225398,0,0x0,8
tick,0x7ffad1f6fb64,429240432,0,0x0,8
tick,0x7ffad1f6fb64,429256458,0,0x0,8
tick,0x7ffad1f6fb64,429271437,0,0x0,8
tick,0x7ffad1f6fb64,429287480,0,0x0,8
tick,0x7ffad1f6fb64,429302460,0,0x0,8
tick,0x7ffad1f6fb64,429317468,0,0x0,8
tick,0x7ffad1f6fb64,429333507,0,0x0,8
tick,0x7ffad1f6fb64,429348543,0,0x0,8
tick,0x7ffad1f6fb64,429364546,0,0x0,8
tick,0x7ffad1f6fb64,429379541,0,0x0,8
tick,0x7ffad1f6fb64,429394585,0,0x0,8
tick,0x7ffad1f6fb64,429409604,0,0x0,8
tick,0x7ffad1f6fb64,429425590,0,0x0,8
tick,0x7ffad1f6fb64,429440624,0,0x0,8
tick,0x7ffad1f6fb64,429455646,0,0x0,8
tick,0x7ffad1f6fb64,429471634,0,0x0,8
tick,0x7ffad1f6fb64,429487637,0,0x0,8
tick,0x7ffad1f6fb64,429503652,0,0x0,8
tick,0x7ffad1f6fb64,429519672,0,0x0,8
tick,0x7ffad1f6fb64,429535705,0,0x0,8
tick,0x7ffad1f6fb64,429550676,0,0x0,8
tick,0x7ffad1f6fb64,429566715,0,0x0,8
tick,0x7ffad1f6fb64,429581710,0,0x0,8
tick,0x7ffad1f6fb64,429597741,0,0x0,8
tick,0x7ffad1f6fb64,429612748,0,0x0,8
tick,0x7ffad1f6fb64,429628791,0,0x0,8
tick,0x7ffad1f6fb64,429643796,0,0x0,8
tick,0x7ffad1f6fb64,429659768,0,0x0,8
tick,0x7ffad1f6fb64,429674798,0,0x0,8
tick,0x7ffad1f6fb64,429689819,0,0x0,8
tick,0x7ffad1f6fb64,429705843,0,0x0,8
tick,0x7ffad1f6fb64,429720852,0,0x0,8
tick,0x7ffad1f6fb64,429735881,0,0x0,8
tick,0x7ffad1f6fb64,429750880,0,0x0,8
tick,0x7ffad1f6fb64,429766891,0,0x0,8
tick,0x7ffad1f6fb64,429781903,0,0x0,8
tick,0x7ffad1f6fb64,429797919,0,0x0,8
tick,0x7ffad1f6fb64,429813921,0,0x0,8
tick,0x7ffad1f6fb64,429828959,0,0x0,8
tick,0x7ffad1f6fb64,429844995,0,0x0,8
tick,0x7ffad1f6fb64,429860979,0,0x0,8
tick,0x7ffad1f6fb64,429877020,0,0x0,8
tick,0x7ffad1f6fb64,429893038,0,0x0,8
tick,0x7ffad1f6fb64,429908020,0,0x0,8
tick,0x7ffad1f6fb64,429923039,0,0x0,8
tick,0x7ffad1f6fb64,429939062,0,0x0,8
tick,0x7ffad1f6fb64,429954056,0,0x0,8
tick,0x7ffad1f6fb64,429970087,0,0x0,8
tick,0x7ffad1f6fb64,429986109,0,0x0,8
tick,0x7ffad1f6fb64,430002087,0,0x0,8
tick,0x7ffad1f6fb64,430017146,0,0x0,8
tick,0x7ffad1f6fb64,430032122,0,0x0,8
tick,0x7ffad1f6fb64,430048152,0,0x0,8
tick,0x7ffad1f6fb64,430063144,0,0x0,8
tick,0x7ffad1f6fb64,430078166,0,0x0,8
tick,0x7ffad1f6fb64,430093188,0,0x0,8
tick,0x7ffad1f6fb64,430109199,0,0x0,8
tick,0x7ffad1f6fb64,430125212,0,0x0,8
tick,0x7ffad1f6fb64,430140222,0,0x0,8
tick,0x7ffad1f6fb64,430156432,0,0x0,8
tick,0x7ffad1f6fb64,430172261,0,0x0,8
tick,0x7ffad1f6fb64,430187322,0,0x0,8
tick,0x7ffad1f6fb64,430203315,0,0x0,8
tick,0x7ffad1f6fb64,430218325,0,0x0,8
tick,0x7ffad1f6fb64,430234343,0,0x0,8
tick,0x7ffad1f6fb64,430249348,0,0x0,8
tick,0x7ffad1f6fb64,430264371,0,0x0,8
tick,0x7ffad1f6fb64,430280372,0,0x0,8
tick,0x7ffad1f6fb64,430295371,0,0x0,8
tick,0x7ffad1f6fb64,430311388,0,0x0,8
tick,0x7ffad1f6fb64,430326392,0,0x0,8
tick,0x7ffad1f6fb64,430342411,0,0x0,8
tick,0x7ffad1f6fb64,430358450,0,0x0,8
tick,0x7ffad1f6fb64,430373454,0,0x0,8
tick,0x7ffad1f6fb64,430389775,0,0x0,8
tick,0x7ffad1f6fb64,430404481,0,0x0,8
tick,0x7ffad1f6fb64,430419493,0,0x0,8
tick,0x7ffad1f6fb64,430435490,0,0x0,8
tick,0x7ffad1f6fb64,430451524,0,0x0,8
tick,0x7ffad1f6fb64,430466521,0,0x0,8
tick,0x7ffad1f6fb64,430481530,0,0x0,8
tick,0x7ffad1f6fb64,430497568,0,0x0,8
tick,0x7ffad1f6fb64,430513549,0,0x0,8
tick,0x7ffad1f6fb64,430529573,0,0x0,8
tick,0x7ffad1f6fb64,430544597,0,0x0,8
tick,0x7ffad1f6fb64,430560615,0,0x0,8
tick,0x7ffad1f6fb64,430575635,0,0x0,8
tick,0x7ffad1f6fb64,430590660,0,0x0,8
tick,0x7ffad1f6fb64,430605651,0,0x0,8
tick,0x7ffad1f6fb64,430621663,0,0x0,8
tick,0x7ffad1f6fb64,430636692,0,0x0,8
tick,0x7ffad1f6fb64,430651692,0,0x0,8
tick,0x7ffad1f6fb64,430666770,0,0x0,8
tick,0x7ffad1f6fb64,430681925,0,0x0,8
tick,0x7ffad1f6fb64,430697766,0,0x0,8
tick,0x7ffad1f6fb64,430713745,0,0x0,8
tick,0x7ffad1f6fb64,430729764,0,0x0,8
tick,0x7ffad1f6fb64,430744774,0,0x0,8
tick,0x7ffad1f6fb64,430760772,0,0x0,8
tick,0x7ffad1f6fb64,430775784,0,0x0,8
tick,0x7ffad1f6fb64,430791814,0,0x0,8
tick,0x7ffad1f6fb64,430807824,0,0x0,8
tick,0x7ffad1f6fb64,430823838,0,0x0,8
tick,0x7ffad1f6fb64,430839857,0,0x0,8
tick,0x7ffad1f6fb64,430854851,0,0x0,8
tick,0x7ffad1f6fb64,430870880,0,0x0,8
tick,0x7ffad1f6fb64,430886909,0,0x0,8
tick,0x7ffad1f6fb64,430901948,0,0x0,8
tick,0x7ffad1f6fb64,430916944,0,0x0,8
tick,0x7ffad1f6fb64,430931951,0,0x0,8
tick,0x7ffad1f6fb64,430947972,0,0x0,8
tick,0x7ffad1f6fb64,430962982,0,0x0,8
tick,0x7ffad1f6fb64,430978002,0,0x0,8
tick,0x7ffad1f6fb64,430994013,0,0x0,8
tick,0x7ffad1f6fb64,431010047,0,0x0,8
tick,0x7ffad1f6fb64,431026177,0,0x0,8
tick,0x7ffad1f6fb64,431041086,0,0x0,8
tick,0x7ffad1f6fb64,431056100,0,0x0,8
tick,0x7ffad1f6fb64,431071132,0,0x0,8
tick,0x7ffad1f6fb64,431087112,0,0x0,8
tick,0x7ffad1f6fb64,431102110,0,0x0,8
tick,0x7ffad1f6fb64,431118107,0,0x0,8
tick,0x7ffad1f6fb64,431134137,0,0x0,8
tick,0x7ffad1f6fb64,431149163,0,0x0,8
tick,0x7ffad1f6fb64,431164310,0,0x0,8
tick,0x7ffad1f6fb64,431179185,0,0x0,8
tick,0x7ffad1f6fb64,431194217,0,0x0,8
tick,0x7ffad1f6fb64,431210213,0,0x0,8
tick,0x7ffad1f6fb64,431226237,0,0x0,8
tick,0x7ffad1f6fb64,431241249,0,0x0,8
tick,0x7ffad1f6fb64,431257261,0,0x0,8
tick,0x7ffad1f6fb64,431272264,0,0x0,8
tick,0x7ffad1f6fb64,431287298,0,0x0,8
tick,0x7ffad1f6fb64,431303602,0,0x0,8
tick,0x7ffad1f6fb64,431319304,0,0x0,8
tick,0x7ffad1f6fb64,431334319,0,0x0,8
tick,0x7ffad1f6fb64,431349350,0,0x0,8
tick,0x7ffad1f6fb64,431364354,0,0x0,8
tick,0x7ffad1f6fb64,431379359,0,0x0,8
tick,0x7ffad1f6fb64,431395435,0,0x0,8
tick,0x7ffad1f6fb64,431410395,0,0x0,8
tick,0x7ffad1f6fb64,431425397,0,0x0,8
tick,0x7ffad1f6fb64,431440428,0,0x0,8
tick,0x7ffad1f6fb64,431455465,0,0x0,8
tick,0x7ffad1f6fb64,431470414,0,0x0,8
tick,0x7ffad1f6fb64,431486478,0,0x0,8
tick,0x7ffad1f6fb64,431502481,0,0x0,8
tick,0x7ffad1f6fb64,431517476,0,0x0,8
tick,0x7ffad1f6fb64,431533471,0,0x0,8
tick,0x7ffad1f6fb64,431548556,0,0x0,8
tick,0x7ffad1f6fb64,431564551,0,0x0,8
tick,0x7ffad1f6fb64,431579538,0,0x0,8
tick,0x7ffad1f6fb64,431595546,0,0x0,8
tick,0x7ffad1f6fb64,431611575,0,0x0,8
tick,0x7ffad1f6fb64,431627575,0,0x0,8
tick,0x7ffad1f6fb64,431642612,0,0x0,8
tick,0x7ffad1f6fb64,431657602,0,0x0,8
tick,0x7ffad1f6fb64,431673645,0,0x0,8
tick,0x7ffad1f6fb64,431688655,0,0x0,8
tick,0x7ffad1f6fb64,431704718,0,0x0,8
tick,0x7ffad1f6fb64,431720665,0,0x0,8
tick,0x7ffad1f6fb64,431735795,0,0x0,8
tick,0x7ffad1f6fb64,431750706,0,0x0,8
tick,0x7ffad1f6fb64,431766712,0,0x0,8
tick,0x7ffad1f6fb64,431781746,0,0x0,8
tick,0x7ffad1f6fb64,431796782,0,0x0,8
tick,0x7ffad1f6fb64,431812755,0,0x0,8
tick,0x7ffad1f6fb64,431828772,0,0x0,8
tick,0x7ffad1f6fb64,431843861,0,0x0,8
tick,0x7ffad1f6fb64,431859791,0,0x0,8
tick,0x7ffad1f6fb64,431875840,0,0x0,8
tick,0x7ffad1f6fb64,431891828,0,0x0,8
tick,0x7ffad1f6fb64,431906861,0,0x0,8
tick,0x7ffad1f6fb64,431922902,0,0x0,8
tick,0x7ffad1f6fb64,431937886,0,0x0,8
tick,0x7ffad1f6fb64,431953905,0,0x0,8
tick,0x7ffad1f6fb64,431968904,0,0x0,8
tick,0x7ffad1f6fb64,431983904,0,0x0,8
tick,0x7ffad1f6fb64,431998928,0,0x0,8
tick,0x7ffad1f6fb64,432014952,0,0x0,8
tick,0x7ffad1f6fb64,432030961,0,0x0,8
tick,0x7ffad1f6fb64,432046958,0,0x0,8
tick,0x7ffad1f6fb64,432061982,0,0x0,8
tick,0x7ffad1f6fb64,432078015,0,0x0,8
tick,0x7ffad1f6fb64,432094024,0,0x0,8
tick,0x7ffad1f6fb64,432110038,0,0x0,8
tick,0x7ffad1f6fb64,432126042,0,0x0,8
tick,0x7ffad1f6fb64,432142047,0,0x0,8
tick,0x7ffad1f6fb64,432157061,0,0x0,8
tick,0x7ffad1f6fb64,432173093,0,0x0,8
tick,0x7ffad1f6fb64,432188120,0,0x0,8
tick,0x7ffad1f6fb64,432204139,0,0x0,8
tick,0x7ffad1f6fb64,432220163,0,0x0,8
tick,0x7ffad1f6fb64,432235154,0,0x0,8
tick,0x7ffad1f6fb64,432250180,0,0x0,8
tick,0x7ffad1f6fb64,432266171,0,0x0,8
tick,0x7ffad1f6fb64,432281168,0,0x0,8
tick,0x7ffad1f6fb64,432297201,0,0x0,8
tick,0x7ffad1f6fb64,432312220,0,0x0,8
tick,0x7ffad1f6fb64,432327226,0,0x0,8
tick,0x7ffad1f6fb64,432343256,0,0x0,8
tick,0x7ffad1f6fb64,432358263,0,0x0,8
tick,0x7ffad1f6fb64,432374270,0,0x0,8
tick,0x7ffad1f6fb64,432390465,0,0x0,8
tick,0x7ffad1f6fb64,432406279,0,0x0,8
tick,0x7ffad1f6fb64,432421313,0,0x0,8
tick,0x7ffad1f6fb64,432436341,0,0x0,8
tick,0x7ffad1f6fb64,432451331,0,0x0,8
tick,0x7ffad1f6fb64,432466360,0,0x0,8
tick,0x7ffad1f6fb64,432482578,0,0x0,8
tick,0x7ffad1f6fb64,432498394,0,0x0,8
tick,0x7ffad1f6fb64,432514395,0,0x0,8
tick,0x7ffad1f6fb64,432529402,0,0x0,8
tick,0x7ffad1f6fb64,432545439,0,0x0,8
tick,0x7ffad1f6fb64,432561433,0,0x0,8
tick,0x7ffad1f6fb64,432577453,0,0x0,8
tick,0x7ffad1f6fb64,432593496,0,0x0,8
tick,0x7ffad1f6fb64,432608548,0,0x0,8
tick,0x7ffad1f6fb64,432623498,0,0x0,8
tick,0x7ffad1f6fb64,432638522,0,0x0,8
tick,0x7ffad1f6fb64,432654536,0,0x0,8
tick,0x7ffad1f6fb64,432670535,0,0x0,8
tick,0x7ffad1f6fb64,432685560,0,0x0,8
tick,0x7ffad1f6fb64,432701565,0,0x0,8
tick,0x7ffad1f6fb64,432716629,0,0x0,8
tick,0x7ffad1f6fb64,432731588,0,0x0,8
tick,0x7ffad1f6fb64,432747610,0,0x0,8
tick,0x7ffad1f6fb64,432763781,0,0x0,8
tick,0x7ffad1f6fb64,432779654,0,0x0,8
tick,0x7ffad1f6fb64,432794649,0,0x0,8
tick,0x7ffad1f6fb64,432810670,0,0x0,8
tick,0x7ffad1f6fb64,432825692,0,0x0,8
tick,0x7ffad1f6fb64,432840685,0,0x0,8
tick,0x7ffad1f6fb64,432855692,0,0x0,8
tick,0x7ffad1f6fb64,432871732,0,0x0,8
tick,0x7ffad1f6fb64,432887711,0,0x0,8
tick,0x7ffad1f6fb64,432902747,0,0x0,8
tick,0x7ffad1f6fb64,432918755,0,0x0,8
tick,0x7ffad1f6fb64,432934780,0,0x0,8
tick,0x7ffad1f6fb64,432950819,0,0x0,8
tick,0x7ffad1f6fb64,432966832,0,0x0,8
tick,0x7ffad1f6fb64,432981843,0,0x0,8
tick,0x7ffad1f6fb64,432997848,0,0x0,8
tick,0x7ffad1f6fb64,433013845,0,0x0,8
tick,0x7ffad1f6fb64,433029892,0,0x0,8
tick,0x7ffad1f6fb64,433045882,0,0x0,8
tick,0x7ffad1f6fb64,433060902,0,0x0,8
tick,0x7ffad1f6fb64,433076907,0,0x0,8
tick,0x7ffad1f6fb64,433092978,0,0x0,8
tick,0x7ffad1f6fb64,433108950,0,0x0,8
tick,0x7ffad1f6fb64,433124240,0,0x0,8
tick,0x7ffad1f6fb64,433139957,0,0x0,8
tick,0x7ffad1f6fb64,433156001,0,0x0,8
tick,0x7ffad1f6fb64,433170973,0,0x0,8
tick,0x7ffad1f6fb64,433187000,0,0x0,8
tick,0x7ffad1f6fb64,433203053,0,0x0,8
tick,0x7ffad1f6fb64,433219082,0,0x0,8
tick,0x7ffad1f6fb64,433235042,0,0x0,8
tick,0x7ffad1f6fb64,433250049,0,0x0,8
tick,0x7ffad1f6fb64,433265053,0,0x0,8
tick,0x7ffad1f6fb64,433280074,0,0x0,8
tick,0x7ffad1f6fb64,433296197,0,0x0,8
tick,0x7ffad1f6fb64,433311145,0,0x0,8
tick,0x7ffad1f6fb64,433326144,0,0x0,8
tick,0x7ffad1f6fb64,433341150,0,0x0,8
tick,0x7ffad1f6fb64,433357141,0,0x0,8
tick,0x7ffad1f6fb64,433373149,0,0x0,8
tick,0x7ffad1f6fb64,433389187,0,0x0,8
tick,0x7ffad1f6fb64,433404217,0,0x0,8
tick,0x7ffad1f6fb64,433420204,0,0x0,8
tick,0x7ffad1f6fb64,433436228,0,0x0,8
tick,0x7ffad1f6fb64,433451263,0,0x0,8
tick,0x7ffad1f6fb64,433467246,0,0x0,8
tick,0x7ffad1f6fb64,433482267,0,0x0,8
tick,0x7ffad1f6fb64,433497347,0,0x0,8
tick,0x7ffad1f6fb64,433512295,0,0x0,8
tick,0x7ffad1f6fb64,433527326,0,0x0,8
tick,0x7ffad1f6fb64,433542312,0,0x0,8
tick,0x7ffad1f6fb64,433558349,0,0x0,8
tick,0x7ffad1f6fb64,433574347,0,0x0,8
tick,0x7ffad1f6fb64,433590383,0,0x0,8
tick,0x7ffad1f6fb64,433606385,0,0x0,8
tick,0x7ffad1f6fb64,433622390,0,0x0,8
tick,0x7ffad1f6fb64,433637424,0,0x0,8
tick,0x7ffad1f6fb64,433653407,0,0x0,8
tick,0x7ffad1f6fb64,433668492,0,0x0,8
tick,0x7ffad1f6fb64,433684475,0,0x0,8
tick,0x7ffad1f6fb64,433699493,0,0x0,8
tick,0x7ffad1f6fb64,433715490,0,0x0,8
tick,0x7ffad1f6fb64,433731509,0,0x0,8
tick,0x7ffad1f6fb64,433746530,0,0x0,8
tick,0x7ffad1f6fb64,433761513,0,0x0,8
tick,0x7ffad1f6fb64,433777557,0,0x0,8
tick,0x7ffad1f6fb64,433792559,0,0x0,8
tick,0x7ffad1f6fb64,433808563,0,0x0,8
tick,0x7ffad1f6fb64,433823612,0,0x0,8
tick,0x7ffad1f6fb64,433839605,0,0x0,8
tick,0x7ffad1f6fb64,433855658,0,0x0,8
tick,0x7ffad1f6fb64,433871627,0,0x0,8
tick,0x7ffad1f6fb64,433887670,0,0x0,8
tick,0x7ffad1f6fb64,433902673,0,0x0,8
tick,0x7ffad1f6fb64,433917673,0,0x0,8
tick,0x7ffad1f6fb64,433933684,0,0x0,8
tick,0x7ffad1f6fb64,433948688,0,0x0,8
tick,0x7ffad1f6fb64,433964724,0,0x0,8
tick,0x7ffad1f6fb64,433980719,0,0x0,8
tick,0x7ffad1f6fb64,433995756,0,0x0,8
tick,0x7ffad1f6fb64,434011768,0,0x0,8
tick,0x7ffad1f6fb64,434026763,0,0x0,8
tick,0x7ffad1f6fb64,434042792,0,0x0,8
tick,0x7ffad1f6fb64,434058805,0,0x0,8
tick,0x7ffad1f6fb64,434074820,0,0x0,8
tick,0x7ffad1f6fb64,434089862,0,0x0,8
tick,0x7ffad1f6fb64,434104841,0,0x0,8
tick,0x7ffad1f6fb64,434119851,0,0x0,8
tick,0x7ffad1f6fb64,434135857,0,0x0,8
tick,0x7ffad1f6fb64,434151881,0,0x0,8
tick,0x7ffad1f6fb64,434166879,0,0x0,8
tick,0x7ffad1f6fb64,434181921,0,0x0,8
tick,0x7ffad1f6fb64,434196987,0,0x0,8
tick,0x7ffad1f6fb64,434212935,0,0x0,8
tick,0x7ffad1f6fb64,434228986,0,0x0,8
tick,0x7ffad1f6fb64,434244014,0,0x0,8
tick,0x7ffad1f6fb64,434258978,0,0x0,8
tick,0x7ffad1f6fb64,434275006,0,0x0,8
tick,0x7ffad1f6fb64,434291032,0,0x0,8
tick,0x7ffad1f6fb64,434306209,0,0x0,8
tick,0x7ffad1f6fb64,434321046,0,0x0,8
tick,0x7ffad1f6fb64,434337075,0,0x0,8
tick,0x7ffad1f6fb64,434353060,0,0x0,8
tick,0x7ffad1f6fb64,434369096,0,0x0,8
tick,0x7ffad1f6fb64,434385089,0,0x0,8
tick,0x7ffad1f6fb64,434401188,0,0x0,8
tick,0x7ffad1f6fb64,434417168,0,0x0,8
tick,0x7ffad1f6fb64,434432189,0,0x0,8
tick,0x7ffad1f6fb64,434447151,0,0x0,8
tick,0x7ffad1f6fb64,434463213,0,0x0,8
tick,0x7ffad1f6fb64,434478185,0,0x0,8
tick,0x7ffad1f6fb64,434494211,0,0x0,8
tick,0x7ffad1f6fb64,434510249,0,0x0,8
tick,0x7ffad1f6fb64,434526240,0,0x0,8
tick,0x7ffad1f6fb64,434541229,0,0x0,8
tick,0x7ffad1f6fb64,434556306,0,0x0,8
tick,0x7ffad1f6fb64,434571269,0,0x0,8
tick,0x7ffad1f6fb64,434587266,0,0x0,8
tick,0x7ffad1f6fb64,434603338,0,0x0,8
tick,0x7ffad1f6fb64,434619361,0,0x0,8
tick,0x7ffad1f6fb64,434634320,0,0x0,8
tick,0x7ffad1f6fb64,434650332,0,0x0,8
tick,0x7ffad1f6fb64,434666344,0,0x0,8
tick,0x7ffad1f6fb64,434682433,0,0x0,8
tick,0x7ffad1f6fb64,434698372,0,0x0,8
tick,0x7ffad1f6fb64,434714394,0,0x0,8
tick,0x7ffad1f6fb64,434729407,0,0x0,8
tick,0x7ffad1f6fb64,434745598,0,0x0,8
tick,0x7ffad1f6fb64,434761436,0,0x0,8
tick,0x7ffad1f6fb64,434776457,0,0x0,8
tick,0x7ffad1f6fb64,434792457,0,0x0,8
tick,0x7ffad1f6fb64,434808478,0,0x0,8
tick,0x7ffad1f6fb64,434824491,0,0x0,8
tick,0x7ffad1f6fb64,434839514,0,0x0,8
tick,0x7ffad1f6fb64,434855519,0,0x0,8
tick,0x7ffad1f6fb64,434870583,0,0x0,8
tick,0x7ffad1f6fb64,434886552,0,0x0,8
tick,0x7ffad1f6fb64,434902606,0,0x0,8
tick,0x7ffad1f6fb64,434917585,0,0x0,8
tick,0x7ffad1f6fb64,434932826,0,0x0,8
tick,0x7ffad1f6fb64,434948611,0,0x0,8
tick,0x7ffad1f6fb64,434964644,0,0x0,8
tick,0x7ffad1f6fb64,434980626,0,0x0,8
tick,0x7ffad1f6fb64,434996676,0,0x0,8
tick,0x7ffad1f6fb64,435012675,0,0x0,8
tick,0x7ffad1f6fb64,435027720,0,0x0,8
tick,0x7ffad1f6fb64,435043694,0,0x0,8
tick,0x7ffad1f6fb64,435058737,0,0x0,8
tick,0x7ffad1f6fb64,435074746,0,0x0,8
tick,0x7ffad1f6fb64,435089758,0,0x0,8
tick,0x7ffad1f6fb64,435105799,0,0x0,8
tick,0x7ffad1f6fb64,435121780,0,0x0,8
tick,0x7ffad1f6fb64,435137833,0,0x0,8
tick,0x7ffad1f6fb64,435153825,0,0x0,8
tick,0x7ffad1f6fb64,435169826,0,0x0,8
tick,0x7ffad1f6fb64,435185857,0,0x0,8
tick,0x7ffad1f6fb64,435201846,0,0x0,8
tick,0x7ffad1f6fb64,435217872,0,0x0,8
tick,0x7ffad1f6fb64,435232890,0,0x0,8
tick,0x7ffad1f6fb64,435248901,0,0x0,8
tick,0x7ffad1f6fb64,435264909,0,0x0,8
tick,0x7ffad1f6fb64,435279922,0,0x0,8
tick,0x7ffad1f6fb64,435295940,0,0x0,8
tick,0x7ffad1f6fb64,435311998,0,0x0,8
tick,0x7ffad1f6fb64,435326936,0,0x0,8
tick,0x7ffad1f6fb64,435341951,0,0x0,8
tick,0x7ffad1f6fb64,435356981,0,0x0,8
tick,0x7ffad1f6fb64,435371999,0,0x0,8
tick,0x7ffad1f6fb64,435387015,0,0x0,8
tick,0x7ffad1f6fb64,435403035,0,0x0,8
tick,0x7ffad1f6fb64,435419039,0,0x0,8
tick,0x7ffad1f6fb64,435434049,0,0x0,8
tick,0x7ffad1f6fb64,435449051,0,0x0,8
tick,0x7ffad1f6fb64,435465089,0,0x0,8
tick,0x7ffad1f6fb64,435480094,0,0x0,8
tick,0x7ffad1f6fb64,435496112,0,0x0,8
tick,0x7ffad1f6fb64,435512146,0,0x0,8
tick,0x7ffad1f6fb64,435527159,0,0x0,8
tick,0x7ffad1f6fb64,435543156,0,0x0,8
tick,0x7ffad1f6fb64,435559176,0,0x0,8
tick,0x7ffad1f6fb64,435575188,0,0x0,8
tick,0x7ffad1f6fb64,435591223,0,0x0,8
tick,0x7ffad1f6fb64,435606198,0,0x0,8
tick,0x7ffad1f6fb64,435621240,0,0x0,8
tick,0x7ffad1f6fb64,435637276,0,0x0,8
tick,0x7ffad1f6fb64,435652258,0,0x0,8
tick,0x7ffad1f6fb64,435667262,0,0x0,8
tick,0x7ffad1f6fb64,435682268,0,0x0,8
tick,0x7ffad1f6fb64,435697293,0,0x0,8
tick,0x7ffad1f6fb64,435713296,0,0x0,8
tick,0x7ffad1f6fb64,435728317,0,0x0,8
tick,0x7ffad1f6fb64,435744337,0,0x0,8
tick,0x7ffad1f6fb64,435759347,0,0x0,8
tick,0x7ffad1f6fb64,435775367,0,0x0,8
tick,0x7ffad1f6fb64,435790413,0,0x0,8
tick,0x7ffad1f6fb64,435806393,0,0x0,8
tick,0x7ffad1f6fb64,435822423,0,0x0,8
tick,0x7ffad1f6fb64,435837444,0,0x0,8
tick,0x7ffad1f6fb64,435853464,0,0x0,8
tick,0x7ffad1f6fb64,435869500,0,0x0,8
tick,0x7ffad1f6fb64,435884508,0,0x0,8
tick,0x7ffad1f6fb64,435899472,0,0x0,8
tick,0x7ffad1f6fb64,435915524,0,0x0,8
tick,0x7ffad1f6fb64,435931513,0,0x0,8
tick,0x7ffad1f6fb64,435947519,0,0x0,8
tick,0x7ffad1f6fb64,435962528,0,0x0,8
tick,0x7ffad1f6fb64,435977634,0,0x0,8
tick,0x7ffad1f6fb64,435993562,0,0x0,8
tick,0x7ffad1f6fb64,436009590,0,0x0,8
tick,0x7ffad1f6fb64,436025633,0,0x0,8
tick,0x7ffad1f6fb64,436040642,0,0x0,8
tick,0x7ffad1f6fb64,436055695,0,0x0,8
tick,0x7ffad1f6fb64,436071953,0,0x0,8
tick,0x7ffad1f6fb64,436086707,0,0x0,8
tick,0x7ffad1f6fb64,436102657,0,0x0,8
tick,0x7ffad1f6fb64,436117681,0,0x0,8
tick,0x7ffad1f6fb64,436133675,0,0x0,8
tick,0x7ffad1f6fb64,436148704,0,0x0,8
tick,0x7ffad1f6fb64,436163938,0,0x0,8
tick,0x7ffad1f6fb64,436178792,0,0x0,8
tick,0x7ffad1f6fb64,436194756,0,0x0,8
tick,0x7ffad1f6fb64,436209752,0,0x0,8
tick,0x7ffad1f6fb64,436225764,0,0x0,8
tick,0x7ffad1f6fb64,436240767,0,0x0,8
tick,0x7ffad1f6fb64,436256791,0,0x0,8
tick,0x7ffad1f6fb64,436272843,0,0x0,8
tick,0x7ffad1f6fb64,436287873,0,0x0,8
tick,0x7ffad1f6fb64,436302840,0,0x0,8
tick,0x7ffad1f6fb64,436317846,0,0x0,8
tick,0x7ffad1f6fb64,436333854,0,0x0,8
tick,0x7ffad1f6fb64,436349870,0,0x0,8
tick,0x7ffad1f6fb64,436365913,0,0x0,8
tick,0x7ffad1f6fb64,436381908,0,0x0,8
tick,0x7ffad1f6fb64,436396992,0,0x0,8
tick,0x7ffad1f6fb64,436412951,0,0x0,8
tick,0x7ffad1f6fb64,436427946,0,0x0,8
tick,0x7ffad1f6fb64,436442962,0,0x0,8
tick,0x7ffad1f6fb64,436458969,0,0x0,8
tick,0x7ffad1f6fb64,436474009,0,0x0,8
tick,0x7ffad1f6fb64,436488989,0,0x0,8
tick,0x7ffad1f6fb64,436504015,0,0x0,8
tick,0x7ffad1f6fb64,436520043,0,0x0,8
tick,0x7ffad1f6fb64,436536052,0,0x0,8
tick,0x7ffad1f6fb64,436551057,0,0x0,8
tick,0x7ffad1f6fb64,436566082,0,0x0,8
tick,0x7ffad1f6fb64,436581133,0,0x0,8
tick,0x7ffad1f6fb64,436596095,0,0x0,8
tick,0x7ffad1f6fb64,436611141,0,0x0,8
tick,0x7ffad1f6fb64,436627124,0,0x0,8
tick,0x7ffad1f6fb64,436643167,0,0x0,8
tick,0x7ffad1f6fb64,436659171,0,0x0,8
tick,0x7ffad1f6fb64,436674195,0,0x0,8
tick,0x7ffad1f6fb64,436690203,0,0x0,8
tick,0x7ffad1f6fb64,436706202,0,0x0,8
tick,0x7ffad1f6fb64,436721237,0,0x0,8
tick,0x7ffad1f6fb64,436736247,0,0x0,8
tick,0x7ffad1f6fb64,436752267,0,0x0,8
tick,0x7ffad1f6fb64,436768269,0,0x0,8
tick,0x7ffad1f6fb64,436784284,0,0x0,8
tick,0x7ffad1f6fb64,436799325,0,0x0,8
tick,0x7ffad1f6fb64,436815313,0,0x0,8
tick,0x7ffad1f6fb64,436831341,0,0x0,8
tick,0x7ffad1f6fb64,436847353,0,0x0,8
tick,0x7ffad1f6fb64,436862345,0,0x0,8
tick,0x7ffad1f6fb64,436877390,0,0x0,8
tick,0x7ffad1f6fb64,436893393,0,0x0,8
tick,0x7ffad1f6fb64,436908413,0,0x0,8
tick,0x7ffad1f6fb64,436923409,0,0x0,8
tick,0x7ffad1f6fb64,436938435,0,0x0,8
tick,0x7ffad1f6fb64,436953436,0,0x0,8
tick,0x7ffad1f6fb64,436969449,0,0x0,8
tick,0x7ffad1f6fb64,436984500,0,0x0,8
tick,0x7ffad1f6fb64,436999454,0,0x0,8
tick,0x7ffad1f6fb64,437015503,0,0x0,8
tick,0x7ffad1f6fb64,437031511,0,0x0,8
tick,0x7ffad1f6fb64,437046563,0,0x0,8
tick,0x7ffad1f6fb64,437061527,0,0x0,8
tick,0x7ffad1f6fb64,437077538,0,0x0,8
tick,0x7ffad1f6fb64,437093563,0,0x0,8
tick,0x7ffad1f6fb64,437108567,0,0x0,8
tick,0x7ffad1f6fb64,437124688,0,0x0,8
tick,0x7ffad1f6fb64,437139622,0,0x0,8
tick,0x7ffad1f6fb64,437154621,0,0x0,8
tick,0x7ffad1f6fb64,437170640,0,0x0,8
tick,0x7ffad1f6fb64,437186643,0,0x0,8
tick,0x7ffad1f6fb64,437201645,0,0x0,8
tick,0x7ffad1f6fb64,437217684,0,0x0,8
tick,0x7ffad1f6fb64,437232727,0,0x0,8
tick,0x7ffad1f6fb64,437247726,0,0x0,8
tick,0x7ffad1f6fb64,437263726,0,0x0,8
tick,0x7ffad1f6fb64,437278727,0,0x0,8
tick,0x7ffad1f6fb64,437294756,0,0x0,8
tick,0x7ffad1f6fb64,437311006,0,0x0,8
tick,0x7ffad1f6fb64,437326801,0,0x0,8
tick,0x7ffad1f6fb64,437342806,0,0x0,8
tick,0x7ffad1f6fb64,437357788,0,0x0,8
tick,0x7ffad1f6fb64,437373832,0,0x0,8
tick,0x7ffad1f6fb64,437389816,0,0x0,8
tick,0x7ffad1f6fb64,437405851,0,0x0,8
tick,0x7ffad1f6fb64,437421925,0,0x0,8
tick,0x7ffad1f6fb64,437436874,0,0x0,8
tick,0x7ffad1f6fb64,437452905,0,0x0,8
tick,0x7ffad1f6fb64,437468894,0,0x0,8
tick,0x7ffad1f6fb64,437484973,0,0x0,8
tick,0x7ffad1f6fb64,437499948,0,0x0,8
tick,0x7ffad1f6fb64,437514930,0,0x0,8
tick,0x7ffad1f6fb64,437529960,0,0x0,8
tick,0x7ffad1f6fb64,437545984,0,0x0,8
tick,0x7ffad1f6fb64,437560983,0,0x0,8
tick,0x7ffad1f6fb64,437576989,0,0x0,8
tick,0x7ffad1f6fb64,437593095,0,0x0,8
tick,0x7ffad1f6fb64,437608042,0,0x0,8
tick,0x7ffad1f6fb64,437624042,0,0x0,8
tick,0x7ffad1f6fb64,437639043,0,0x0,8
tick,0x7ffad1f6fb64,437655071,0,0x0,8
tick,0x7ffad1f6fb64,437670093,0,0x0,8
tick,0x7ffad1f6fb64,437686121,0,0x0,8
tick,0x7ffad1f6fb64,437702106,0,0x0,8
tick,0x7ffad1f6fb64,437717127,0,0x0,8
tick,0x7ffad1f6fb64,437733134,0,0x0,8
tick,0x7ffad1f6fb64,437749150,0,0x0,8
tick,0x7ffad1f6fb64,437764154,0,0x0,8
tick,0x7ffad1f6fb64,437779189,0,0x0,8
tick,0x7ffad1f6fb64,437795187,0,0x0,8
tick,0x7ffad1f6fb64,437810261,0,0x0,8
tick,0x7ffad1f6fb64,437826229,0,0x0,8
tick,0x7ffad1f6fb64,437841230,0,0x0,8
tick,0x7ffad1f6fb64,437857256,0,0x0,8
tick,0x7ffad1f6fb64,437872332,0,0x0,8
tick,0x7ffad1f6fb64,437887301,0,0x0,8
tick,0x7ffad1f6fb64,437903286,0,0x0,8
tick,0x7ffad1f6fb64,437919306,0,0x0,8
tick,0x7ffad1f6fb64,437935403,0,0x0,8
tick,0x7ffad1f6fb64,437950353,0,0x0,8
tick,0x7ffad1f6fb64,437966362,0,0x0,8
tick,0x7ffad1f6fb64,437981468,0,0x0,8
tick,0x7ffad1f6fb64,437996415,0,0x0,8
tick,0x7ffad1f6fb64,438011388,0,0x0,8
tick,0x7ffad1f6fb64,438026407,0,0x0,8
tick,0x7ffad1f6fb64,438041433,0,0x0,8
tick,0x7ffad1f6fb64,438056461,0,0x0,8
tick,0x7ffad1f6fb64,438071477,0,0x0,8
tick,0x7ffad1f6fb64,438086506,0,0x0,8
tick,0x7ffad1f6fb64,438101484,0,0x0,8
tick,0x7ffad1f6fb64,438116517,0,0x0,8
tick,0x7ffad1f6fb64,438131500,0,0x0,8
tick,0x7ffad1f6fb64,438146510,0,0x0,8
tick,0x7ffad1f6fb64,438162556,0,0x0,8
tick,0x7ffad1f6fb64,438177565,0,0x0,8
tick,0x7ffad1f6fb64,438193542,0,0x0,8
tick,0x7ffad1f6fb64,438209590,0,0x0,8
tick,0x7ffad1f6fb64,438225594,0,0x0,8
tick,0x7ffad1f6fb64,438240612,0,0x0,8
tick,0x7ffad1f6fb64,438255645,0,0x0,8
tick,0x7ffad1f6fb64,438270646,0,0x0,8
tick,0x7ffad1f6fb64,438285649,0,0x0,8
tick,0x7ffad1f6fb64,438300658,0,0x0,8
tick,0x7ffad1f6fb64,438315728,0,0x0,8
tick,0x7ffad1f6fb64,438331689,0,0x0,8
tick,0x7ffad1f6fb64,438347703,0,0x0,8
tick,0x7ffad1f6fb64,438363692,0,0x0,8
tick,0x7ffad1f6fb64,438378713,0,0x0,8
tick,0x7ffad1f6fb64,438393730,0,0x0,8
tick,0x7ffad1f6fb64,438409785,0,0x0,8
tick,0x7ffad1f6fb64,438425827,0,0x0,8
tick,0x7ffad1f6fb64,438440790,0,0x0,8
tick,0x7ffad1f6fb64,438456792,0,0x0,8
tick,0x7ffad1f6fb64,438472813,0,0x0,8
tick,0x7ffad1f6fb64,438488825,0,0x0,8
tick,0x7ffad1f6fb64,438504841,0,0x0,8
tick,0x7ffad1f6fb64,438519869,0,0x0,8
tick,0x7ffad1f6fb64,438535880,0,0x0,8
tick,0x7ffad1f6fb64,438550867,0,0x0,8
tick,0x7ffad1f6fb64,438566920,0,0x0,8
tick,0x7ffad1f6fb64,438581950,0,0x0,8
tick,0x7ffad1f6fb64,438596948,0,0x0,8
tick,0x7ffad1f6fb64,438612951,0,0x0,8
tick,0x7ffad1f6fb64,438629015,0,0x0,8
tick,0x7ffad1f6fb64,438644988,0,0x0,8
tick,0x7ffad1f6fb64,438660023,0,0x0,8
tick,0x7ffad1f6fb64,438676028,0,0x0,8
tick,0x7ffad1f6fb64,438692029,0,0x0,8
tick,0x7ffad1f6fb64,438707034,0,0x0,8
tick,0x7ffad1f6fb64,438723038,0,0x0,8
tick,0x7ffad1f6fb64,438739050,0,0x0,8
tick,0x7ffad1f6fb64,438754084,0,0x0,8
tick,0x7ffad1f6fb64,438769061,0,0x0,8
tick,0x7ffad1f6fb64,438784099,0,0x0,8
tick,0x7ffad1f6fb64,438799119,0,0x0,8
tick,0x7ffad1f6fb64,438814115,0,0x0,8
tick,0x7ffad1f6fb64,438830154,0,0x0,8
tick,0x7ffad1f6fb64,438846232,0,0x0,8
tick,0x7ffad1f6fb64,438862189,0,0x0,8
tick,0x7ffad1f6fb64,438877201,0,0x0,8
tick,0x7ffad1f6fb64,438892217,0,0x0,8
tick,0x7ffad1f6fb64,438908226,0,0x0,8
tick,0x7ffad1f6fb64,438924252,0,0x0,8
tick,0x7ffad1f6fb64,438939281,0,0x0,8
tick,0x7ffad1f6fb64,438955274,0,0x0,8
tick,0x7ffad1f6fb64,438971301,0,0x0,8
tick,0x7ffad1f6fb64,438986271,0,0x0,8
tick,0x7ffad1f6fb64,439001296,0,0x0,8
tick,0x7ffad1f6fb64,439017346,0,0x0,8
tick,0x7ffad1f6fb64,439032362,0,0x0,8
tick,0x7ffad1f6fb64,439047357,0,0x0,8
tick,0x7ffad1f6fb64,439062355,0,0x0,8
tick,0x7ffad1f6fb64,439077396,0,0x0,8
tick,0x7ffad1f6fb64,439093411,0,0x0,8
tick,0x7ffad1f6fb64,439109391,0,0x0,8
tick,0x7ffad1f6fb64,439124423,0,0x0,8
tick,0x7ffad1f6fb64,439139447,0,0x0,8
tick,0x7ffad1f6fb64,439154435,0,0x0,8
tick,0x7ffad1f6fb64,439169471,0,0x0,8
tick,0x7ffad1f6fb64,439185479,0,0x0,8
tick,0x7ffad1f6fb64,439200548,0,0x0,8
tick,0x7ffad1f6fb64,439215485,0,0x0,8
tick,0x7ffad1f6fb64,439231626,0,0x0,8
tick,0x7ffad1f6fb64,439246504,0,0x0,8
tick,0x7ffad1f6fb64,439262539,0,0x0,8
tick,0x7ffad1f6fb64,439277555,0,0x0,8
tick,0x7ffad1f6fb64,439293574,0,0x0,8
tick,0x7ffad1f6fb64,439309571,0,0x0,8
tick,0x7ffad1f6fb64,439325611,0,0x0,8
tick,0x7ffad1f6fb64,439340648,0,0x0,8
tick,0x7ffad1f6fb64,439356631,0,0x0,8
tick,0x7ffad1f6fb64,439372625,0,0x0,8
tick,0x7ffad1f6fb64,439388643,0,0x0,8
tick,0x7ffad1f6fb64,439403660,0,0x0,8
tick,0x7ffad1f6fb64,439419663,0,0x0,8
tick,0x7ffad1f6fb64,439435746,0,0x0,8
tick,0x7ffad1f6fb64,439450717,0,0x0,8
tick,0x7ffad1f6fb64,439466750,0,0x0,8
tick,0x7ffad1f6fb64,439481733,0,0x0,8
tick,0x7ffad1f6fb64,439497769,0,0x0,8
tick,0x7ffad1f6fb64,439512764,0,0x0,8
tick,0x7ffad1f6fb64,439527761,0,0x0,8
tick,0x7ffad1f6fb64,439542802,0,0x0,8
tick,0x7ffad1f6fb64,439557813,0,0x0,8
tick,0x7ffad1f6fb64,439573809,0,0x0,8
tick,0x7ffad1f6fb64,439588861,0,0x0,8
tick,0x7ffad1f6fb64,439605098,0,0x0,8
tick,0x7ffad1f6fb64,439620875,0,0x0,8
tick,0x7ffad1f6fb64,439635880,0,0x0,8
tick,0x7ffad1f6fb64,439650911,0,0x0,8
tick,0x7ffad1f6fb64,439665938,0,0x0,8
tick,0x7ffad1f6fb64,439681918,0,0x0,8
tick,0x7ffad1f6fb64,439697922,0,0x0,8
tick,0x7ffad1f6fb64,439712981,0,0x0,8
tick,0x7ffad1f6fb64,439727982,0,0x0,8
tick,0x7ffad1f6fb64,439743960,0,0x0,8
tick,0x7ffad1f6fb64,439759986,0,0x0,8
tick,0x7ffad1f6fb64,439775012,0,0x0,8
tick,0x7ffad1f6fb64,439791013,0,0x0,8
tick,0x7ffad1f6fb64,439806026,0,0x0,8
tick,0x7ffad1f6fb64,439821188,0,0x0,8
tick,0x7ffad1f6fb64,439836083,0,0x0,8
tick,0x7ffad1f6fb64,439851078,0,0x0,8
tick,0x7ffad1f6fb64,439867096,0,0x0,8
tick,0x7ffad1f6fb64,439882129,0,0x0,8
tick,0x7ffad1f6fb64,439898116,0,0x0,8
tick,0x7ffad1f6fb64,439914140,0,0x0,8
tick,0x7ffad1f6fb64,439930147,0,0x0,8
tick,0x7ffad1f6fb64,439945179,0,0x0,8
tick,0x7ffad1f6fb64,439961171,0,0x0,8
tick,0x7ffad1f6fb64,439977195,0,0x0,8
tick,0x7ffad1f6fb64,439993190,0,0x0,8
tick,0x7ffad1f6fb64,440009196,0,0x0,8
tick,0x7ffad1f6fb64,440024223,0,0x0,8
tick,0x7ffad1f6fb64,440039216,0,0x0,8
tick,0x7ffad1f6fb64,440054238,0,0x0,8
tick,0x7ffad1f6fb64,440069257,0,0x0,8
tick,0x7ffad1f6fb64,440085367,0,0x0,8
tick,0x7ffad1f6fb64,440100312,0,0x0,8
tick,0x7ffad1f6fb64,440115305,0,0x0,8
tick,0x7ffad1f6fb64,440131330,0,0x0,8
tick,0x7ffad1f6fb64,440147348,0,0x0,8
tick,0x7ffad1f6fb64,440163556,0,0x0,8
tick,0x7ffad1f6fb64,440178410,0,0x0,8
tick,0x7ffad1f6fb64,440193383,0,0x0,8
tick,0x7ffad1f6fb64,440209395,0,0x0,8
tick,0x7ffad1f6fb64,440225405,0,0x0,8
tick,0x7ffad1f6fb64,440240436,0,0x0,8
tick,0x7ffad1f6fb64,440256422,0,0x0,8
tick,0x7ffad1f6fb64,440272496,0,0x0,8
tick,0x7ffad1f6fb64,440287468,0,0x0,8
tick,0x7ffad1f6fb64,440303469,0,0x0,8
tick,0x7ffad1f6fb64,440319502,0,0x0,8
tick,0x7ffad1f6fb64,440335521,0,0x0,8
tick,0x7ffad1f6fb64,440351520,0,0x0,8
tick,0x7ffad1f6fb64,440367580,0,0x0,8
tick,0x7ffad1f6fb64,440382555,0,0x0,8
tick,0x7ffad1f6fb64,440398561,0,0x0,8
tick,0x7ffad1f6fb64,440413581,0,0x0,8
tick,0x7ffad1f6fb64,440428587,0,0x0,8
tick,0x7ffad1f6fb64,440444598,0,0x0,8
tick,0x7ffad1f6fb64,440460630,0,0x0,8
tick,0x7ffad1f6fb64,440475637,0,0x0,8
tick,0x7ffad1f6fb64,440491711,0,0x0,8
tick,0x7ffad1f6fb64,440506665,0,0x0,8
tick,0x7ffad1f6fb64,440522689,0,0x0,8
tick,0x7ffad1f6fb64,440537693,0,0x0,8
tick,0x7ffad1f6fb64,440552694,0,0x0,8
tick,0x7ffad1f6fb64,440568734,0,0x0,8
tick,0x7ffad1f6fb64,440583737,0,0x0,8
tick,0x7ffad1f6fb64,440598749,0,0x0,8
tick,0x7ffad1f6fb64,440613758,0,0x0,8
tick,0x7ffad1f6fb64,440629784,0,0x0,8
tick,0x7ffad1f6fb64,440645817,0,0x0,8
tick,0x7ffad1f6fb64,440661798,0,0x0,8
tick,0x7ffad1f6fb64,440677827,0,0x0,8
tick,0x7ffad1f6fb64,440693823,0,0x0,8
tick,0x7ffad1f6fb64,440709860,0,0x0,8
tick,0x7ffad1f6fb64,440725877,0,0x0,8
tick,0x7ffad1f6fb64,440741881,0,0x0,8
tick,0x7ffad1f6fb64,440757901,0,0x0,8
tick,0x7ffad1f6fb64,440773955,0,0x0,8
tick,0x7ffad1f6fb64,440789930,0,0x0,8
tick,0x7ffad1f6fb64,440804942,0,0x0,8
tick,0x7ffad1f6fb64,440820955,0,0x0,8
tick,0x7ffad1f6fb64,440835986,0,0x0,8
tick,0x7ffad1f6fb64,440851004,0,0x0,8
tick,0x7ffad1f6fb64,440867011,0,0x0,8
tick,0x7ffad1f6fb64,440882036,0,0x0,8
tick,0x7ffad1f6fb64,440897023,0,0x0,8
tick,0x7ffad1f6fb64,440913073,0,0x0,8
tick,0x7ffad1f6fb64,440928563,0,0x0,8
tick,0x7ffad1f6fb64,440944078,0,0x0,8
tick,0x7ffad1f6fb64,440960109,0,0x0,8
tick,0x7ffad1f6fb64,440975137,0,0x0,8
tick,0x7ffad1f6fb64,440990122,0,0x0,8
tick,0x7ffad1f6fb64,441006176,0,0x0,8
tick,0x7ffad1f6fb64,441021172,0,0x0,8
tick,0x7ffad1f6fb64,441036272,0,0x0,8
tick,0x7ffad1f6fb64,441051169,0,0x0,8
tick,0x7ffad1f6fb64,441067205,0,0x0,8
tick,0x7ffad1f6fb64,441082211,0,0x0,8
tick,0x7ffad1f6fb64,441097217,0,0x0,8
tick,0x7ffad1f6fb64,441113232,0,0x0,8
tick,0x7ffad1f6fb64,441129275,0,0x0,8
tick,0x7ffad1f6fb64,441144280,0,0x0,8
tick,0x7ffad1f6fb64,441159269,0,0x0,8
tick,0x7ffad1f6fb64,441175329,0,0x0,8
tick,0x7ffad1f6fb64,441190310,0,0x0,8
tick,0x7ffad1f6fb64,441206342,0,0x0,8
tick,0x7ffad1f6fb64,441221319,0,0x0,8
tick,0x7ffad1f6fb64,441236341,0,0x0,8
tick,0x7ffad1f6fb64,441252361,0,0x0,8
tick,0x7ffad1f6fb64,441268410,0,0x0,8
tick,0x7ffad1f6fb64,441284364,0,0x0,8
tick,0x7ffad1f6fb64,441299417,0,0x0,8
tick,0x7ffad1f6fb64,441314963,0,0x0,8
tick,0x7ffad1f6fb64,441331001,0,0x0,8
tick,0x7ffad1f6fb64,441347025,0,0x0,8
tick,0x7ffad1f6fb64,441363025,0,0x0,8
tick,0x7ffad1f6fb64,441378026,0,0x0,8
tick,0x7ffad1f6fb64,441394073,0,0x0,8
tick,0x7ffad1f6fb64,441409055,0,0x0,8
tick,0x7ffad1f6fb64,441425067,0,0x0,8
tick,0x7ffad1f6fb64,441440076,0,0x0,8
tick,0x7ffad1f6fb64,441455136,0,0x0,8
tick,0x7ffad1f6fb64,441471122,0,0x0,8
tick,0x7ffad1f6fb64,441486128,0,0x0,8
tick,0x7ffad1f6fb64,441502132,0,0x0,8
tick,0x7ffad1f6fb64,441518188,0,0x0,8
tick,0x7ffad1f6fb64,441533208,0,0x0,8
tick,0x7ffad1f6fb64,441548183,0,0x0,8
tick,0x7ffad1f6fb64,441563194,0,0x0,8
tick,0x7ffad1f6fb64,441578215,0,0x0,8
tick,0x7ffad1f6fb64,441594259,0,0x0,8
tick,0x7ffad1f6fb64,441610247,0,0x0,8
tick,0x7ffad1f6fb64,441625277,0,0x0,8
tick,0x7ffad1f6fb64,441640288,0,0x0,8
tick,0x7ffad1f6fb64,441655276,0,0x0,8
tick,0x7ffad1f6fb64,441671298,0,0x0,8
tick,0x7ffad1f6fb64,441686373,0,0x0,8
tick,0x7ffad1f6fb64,441701358,0,0x0,8
tick,0x7ffad1f6fb64,441716342,0,0x0,8
tick,0x7ffad1f6fb64,441732357,0,0x0,8
tick,0x7ffad1f6fb64,441748385,0,0x0,8
tick,0x7ffad1f6fb64,441764369,0,0x0,8
tick,0x7ffad1f6fb64,441779414,0,0x0,8
tick,0x7ffad1f6fb64,441795421,0,0x0,8
tick,0x7ffad1f6fb64,441811407,0,0x0,8
tick,0x7ffad1f6fb64,441827449,0,0x0,8
tick,0x7ffad1f6fb64,441842435,0,0x0,8
tick,0x7ffad1f6fb64,441858459,0,0x0,8
tick,0x7ffad1f6fb64,441874488,0,0x0,8
tick,0x7ffad1f6fb64,441889509,0,0x0,8
tick,0x7ffad1f6fb64,441905574,0,0x0,8
tick,0x7ffad1f6fb64,441921516,0,0x0,8
tick,0x7ffad1f6fb64,441936595,0,0x0,8
tick,0x7ffad1f6fb64,441952624,0,0x0,8
tick,0x7ffad1f6fb64,441968715,0,0x0,8
tick,0x7ffad1f6fb64,441983570,0,0x0,8
tick,0x7ffad1f6fb64,441998576,0,0x0,8
tick,0x7ffad1f6fb64,442013616,0,0x0,8
tick,0x7ffad1f6fb64,442028807,0,0x0,8
tick,0x7ffad1f6fb64,442044618,0,0x0,8
tick,0x7ffad1f6fb64,442060667,0,0x0,8
tick,0x7ffad1f6fb64,442075660,0,0x0,8
tick,0x7ffad1f6fb64,442090678,0,0x0,8
tick,0x7ffad1f6fb64,442106681,0,0x0,8
tick,0x7ffad1f6fb64,442122710,0,0x0,8
tick,0x7ffad1f6fb64,442137723,0,0x0,8
tick,0x7ffad1f6fb64,442153739,0,0x0,8
tick,0x7ffad1f6fb64,442169751,0,0x0,8
tick,0x7ffad1f6fb64,442185762,0,0x0,8
tick,0x7ffad1f6fb64,442201772,0,0x0,8
tick,0x7ffad1f6fb64,442217797,0,0x0,8
tick,0x7ffad1f6fb64,442233991,0,0x0,8
tick,0x7ffad1f6fb64,442249841,0,0x0,8
tick,0x7ffad1f6fb64,442264847,0,0x0,8
tick,0x7ffad1f6fb64,442280868,0,0x0,8
tick,0x7ffad1f6fb64,442295862,0,0x0,8
tick,0x7ffad1f6fb64,442310917,0,0x0,8
tick,0x7ffad1f6fb64,442325941,0,0x0,8
tick,0x7ffad1f6fb64,442340930,0,0x0,8
tick,0x7ffad1f6fb64,442356906,0,0x0,8
tick,0x7ffad1f6fb64,442372934,0,0x0,8
tick,0x7ffad1f6fb64,442387959,0,0x0,8
tick,0x7ffad1f6fb64,442402946,0,0x0,8
tick,0x7ffad1f6fb64,442418979,0,0x0,8
tick,0x7ffad1f6fb64,442434993,0,0x0,8
tick,0x7ffad1f6fb64,442451004,0,0x0,8
tick,0x7ffad1f6fb64,442466005,0,0x0,8
tick,0x7ffad1f6fb64,442481039,0,0x0,8
tick,0x7ffad1f6fb64,442496043,0,0x0,8
tick,0x7ffad1f6fb64,442511061,0,0x0,8
tick,0x7ffad1f6fb64,442527087,0,0x0,8
tick,0x7ffad1f6fb64,442543122,0,0x0,8
tick,0x7ffad1f6fb64,442559126,0,0x0,8
tick,0x7ffad1f6fb64,442575127,0,0x0,8
tick,0x7ffad1f6fb64,442590142,0,0x0,8
tick,0x7ffad1f6fb64,442606205,0,0x0,8
tick,0x7ffad1f6fb64,442621184,0,0x0,8
tick,0x7ffad1f6fb64,442636175,0,0x0,8
tick,0x7ffad1f6fb64,442652178,0,0x0,8
tick,0x7ffad1f6fb64,442667198,0,0x0,8
tick,0x7ffad1f6fb64,442682218,0,0x0,8
tick,0x7ffad1f6fb64,442698243,0,0x0,8
tick,0x7ffad1f6fb64,442714273,0,0x0,8
tick,0x7ffad1f6fb64,442729242,0,0x0,8
tick,0x7ffad1f6fb64,442744274,0,0x0,8
tick,0x7ffad1f6fb64,442760281,0,0x0,8
tick,0x7ffad1f6fb64,442776327,0,0x0,8
tick,0x7ffad1f6fb64,442791337,0,0x0,8
tick,0x7ffad1f6fb64,442807357,0,0x0,8
tick,0x7ffad1f6fb64,442822356,0,0x0,8
tick,0x7ffad1f6fb64,442837363,0,0x0,8
tick,0x7ffad1f6fb64,442852362,0,0x0,8
tick,0x7ffad1f6fb64,442867378,0,0x0,8
tick,0x7ffad1f6fb64,442882417,0,0x0,8
tick,0x7ffad1f6fb64,442898429,0,0x0,8
tick,0x7ffad1f6fb64,442914437,0,0x0,8
tick,0x7ffad1f6fb64,442929457,0,0x0,8
tick,0x7ffad1f6fb64,442945468,0,0x0,8
tick,0x7ffad1f6fb64,442961496,0,0x0,8
tick,0x7ffad1f6fb64,442976497,0,0x0,8
tick,0x7ffad1f6fb64,442991533,0,0x0,8
tick,0x7ffad1f6fb64,443007654,0,0x0,8
tick,0x7ffad1f6fb64,443023565,0,0x0,8
tick,0x7ffad1f6fb64,443039545,0,0x0,8
tick,0x7ffad1f6fb64,443054547,0,0x0,8
tick,0x7ffad1f6fb64,443070566,0,0x0,8
tick,0x7ffad1f6fb64,443085595,0,0x0,8
tick,0x7ffad1f6fb64,443100619,0,0x0,8
tick,0x7ffad1f6fb64,443116608,0,0x0,8
tick,0x7ffad1f6fb64,443132628,0,0x0,8
tick,0x7ffad1f6fb64,443148627,0,0x0,8
tick,0x7ffad1f6fb64,443163660,0,0x0,8
tick,0x7ffad1f6fb64,443178690,0,0x0,8
tick,0x7ffad1f6fb64,443194680,0,0x0,8
tick,0x7ffad1f6fb64,443210704,0,0x0,8
tick,0x7ffad1f6fb64,443225716,0,0x0,8
tick,0x7ffad1f6fb64,443240745,0,0x0,8
tick,0x7ffad1f6fb64,443256747,0,0x0,8
tick,0x7ffad1f6fb64,443272753,0,0x0,8
tick,0x7ffad1f6fb64,443287793,0,0x0,8
tick,0x7ffad1f6fb64,443302785,0,0x0,8
tick,0x7ffad1f6fb64,443317798,0,0x0,8
tick,0x7ffad1f6fb64,443333800,0,0x0,8
tick,0x7ffad1f6fb64,443348815,0,0x0,8
tick,0x7ffad1f6fb64,443364843,0,0x0,8
tick,0x7ffad1f6fb64,443379869,0,0x0,8
tick,0x7ffad1f6fb64,443394862,0,0x0,8
tick,0x7ffad1f6fb64,443410895,0,0x0,8
tick,0x7ffad1f6fb64,443426907,0,0x0,8
tick,0x7ffad1f6fb64,443442947,0,0x0,8
tick,0x7ffad1f6fb64,443458913,0,0x0,8
tick,0x7ffad1f6fb64,443473934,0,0x0,8
tick,0x7ffad1f6fb64,443489946,0,0x0,8
tick,0x7ffad1f6fb64,443504954,0,0x0,8
tick,0x7ffad1f6fb64,443520990,0,0x0,8
tick,0x7ffad1f6fb64,443536997,0,0x0,8
tick,0x7ffad1f6fb64,443552008,0,0x0,8
tick,0x7ffad1f6fb64,443568124,0,0x0,8
tick,0x7ffad1f6fb64,443584025,0,0x0,8
tick,0x7ffad1f6fb64,443599083,0,0x0,8
tick,0x7ffad1f6fb64,443615055,0,0x0,8
tick,0x7ffad1f6fb64,443631095,0,0x0,8
tick,0x7ffad1f6fb64,443647102,0,0x0,8
tick,0x7ffad1f6fb64,443662091,0,0x0,8
tick,0x7ffad1f6fb64,443678137,0,0x0,8
tick,0x7ffad1f6fb64,443693165,0,0x0,8
tick,0x7ffad1f6fb64,443708191,0,0x0,8
tick,0x7ffad1f6fb64,443724170,0,0x0,8
tick,0x7ffad1f6fb64,443740213,0,0x0,8
tick,0x7ffad1f6fb64,443756200,0,0x0,8
tick,0x7ffad1f6fb64,443771206,0,0x0,8
tick,0x7ffad1f6fb64,443786229,0,0x0,8
tick,0x7ffad1f6fb64,443802222,0,0x0,8
tick,0x7ffad1f6fb64,443818233,0,0x0,8
tick,0x7ffad1f6fb64,443833300,0,0x0,8
tick,0x7ffad1f6fb64,443848329,0,0x0,8
tick,0x7ffad1f6fb64,443864324,0,0x0,8
tick,0x7ffad1f6fb64,443879322,0,0x0,8
tick,0x7ffad1f6fb64,443894330,0,0x0,8
tick,0x7ffad1f6fb64,443910338,0,0x0,8
tick,0x7ffad1f6fb64,443925347,0,0x0,8
tick,0x7ffad1f6fb64,443940373,0,0x0,8
tick,0x7ffad1f6fb64,443956384,0,0x0,8
tick,0x7ffad1f6fb64,443972396,0,0x0,8
tick,0x7ffad1f6fb64,443988400,0,0x0,8
tick,0x7ffad1f6fb64,444004413,0,0x0,8
tick,0x7ffad1f6fb64,444019444,0,0x0,8
tick,0x7ffad1f6fb64,444035438,0,0x0,8
tick,0x7ffad1f6fb64,444051444,0,0x0,8
tick,0x7ffad1f6fb64,444066507,0,0x0,8
tick,0x7ffad1f6fb64,444081515,0,0x0,8
tick,0x7ffad1f6fb64,444097491,0,0x0,8
tick,0x7ffad1f6fb64,444113516,0,0x0,8
tick,0x7ffad1f6fb64,444129530,0,0x0,8
tick,0x7ffad1f6fb64,444144544,0,0x0,8
tick,0x7ffad1f6fb64,444159545,0,0x0,8
tick,0x7ffad1f6fb64,444175603,0,0x0,8
tick,0x7ffad1f6fb64,444191700,0,0x0,8
tick,0x7ffad1f6fb64,444206738,0,0x0,8
tick,0x7ffad1f6fb64,444222619,0,0x0,8
tick,0x7ffad1f6fb64,444237620,0,0x0,8
tick,0x7ffad1f6fb64,444253656,0,0x0,8
tick,0x7ffad1f6fb64,444268686,0,0x0,8
tick,0x7ffad1f6fb64,444283675,0,0x0,8
tick,0x7ffad1f6fb64,444299689,0,0x0,8
tick,0x7ffad1f6fb64,444315718,0,0x0,8
tick,0x7ffad1f6fb64,444330735,0,0x0,8
tick,0x7ffad1f6fb64,444346726,0,0x0,8
tick,0x7ffad1f6fb64,444362748,0,0x0,8
tick,0x7ffad1f6fb64,444378757,0,0x0,8
tick,0x7ffad1f6fb64,444393779,0,0x0,8
tick,0x7ffad1f6fb64,444409790,0,0x0,8
tick,0x7ffad1f6fb64,444425797,0,0x0,8
tick,0x7ffad1f6fb64,444440918,0,0x0,8
tick,0x7ffad1f6fb64,444456835,0,0x0,8
tick,0x7ffad1f6fb64,444471897,0,0x0,8
tick,0x7ffad1f6fb64,444486876,0,0x0,8
tick,0x7ffad1f6fb64,444502871,0,0x0,8
tick,0x7ffad1f6fb64,444518892,0,0x0,8
tick,0x7ffad1f6fb64,444533905,0,0x0,8
tick,0x7ffad1f6fb64,444549912,0,0x0,8
tick,0x7ffad1f6fb64,444565936,0,0x0,8
tick,0x7ffad1f6fb64,444580958,0,0x0,8
tick,0x7ffad1f6fb64,444595954,0,0x0,8
tick,0x7ffad1f6fb64,444611965,0,0x0,8
tick,0x7ffad1f6fb64,444626991,0,0x0,8
tick,0x7ffad1f6fb64,444642976,0,0x0,8
tick,0x7ffad1f6fb64,444659004,0,0x0,8
tick,0x7ffad1f6fb64,444674024,0,0x0,8
tick,0x7ffad1f6fb64,444689049,0,0x0,8
tick,0x7ffad1f6fb64,444705057,0,0x0,8
tick,0x7ffad1f6fb64,444720076,0,0x0,8
tick,0x7ffad1f6fb64,444735111,0,0x0,8
tick,0x7ffad1f6fb64,444750097,0,0x0,8
tick,0x7ffad1f6fb64,444765123,0,0x0,8
tick,0x7ffad1f6fb64,444780348,0,0x0,8
tick,0x7ffad1f6fb64,444795142,0,0x0,8
tick,0x7ffad1f6fb64,444811162,0,0x0,8
tick,0x7ffad1f6fb64,444827177,0,0x0,8
tick,0x7ffad1f6fb64,444843171,0,0x0,8
tick,0x7ffad1f6fb64,444858206,0,0x0,8
tick,0x7ffad1f6fb64,444874245,0,0x0,8
tick,0x7ffad1f6fb64,444890231,0,0x0,8
tick,0x7ffad1f6fb64,444906231,0,0x0,8
tick,0x7ffad1f6fb64,444921261,0,0x0,8
tick,0x7ffad1f6fb64,444936275,0,0x0,8
tick,0x7ffad1f6fb64,444952279,0,0x0,8
tick,0x7ffad1f6fb64,444968282,0,0x0,8
tick,0x7ffad1f6fb64,444984345,0,0x0,8
tick,0x7ffad1f6fb64,444999327,0,0x0,8
tick,0x7ffad1f6fb64,445015319,0,0x0,8
tick,0x7ffad1f6fb64,445031368,0,0x0,8
tick,0x7ffad1f6fb64,445046382,0,0x0,8
tick,0x7ffad1f6fb64,445062386,0,0x0,8
tick,0x7ffad1f6fb64,445077386,0,0x0,8
tick,0x7ffad1f6fb64,445093417,0,0x0,8
tick,0x7ffad1f6fb64,445109417,0,0x0,8
tick,0x7ffad1f6fb64,445125420,0,0x0,8
tick,0x7ffad1f6fb64,445140420,0,0x0,8
tick,0x7ffad1f6fb64,445156440,0,0x0,8
tick,0x7ffad1f6fb64,445172482,0,0x0,8
tick,0x7ffad1f6fb64,445187481,0,0x0,8
tick,0x7ffad1f6fb64,445203499,0,0x0,8
tick,0x7ffad1f6fb64,445219502,0,0x0,8
tick,0x7ffad1f6fb64,445234521,0,0x0,8
tick,0x7ffad1f6fb64,445249560,0,0x0,8
tick,0x7ffad1f6fb64,445265571,0,0x0,8
tick,0x7ffad1f6fb64,445280597,0,0x0,8
tick,0x7ffad1f6fb64,445295582,0,0x0,8
tick,0x7ffad1f6fb64,445311594,0,0x0,8
tick,0x7ffad1f6fb64,445327684,0,0x0,8
tick,0x7ffad1f6fb64,445343626,0,0x0,8
tick,0x7ffad1f6fb64,445359632,0,0x0,8
tick,0x7ffad1f6fb64,445374660,0,0x0,8
tick,0x7ffad1f6fb64,445390713,0,0x0,8
tick,0x7ffad1f6fb64,445406698,0,0x0,8
tick,0x7ffad1f6fb64,445421703,0,0x0,8
tick,0x7ffad1f6fb64,445436719,0,0x0,8
tick,0x7ffad1f6fb64,445452731,0,0x0,8
tick,0x7ffad1f6fb64,445468742,0,0x0,8
tick,0x7ffad1f6fb64,445484750,0,0x0,8
tick,0x7ffad1f6fb64,445499921,0,0x0,8
tick,0x7ffad1f6fb64,445514782,0,0x0,8
tick,0x7ffad1f6fb64,445529814,0,0x0,8
tick,0x7ffad1f6fb64,445545828,0,0x0,8
tick,0x7ffad1f6fb64,445561837,0,0x0,8
tick,0x7ffad1f6fb64,445576848,0,0x0,8
tick,0x7ffad1f6fb64,445592855,0,0x0,8
tick,0x7ffad1f6fb64,445607912,0,0x0,8
tick,0x7ffad1f6fb64,445623916,0,0x0,8
tick,0x7ffad1f6fb64,445639923,0,0x0,8
tick,0x7ffad1f6fb64,445654909,0,0x0,8
tick,0x7ffad1f6fb64,445670939,0,0x0,8
tick,0x7ffad1f6fb64,445686942,0,0x0,8
tick,0x7ffad1f6fb64,445701947,0,0x0,8
tick,0x7ffad1f6fb64,445717978,0,0x0,8
tick,0x7ffad1f6fb64,445732987,0,0x0,8
tick,0x7ffad1f6fb64,445748013,0,0x0,8
tick,0x7ffad1f6fb64,445764016,0,0x0,8
tick,0x7ffad1f6fb64,445779016,0,0x0,8
tick,0x7ffad1f6fb64,445795051,0,0x0,8
tick,0x7ffad1f6fb64,445810077,0,0x0,8
tick,0x7ffad1f6fb64,445825091,0,0x0,8
tick,0x7ffad1f6fb64,445840092,0,0x0,8
tick,0x7ffad1f6fb64,445856102,0,0x0,8
tick,0x7ffad1f6fb64,445872120,0,0x0,8
tick,0x7ffad1f6fb64,445887346,0,0x0,8
tick,0x7ffad1f6fb64,445903138,0,0x0,8
tick,0x7ffad1f6fb64,445919172,0,0x0,8
tick,0x7ffad1f6fb64,445935209,0,0x0,8
tick,0x7ffad1f6fb64,445950172,0,0x0,8
tick,0x7ffad1f6fb64,445966189,0,0x0,8
tick,0x7ffad1f6fb64,445981221,0,0x0,8
tick,0x7ffad1f6fb64,445996221,0,0x0,8
tick,0x7ffad1f6fb64,446012266,0,0x0,8
tick,0x7ffad1f6fb64,446027245,0,0x0,8
tick,0x7ffad1f6fb64,446043269,0,0x0,8
tick,0x7ffad1f6fb64,446059285,0,0x0,8
tick,0x7ffad1f6fb64,446074310,0,0x0,8
tick,0x7ffad1f6fb64,446090323,0,0x0,8
tick,0x7ffad1f6fb64,446105314,0,0x0,8
tick,0x7ffad1f6fb64,446120345,0,0x0,8
tick,0x7ffad1f6fb64,446136351,0,0x0,8
tick,0x7ffad1f6fb64,446152375,0,0x0,8
tick,0x7ffad1f6fb64,446167492,0,0x0,8
tick,0x7ffad1f6fb64,446182414,0,0x0,8
tick,0x7ffad1f6fb64,446198406,0,0x0,8
tick,0x7ffad1f6fb64,446213421,0,0x0,8
tick,0x7ffad1f6fb64,446229432,0,0x0,8
tick,0x7ffad1f6fb64,446245447,0,0x0,8
tick,0x7ffad1f6fb64,446260493,0,0x0,8
tick,0x7ffad1f6fb64,446275499,0,0x0,8
tick,0x7ffad1f6fb64,446291508,0,0x0,8
tick,0x7ffad1f6fb64,446307520,0,0x0,8
tick,0x7ffad1f6fb64,446323521,0,0x0,8
tick,0x7ffad1f6fb64,446338552,0,0x0,8
tick,0x7ffad1f6fb64,446353562,0,0x0,8
tick,0x7ffad1f6fb64,446369574,0,0x0,8
tick,0x7ffad1f6fb64,446385580,0,0x0,8
tick,0x7ffad1f6fb64,446400619,0,0x0,8
tick,0x7ffad1f6fb64,446416667,0,0x0,8
tick,0x7ffad1f6fb64,446432663,0,0x0,8
tick,0x7ffad1f6fb64,446448674,0,0x0,8
tick,0x7ffad1f6fb64,446463682,0,0x0,8
tick,0x7ffad1f6fb64,446479689,0,0x0,8
tick,0x7ffad1f6fb64,446494697,0,0x0,8
tick,0x7ffad1f6fb64,446510716,0,0x0,8
tick,0x7ffad1f6fb64,446525740,0,0x0,8
tick,0x7ffad1f6fb64,446540770,0,0x0,8
tick,0x7ffad1f6fb64,446555752,0,0x0,8
tick,0x7ffad1f6fb64,446570757,0,0x0,8
tick,0x7ffad1f6fb64,446585783,0,0x0,8
tick,0x7ffad1f6fb64,446600784,0,0x0,8
tick,0x7ffad1f6fb64,446616813,0,0x0,8
tick,0x7ffad1f6fb64,446632832,0,0x0,8
tick,0x7ffad1f6fb64,446648889,0,0x0,8
tick,0x7ffad1f6fb64,446664857,0,0x0,8
tick,0x7ffad1f6fb64,446679862,0,0x0,8
tick,0x7ffad1f6fb64,446695883,0,0x0,8
tick,0x7ffad1f6fb64,446710870,0,0x0,8
tick,0x7ffad1f6fb64,446726898,0,0x0,8
tick,0x7ffad1f6fb64,446742909,0,0x0,8
tick,0x7ffad1f6fb64,446758925,0,0x0,8
tick,0x7ffad1f6fb64,446773951,0,0x0,8
tick,0x7ffad1f6fb64,446789955,0,0x0,8
tick,0x7ffad1f6fb64,446805993,0,0x0,8
tick,0x7ffad1f6fb64,446821050,0,0x0,8
tick,0x7ffad1f6fb64,446836013,0,0x0,8
tick,0x7ffad1f6fb64,446851028,0,0x0,8
tick,0x7ffad1f6fb64,446866047,0,0x0,8
tick,0x7ffad1f6fb64,446881052,0,0x0,8
tick,0x7ffad1f6fb64,446896059,0,0x0,8
tick,0x7ffad1f6fb64,446911075,0,0x0,8
tick,0x7ffad1f6fb64,446927064,0,0x0,8
tick,0x7ffad1f6fb64,446943099,0,0x0,8
tick,0x7ffad1f6fb64,446959106,0,0x0,8
tick,0x7ffad1f6fb64,446975118,0,0x0,8
tick,0x7ffad1f6fb64,446991146,0,0x0,8
tick,0x7ffad1f6fb64,447006141,0,0x0,8
tick,0x7ffad1f6fb64,447021183,0,0x0,8
tick,0x7ffad1f6fb64,447036184,0,0x0,8
tick,0x7ffad1f6fb64,447051172,0,0x0,8
tick,0x7ffad1f6fb64,447066219,0,0x0,8
tick,0x7ffad1f6fb64,447081222,0,0x0,8
tick,0x7ffad1f6fb64,447097228,0,0x0,8
tick,0x7ffad1f6fb64,447113231,0,0x0,8
tick,0x7ffad1f6fb64,447129273,0,0x0,8
tick,0x7ffad1f6fb64,447144305,0,0x0,8
tick,0x7ffad1f6fb64,447160314,0,0x0,8
tick,0x7ffad1f6fb64,447176316,0,0x0,8
tick,0x7ffad1f6fb64,447191356,0,0x0,8
tick,0x7ffad1f6fb64,447207333,0,0x0,8
tick,0x7ffad1f6fb64,447222363,0,0x0,8
tick,0x7ffad1f6fb64,447237423,0,0x0,8
tick,0x7ffad1f6fb64,447253375,0,0x0,8
tick,0x7ffad1f6fb64,447269408,0,0x0,8
tick,0x7ffad1f6fb64,447284410,0,0x0,8
tick,0x7ffad1f6fb64,447299408,0,0x0,8
tick,0x7ffad1f6fb64,447315447,0,0x0,8
tick,0x7ffad1f6fb64,447331448,0,0x0,8
tick,0x7ffad1f6fb64,447346477,0,0x0,8
tick,0x7ffad1f6fb64,447361472,0,0x0,8
tick,0x7ffad1f6fb64,447376495,0,0x0,8
tick,0x7ffad1f6fb64,447392498,0,0x0,8
tick,0x7ffad1f6fb64,447408530,0,0x0,8
tick,0x7ffad1f6fb64,447423541,0,0x0,8
tick,0x7ffad1f6fb64,447439566,0,0x0,8
tick,0x7ffad1f6fb64,447455612,0,0x0,8
tick,0x7ffad1f6fb64,447470599,0,0x0,8
tick,0x7ffad1f6fb64,447486613,0,0x0,8
tick,0x7ffad1f6fb64,447501597,0,0x0,8
tick,0x7ffad1f6fb64,447517623,0,0x0,8
tick,0x7ffad1f6fb64,447533616,0,0x0,8
tick,0x7ffad1f6fb64,447548654,0,0x0,8
tick,0x7ffad1f6fb64,447564669,0,0x0,8
tick,0x7ffad1f6fb64,447579675,0,0x0,8
tick,0x7ffad1f6fb64,447594698,0,0x0,8
tick,0x7ffad1f6fb64,447610691,0,0x0,8
tick,0x7ffad1f6fb64,447625703,0,0x0,8
tick,0x7ffad1f6fb64,447640719,0,0x0,8
tick,0x7ffad1f6fb64,447656755,0,0x0,8
tick,0x7ffad1f6fb64,447672981,0,0x0,8
tick,0x7ffad1f6fb64,447688008,0,0x0,8
tick,0x7ffad1f6fb64,447702794,0,0x0,8
tick,0x7ffad1f6fb64,447717796,0,0x0,8
tick,0x7ffad1f6fb64,447732807,0,0x0,8
tick,0x7ffad1f6fb64,447747829,0,0x0,8
tick,0x7ffad1f6fb64,447763834,0,0x0,8
tick,0x7ffad1f6fb64,447778881,0,0x0,8
tick,0x7ffad1f6fb64,447793851,0,0x0,8
tick,0x7ffad1f6fb64,447808923,0,0x0,8
tick,0x7ffad1f6fb64,447824932,0,0x0,8
tick,0x7ffad1f6fb64,447839950,0,0x0,8
tick,0x7ffad1f6fb64,447854910,0,0x0,8
tick,0x7ffad1f6fb64,447870924,0,0x0,8
tick,0x7ffad1f6fb64,447886956,0,0x0,8
tick,0x7ffad1f6fb64,447902963,0,0x0,8
tick,0x7ffad1f6fb64,447918978,0,0x0,8
tick,0x7ffad1f6fb64,447934007,0,0x0,8
tick,0x7ffad1f6fb64,447950000,0,0x0,8
tick,0x7ffad1f6fb64,447966042,0,0x0,8
tick,0x7ffad1f6fb64,447981042,0,0x0,8
tick,0x7ffad1f6fb64,447996065,0,0x0,8
tick,0x7ffad1f6fb64,448011141,0,0x0,8
tick,0x7ffad1f6fb64,448027085,0,0x0,8
tick,0x7ffad1f6fb64,448042089,0,0x0,8
tick,0x7ffad1f6fb64,448058121,0,0x0,8
tick,0x7ffad1f6fb64,448074135,0,0x0,8
tick,0x7ffad1f6fb64,448090130,0,0x0,8
tick,0x7ffad1f6fb64,448106150,0,0x0,8
tick,0x7ffad1f6fb64,448121153,0,0x0,8
tick,0x7ffad1f6fb64,448136181,0,0x0,8
tick,0x7ffad1f6fb64,448152180,0,0x0,8
tick,0x7ffad1f6fb64,448167220,0,0x0,8
tick,0x7ffad1f6fb64,448182249,0,0x0,8
tick,0x7ffad1f6fb64,448198223,0,0x0,8
tick,0x7ffad1f6fb64,448214291,0,0x0,8
tick,0x7ffad1f6fb64,448229267,0,0x0,8
tick,0x7ffad1f6fb64,448245273,0,0x0,8
tick,0x7ffad1f6fb64,448261546,0,0x0,8
tick,0x7ffad1f6fb64,448277327,0,0x0,8
tick,0x7ffad1f6fb64,448293316,0,0x0,8
tick,0x7ffad1f6fb64,448308331,0,0x0,8
tick,0x7ffad1f6fb64,448323361,0,0x0,8
tick,0x7ffad1f6fb64,448338349,0,0x0,8
tick,0x7ffad1f6fb64,448354394,0,0x0,8
tick,0x7ffad1f6fb64,448370412,0,0x0,8
tick,0x7ffad1f6fb64,448386395,0,0x0,8
tick,0x7ffad1f6fb64,448401419,0,0x0,8
tick,0x7ffad1f6fb64,448417456,0,0x0,8
tick,0x7ffad1f6fb64,448433454,0,0x0,8
tick,0x7ffad1f6fb64,448448480,0,0x0,8
tick,0x7ffad1f6fb64,448464469,0,0x0,8
tick,0x7ffad1f6fb64,448479498,0,0x0,8
tick,0x7ffad1f6fb64,448495528,0,0x0,8
tick,0x7ffad1f6fb64,448511586,0,0x0,8
tick,0x7ffad1f6fb64,448527550,0,0x0,8
tick,0x7ffad1f6fb64,448542565,0,0x0,8
tick,0x7ffad1f6fb64,448558560,0,0x0,8
tick,0x7ffad1f6fb64,448573602,0,0x0,8
tick,0x7ffad1f6fb64,448589599,0,0x0,8
tick,0x7ffad1f6fb64,448604635,0,0x0,8
tick,0x7ffad1f6fb64,448619641,0,0x0,8
tick,0x7ffad1f6fb64,448635696,0,0x0,8
tick,0x7ffad1f6fb64,448650784,0,0x0,8
tick,0x7ffad1f6fb64,448665677,0,0x0,8
tick,0x7ffad1f6fb64,448681729,0,0x0,8
tick,0x7ffad1f6fb64,448696738,0,0x0,8
tick,0x7ffad1f6fb64,448712724,0,0x0,8
tick,0x7ffad1f6fb64,448728756,0,0x0,8
tick,0x7ffad1f6fb64,448744777,0,0x0,8
tick,0x7ffad1f6fb64,448759793,0,0x0,8
tick,0x7ffad1f6fb64,448774791,0,0x0,8
tick,0x7ffad1f6fb64,448790843,0,0x0,8
tick,0x7ffad1f6fb64,448806827,0,0x0,8
tick,0x7ffad1f6fb64,448821891,0,0x0,8
tick,0x7ffad1f6fb64,448836869,0,0x0,8
tick,0x7ffad1f6fb64,448851878,0,0x0,8
tick,0x7ffad1f6fb64,448866882,0,0x0,8
tick,0x7ffad1f6fb64,448881871,0,0x0,8
tick,0x7ffad1f6fb64,448897906,0,0x0,8
tick,0x7ffad1f6fb64,448912932,0,0x0,8
tick,0x7ffad1f6fb64,448928933,0,0x0,8
tick,0x7ffad1f6fb64,448943928,0,0x0,8
tick,0x7ffad1f6fb64,448958954,0,0x0,8
tick,0x7ffad1f6fb64,448973974,0,0x0,8
tick,0x7ffad1f6fb64,448988955,0,0x0,8
tick,0x7ffad1f6fb64,449004998,0,0x0,8
tick,0x7ffad1f6fb64,449020991,0,0x0,8
tick,0x7ffad1f6fb64,449036015,0,0x0,8
tick,0x7ffad1f6fb64,449051036,0,0x0,8
tick,0x7ffad1f6fb64,449066049,0,0x0,8
tick,0x7ffad1f6fb64,449081071,0,0x0,8
tick,0x7ffad1f6fb64,449096102,0,0x0,8
tick,0x7ffad1f6fb64,449111076,0,0x0,8
tick,0x7ffad1f6fb64,449127095,0,0x0,8
tick,0x7ffad1f6fb64,449143122,0,0x0,8
tick,0x7ffad1f6fb64,449159113,0,0x0,8
tick,0x7ffad1f6fb64,449175116,0,0x0,8
tick,0x7ffad1f6fb64,449190160,0,0x0,8
tick,0x7ffad1f6fb64,449205178,0,0x0,8
tick,0x7ffad1f6fb64,449220171,0,0x0,8
tick,0x7ffad1f6fb64,449235408,0,0x0,8
tick,0x7ffad1f6fb64,449250202,0,0x0,8
tick,0x7ffad1f6fb64,449266199,0,0x0,8
tick,0x7ffad1f6fb64,449281245,0,0x0,8
tick,0x7ffad1f6fb64,449297263,0,0x0,8
tick,0x7ffad1f6fb64,449313269,0,0x0,8
tick,0x7ffad1f6fb64,449328308,0,0x0,8
tick,0x7ffad1f6fb64,449344287,0,0x0,8
tick,0x7ffad1f6fb64,449360296,0,0x0,8
tick,0x7ffad1f6fb64,449375332,0,0x0,8
tick,0x7ffad1f6fb64,449391320,0,0x0,8
tick,0x7ffad1f6fb64,449407345,0,0x0,8
tick,0x7ffad1f6fb64,449422369,0,0x0,8
tick,0x7ffad1f6fb64,449437365,0,0x0,8
tick,0x7ffad1f6fb64,449452371,0,0x0,8
tick,0x7ffad1f6fb64,449468412,0,0x0,8
tick,0x7ffad1f6fb64,449483403,0,0x0,8
tick,0x7ffad1f6fb64,449499414,0,0x0,8
tick,0x7ffad1f6fb64,449514439,0,0x0,8
tick,0x7ffad1f6fb64,449530433,0,0x0,8
tick,0x7ffad1f6fb64,449545485,0,0x0,8
tick,0x7ffad1f6fb64,449561467,0,0x0,8
tick,0x7ffad1f6fb64,449577476,0,0x0,8
tick,0x7ffad1f6fb64,449593528,0,0x0,8
tick,0x7ffad1f6fb64,449609548,0,0x0,8
tick,0x7ffad1f6fb64,449624554,0,0x0,8
tick,0x7ffad1f6fb64,449639537,0,0x0,8
tick,0x7ffad1f6fb64,449655607,0,0x0,8
tick,0x7ffad1f6fb64,449671572,0,0x0,8
tick,0x7ffad1f6fb64,449687602,0,0x0,8
tick,0x7ffad1f6fb64,449702597,0,0x0,8
tick,0x7ffad1f6fb64,449717626,0,0x0,8
tick,0x7ffad1f6fb64,449732634,0,0x0,8
tick,0x7ffad1f6fb64,449748638,0,0x0,8
tick,0x7ffad1f6fb64,449764663,0,0x0,8
tick,0x7ffad1f6fb64,449779655,0,0x0,8
tick,0x7ffad1f6fb64,449794680,0,0x0,8
tick,0x7ffad1f6fb64,449809930,0,0x0,8
tick,0x7ffad1f6fb64,449825703,0,0x0,8
tick,0x7ffad1f6fb64,449840758,0,0x0,8
tick,0x7ffad1f6fb64,449856744,0,0x0,8
tick,0x7ffad1f6fb64,449872749,0,0x0,8
tick,0x7ffad1f6fb64,449887754,0,0x0,8
tick,0x7ffad1f6fb64,449902770,0,0x0,8
tick,0x7ffad1f6fb64,449918806,0,0x0,8
tick,0x7ffad1f6fb64,449933821,0,0x0,8
tick,0x7ffad1f6fb64,449949831,0,0x0,8
tick,0x7ffad1f6fb64,449964848,0,0x0,8
tick,0x7ffad1f6fb64,449979854,0,0x0,8
tick,0x7ffad1f6fb64,449995872,0,0x0,8
tick,0x7ffad1f6fb64,450010859,0,0x0,8
tick,0x7ffad1f6fb64,450026894,0,0x0,8
tick,0x7ffad1f6fb64,450042913,0,0x0,8
tick,0x7ffad1f6fb64,450058960,0,0x0,8
tick,0x7ffad1f6fb64,450073974,0,0x0,8
tick,0x7ffad1f6fb64,450088986,0,0x0,8
tick,0x7ffad1f6fb64,450104992,0,0x0,8
tick,0x7ffad1f6fb64,450120976,0,0x0,8
tick,0x7ffad1f6fb64,450137011,0,0x0,8
tick,0x7ffad1f6fb64,450153004,0,0x0,8
tick,0x7ffad1f6fb64,450168039,0,0x0,8
tick,0x7ffad1f6fb64,450184042,0,0x0,8
tick,0x7ffad1f6fb64,450199052,0,0x0,8
tick,0x7ffad1f6fb64,450215058,0,0x0,8
tick,0x7ffad1f6fb64,450231127,0,0x0,8
tick,0x7ffad1f6fb64,450247085,0,0x0,8
tick,0x7ffad1f6fb64,450262107,0,0x0,8
tick,0x7ffad1f6fb64,450278171,0,0x0,8
tick,0x7ffad1f6fb64,450294129,0,0x0,8
tick,0x7ffad1f6fb64,450309157,0,0x0,8
tick,0x7ffad1f6fb64,450325161,0,0x0,8
tick,0x7ffad1f6fb64,450340173,0,0x0,8
tick,0x7ffad1f6fb64,450355199,0,0x0,8
tick,0x7ffad1f6fb64,450371217,0,0x0,8
tick,0x7ffad1f6fb64,450387233,0,0x0,8
tick,0x7ffad1f6fb64,450402244,0,0x0,8
tick,0x7ffad1f6fb64,450418263,0,0x0,8
tick,0x7ffad1f6fb64,450434264,0,0x0,8
tick,0x7ffad1f6fb64,450449266,0,0x0,8
tick,0x7ffad1f6fb64,450465296,0,0x0,8
tick,0x7ffad1f6fb64,450480287,0,0x0,8
tick,0x7ffad1f6fb64,450495332,0,0x0,8
tick,0x7ffad1f6fb64,450510339,0,0x0,8
tick,0x7ffad1f6fb64,450525363,0,0x0,8
tick,0x7ffad1f6fb64,450540399,0,0x0,8
tick,0x7ffad1f6fb64,450556391,0,0x0,8
tick,0x7ffad1f6fb64,450572372,0,0x0,8
tick,0x7ffad1f6fb64,450587379,0,0x0,8
tick,0x7ffad1f6fb64,450603480,0,0x0,8
tick,0x7ffad1f6fb64,450618448,0,0x0,8
tick,0x7ffad1f6fb64,450634453,0,0x0,8
tick,0x7ffad1f6fb64,450649503,0,0x0,8
tick,0x7ffad1f6fb64,450665523,0,0x0,8
tick,0x7ffad1f6fb64,450681525,0,0x0,8
tick,0x7ffad1f6fb64,450697511,0,0x0,8
tick,0x7ffad1f6fb64,450713562,0,0x0,8
tick,0x7ffad1f6fb64,450729555,0,0x0,8
tick,0x7ffad1f6fb64,450744597,0,0x0,8
tick,0x7ffad1f6fb64,450759593,0,0x0,8
tick,0x7ffad1f6fb64,450774602,0,0x0,8
tick,0x7ffad1f6fb64,450790614,0,0x0,8
tick,0x7ffad1f6fb64,450806669,0,0x0,8
tick,0x7ffad1f6fb64,450821624,0,0x0,8
tick,0x7ffad1f6fb64,450836668,0,0x0,8
tick,0x7ffad1f6fb64,450851702,0,0x0,8
tick,0x7ffad1f6fb64,450866695,0,0x0,8
tick,0x7ffad1f6fb64,450881720,0,0x0,8
tick,0x7ffad1f6fb64,450896721,0,0x0,8
tick,0x7ffad1f6fb64,450912739,0,0x0,8
tick,0x7ffad1f6fb64,450927732,0,0x0,8
tick,0x7ffad1f6fb64,450942784,0,0x0,8
tick,0x7ffad1f6fb64,450958764,0,0x0,8
tick,0x7ffad1f6fb64,450973822,0,0x0,8
tick,0x7ffad1f6fb64,450988915,0,0x0,8
tick,0x7ffad1f6fb64,451003796,0,0x0,8
tick,0x7ffad1f6fb64,451019825,0,0x0,8
tick,0x7ffad1f6fb64,451036050,0,0x0,8
tick,0x7ffad1f6fb64,451050833,0,0x0,8
tick,0x7ffad1f6fb64,451066845,0,0x0,8
tick,0x7ffad1f6fb64,451081906,0,0x0,8
tick,0x7ffad1f6fb64,451097891,0,0x0,8
tick,0x7ffad1f6fb64,451113913,0,0x0,8
tick,0x7ffad1f6fb64,451129946,0,0x0,8
tick,0x7ffad1f6fb64,451145970,0,0x0,8
tick,0x7ffad1f6fb64,451160947,0,0x0,8
tick,0x7ffad1f6fb64,451176976,0,0x0,8
tick,0x7ffad1f6fb64,451192976,0,0x0,8
tick,0x7ffad1f6fb64,451208971,0,0x0,8
tick,0x7ffad1f6fb64,451224984,0,0x0,8
tick,0x7ffad1f6fb64,451240989,0,0x0,8
tick,0x7ffad1f6fb64,451257042,0,0x0,8
tick,0x7ffad1f6fb64,451273030,0,0x0,8
tick,0x7ffad1f6fb64,451288035,0,0x0,8
tick,0x7ffad1f6fb64,451304062,0,0x0,8
tick,0x7ffad1f6fb64,451320082,0,0x0,8
tick,0x7ffad1f6fb64,451336094,0,0x0,8
tick,0x7ffad1f6fb64,451352106,0,0x0,8
tick,0x7ffad1f6fb64,451367140,0,0x0,8
tick,0x7ffad1f6fb64,451382139,0,0x0,8
tick,0x7ffad1f6fb64,451397160,0,0x0,8
tick,0x7ffad1f6fb64,451412157,0,0x0,8
tick,0x7ffad1f6fb64,451428176,0,0x0,8
tick,0x7ffad1f6fb64,451444183,0,0x0,8
tick,0x7ffad1f6fb64,451460208,0,0x0,8
tick,0x7ffad1f6fb64,451475221,0,0x0,8
tick,0x7ffad1f6fb64,451490254,0,0x0,8
tick,0x7ffad1f6fb64,451506281,0,0x0,8
tick,0x7ffad1f6fb64,451521280,0,0x0,8
tick,0x7ffad1f6fb64,451537293,0,0x0,8
tick,0x7ffad1f6fb64,451552284,0,0x0,8
tick,0x7ffad1f6fb64,451567303,0,0x0,8
tick,0x7ffad1f6fb64,451582314,0,0x0,8
tick,0x7ffad1f6fb64,451597341,0,0x0,8
tick,0x7ffad1f6fb64,451612347,0,0x0,8
tick,0x7ffad1f6fb64,451627382,0,0x0,8
tick,0x7ffad1f6fb64,451643388,0,0x0,8
tick,0x7ffad1f6fb64,451659398,0,0x0,8
tick,0x7ffad1f6fb64,451674404,0,0x0,8
tick,0x7ffad1f6fb64,451690434,0,0x0,8
tick,0x7ffad1f6fb64,451706437,0,0x0,8
tick,0x7ffad1f6fb64,451722456,0,0x0,8
tick,0x7ffad1f6fb64,451737473,0,0x0,8
tick,0x7ffad1f6fb64,451752466,0,0x0,8
tick,0x7ffad1f6fb64,451768516,0,0x0,8
tick,0x7ffad1f6fb64,451784531,0,0x0,8
tick,0x7ffad1f6fb64,451799520,0,0x0,8
tick,0x7ffad1f6fb64,451815531,0,0x0,8
tick,0x7ffad1f6fb64,451831586,0,0x0,8
tick,0x7ffad1f6fb64,451846582,0,0x0,8
tick,0x7ffad1f6fb64,451862585,0,0x0,8
tick,0x7ffad1f6fb64,451878627,0,0x0,8
tick,0x7ffad1f6fb64,451893630,0,0x0,8
tick,0x7ffad1f6fb64,451908645,0,0x0,8
tick,0x7ffad1f6fb64,451923644,0,0x0,8
tick,0x7ffad1f6fb64,451939664,0,0x0,8
tick,0x7ffad1f6fb64,451955731,0,0x0,8
tick,0x7ffad1f6fb64,451970699,0,0x0,8
tick,0x7ffad1f6fb64,451986694,0,0x0,8
tick,0x7ffad1f6fb64,452001695,0,0x0,8
tick,0x7ffad1f6fb64,452016738,0,0x0,8
tick,0x7ffad1f6fb64,452032743,0,0x0,8
tick,0x7ffad1f6fb64,452048753,0,0x0,8
tick,0x7ffad1f6fb64,452064747,0,0x0,8
tick,0x7ffad1f6fb64,452079768,0,0x0,8
tick,0x7ffad1f6fb64,452094808,0,0x0,8
tick,0x7ffad1f6fb64,452110804,0,0x0,8
tick,0x7ffad1f6fb64,452125862,0,0x0,8
tick,0x7ffad1f6fb64,452140857,0,0x0,8
tick,0x7ffad1f6fb64,452156892,0,0x0,8
tick,0x7ffad1f6fb64,452172871,0,0x0,8
tick,0x7ffad1f6fb64,452188921,0,0x0,8
tick,0x7ffad1f6fb64,452204907,0,0x0,8
tick,0x7ffad1f6fb64,452219910,0,0x0,8
tick,0x7ffad1f6fb64,452235932,0,0x0,8
tick,0x7ffad1f6fb64,452251927,0,0x0,8
tick,0x7ffad1f6fb64,452266969,0,0x0,8
tick,0x7ffad1f6fb64,452281985,0,0x0,8
tick,0x7ffad1f6fb64,452297969,0,0x0,8
tick,0x7ffad1f6fb64,452314006,0,0x0,8
tick,0x7ffad1f6fb64,452330007,0,0x0,8
tick,0x7ffad1f6fb64,452345052,0,0x0,8
tick,0x7ffad1f6fb64,452361028,0,0x0,8
tick,0x7ffad1f6fb64,452377059,0,0x0,8
tick,0x7ffad1f6fb64,452393118,0,0x0,8
tick,0x7ffad1f6fb64,452408083,0,0x0,8
tick,0x7ffad1f6fb64,452423101,0,0x0,8
tick,0x7ffad1f6fb64,452439105,0,0x0,8
tick,0x7ffad1f6fb64,452455129,0,0x0,8
tick,0x7ffad1f6fb64,452470147,0,0x0,8
tick,0x7ffad1f6fb64,452485161,0,0x0,8
tick,0x7ffad1f6fb64,452500162,0,0x0,8
tick,0x7ffad1f6fb64,452516404,0,0x0,8
tick,0x7ffad1f6fb64,452532198,0,0x0,8
tick,0x7ffad1f6fb64,452547197,0,0x0,8
tick,0x7ffad1f6fb64,452563223,0,0x0,8
tick,0x7ffad1f6fb64,452578234,0,0x0,8
tick,0x7ffad1f6fb64,452594252,0,0x0,8
tick,0x7ffad1f6fb64,452609254,0,0x0,8
tick,0x7ffad1f6fb64,452624277,0,0x0,8
tick,0x7ffad1f6fb64,452640317,0,0x0,8
tick,0x7ffad1f6fb64,452655291,0,0x0,8
tick,0x7ffad1f6fb64,452671369,0,0x0,8
tick,0x7ffad1f6fb64,452686349,0,0x0,8
tick,0x7ffad1f6fb64,452702364,0,0x0,8
tick,0x7ffad1f6fb64,452717389,0,0x0,8
tick,0x7ffad1f6fb64,452732372,0,0x0,8
tick,0x7ffad1f6fb64,452748393,0,0x0,8
tick,0x7ffad1f6fb64,452764419,0,0x0,8
tick,0x7ffad1f6fb64,452779483,0,0x0,8
tick,0x7ffad1f6fb64,452795453,0,0x0,8
tick,0x7ffad1f6fb64,452811463,0,0x0,8
tick,0x7ffad1f6fb64,452826476,0,0x0,8
tick,0x7ffad1f6fb64,452841484,0,0x0,8
tick,0x7ffad1f6fb64,452856490,0,0x0,8
tick,0x7ffad1f6fb64,452872496,0,0x0,8
tick,0x7ffad1f6fb64,452888548,0,0x0,8
tick,0x7ffad1f6fb64,452904538,0,0x0,8
tick,0x7ffad1f6fb64,452919611,0,0x0,8
tick,0x7ffad1f6fb64,452935619,0,0x0,8
tick,0x7ffad1f6fb64,452951593,0,0x0,8
tick,0x7ffad1f6fb64,452966592,0,0x0,8
tick,0x7ffad1f6fb64,452981599,0,0x0,8
tick,0x7ffad1f6fb64,452996638,0,0x0,8
tick,0x7ffad1f6fb64,453012619,0,0x0,8
tick,0x7ffad1f6fb64,453028649,0,0x0,8
tick,0x7ffad1f6fb64,453044656,0,0x0,8
tick,0x7ffad1f6fb64,453059695,0,0x0,8
tick,0x7ffad1f6fb64,453074683,0,0x0,8
tick,0x7ffad1f6fb64,453089698,0,0x0,8
tick,0x7ffad1f6fb64,453105730,0,0x0,8
tick,0x7ffad1f6fb64,453121727,0,0x0,8
tick,0x7ffad1f6fb64,453137756,0,0x0,8
tick,0x7ffad1f6fb64,453152759,0,0x0,8
tick,0x7ffad1f6fb64,453168757,0,0x0,8
tick,0x7ffad1f6fb64,453183814,0,0x0,8
tick,0x7ffad1f6fb64,453199786,0,0x0,8
tick,0x7ffad1f6fb64,453215861,0,0x0,8
tick,0x7ffad1f6fb64,453231822,0,0x0,8
tick,0x7ffad1f6fb64,453246838,0,0x0,8
tick,0x7ffad1f6fb64,453262859,0,0x0,8
tick,0x7ffad1f6fb64,453277877,0,0x0,8
tick,0x7ffad1f6fb64,453292932,0,0x0,8
tick,0x7ffad1f6fb64,453307901,0,0x0,8
tick,0x7ffad1f6fb64,453323930,0,0x0,8
tick,0x7ffad1f6fb64,453339931,0,0x0,8
tick,0x7ffad1f6fb64,453354943,0,0x0,8
tick,0x7ffad1f6fb64,453370962,0,0x0,8
tick,0x7ffad1f6fb64,453386991,0,0x0,8
tick,0x7ffad1f6fb64,453403046,0,0x0,8
tick,0x7ffad1f6fb64,453419018,0,0x0,8
tick,0x7ffad1f6fb64,453434092,0,0x0,8
tick,0x7ffad1f6fb64,453450030,0,0x0,8
tick,0x7ffad1f6fb64,453466051,0,0x0,8
tick,0x7ffad1f6fb64,453481051,0,0x0,8
tick,0x7ffad1f6fb64,453496069,0,0x0,8
tick,0x7ffad1f6fb64,453512096,0,0x0,8
tick,0x7ffad1f6fb64,453528091,0,0x0,8
tick,0x7ffad1f6fb64,453544122,0,0x0,8
tick,0x7ffad1f6fb64,453560148,0,0x0,8
tick,0x7ffad1f6fb64,453576164,0,0x0,8
tick,0x7ffad1f6fb64,453591154,0,0x0,8
tick,0x7ffad1f6fb64,453606157,0,0x0,8
tick,0x7ffad1f6fb64,453621186,0,0x0,8
tick,0x7ffad1f6fb64,453636199,0,0x0,8
tick,0x7ffad1f6fb64,453651222,0,0x0,8
tick,0x7ffad1f6fb64,453666251,0,0x0,8
tick,0x7ffad1f6fb64,453681268,0,0x0,8
tick,0x7ffad1f6fb64,453696253,0,0x0,8
tick,0x7ffad1f6fb64,453711265,0,0x0,8
tick,0x7ffad1f6fb64,453726278,0,0x0,8
tick,0x7ffad1f6fb64,453741280,0,0x0,8
tick,0x7ffad1f6fb64,453756297,0,0x0,8
tick,0x7ffad1f6fb64,453772353,0,0x0,8
tick,0x7ffad1f6fb64,453788337,0,0x0,8
tick,0x7ffad1f6fb64,453803337,0,0x0,8
tick,0x7ffad1f6fb64,453819411,0,0x0,8
tick,0x7ffad1f6fb64,453834382,0,0x0,8
tick,0x7ffad1f6fb64,453849376,0,0x0,8
tick,0x7ffad1f6fb64,453865470,0,0x0,8
tick,0x7ffad1f6fb64,453880425,0,0x0,8
tick,0x7ffad1f6fb64,453895447,0,0x0,8
tick,0x7ffad1f6fb64,453910438,0,0x0,8
tick,0x7ffad1f6fb64,453925466,0,0x0,8
tick,0x7ffad1f6fb64,453940478,0,0x0,8
tick,0x7ffad1f6fb64,453955587,0,0x0,8
tick,0x7ffad1f6fb64,453970484,0,0x0,8
tick,0x7ffad1f6fb64,453986519,0,0x0,8
tick,0x7ffad1f6fb64,454002512,0,0x0,8
tick,0x7ffad1f6fb64,454017576,0,0x0,8
tick,0x7ffad1f6fb64,454033555,0,0x0,8
tick,0x7ffad1f6fb64,454049565,0,0x0,8
tick,0x7ffad1f6fb64,454065613,0,0x0,8
tick,0x7ffad1f6fb64,454080650,0,0x0,8
tick,0x7ffad1f6fb64,454095608,0,0x0,8
tick,0x7ffad1f6fb64,454111615,0,0x0,8
tick,0x7ffad1f6fb64,454126660,0,0x0,8
tick,0x7ffad1f6fb64,454142701,0,0x0,8
tick,0x7ffad1f6fb64,454157667,0,0x0,8
tick,0x7ffad1f6fb64,454173676,0,0x0,8
tick,0x7ffad1f6fb64,454189712,0,0x0,8
tick,0x7ffad1f6fb64,454205739,0,0x0,8
tick,0x7ffad1f6fb64,454221733,0,0x0,8
tick,0x7ffad1f6fb64,454237742,0,0x0,8
tick,0x7ffad1f6fb64,454253762,0,0x0,8
tick,0x7ffad1f6fb64,454268844,0,0x0,8
tick,0x7ffad1f6fb64,454284796,0,0x0,8
tick,0x7ffad1f6fb64,454299805,0,0x0,8
tick,0x7ffad1f6fb64,454315819,0,0x0,8
tick,0x7ffad1f6fb64,454331892,0,0x0,8
tick,0x7ffad1f6fb64,454346844,0,0x0,8
tick,0x7ffad1f6fb64,454362851,0,0x0,8
tick,0x7ffad1f6fb64,454378865,0,0x0,8
tick,0x7ffad1f6fb64,454393894,0,0x0,8
tick,0x7ffad1f6fb64,454409915,0,0x0,8
tick,0x7ffad1f6fb64,454425923,0,0x0,8
tick,0x7ffad1f6fb64,454440947,0,0x0,8
tick,0x7ffad1f6fb64,454456947,0,0x0,8
tick,0x7ffad1f6fb64,454472969,0,0x0,8
tick,0x7ffad1f6fb64,454487982,0,0x0,8
tick,0x7ffad1f6fb64,454502995,0,0x0,8
tick,0x7ffad1f6fb64,454519030,0,0x0,8
tick,0x7ffad1f6fb64,454535009,0,0x0,8
tick,0x7ffad1f6fb64,454550014,0,0x0,8
tick,0x7ffad1f6fb64,454566080,0,0x0,8
tick,0x7ffad1f6fb64,454581076,0,0x0,8
tick,0x7ffad1f6fb64,454596090,0,0x0,8
tick,0x7ffad1f6fb64,454612090,0,0x0,8
tick,0x7ffad1f6fb64,454627107,0,0x0,8
tick,0x7ffad1f6fb64,454643106,0,0x0,8
tick,0x7ffad1f6fb64,454658117,0,0x0,8
tick,0x7ffad1f6fb64,454674138,0,0x0,8
tick,0x7ffad1f6fb64,454690163,0,0x0,8
tick,0x7ffad1f6fb64,454705167,0,0x0,8
tick,0x7ffad1f6fb64,454720193,0,0x0,8
tick,0x7ffad1f6fb64,454735183,0,0x0,8
tick,0x7ffad1f6fb64,454750210,0,0x0,8
tick,0x7ffad1f6fb64,454766262,0,0x0,8
tick,0x7ffad1f6fb64,454781239,0,0x0,8
tick,0x7ffad1f6fb64,454797260,0,0x0,8
tick,0x7ffad1f6fb64,454813268,0,0x0,8
tick,0x7ffad1f6fb64,454828292,0,0x0,8
tick,0x7ffad1f6fb64,454844350,0,0x0,8
tick,0x7ffad1f6fb64,454860317,0,0x0,8
tick,0x7ffad1f6fb64,454875339,0,0x0,8
tick,0x7ffad1f6fb64,454890651,0,0x0,8
tick,0x7ffad1f6fb64,454906343,0,0x0,8
tick,0x7ffad1f6fb64,454922393,0,0x0,8
tick,0x7ffad1f6fb64,454937399,0,0x0,8
tick,0x7ffad1f6fb64,454953414,0,0x0,8
tick,0x7ffad1f6fb64,454969432,0,0x0,8
tick,0x7ffad1f6fb64,454984483,0,0x0,8
tick,0x7ffad1f6fb64,454999459,0,0x0,8
tick,0x7ffad1f6fb64,455015491,0,0x0,8
tick,0x7ffad1f6fb64,455031476,0,0x0,8
tick,0x7ffad1f6fb64,455047491,0,0x0,8
tick,0x7ffad1f6fb64,455062518,0,0x0,8
tick,0x7ffad1f6fb64,455077539,0,0x0,8
tick,0x7ffad1f6fb64,455093530,0,0x0,8
tick,0x7ffad1f6fb64,455109515,0,0x0,8
tick,0x7ffad1f6fb64,455125539,0,0x0,8
tick,0x7ffad1f6fb64,455140566,0,0x0,8
tick,0x7ffad1f6fb64,455156569,0,0x0,8
tick,0x7ffad1f6fb64,455172612,0,0x0,8
tick,0x7ffad1f6fb64,455188664,0,0x0,8
tick,0x7ffad1f6fb64,455203622,0,0x0,8
tick,0x7ffad1f6fb64,455219626,0,0x0,8
tick,0x7ffad1f6fb64,455235679,0,0x0,8
tick,0x7ffad1f6fb64,455250749,0,0x0,8
tick,0x7ffad1f6fb64,455266693,0,0x0,8
tick,0x7ffad1f6fb64,455281734,0,0x0,8
tick,0x7ffad1f6fb64,455297700,0,0x0,8
tick,0x7ffad1f6fb64,455313733,0,0x0,8
tick,0x7ffad1f6fb64,455328729,0,0x0,8
tick,0x7ffad1f6fb64,455344745,0,0x0,8
tick,0x7ffad1f6fb64,455359787,0,0x0,8
tick,0x7ffad1f6fb64,455375836,0,0x0,8
tick,0x7ffad1f6fb64,455391815,0,0x0,8
tick,0x7ffad1f6fb64,455407814,0,0x0,8
tick,0x7ffad1f6fb64,455423851,0,0x0,8
tick,0x7ffad1f6fb64,455438881,0,0x0,8
tick,0x7ffad1f6fb64,455453865,0,0x0,8
tick,0x7ffad1f6fb64,455468883,0,0x0,8
tick,0x7ffad1f6fb64,455483891,0,0x0,8
tick,0x7ffad1f6fb64,455498934,0,0x0,8
tick,0x7ffad1f6fb64,455513905,0,0x0,8
tick,0x7ffad1f6fb64,455529934,0,0x0,8
tick,0x7ffad1f6fb64,455545937,0,0x0,8
tick,0x7ffad1f6fb64,455561958,0,0x0,8
tick,0x7ffad1f6fb64,455576972,0,0x0,8
tick,0x7ffad1f6fb64,455591985,0,0x0,8
tick,0x7ffad1f6fb64,455606995,0,0x0,8
tick,0x7ffad1f6fb64,455621999,0,0x0,8
tick,0x7ffad1f6fb64,455638103,0,0x0,8
tick,0x7ffad1f6fb64,455654036,0,0x0,8
tick,0x7ffad1f6fb64,455669051,0,0x0,8
tick,0x7ffad1f6fb64,455684085,0,0x0,8
tick,0x7ffad1f6fb64,455699091,0,0x0,8
tick,0x7ffad1f6fb64,455715085,0,0x0,8
tick,0x7ffad1f6fb64,455731104,0,0x0,8
tick,0x7ffad1f6fb64,455747167,0,0x0,8
tick,0x7ffad1f6fb64,455762166,0,0x0,8
tick,0x7ffad1f6fb64,455778182,0,0x0,8
tick,0x7ffad1f6fb64,455794160,0,0x0,8
tick,0x7ffad1f6fb64,455809183,0,0x0,8
tick,0x7ffad1f6fb64,455824258,0,0x0,8
tick,0x7ffad1f6fb64,455840243,0,0x0,8
tick,0x7ffad1f6fb64,455856269,0,0x0,8
tick,0x7ffad1f6fb64,455872347,0,0x0,8
tick,0x7ffad1f6fb64,455887252,0,0x0,8
tick,0x7ffad1f6fb64,455903263,0,0x0,8
tick,0x7ffad1f6fb64,455919315,0,0x0,8
tick,0x7ffad1f6fb64,455935311,0,0x0,8
tick,0x7ffad1f6fb64,455950319,0,0x0,8
tick,0x7ffad1f6fb64,455966339,0,0x0,8
tick,0x7ffad1f6fb64,455981374,0,0x0,8
tick,0x7ffad1f6fb64,455997419,0,0x0,8
tick,0x7ffad1f6fb64,456013415,0,0x0,8
tick,0x7ffad1f6fb64,456028399,0,0x0,8
tick,0x7ffad1f6fb64,456043445,0,0x0,8
tick,0x7ffad1f6fb64,456058420,0,0x0,8
tick,0x7ffad1f6fb64,456073483,0,0x0,8
tick,0x7ffad1f6fb64,456088453,0,0x0,8
tick,0x7ffad1f6fb64,456104671,0,0x0,8
tick,0x7ffad1f6fb64,456120477,0,0x0,8
tick,0x7ffad1f6fb64,456135530,0,0x0,8
tick,0x7ffad1f6fb64,456150509,0,0x0,8
tick,0x7ffad1f6fb64,456166503,0,0x0,8
tick,0x7ffad1f6fb64,456181565,0,0x0,8
tick,0x7ffad1f6fb64,456197860,0,0x0,8
tick,0x7ffad1f6fb64,456213537,0,0x0,8
tick,0x7ffad1f6fb64,456228574,0,0x0,8
tick,0x7ffad1f6fb64,456244574,0,0x0,8
tick,0x7ffad1f6fb64,456259626,0,0x0,8
tick,0x7ffad1f6fb64,456275652,0,0x0,8
tick,0x7ffad1f6fb64,456290653,0,0x0,8
tick,0x7ffad1f6fb64,456305689,0,0x0,8
tick,0x7ffad1f6fb64,456321657,0,0x0,8
tick,0x7ffad1f6fb64,456337654,0,0x0,8
tick,0x7ffad1f6fb64,456353671,0,0x0,8
tick,0x7ffad1f6fb64,456368710,0,0x0,8
tick,0x7ffad1f6fb64,456384714,0,0x0,8
tick,0x7ffad1f6fb64,456399741,0,0x0,8
tick,0x7ffad1f6fb64,456415759,0,0x0,8
tick,0x7ffad1f6fb64,456430766,0,0x0,8
tick,0x7ffad1f6fb64,456445750,0,0x0,8
tick,0x7ffad1f6fb64,456460792,0,0x0,8
tick,0x7ffad1f6fb64,456475858,0,0x0,8
tick,0x7ffad1f6fb64,456490826,0,0x0,8
tick,0x7ffad1f6fb64,456507075,0,0x0,8
tick,0x7ffad1f6fb64,456522827,0,0x0,8
tick,0x7ffad1f6fb64,456537858,0,0x0,8
tick,0x7ffad1f6fb64,456553855,0,0x0,8
tick,0x7ffad1f6fb64,456569887,0,0x0,8
tick,0x7ffad1f6fb64,456585920,0,0x0,8
tick,0x7ffad1f6fb64,456601905,0,0x0,8
tick,0x7ffad1f6fb64,456617922,0,0x0,8
tick,0x7ffad1f6fb64,456632945,0,0x0,8
tick,0x7ffad1f6fb64,456647922,0,0x0,8
tick,0x7ffad1f6fb64,456663952,0,0x0,8
tick,0x7ffad1f6fb64,456679999,0,0x0,8
tick,0x7ffad1f6fb64,456695999,0,0x0,8
tick,0x7ffad1f6fb64,456710993,0,0x0,8
tick,0x7ffad1f6fb64,456727021,0,0x0,8
tick,0x7ffad1f6fb64,456742038,0,0x0,8
tick,0x7ffad1f6fb64,456758068,0,0x0,8
tick,0x7ffad1f6fb64,456773087,0,0x0,8
tick,0x7ffad1f6fb64,456789079,0,0x0,8
tick,0x7ffad1f6fb64,456804097,0,0x0,8
tick,0x7ffad1f6fb64,456820099,0,0x0,8
tick,0x7ffad1f6fb64,456836154,0,0x0,8
tick,0x7ffad1f6fb64,456852132,0,0x0,8
tick,0x7ffad1f6fb64,456867134,0,0x0,8
tick,0x7ffad1f6fb64,456882178,0,0x0,8
tick,0x7ffad1f6fb64,456897185,0,0x0,8
tick,0x7ffad1f6fb64,456913200,0,0x0,8
tick,0x7ffad1f6fb64,456928221,0,0x0,8
tick,0x7ffad1f6fb64,456944230,0,0x0,8
tick,0x7ffad1f6fb64,456960229,0,0x0,8
tick,0x7ffad1f6fb64,456975239,0,0x0,8
tick,0x7ffad1f6fb64,456990265,0,0x0,8
tick,0x7ffad1f6fb64,457005269,0,0x0,8
tick,0x7ffad1f6fb64,457020317,0,0x0,8
tick,0x7ffad1f6fb64,457035327,0,0x0,8
tick,0x7ffad1f6fb64,457050329,0,0x0,8
tick,0x7ffad1f6fb64,457065307,0,0x0,8
tick,0x7ffad1f6fb64,457080350,0,0x0,8
tick,0x7ffad1f6fb64,457095378,0,0x0,8
tick,0x7ffad1f6fb64,457110509,0,0x0,8
tick,0x7ffad1f6fb64,457125398,0,0x0,8
tick,0x7ffad1f6fb64,457140372,0,0x0,8
tick,0x7ffad1f6fb64,457156410,0,0x0,8
tick,0x7ffad1f6fb64,457172423,0,0x0,8
tick,0x7ffad1f6fb64,457187437,0,0x0,8
tick,0x7ffad1f6fb64,457203446,0,0x0,8
tick,0x7ffad1f6fb64,457218454,0,0x0,8
tick,0x7ffad1f6fb64,457234475,0,0x0,8
tick,0x7ffad1f6fb64,457249489,0,0x0,8
tick,0x7ffad1f6fb64,457265524,0,0x0,8
tick,0x7ffad1f6fb64,457281536,0,0x0,8
tick,0x7ffad1f6fb64,457296556,0,0x0,8
tick,0x7ffad1f6fb64,457311595,0,0x0,8
tick,0x7ffad1f6fb64,457326559,0,0x0,8
tick,0x7ffad1f6fb64,457342575,0,0x0,8
tick,0x7ffad1f6fb64,457358665,0,0x0,8
tick,0x7ffad1f6fb64,457374652,0,0x0,8
tick,0x7ffad1f6fb64,457389626,0,0x0,8
tick,0x7ffad1f6fb64,457405615,0,0x0,8
tick,0x7ffad1f6fb64,457421782,0,0x0,8
tick,0x7ffad1f6fb64,457436694,0,0x0,8
tick,0x7ffad1f6fb64,457452677,0,0x0,8
tick,0x7ffad1f6fb64,457468683,0,0x0,8
tick,0x7ffad1f6fb64,457483750,0,0x0,8
tick,0x7ffad1f6fb64,457499730,0,0x0,8
tick,0x7ffad1f6fb64,457514733,0,0x0,8
tick,0x7ffad1f6fb64,457530809,0,0x0,8
tick,0x7ffad1f6fb64,457546771,0,0x0,8
tick,0x7ffad1f6fb64,457561781,0,0x0,8
tick,0x7ffad1f6fb64,457577773,0,0x0,8
tick,0x7ffad1f6fb64,457593810,0,0x0,8
tick,0x7ffad1f6fb64,457609876,0,0x0,8
tick,0x7ffad1f6fb64,457624987,0,0x0,8
tick,0x7ffad1f6fb64,457639847,0,0x0,8
tick,0x7ffad1f6fb64,457655865,0,0x0,8
tick,0x7ffad1f6fb64,457670893,0,0x0,8
tick,0x7ffad1f6fb64,457685891,0,0x0,8
tick,0x7ffad1f6fb64,457701888,0,0x0,8
tick,0x7ffad1f6fb64,457717895,0,0x0,8
tick,0x7ffad1f6fb64,457732932,0,0x0,8
tick,0x7ffad1f6fb64,457748958,0,0x0,8
tick,0x7ffad1f6fb64,457764943,0,0x0,8
tick,0x7ffad1f6fb64,457780007,0,0x0,8
tick,0x7ffad1f6fb64,457796010,0,0x0,8
tick,0x7ffad1f6fb64,457811017,0,0x0,8
tick,0x7ffad1f6fb64,457826077,0,0x0,8
tick,0x7ffad1f6fb64,457842014,0,0x0,8
tick,0x7ffad1f6fb64,457858054,0,0x0,8
tick,0x7ffad1f6fb64,457873068,0,0x0,8
tick,0x7ffad1f6fb64,457889081,0,0x0,8
tick,0x7ffad1f6fb64,457904100,0,0x0,8
tick,0x7ffad1f6fb64,457920106,0,0x0,8
tick,0x7ffad1f6fb64,457935122,0,0x0,8
tick,0x7ffad1f6fb64,457950119,0,0x0,8
tick,0x7ffad1f6fb64,457966126,0,0x0,8
tick,0x7ffad1f6fb64,457981163,0,0x0,8
tick,0x7ffad1f6fb64,457997184,0,0x0,8
tick,0x7ffad1f6fb64,458013179,0,0x0,8
tick,0x7ffad1f6fb64,458029203,0,0x0,8
tick,0x7ffad1f6fb64,458044220,0,0x0,8
tick,0x7ffad1f6fb64,458059232,0,0x0,8
tick,0x7ffad1f6fb64,458075225,0,0x0,8
tick,0x7ffad1f6fb64,458090286,0,0x0,8
tick,0x7ffad1f6fb64,458106304,0,0x0,8
tick,0x7ffad1f6fb64,458121281,0,0x0,8
tick,0x7ffad1f6fb64,458136375,0,0x0,8
tick,0x7ffad1f6fb64,458152338,0,0x0,8
tick,0x7ffad1f6fb64,458168326,0,0x0,8
tick,0x7ffad1f6fb64,458183344,0,0x0,8
tick,0x7ffad1f6fb64,458199364,0,0x0,8
tick,0x7ffad1f6fb64,458215383,0,0x0,8
tick,0x7ffad1f6fb64,458230390,0,0x0,8
tick,0x7ffad1f6fb64,458246493,0,0x0,8
tick,0x7ffad1f6fb64,458261393,0,0x0,8
tick,0x7ffad1f6fb64,458277450,0,0x0,8
tick,0x7ffad1f6fb64,458293450,0,0x0,8
tick,0x7ffad1f6fb64,458309459,0,0x0,8
tick,0x7ffad1f6fb64,458324468,0,0x0,8
tick,0x7ffad1f6fb64,458339475,0,0x0,8
tick,0x7ffad1f6fb64,458354547,0,0x0,8
tick,0x7ffad1f6fb64,458369549,0,0x0,8
tick,0x7ffad1f6fb64,458385534,0,0x0,8
tick,0x7ffad1f6fb64,458401567,0,0x0,8
tick,0x7ffad1f6fb64,458416550,0,0x0,8
tick,0x7ffad1f6fb64,458431618,0,0x0,8
tick,0x7ffad1f6fb64,458447582,0,0x0,8
tick,0x7ffad1f6fb64,458463596,0,0x0,8
tick,0x7ffad1f6fb64,458479612,0,0x0,8
tick,0x7ffad1f6fb64,458495670,0,0x0,8
tick,0x7ffad1f6fb64,458510666,0,0x0,8
tick,0x7ffad1f6fb64,458525647,0,0x0,8
tick,0x7ffad1f6fb64,458540681,0,0x0,8
tick,0x7ffad1f6fb64,458555687,0,0x0,8
tick,0x7ffad1f6fb64,458570689,0,0x0,8
tick,0x7ffad1f6fb64,458585713,0,0x0,8
tick,0x7ffad1f6fb64,458600764,0,0x0,8
tick,0x7ffad1f6fb64,458615732,0,0x0,8
tick,0x7ffad1f6fb64,458630759,0,0x0,8
tick,0x7ffad1f6fb64,458646768,0,0x0,8
tick,0x7ffad1f6fb64,458662767,0,0x0,8
tick,0x7ffad1f6fb64,458677811,0,0x0,8
tick,0x7ffad1f6fb64,458693823,0,0x0,8
tick,0x7ffad1f6fb64,458709829,0,0x0,8
tick,0x7ffad1f6fb64,458724835,0,0x0,8
tick,0x7ffad1f6fb64,458739846,0,0x0,8
tick,0x7ffad1f6fb64,458754850,0,0x0,8
tick,0x7ffad1f6fb64,458769853,0,0x0,8
tick,0x7ffad1f6fb64,458784884,0,0x0,8
tick,0x7ffad1f6fb64,458800890,0,0x0,8
tick,0x7ffad1f6fb64,458815933,0,0x0,8
tick,0x7ffad1f6fb64,458831953,0,0x0,8
tick,0x7ffad1f6fb64,458847921,0,0x0,8
tick,0x7ffad1f6fb64,458863967,0,0x0,8
tick,0x7ffad1f6fb64,458879987,0,0x0,8
tick,0x7ffad1f6fb64,458895013,0,0x0,8
tick,0x7ffad1f6fb64,458910996,0,0x0,8
tick,0x7ffad1f6fb64,458927026,0,0x0,8
tick,0x7ffad1f6fb64,458943037,0,0x0,8
tick,0x7ffad1f6fb64,458958044,0,0x0,8
tick,0x7ffad1f6fb64,458973085,0,0x0,8
tick,0x7ffad1f6fb64,458989070,0,0x0,8
tick,0x7ffad1f6fb64,459005088,0,0x0,8
tick,0x7ffad1f6fb64,459020108,0,0x0,8
tick,0x7ffad1f6fb64,459035136,0,0x0,8
tick,0x7ffad1f6fb64,459050100,0,0x0,8
tick,0x7ffad1f6fb64,459065467,0,0x0,8
tick,0x7ffad1f6fb64,459080203,0,0x0,8
tick,0x7ffad1f6fb64,459095191,0,0x0,8
tick,0x7ffad1f6fb64,459111181,0,0x0,8
tick,0x7ffad1f6fb64,459127216,0,0x0,8
tick,0x7ffad1f6fb64,459143190,0,0x0,8
tick,0x7ffad1f6fb64,459158236,0,0x0,8
tick,0x7ffad1f6fb64,459173245,0,0x0,8
tick,0x7ffad1f6fb64,459189267,0,0x0,8
tick,0x7ffad1f6fb64,459205259,0,0x0,8
tick,0x7ffad1f6fb64,459220283,0,0x0,8
tick,0x7ffad1f6fb64,459236327,0,0x0,8
tick,0x7ffad1f6fb64,459252317,0,0x0,8
tick,0x7ffad1f6fb64,459267326,0,0x0,8
tick,0x7ffad1f6fb64,459282347,0,0x0,8
tick,0x7ffad1f6fb64,459298382,0,0x0,8
tick,0x7ffad1f6fb64,459313369,0,0x0,8
tick,0x7ffad1f6fb64,459328431,0,0x0,8
tick,0x7ffad1f6fb64,459343411,0,0x0,8
tick,0x7ffad1f6fb64,459359431,0,0x0,8
tick,0x7ffad1f6fb64,459374427,0,0x0,8
tick,0x7ffad1f6fb64,459390441,0,0x0,8
tick,0x7ffad1f6fb64,459405445,0,0x0,8
tick,0x7ffad1f6fb64,459421469,0,0x0,8
tick,0x7ffad1f6fb64,459437509,0,0x0,8
tick,0x7ffad1f6fb64,459452545,0,0x0,8
tick,0x7ffad1f6fb64,459468541,0,0x0,8
tick,0x7ffad1f6fb64,459484535,0,0x0,8
tick,0x7ffad1f6fb64,459499562,0,0x0,8
tick,0x7ffad1f6fb64,459515605,0,0x0,8
tick,0x7ffad1f6fb64,459531585,0,0x0,8
tick,0x7ffad1f6fb64,459547594,0,0x0,8
tick,0x7ffad1f6fb64,459563609,0,0x0,8
tick,0x7ffad1f6fb64,459578647,0,0x0,8
tick,0x7ffad1f6fb64,459594608,0,0x0,8
tick,0x7ffad1f6fb64,459610620,0,0x0,8
tick,0x7ffad1f6fb64,459625716,0,0x0,8
tick,0x7ffad1f6fb64,459640710,0,0x0,8
tick,0x7ffad1f6fb64,459656726,0,0x0,8
tick,0x7ffad1f6fb64,459672691,0,0x0,8
tick,0x7ffad1f6fb64,459687705,0,0x0,8
tick,0x7ffad1f6fb64,459702838,0,0x0,8
tick,0x7ffad1f6fb64,459718717,0,0x0,8
tick,0x7ffad1f6fb64,459733786,0,0x0,8
tick,0x7ffad1f6fb64,459749749,0,0x0,8
tick,0x7ffad1f6fb64,459765783,0,0x0,8
tick,0x7ffad1f6fb64,459781802,0,0x0,8
tick,0x7ffad1f6fb64,459796801,0,0x0,8
tick,0x7ffad1f6fb64,459811794,0,0x0,8
tick,0x7ffad1f6fb64,459827848,0,0x0,8
tick,0x7ffad1f6fb64,459842866,0,0x0,8
tick,0x7ffad1f6fb64,459858875,0,0x0,8
tick,0x7ffad1f6fb64,459873890,0,0x0,8
tick,0x7ffad1f6fb64,459889884,0,0x0,8
tick,0x7ffad1f6fb64,459904910,0,0x0,8
tick,0x7ffad1f6fb64,459919932,0,0x0,8
tick,0x7ffad1f6fb64,459935953,0,0x0,8
tick,0x7ffad1f6fb64,459950970,0,0x0,8
tick,0x7ffad1f6fb64,459966965,0,0x0,8
tick,0x7ffad1f6fb64,459981985,0,0x0,8
tick,0x7ffad1f6fb64,459997004,0,0x0,8
tick,0x7ffad1f6fb64,460013006,0,0x0,8
tick,0x7ffad1f6fb64,460029013,0,0x0,8
tick,0x7ffad1f6fb64,460044045,0,0x0,8
tick,0x7ffad1f6fb64,460060052,0,0x0,8
tick,0x7ffad1f6fb64,460076067,0,0x0,8
tick,0x7ffad1f6fb64,460091098,0,0x0,8
tick,0x7ffad1f6fb64,460106103,0,0x0,8
tick,0x7ffad1f6fb64,460121104,0,0x0,8
tick,0x7ffad1f6fb64,460136123,0,0x0,8
tick,0x7ffad1f6fb64,460152139,0,0x0,8
tick,0x7ffad1f6fb64,460168155,0,0x0,8
tick,0x7ffad1f6fb64,460183149,0,0x0,8
tick,0x7ffad1f6fb64,460198173,0,0x0,8
tick,0x7ffad1f6fb64,460214192,0,0x0,8
tick,0x7ffad1f6fb64,460229199,0,0x0,8
tick,0x7ffad1f6fb64,460245221,0,0x0,8
tick,0x7ffad1f6fb64,460260230,0,0x0,8
tick,0x7ffad1f6fb64,460276266,0,0x0,8
tick,0x7ffad1f6fb64,460292253,0,0x0,8
tick,0x7ffad1f6fb64,460308260,0,0x0,8
tick,0x7ffad1f6fb64,460323275,0,0x0,8
tick,0x7ffad1f6fb64,460339289,0,0x0,8
tick,0x7ffad1f6fb64,460354336,0,0x0,8
tick,0x7ffad1f6fb64,460370373,0,0x0,8
tick,0x7ffad1f6fb64,460386392,0,0x0,8
tick,0x7ffad1f6fb64,460402353,0,0x0,8
tick,0x7ffad1f6fb64,460417381,0,0x0,8
tick,0x7ffad1f6fb64,460432395,0,0x0,8
tick,0x7ffad1f6fb64,460447444,0,0x0,8
tick,0x7ffad1f6fb64,460462437,0,0x0,8
tick,0x7ffad1f6fb64,460477434,0,0x0,8
tick,0x7ffad1f6fb64,460493437,0,0x0,8
tick,0x7ffad1f6fb64,460509479,0,0x0,8
tick,0x7ffad1f6fb64,460525477,0,0x0,8
tick,0x7ffad1f6fb64,460540486,0,0x0,8
tick,0x7ffad1f6fb64,460555630,0,0x0,8
tick,0x7ffad1f6fb64,460570512,0,0x0,8
tick,0x7ffad1f6fb64,460585544,0,0x0,8
tick,0x7ffad1f6fb64,460600549,0,0x0,8
tick,0x7ffad1f6fb64,460616552,0,0x0,8
tick,0x7ffad1f6fb64,460631580,0,0x0,8
tick,0x7ffad1f6fb64,460646592,0,0x0,8
tick,0x7ffad1f6fb64,460661607,0,0x0,8
tick,0x7ffad1f6fb64,460677722,0,0x0,8
tick,0x7ffad1f6fb64,460692660,0,0x0,8
tick,0x7ffad1f6fb64,460708650,0,0x0,8
tick,0x7ffad1f6fb64,460724650,0,0x0,8
tick,0x7ffad1f6fb64,460739665,0,0x0,8
tick,0x7ffad1f6fb64,460755672,0,0x0,8
tick,0x7ffad1f6fb64,460770728,0,0x0,8
tick,0x7ffad1f6fb64,460786733,0,0x0,8
tick,0x7ffad1f6fb64,460802736,0,0x0,8
tick,0x7ffad1f6fb64,460818756,0,0x0,8
tick,0x7ffad1f6fb64,460834751,0,0x0,8
tick,0x7ffad1f6fb64,460850805,0,0x0,8
tick,0x7ffad1f6fb64,460866804,0,0x0,8
tick,0x7ffad1f6fb64,460881788,0,0x0,8
tick,0x7ffad1f6fb64,460897872,0,0x0,8
tick,0x7ffad1f6fb64,460913828,0,0x0,8
tick,0x7ffad1f6fb64,460929868,0,0x0,8
tick,0x7ffad1f6fb64,460944859,0,0x0,8
tick,0x7ffad1f6fb64,460961060,0,0x0,8
tick,0x7ffad1f6fb64,460976895,0,0x0,8
tick,0x7ffad1f6fb64,460992893,0,0x0,8
tick,0x7ffad1f6fb64,461008906,0,0x0,8
tick,0x7ffad1f6fb64,461023911,0,0x0,8
tick,0x7ffad1f6fb64,461039968,0,0x0,8
tick,0x7ffad1f6fb64,461055939,0,0x0,8
tick,0x7ffad1f6fb64,461071004,0,0x0,8
tick,0x7ffad1f6fb64,461086003,0,0x0,8
tick,0x7ffad1f6fb64,461101995,0,0x0,8
tick,0x7ffad1f6fb64,461118010,0,0x0,8
tick,0x7ffad1f6fb64,461133023,0,0x0,8
tick,0x7ffad1f6fb64,461148053,0,0x0,8
tick,0x7ffad1f6fb64,461164067,0,0x0,8
tick,0x7ffad1f6fb64,461180065,0,0x0,8
tick,0x7ffad1f6fb64,461195072,0,0x0,8
tick,0x7ffad1f6fb64,461211146,0,0x0,8
tick,0x7ffad1f6fb64,461227125,0,0x0,8
tick,0x7ffad1f6fb64,461243180,0,0x0,8
tick,0x7ffad1f6fb64,461258143,0,0x0,8
tick,0x7ffad1f6fb64,461273166,0,0x0,8
tick,0x7ffad1f6fb64,461289177,0,0x0,8
tick,0x7ffad1f6fb64,461305203,0,0x0,8
tick,0x7ffad1f6fb64,461320221,0,0x0,8
tick,0x7ffad1f6fb64,461336208,0,0x0,8
tick,0x7ffad1f6fb64,461352226,0,0x0,8
tick,0x7ffad1f6fb64,461368270,0,0x0,8
tick,0x7ffad1f6fb64,461384243,0,0x0,8
tick,0x7ffad1f6fb64,461400294,0,0x0,8
tick,0x7ffad1f6fb64,461416279,0,0x0,8
tick,0x7ffad1f6fb64,461432300,0,0x0,8
tick,0x7ffad1f6fb64,461447309,0,0x0,8
tick,0x7ffad1f6fb64,461462315,0,0x0,8
tick,0x7ffad1f6fb64,461477359,0,0x0,8
tick,0x7ffad1f6fb64,461493372,0,0x0,8
tick,0x7ffad1f6fb64,461508369,0,0x0,8
tick,0x7ffad1f6fb64,461524381,0,0x0,8
tick,0x7ffad1f6fb64,461539409,0,0x0,8
tick,0x7ffad1f6fb64,461555401,0,0x0,8
tick,0x7ffad1f6fb64,461570425,0,0x0,8
tick,0x7ffad1f6fb64,461586444,0,0x0,8
tick,0x7ffad1f6fb64,461601461,0,0x0,8
tick,0x7ffad1f6fb64,461616461,0,0x0,8
tick,0x7ffad1f6fb64,461632497,0,0x0,8
tick,0x7ffad1f6fb64,461648485,0,0x0,8
tick,0x7ffad1f6fb64,461664505,0,0x0,8
tick,0x7ffad1f6fb64,461679706,0,0x0,8
tick,0x7ffad1f6fb64,461695545,0,0x0,8
tick,0x7ffad1f6fb64,461710557,0,0x0,8
tick,0x7ffad1f6fb64,461725595,0,0x0,8
tick,0x7ffad1f6fb64,461740571,0,0x0,8
tick,0x7ffad1f6fb64,461756591,0,0x0,8
tick,0x7ffad1f6fb64,461772593,0,0x0,8
tick,0x7ffad1f6fb64,461788623,0,0x0,8
tick,0x7ffad1f6fb64,461804638,0,0x0,8
tick,0x7ffad1f6fb64,461820640,0,0x0,8
tick,0x7ffad1f6fb64,461836701,0,0x0,8
tick,0x7ffad1f6fb64,461852753,0,0x0,8
tick,0x7ffad1f6fb64,461867710,0,0x0,8
tick,0x7ffad1f6fb64,461883732,0,0x0,8
tick,0x7ffad1f6fb64,461898739,0,0x0,8
tick,0x7ffad1f6fb64,461913755,0,0x0,8
tick,0x7ffad1f6fb64,461929774,0,0x0,8
tick,0x7ffad1f6fb64,461945774,0,0x0,8
tick,0x7ffad1f6fb64,461961810,0,0x0,8
tick,0x7ffad1f6fb64,461977817,0,0x0,8
tick,0x7ffad1f6fb64,461993800,0,0x0,8
tick,0x7ffad1f6fb64,462009821,0,0x0,8
tick,0x7ffad1f6fb64,462024845,0,0x0,8
tick,0x7ffad1f6fb64,462039954,0,0x0,8
tick,0x7ffad1f6fb64,462055853,0,0x0,8
tick,0x7ffad1f6fb64,462071893,0,0x0,8
tick,0x7ffad1f6fb64,462087894,0,0x0,8
tick,0x7ffad1f6fb64,462102890,0,0x0,8
tick,0x7ffad1f6fb64,462117925,0,0x0,8
tick,0x7ffad1f6fb64,462133208,0,0x0,8
tick,0x7ffad1f6fb64,462148962,0,0x0,8
tick,0x7ffad1f6fb64,462163989,0,0x0,8
tick,0x7ffad1f6fb64,462180002,0,0x0,8
tick,0x7ffad1f6fb64,462195011,0,0x0,8
tick,0x7ffad1f6fb64,462210016,0,0x0,8
tick,0x7ffad1f6fb64,462226035,0,0x0,8
tick,0x7ffad1f6fb64,462242065,0,0x0,8
tick,0x7ffad1f6fb64,462257042,0,0x0,8
tick,0x7ffad1f6fb64,462273094,0,0x0,8
tick,0x7ffad1f6fb64,462289080,0,0x0,8
tick,0x7ffad1f6fb64,462304105,0,0x0,8
tick,0x7ffad1f6fb64,462319093,0,0x0,8
tick,0x7ffad1f6fb64,462334135,0,0x0,8
tick,0x7ffad1f6fb64,462350158,0,0x0,8
tick,0x7ffad1f6fb64,462366172,0,0x0,8
tick,0x7ffad1f6fb64,462382176,0,0x0,8
tick,0x7ffad1f6fb64,462398209,0,0x0,8
tick,0x7ffad1f6fb64,462414246,0,0x0,8
tick,0x7ffad1f6fb64,462430259,0,0x0,8
tick,0x7ffad1f6fb64,462446217,0,0x0,8
tick,0x7ffad1f6fb64,462461257,0,0x0,8
tick,0x7ffad1f6fb64,462477251,0,0x0,8
tick,0x7ffad1f6fb64,462492296,0,0x0,8
tick,0x7ffad1f6fb64,462508293,0,0x0,8
tick,0x7ffad1f6fb64,462524319,0,0x0,8
tick,0x7ffad1f6fb64,462539301,0,0x0,8
tick,0x7ffad1f6fb64,462554321,0,0x0,8
tick,0x7ffad1f6fb64,462570353,0,0x0,8
tick,0x7ffad1f6fb64,462586373,0,0x0,8
tick,0x7ffad1f6fb64,462601371,0,0x0,8
tick,0x7ffad1f6fb64,462617375,0,0x0,8
tick,0x7ffad1f6fb64,462633420,0,0x0,8
tick,0x7ffad1f6fb64,462649406,0,0x0,8
tick,0x7ffad1f6fb64,462664426,0,0x0,8
tick,0x7ffad1f6fb64,462680449,0,0x0,8
tick,0x7ffad1f6fb64,462696496,0,0x0,8
tick,0x7ffad1f6fb64,462711462,0,0x0,8
tick,0x7ffad1f6fb64,462727499,0,0x0,8
tick,0x7ffad1f6fb64,462743514,0,0x0,8
tick,0x7ffad1f6fb64,462759496,0,0x0,8
tick,0x7ffad1f6fb64,462775521,0,0x0,8
tick,0x7ffad1f6fb64,462790540,0,0x0,8
tick,0x7ffad1f6fb64,462806547,0,0x0,8
tick,0x7ffad1f6fb64,462822574,0,0x0,8
tick,0x7ffad1f6fb64,462837596,0,0x0,8
tick,0x7ffad1f6fb64,462853595,0,0x0,8
tick,0x7ffad1f6fb64,462869615,0,0x0,8
tick,0x7ffad1f6fb64,462885643,0,0x0,8
tick,0x7ffad1f6fb64,462900663,0,0x0,8
tick,0x7ffad1f6fb64,462916643,0,0x0,8
tick,0x7ffad1f6fb64,462932676,0,0x0,8
tick,0x7ffad1f6fb64,462947675,0,0x0,8
tick,0x7ffad1f6fb64,462962685,0,0x0,8
tick,0x7ffad1f6fb64,462978713,0,0x0,8
tick,0x7ffad1f6fb64,462994732,0,0x0,8
tick,0x7ffad1f6fb64,463009740,0,0x0,8
tick,0x7ffad1f6fb64,463025799,0,0x0,8
tick,0x7ffad1f6fb64,463040773,0,0x0,8
tick,0x7ffad1f6fb64,463056776,0,0x0,8
tick,0x7ffad1f6fb64,463072787,0,0x0,8
tick,0x7ffad1f6fb64,463087810,0,0x0,8
tick,0x7ffad1f6fb64,463102808,0,0x0,8
tick,0x7ffad1f6fb64,463117839,0,0x0,8
tick,0x7ffad1f6fb64,463133879,0,0x0,8
tick,0x7ffad1f6fb64,463148874,0,0x0,8
tick,0x7ffad1f6fb64,463164901,0,0x0,8
tick,0x7ffad1f6fb64,463180887,0,0x0,8
tick,0x7ffad1f6fb64,463195900,0,0x0,8
tick,0x7ffad1f6fb64,463211913,0,0x0,8
tick,0x7ffad1f6fb64,463227930,0,0x0,8
tick,0x7ffad1f6fb64,463243970,0,0x0,8
tick,0x7ffad1f6fb64,463260005,0,0x0,8
tick,0x7ffad1f6fb64,463276041,0,0x0,8
tick,0x7ffad1f6fb64,463291995,0,0x0,8
tick,0x7ffad1f6fb64,463308037,0,0x0,8
tick,0x7ffad1f6fb64,463324047,0,0x0,8
tick,0x7ffad1f6fb64,463339064,0,0x0,8
tick,0x7ffad1f6fb64,463355054,0,0x0,8
tick,0x7ffad1f6fb64,463371123,0,0x0,8
tick,0x7ffad1f6fb64,463387094,0,0x0,8
tick,0x7ffad1f6fb64,463403118,0,0x0,8
tick,0x7ffad1f6fb64,463419157,0,0x0,8
tick,0x7ffad1f6fb64,463435166,0,0x0,8
tick,0x7ffad1f6fb64,463450151,0,0x0,8
tick,0x7ffad1f6fb64,463466149,0,0x0,8
tick,0x7ffad1f6fb64,463481186,0,0x0,8
tick,0x7ffad1f6fb64,463497223,0,0x0,8
tick,0x7ffad1f6fb64,463513233,0,0x0,8
tick,0x7ffad1f6fb64,463529216,0,0x0,8
tick,0x7ffad1f6fb64,463545205,0,0x0,8
tick,0x7ffad1f6fb64,463561258,0,0x0,8
tick,0x7ffad1f6fb64,463576246,0,0x0,8
tick,0x7ffad1f6fb64,463592289,0,0x0,8
tick,0x7ffad1f6fb64,463607268,0,0x0,8
tick,0x7ffad1f6fb64,463622309,0,0x0,8
tick,0x7ffad1f6fb64,463637321,0,0x0,8
tick,0x7ffad1f6fb64,463652299,0,0x0,8
tick,0x7ffad1f6fb64,463668312,0,0x0,8
tick,0x7ffad1f6fb64,463684344,0,0x0,8
tick,0x7ffad1f6fb64,463700369,0,0x0,8
tick,0x7ffad1f6fb64,463716405,0,0x0,8
tick,0x7ffad1f6fb64,463732412,0,0x0,8
tick,0x7ffad1f6fb64,463747401,0,0x0,8
tick,0x7ffad1f6fb64,463763437,0,0x0,8
tick,0x7ffad1f6fb64,463778434,0,0x0,8
tick,0x7ffad1f6fb64,463793460,0,0x0,8
tick,0x7ffad1f6fb64,463809485,0,0x0,8
tick,0x7ffad1f6fb64,463825483,0,0x0,8
tick,0x7ffad1f6fb64,463840514,0,0x0,8
tick,0x7ffad1f6fb64,463856514,0,0x0,8
tick,0x7ffad1f6fb64,463872560,0,0x0,8
tick,0x7ffad1f6fb64,463888545,0,0x0,8
tick,0x7ffad1f6fb64,463904596,0,0x0,8
tick,0x7ffad1f6fb64,463920623,0,0x0,8
tick,0x7ffad1f6fb64,463936591,0,0x0,8
tick,0x7ffad1f6fb64,463951601,0,0x0,8
tick,0x7ffad1f6fb64,463966677,0,0x0,8
tick,0x7ffad1f6fb64,463981637,0,0x0,8
tick,0x7ffad1f6fb64,463997663,0,0x0,8
tick,0x7ffad1f6fb64,464013624,0,0x0,8
tick,0x7ffad1f6fb64,464029716,0,0x0,8
tick,0x7ffad1f6fb64,464045710,0,0x0,8
tick,0x7ffad1f6fb64,464060706,0,0x0,8
tick,0x7ffad1f6fb64,464075715,0,0x0,8
tick,0x7ffad1f6fb64,464091733,0,0x0,8
tick,0x7ffad1f6fb64,464107752,0,0x0,8
tick,0x7ffad1f6fb64,464123747,0,0x0,8
tick,0x7ffad1f6fb64,464138771,0,0x0,8
tick,0x7ffad1f6fb64,464154792,0,0x0,8
tick,0x7ffad1f6fb64,464170802,0,0x0,8
tick,0x7ffad1f6fb64,464186794,0,0x0,8
tick,0x7ffad1f6fb64,464202827,0,0x0,8
tick,0x7ffad1f6fb64,464217840,0,0x0,8
tick,0x7ffad1f6fb64,464233844,0,0x0,8
tick,0x7ffad1f6fb64,464249864,0,0x0,8
tick,0x7ffad1f6fb64,464265906,0,0x0,8
tick,0x7ffad1f6fb64,464281894,0,0x0,8
tick,0x7ffad1f6fb64,464296917,0,0x0,8
tick,0x7ffad1f6fb64,464312960,0,0x0,8
tick,0x7ffad1f6fb64,464327945,0,0x0,8
tick,0x7ffad1f6fb64,464343963,0,0x0,8
tick,0x7ffad1f6fb64,464359993,0,0x0,8
tick,0x7ffad1f6fb64,464375013,0,0x0,8
tick,0x7ffad1f6fb64,464390980,0,0x0,8
tick,0x7ffad1f6fb64,464406023,0,0x0,8
tick,0x7ffad1f6fb64,464421023,0,0x0,8
tick,0x7ffad1f6fb64,464437077,0,0x0,8
tick,0x7ffad1f6fb64,464452023,0,0x0,8
tick,0x7ffad1f6fb64,464467069,0,0x0,8
tick,0x7ffad1f6fb64,464483078,0,0x0,8
tick,0x7ffad1f6fb64,464498082,0,0x0,8
tick,0x7ffad1f6fb64,464513086,0,0x0,8
tick,0x7ffad1f6fb64,464528120,0,0x0,8
tick,0x7ffad1f6fb64,464544128,0,0x0,8
tick,0x7ffad1f6fb64,464560165,0,0x0,8
tick,0x7ffad1f6fb64,464576155,0,0x0,8
tick,0x7ffad1f6fb64,464592209,0,0x0,8
tick,0x7ffad1f6fb64,464608182,0,0x0,8
tick,0x7ffad1f6fb64,464624189,0,0x0,8
tick,0x7ffad1f6fb64,464639223,0,0x0,8
tick,0x7ffad1f6fb64,464654244,0,0x0,8
tick,0x7ffad1f6fb64,464670236,0,0x0,8
tick,0x7ffad1f6fb64,464686258,0,0x0,8
tick,0x7ffad1f6fb64,464702281,0,0x0,8
tick,0x7ffad1f6fb64,464718292,0,0x0,8
tick,0x7ffad1f6fb64,464734318,0,0x0,8
tick,0x7ffad1f6fb64,464750309,0,0x0,8
tick,0x7ffad1f6fb64,464766359,0,0x0,8
tick,0x7ffad1f6fb64,464781380,0,0x0,8
tick,0x7ffad1f6fb64,464797385,0,0x0,8
tick,0x7ffad1f6fb64,464813373,0,0x0,8
tick,0x7ffad1f6fb64,464829399,0,0x0,8
tick,0x7ffad1f6fb64,464845415,0,0x0,8
tick,0x7ffad1f6fb64,464861434,0,0x0,8
tick,0x7ffad1f6fb64,464876460,0,0x0,8
tick,0x7ffad1f6fb64,464892497,0,0x0,8
tick,0x7ffad1f6fb64,464908476,0,0x0,8
tick,0x7ffad1f6fb64,464923506,0,0x0,8
tick,0x7ffad1f6fb64,464939562,0,0x0,8
tick,0x7ffad1f6fb64,464955496,0,0x0,8
tick,0x7ffad1f6fb64,464970535,0,0x0,8
tick,0x7ffad1f6fb64,464986548,0,0x0,8
tick,0x7ffad1f6fb64,465001527,0,0x0,8
tick,0x7ffad1f6fb64,465017555,0,0x0,8
tick,0x7ffad1f6fb64,465033609,0,0x0,8
tick,0x7ffad1f6fb64,465048580,0,0x0,8
tick,0x7ffad1f6fb64,465064585,0,0x0,8
tick,0x7ffad1f6fb64,465080615,0,0x0,8
tick,0x7ffad1f6fb64,465095683,0,0x0,8
tick,0x7ffad1f6fb64,465111681,0,0x0,8
tick,0x7ffad1f6fb64,465127666,0,0x0,8
tick,0x7ffad1f6fb64,465143682,0,0x0,8
tick,0x7ffad1f6fb64,465158704,0,0x0,8
tick,0x7ffad1f6fb64,465173702,0,0x0,8
tick,0x7ffad1f6fb64,465189730,0,0x0,8
tick,0x7ffad1f6fb64,465205740,0,0x0,8
tick,0x7ffad1f6fb64,465220747,0,0x0,8
tick,0x7ffad1f6fb64,465236773,0,0x0,8
tick,0x7ffad1f6fb64,465252773,0,0x0,8
tick,0x7ffad1f6fb64,465268783,0,0x0,8
tick,0x7ffad1f6fb64,465284827,0,0x0,8
tick,0x7ffad1f6fb64,465299818,0,0x0,8
tick,0x7ffad1f6fb64,465315850,0,0x0,8
tick,0x7ffad1f6fb64,465331860,0,0x0,8
tick,0x7ffad1f6fb64,465346870,0,0x0,8
tick,0x7ffad1f6fb64,465362876,0,0x0,8
tick,0x7ffad1f6fb64,465378883,0,0x0,8
tick,0x7ffad1f6fb64,465393902,0,0x0,8
tick,0x7ffad1f6fb64,465409928,0,0x0,8
tick,0x7ffad1f6fb64,465424986,0,0x0,8
tick,0x7ffad1f6fb64,465439965,0,0x0,8
tick,0x7ffad1f6fb64,465455976,0,0x0,8
tick,0x7ffad1f6fb64,465471975,0,0x0,8
tick,0x7ffad1f6fb64,465487009,0,0x0,8
tick,0x7ffad1f6fb64,465503007,0,0x0,8
tick,0x7ffad1f6fb64,465518011,0,0x0,8
tick,0x7ffad1f6fb64,465534041,0,0x0,8
tick,0x7ffad1f6fb64,465549104,0,0x0,8
tick,0x7ffad1f6fb64,465565067,0,0x0,8
tick,0x7ffad1f6fb64,465580076,0,0x0,8
tick,0x7ffad1f6fb64,465596080,0,0x0,8
tick,0x7ffad1f6fb64,465612156,0,0x0,8
tick,0x7ffad1f6fb64,465627140,0,0x0,8
tick,0x7ffad1f6fb64,465643140,0,0x0,8
tick,0x7ffad1f6fb64,465658159,0,0x0,8
tick,0x7ffad1f6fb64,465674155,0,0x0,8
tick,0x7ffad1f6fb64,465690191,0,0x0,8
tick,0x7ffad1f6fb64,465705186,0,0x0,8
tick,0x7ffad1f6fb64,465720208,0,0x0,8
tick,0x7ffad1f6fb64,465735228,0,0x0,8
tick,0x7ffad1f6fb64,465750245,0,0x0,8
tick,0x7ffad1f6fb64,465766234,0,0x0,8
tick,0x7ffad1f6fb64,465781286,0,0x0,8
tick,0x7ffad1f6fb64,465796281,0,0x0,8
tick,0x7ffad1f6fb64,465812305,0,0x0,8
tick,0x7ffad1f6fb64,465827317,0,0x0,8
tick,0x7ffad1f6fb64,465843337,0,0x0,8
tick,0x7ffad1f6fb64,465859362,0,0x0,8
tick,0x7ffad1f6fb64,465875334,0,0x0,8
tick,0x7ffad1f6fb64,465891352,0,0x0,8
tick,0x7ffad1f6fb64,465906378,0,0x0,8
tick,0x7ffad1f6fb64,465922393,0,0x0,8
tick,0x7ffad1f6fb64,465937415,0,0x0,8
tick,0x7ffad1f6fb64,465953413,0,0x0,8
tick,0x7ffad1f6fb64,465969461,0,0x0,8
tick,0x7ffad1f6fb64,465984460,0,0x0,8
tick,0x7ffad1f6fb64,465999451,0,0x0,8
tick,0x7ffad1f6fb64,466015457,0,0x0,8
tick,0x7ffad1f6fb64,466030479,0,0x0,8
tick,0x7ffad1f6fb64,466046530,0,0x0,8
tick,0x7ffad1f6fb64,466061517,0,0x0,8
tick,0x7ffad1f6fb64,466076569,0,0x0,8
tick,0x7ffad1f6fb64,466092569,0,0x0,8
tick,0x7ffad1f6fb64,466108559,0,0x0,8
tick,0x7ffad1f6fb64,466124577,0,0x0,8
tick,0x7ffad1f6fb64,466139580,0,0x0,8
tick,0x7ffad1f6fb64,466155586,0,0x0,8
tick,0x7ffad1f6fb64,466171656,0,0x0,8
tick,0x7ffad1f6fb64,466186635,0,0x0,8
tick,0x7ffad1f6fb64,466202634,0,0x0,8
tick,0x7ffad1f6fb64,466217677,0,0x0,8
tick,0x7ffad1f6fb64,466233686,0,0x0,8
tick,0x7ffad1f6fb64,466249678,0,0x0,8
tick,0x7ffad1f6fb64,466265701,0,0x0,8
tick,0x7ffad1f6fb64,466280710,0,0x0,8
tick,0x7ffad1f6fb64,466295743,0,0x0,8
tick,0x7ffad1f6fb64,466310725,0,0x0,8
tick,0x7ffad1f6fb64,466325765,0,0x0,8
tick,0x7ffad1f6fb64,466340791,0,0x0,8
tick,0x7ffad1f6fb64,466356777,0,0x0,8
tick,0x7ffad1f6fb64,466372788,0,0x0,8
tick,0x7ffad1f6fb64,466388808,0,0x0,8
tick,0x7ffad1f6fb64,466404837,0,0x0,8
tick,0x7ffad1f6fb64,466419834,0,0x0,8
tick,0x7ffad1f6fb64,466435855,0,0x0,8
tick,0x7ffad1f6fb64,466451867,0,0x0,8
tick,0x7ffad1f6fb64,466466884,0,0x0,8
tick,0x7ffad1f6fb64,466481907,0,0x0,8
tick,0x7ffad1f6fb64,466497889,0,0x0,8
tick,0x7ffad1f6fb64,466513966,0,0x0,8
tick,0x7ffad1f6fb64,466529930,0,0x0,8
tick,0x7ffad1f6fb64,466544944,0,0x0,8
tick,0x7ffad1f6fb64,466560983,0,0x0,8
tick,0x7ffad1f6fb64,466575959,0,0x0,8
tick,0x7ffad1f6fb64,466592009,0,0x0,8
tick,0x7ffad1f6fb64,466607011,0,0x0,8
tick,0x7ffad1f6fb64,466621991,0,0x0,8
tick,0x7ffad1f6fb64,466638033,0,0x0,8
tick,0x7ffad1f6fb64,466654046,0,0x0,8
tick,0x7ffad1f6fb64,466669070,0,0x0,8
tick,0x7ffad1f6fb64,466684074,0,0x0,8
tick,0x7ffad1f6fb64,466699087,0,0x0,8
tick,0x7ffad1f6fb64,466715101,0,0x0,8
tick,0x7ffad1f6fb64,466731151,0,0x0,8
tick,0x7ffad1f6fb64,466746127,0,0x0,8
tick,0x7ffad1f6fb64,466762144,0,0x0,8
tick,0x7ffad1f6fb64,466778163,0,0x0,8
tick,0x7ffad1f6fb64,466793165,0,0x0,8
tick,0x7ffad1f6fb64,466809184,0,0x0,8
tick,0x7ffad1f6fb64,466825190,0,0x0,8
tick,0x7ffad1f6fb64,466840232,0,0x0,8
tick,0x7ffad1f6fb64,466856222,0,0x0,8
tick,0x7ffad1f6fb64,466871245,0,0x0,8
tick,0x7ffad1f6fb64,466886244,0,0x0,8
tick,0x7ffad1f6fb64,466902263,0,0x0,8
tick,0x7ffad1f6fb64,466918306,0,0x0,8
tick,0x7ffad1f6fb64,466933313,0,0x0,8
tick,0x7ffad1f6fb64,466949367,0,0x0,8
tick,0x7ffad1f6fb64,466965353,0,0x0,8
tick,0x7ffad1f6fb64,466980365,0,0x0,8
tick,0x7ffad1f6fb64,466995387,0,0x0,8
tick,0x7ffad1f6fb64,467011368,0,0x0,8
tick,0x7ffad1f6fb64,467027395,0,0x0,8
tick,0x7ffad1f6fb64,467043396,0,0x0,8
tick,0x7ffad1f6fb64,467059426,0,0x0,8
tick,0x7ffad1f6fb64,467074424,0,0x0,8
tick,0x7ffad1f6fb64,467089456,0,0x0,8
tick,0x7ffad1f6fb64,467105512,0,0x0,8
tick,0x7ffad1f6fb64,467120520,0,0x0,8
tick,0x7ffad1f6fb64,467136661,0,0x0,8
tick,0x7ffad1f6fb64,467151519,0,0x0,8
tick,0x7ffad1f6fb64,467166556,0,0x0,8
tick,0x7ffad1f6fb64,467181520,0,0x0,8
tick,0x7ffad1f6fb64,467197551,0,0x0,8
tick,0x7ffad1f6fb64,467213573,0,0x0,8
tick,0x7ffad1f6fb64,467229565,0,0x0,8
tick,0x7ffad1f6fb64,467245573,0,0x0,8
tick,0x7ffad1f6fb64,467260624,0,0x0,8
tick,0x7ffad1f6fb64,467275645,0,0x0,8
tick,0x7ffad1f6fb64,467291671,0,0x0,8
tick,0x7ffad1f6fb64,467307650,0,0x0,8
tick,0x7ffad1f6fb64,467323669,0,0x0,8
tick,0x7ffad1f6fb64,467339680,0,0x0,8
tick,0x7ffad1f6fb64,467354694,0,0x0,8
tick,0x7ffad1f6fb64,467369715,0,0x0,8
tick,0x7ffad1f6fb64,467384800,0,0x0,8
tick,0x7ffad1f6fb64,467399742,0,0x0,8
tick,0x7ffad1f6fb64,467414769,0,0x0,8
tick,0x7ffad1f6fb64,467430770,0,0x0,8
tick,0x7ffad1f6fb64,467446766,0,0x0,8
tick,0x7ffad1f6fb64,467462820,0,0x0,8
tick,0x7ffad1f6fb64,467477842,0,0x0,8
tick,0x7ffad1f6fb64,467492818,0,0x0,8
tick,0x7ffad1f6fb64,467507821,0,0x0,8
tick,0x7ffad1f6fb64,467523864,0,0x0,8
tick,0x7ffad1f6fb64,467539859,0,0x0,8
tick,0x7ffad1f6fb64,467555854,0,0x0,8
tick,0x7ffad1f6fb64,467571884,0,0x0,8
tick,0x7ffad1f6fb64,467586903,0,0x0,8
tick,0x7ffad1f6fb64,467602920,0,0x0,8
tick,0x7ffad1f6fb64,467618934,0,0x0,8
tick,0x7ffad1f6fb64,467635027,0,0x0,8
tick,0x7ffad1f6fb64,467649963,0,0x0,8
tick,0x7ffad1f6fb64,467666013,0,0x0,8
tick,0x7ffad1f6fb64,467682003,0,0x0,8
tick,0x7ffad1f6fb64,467698006,0,0x0,8
tick,0x7ffad1f6fb64,467714116,0,0x0,8
tick,0x7ffad1f6fb64,467730031,0,0x0,8
tick,0x7ffad1f6fb64,467746052,0,0x0,8
tick,0x7ffad1f6fb64,467762061,0,0x0,8
tick,0x7ffad1f6fb64,467778102,0,0x0,8
tick,0x7ffad1f6fb64,467793088,0,0x0,8
tick,0x7ffad1f6fb64,467809097,0,0x0,8
tick,0x7ffad1f6fb64,467825118,0,0x0,8
tick,0x7ffad1f6fb64,467840159,0,0x0,8
tick,0x7ffad1f6fb64,467856148,0,0x0,8
tick,0x7ffad1f6fb64,467872168,0,0x0,8
tick,0x7ffad1f6fb64,467888210,0,0x0,8
tick,0x7ffad1f6fb64,467904183,0,0x0,8
tick,0x7ffad1f6fb64,467919216,0,0x0,8
tick,0x7ffad1f6fb64,467935287,0,0x0,8
tick,0x7ffad1f6fb64,467950244,0,0x0,8
tick,0x7ffad1f6fb64,467965350,0,0x0,8
tick,0x7ffad1f6fb64,467980265,0,0x0,8
tick,0x7ffad1f6fb64,467995298,0,0x0,8
tick,0x7ffad1f6fb64,468010322,0,0x0,8
tick,0x7ffad1f6fb64,468026315,0,0x0,8
tick,0x7ffad1f6fb64,468042338,0,0x0,8
tick,0x7ffad1f6fb64,468058334,0,0x0,8
tick,0x7ffad1f6fb64,468073363,0,0x0,8
tick,0x7ffad1f6fb64,468089383,0,0x0,8
tick,0x7ffad1f6fb64,468105374,0,0x0,8
tick,0x7ffad1f6fb64,468120388,0,0x0,8
tick,0x7ffad1f6fb64,468136417,0,0x0,8
tick,0x7ffad1f6fb64,468152427,0,0x0,8
tick,0x7ffad1f6fb64,468168472,0,0x0,8
tick,0x7ffad1f6fb64,468183463,0,0x0,8
tick,0x7ffad1f6fb64,468198458,0,0x0,8
tick,0x7ffad1f6fb64,468214475,0,0x0,8
tick,0x7ffad1f6fb64,468230490,0,0x0,8
tick,0x7ffad1f6fb64,468245491,0,0x0,8
tick,0x7ffad1f6fb64,468260579,0,0x0,8
tick,0x7ffad1f6fb64,468275548,0,0x0,8
tick,0x7ffad1f6fb64,468290581,0,0x0,8
tick,0x7ffad1f6fb64,468306567,0,0x0,8
tick,0x7ffad1f6fb64,468322597,0,0x0,8
tick,0x7ffad1f6fb64,468337637,0,0x0,8
tick,0x7ffad1f6fb64,468353600,0,0x0,8
tick,0x7ffad1f6fb64,468369623,0,0x0,8
tick,0x7ffad1f6fb64,468385651,0,0x0,8
tick,0x7ffad1f6fb64,468401666,0,0x0,8
tick,0x7ffad1f6fb64,468416794,0,0x0,8
tick,0x7ffad1f6fb64,468431654,0,0x0,8
tick,0x7ffad1f6fb64,468447687,0,0x0,8
tick,0x7ffad1f6fb64,468463710,0,0x0,8
tick,0x7ffad1f6fb64,468478735,0,0x0,8
tick,0x7ffad1f6fb64,468494724,0,0x0,8
tick,0x7ffad1f6fb64,468509788,0,0x0,8
tick,0x7ffad1f6fb64,468525812,0,0x0,8
tick,0x7ffad1f6fb64,468540769,0,0x0,8
tick,0x7ffad1f6fb64,468556793,0,0x0,8
tick,0x7ffad1f6fb64,468572787,0,0x0,8
tick,0x7ffad1f6fb64,468587848,0,0x0,8
tick,0x7ffad1f6fb64,468602827,0,0x0,8
tick,0x7ffad1f6fb64,468617828,0,0x0,8
tick,0x7ffad1f6fb64,468633946,0,0x0,8
tick,0x7ffad1f6fb64,468648949,0,0x0,8
tick,0x7ffad1f6fb64,468664891,0,0x0,8
tick,0x7ffad1f6fb64,468680892,0,0x0,8
tick,0x7ffad1f6fb64,468695920,0,0x0,8
tick,0x7ffad1f6fb64,468711940,0,0x0,8
tick,0x7ffad1f6fb64,468727947,0,0x0,8
tick,0x7ffad1f6fb64,468743944,0,0x0,8
tick,0x7ffad1f6fb64,468758963,0,0x0,8
tick,0x7ffad1f6fb64,468774005,0,0x0,8
tick,0x7ffad1f6fb64,468790070,0,0x0,8
tick,0x7ffad1f6fb64,468806022,0,0x0,8
tick,0x7ffad1f6fb64,468821034,0,0x0,8
tick,0x7ffad1f6fb64,468836076,0,0x0,8
tick,0x7ffad1f6fb64,468851066,0,0x0,8
tick,0x7ffad1f6fb64,468867108,0,0x0,8
tick,0x7ffad1f6fb64,468882310,0,0x0,8
tick,0x7ffad1f6fb64,468898119,0,0x0,8
tick,0x7ffad1f6fb64,468914152,0,0x0,8
tick,0x7ffad1f6fb64,468929132,0,0x0,8
tick,0x7ffad1f6fb64,468945130,0,0x0,8
tick,0x7ffad1f6fb64,468961157,0,0x0,8
tick,0x7ffad1f6fb64,468977165,0,0x0,8
tick,0x7ffad1f6fb64,468992194,0,0x0,8
tick,0x7ffad1f6fb64,469008187,0,0x0,8
tick,0x7ffad1f6fb64,469024234,0,0x0,8
tick,0x7ffad1f6fb64,469039239,0,0x0,8
tick,0x7ffad1f6fb64,469055226,0,0x0,8
tick,0x7ffad1f6fb64,469070376,0,0x0,8
tick,0x7ffad1f6fb64,469085244,0,0x0,8
tick,0x7ffad1f6fb64,469101286,0,0x0,8
tick,0x7ffad1f6fb64,469117297,0,0x0,8
tick,0x7ffad1f6fb64,469133319,0,0x0,8
tick,0x7ffad1f6fb64,469148330,0,0x0,8
tick,0x7ffad1f6fb64,469164363,0,0x0,8
tick,0x7ffad1f6fb64,469180349,0,0x0,8
tick,0x7ffad1f6fb64,469196390,0,0x0,8
tick,0x7ffad1f6fb64,469212398,0,0x0,8
tick,0x7ffad1f6fb64,469227371,0,0x0,8
tick,0x7ffad1f6fb64,469243599,0,0x0,8
tick,0x7ffad1f6fb64,469259424,0,0x0,8
tick,0x7ffad1f6fb64,469274470,0,0x0,8
tick,0x7ffad1f6fb64,469289447,0,0x0,8
tick,0x7ffad1f6fb64,469305474,0,0x0,8
tick,0x7ffad1f6fb64,469320490,0,0x0,8
tick,0x7ffad1f6fb64,469336528,0,0x0,8
tick,0x7ffad1f6fb64,469351548,0,0x0,8
tick,0x7ffad1f6fb64,469366546,0,0x0,8
tick,0x7ffad1f6fb64,469381534,0,0x0,8
tick,0x7ffad1f6fb64,469396566,0,0x0,8
tick,0x7ffad1f6fb64,469412549,0,0x0,8
tick,0x7ffad1f6fb64,469427579,0,0x0,8
tick,0x7ffad1f6fb64,469442583,0,0x0,8
tick,0x7ffad1f6fb64,469458591,0,0x0,8
tick,0x7ffad1f6fb64,469473632,0,0x0,8
tick,0x7ffad1f6fb64,469488661,0,0x0,8
tick,0x7ffad1f6fb64,469503693,0,0x0,8
tick,0x7ffad1f6fb64,469519647,0,0x0,8
tick,0x7ffad1f6fb64,469535696,0,0x0,8
tick,0x7ffad1f6fb64,469550674,0,0x0,8
tick,0x7ffad1f6fb64,469565735,0,0x0,8
tick,0x7ffad1f6fb64,469581715,0,0x0,8
tick,0x7ffad1f6fb64,469597733,0,0x0,8
tick,0x7ffad1f6fb64,469613752,0,0x0,8
tick,0x7ffad1f6fb64,469629771,0,0x0,8
tick,0x7ffad1f6fb64,469644774,0,0x0,8
tick,0x7ffad1f6fb64,469660800,0,0x0,8
tick,0x7ffad1f6fb64,469675856,0,0x0,8
tick,0x7ffad1f6fb64,469691804,0,0x0,8
tick,0x7ffad1f6fb64,469706868,0,0x0,8
tick,0x7ffad1f6fb64,469722852,0,0x0,8
tick,0x7ffad1f6fb64,469737872,0,0x0,8
tick,0x7ffad1f6fb64,469753862,0,0x0,8
tick,0x7ffad1f6fb64,469769924,0,0x0,8
tick,0x7ffad1f6fb64,469784916,0,0x0,8
tick,0x7ffad1f6fb64,469800923,0,0x0,8
tick,0x7ffad1f6fb64,469816004,0,0x0,8
tick,0x7ffad1f6fb64,469831956,0,0x0,8
tick,0x7ffad1f6fb64,469847960,0,0x0,8
tick,0x7ffad1f6fb64,469863983,0,0x0,8
tick,0x7ffad1f6fb64,469879973,0,0x0,8
tick,0x7ffad1f6fb64,469895021,0,0x0,8
tick,0x7ffad1f6fb64,469911056,0,0x0,8
tick,0x7ffad1f6fb64,469927039,0,0x0,8
tick,0x7ffad1f6fb64,469942047,0,0x0,8
tick,0x7ffad1f6fb64,469957066,0,0x0,8
tick,0x7ffad1f6fb64,469973096,0,0x0,8
tick,0x7ffad1f6fb64,469989140,0,0x0,8
tick,0x7ffad1f6fb64,470005111,0,0x0,8
tick,0x7ffad1f6fb64,470020143,0,0x0,8
tick,0x7ffad1f6fb64,470035142,0,0x0,8
tick,0x7ffad1f6fb64,470050137,0,0x0,8
tick,0x7ffad1f6fb64,470066165,0,0x0,8
tick,0x7ffad1f6fb64,470081197,0,0x0,8
tick,0x7ffad1f6fb64,470096193,0,0x0,8
tick,0x7ffad1f6fb64,470112272,0,0x0,8
tick,0x7ffad1f6fb64,470128224,0,0x0,8
tick,0x7ffad1f6fb64,470144254,0,0x0,8
tick,0x7ffad1f6fb64,470159262,0,0x0,8
tick,0x7ffad1f6fb64,470175264,0,0x0,8
tick,0x7ffad1f6fb64,470190271,0,0x0,8
tick,0x7ffad1f6fb64,470206298,0,0x0,8
tick,0x7ffad1f6fb64,470221325,0,0x0,8
tick,0x7ffad1f6fb64,470237323,0,0x0,8
tick,0x7ffad1f6fb64,470253335,0,0x0,8
tick,0x7ffad1f6fb64,470269513,0,0x0,8
tick,0x7ffad1f6fb64,470285380,0,0x0,8
tick,0x7ffad1f6fb64,470300410,0,0x0,8
tick,0x7ffad1f6fb64,470316394,0,0x0,8
tick,0x7ffad1f6fb64,470331416,0,0x0,8
tick,0x7ffad1f6fb64,470346435,0,0x0,8
tick,0x7ffad1f6fb64,470362446,0,0x0,8
tick,0x7ffad1f6fb64,470377455,0,0x0,8
tick,0x7ffad1f6fb64,470393468,0,0x0,8
tick,0x7ffad1f6fb64,470409474,0,0x0,8
tick,0x7ffad1f6fb64,470425497,0,0x0,8
tick,0x7ffad1f6fb64,470440504,0,0x0,8
tick,0x7ffad1f6fb64,470456523,0,0x0,8
tick,0x7ffad1f6fb64,470472531,0,0x0,8
tick,0x7ffad1f6fb64,470487595,0,0x0,8
tick,0x7ffad1f6fb64,470503560,0,0x0,8
tick,0x7ffad1f6fb64,470519599,0,0x0,8
tick,0x7ffad1f6fb64,470534594,0,0x0,8
tick,0x7ffad1f6fb64,470549649,0,0x0,8
tick,0x7ffad1f6fb64,470565615,0,0x0,8
tick,0x7ffad1f6fb64,470581651,0,0x0,8
tick,0x7ffad1f6fb64,470596718,0,0x0,8
tick,0x7ffad1f6fb64,470611666,0,0x0,8
tick,0x7ffad1f6fb64,470627662,0,0x0,8
tick,0x7ffad1f6fb64,470643687,0,0x0,8
tick,0x7ffad1f6fb64,470660022,0,0x0,8
tick,0x7ffad1f6fb64,470674725,0,0x0,8
tick,0x7ffad1f6fb64,470689720,0,0x0,8
tick,0x7ffad1f6fb64,470705783,0,0x0,8
tick,0x7ffad1f6fb64,470721752,0,0x0,8
tick,0x7ffad1f6fb64,470736802,0,0x0,8
tick,0x7ffad1f6fb64,470751825,0,0x0,8
tick,0x7ffad1f6fb64,470766818,0,0x0,8
tick,0x7ffad1f6fb64,470781902,0,0x0,8
tick,0x7ffad1f6fb64,470797814,0,0x0,8
tick,0x7ffad1f6fb64,470813863,0,0x0,8
tick,0x7ffad1f6fb64,470829687,0,0x0,8
tick,0x7ffad1f6fb64,470844403,0,0x0,8
tick,0x7ffad1f6fb64,470860423,0,0x0,8
tick,0x7ffad1f6fb64,470876474,0,0x0,8
tick,0x7ffad1f6fb64,470891448,0,0x0,8
tick,0x7ffad1f6fb64,470907494,0,0x0,8
tick,0x7ffad1f6fb64,470922476,0,0x0,8
tick,0x7ffad1f6fb64,470937526,0,0x0,8
tick,0x7ffad1f6fb64,470952510,0,0x0,8
tick,0x7ffad1f6fb64,470967502,0,0x0,8
tick,0x7ffad1f6fb64,470982537,0,0x0,8
tick,0x7ffad1f6fb64,470997538,0,0x0,8
tick,0x7ffad1f6fb64,471013603,0,0x0,8
tick,0x7ffad1f6fb64,471028609,0,0x0,8
tick,0x7ffad1f6fb64,471044600,0,0x0,8
tick,0x7ffad1f6fb64,471059723,0,0x0,8
tick,0x7ffad1f6fb64,471075613,0,0x0,8
tick,0x7ffad1f6fb64,471090653,0,0x0,8
tick,0x7ffad1f6fb64,471105678,0,0x0,8
tick,0x7ffad1f6fb64,471121643,0,0x0,8
tick,0x7ffad1f6fb64,471136691,0,0x0,8
tick,0x7ffad1f6fb64,471151697,0,0x0,8
tick,0x7ffad1f6fb64,471166721,0,0x0,8
tick,0x7ffad1f6fb64,471181715,0,0x0,8
tick,0x7ffad1f6fb64,471196729,0,0x0,8
tick,0x7ffad1f6fb64,471211781,0,0x0,8
tick,0x7ffad1f6fb64,471227785,0,0x0,8
tick,0x7ffad1f6fb64,471243793,0,0x0,8
tick,0x7ffad1f6fb64,471259807,0,0x0,8
tick,0x7ffad1f6fb64,471274826,0,0x0,8
tick,0x7ffad1f6fb64,471289882,0,0x0,8
tick,0x7ffad1f6fb64,471304832,0,0x0,8
tick,0x7ffad1f6fb64,471319880,0,0x0,8
tick,0x7ffad1f6fb64,471334843,0,0x0,8
tick,0x7ffad1f6fb64,471349895,0,0x0,8
tick,0x7ffad1f6fb64,471365888,0,0x0,8
tick,0x7ffad1f6fb64,471381881,0,0x0,8
tick,0x7ffad1f6fb64,471396915,0,0x0,8
tick,0x7ffad1f6fb64,471412954,0,0x0,8
tick,0x7ffad1f6fb64,471428917,0,0x0,8
tick,0x7ffad1f6fb64,471444951,0,0x0,8
tick,0x7ffad1f6fb64,471459956,0,0x0,8
tick,0x7ffad1f6fb64,471475982,0,0x0,8
tick,0x7ffad1f6fb64,471492057,0,0x0,8
tick,0x7ffad1f6fb64,471507038,0,0x0,8
tick,0x7ffad1f6fb64,471523042,0,0x0,8
tick,0x7ffad1f6fb64,471539442,0,0x0,8
tick,0x7ffad1f6fb64,471554016,0,0x0,8
tick,0x7ffad1f6fb64,471569065,0,0x0,8
tick,0x7ffad1f6fb64,471584060,0,0x0,8
tick,0x7ffad1f6fb64,471599105,0,0x0,8
tick,0x7ffad1f6fb64,471614097,0,0x0,8
tick,0x7ffad1f6fb64,471629141,0,0x0,8
tick,0x7ffad1f6fb64,471644135,0,0x0,8
tick,0x7ffad1f6fb64,471659164,0,0x0,8
tick,0x7ffad1f6fb64,471674152,0,0x0,8
tick,0x7ffad1f6fb64,471689190,0,0x0,8
tick,0x7ffad1f6fb64,471705176,0,0x0,8
tick,0x7ffad1f6fb64,471720222,0,0x0,8
tick,0x7ffad1f6fb64,471736284,0,0x0,8
tick,0x7ffad1f6fb64,471751297,0,0x0,8
tick,0x7ffad1f6fb64,471766253,0,0x0,8
tick,0x7ffad1f6fb64,471781252,0,0x0,8
tick,0x7ffad1f6fb64,471796325,0,0x0,8
tick,0x7ffad1f6fb64,471812316,0,0x0,8
tick,0x7ffad1f6fb64,471827304,0,0x0,8
tick,0x7ffad1f6fb64,471843398,0,0x0,8
tick,0x7ffad1f6fb64,471859418,0,0x0,8
tick,0x7ffad1f6fb64,471874352,0,0x0,8
tick,0x7ffad1f6fb64,471889381,0,0x0,8
tick,0x7ffad1f6fb64,471905377,0,0x0,8
tick,0x7ffad1f6fb64,471920384,0,0x0,8
tick,0x7ffad1f6fb64,471935413,0,0x0,8
tick,0x7ffad1f6fb64,471950454,0,0x0,8
tick,0x7ffad1f6fb64,471966446,0,0x0,8
tick,0x7ffad1f6fb64,471981433,0,0x0,8
tick,0x7ffad1f6fb64,471996451,0,0x0,8
tick,0x7ffad1f6fb64,472011464,0,0x0,8
tick,0x7ffad1f6fb64,472027476,0,0x0,8
tick,0x7ffad1f6fb64,472042498,0,0x0,8
tick,0x7ffad1f6fb64,472058536,0,0x0,8
tick,0x7ffad1f6fb64,472073518,0,0x0,8
tick,0x7ffad1f6fb64,472089551,0,0x0,8
tick,0x7ffad1f6fb64,472104529,0,0x0,8
tick,0x7ffad1f6fb64,472119590,0,0x0,8
tick,0x7ffad1f6fb64,472135565,0,0x0,8
tick,0x7ffad1f6fb64,472150648,0,0x0,8
tick,0x7ffad1f6fb64,472165641,0,0x0,8
tick,0x7ffad1f6fb64,472180617,0,0x0,8
tick,0x7ffad1f6fb64,472195640,0,0x0,8
tick,0x7ffad1f6fb64,472210701,0,0x0,8
tick,0x7ffad1f6fb64,472225783,0,0x0,8
tick,0x7ffad1f6fb64,472240683,0,0x0,8
tick,0x7ffad1f6fb64,472256900,0,0x0,8
tick,0x7ffad1f6fb64,472272715,0,0x0,8
tick,0x7ffad1f6fb64,472287703,0,0x0,8
tick,0x7ffad1f6fb64,472302757,0,0x0,8
tick,0x7ffad1f6fb64,472318726,0,0x0,8
tick,0x7ffad1f6fb64,472334755,0,0x0,8
tick,0x7ffad1f6fb64,472349782,0,0x0,8
tick,0x7ffad1f6fb64,472364769,0,0x0,8
tick,0x7ffad1f6fb64,472379810,0,0x0,8
tick,0x7ffad1f6fb64,472394815,0,0x0,8
tick,0x7ffad1f6fb64,472409826,0,0x0,8
tick,0x7ffad1f6fb64,472425819,0,0x0,8
tick,0x7ffad1f6fb64,472440844,0,0x0,8
tick,0x7ffad1f6fb64,472457177,0,0x0,8
tick,0x7ffad1f6fb64,472471890,0,0x0,8
tick,0x7ffad1f6fb64,472487917,0,0x0,8
tick,0x7ffad1f6fb64,472502902,0,0x0,8
tick,0x7ffad1f6fb64,472517959,0,0x0,8
tick,0x7ffad1f6fb64,472533927,0,0x0,8
tick,0x7ffad1f6fb64,472549931,0,0x0,8
tick,0x7ffad1f6fb64,472564993,0,0x0,8
tick,0x7ffad1f6fb64,472580011,0,0x0,8
tick,0x7ffad1f6fb64,472596035,0,0x0,8
tick,0x7ffad1f6fb64,472611016,0,0x0,8
tick,0x7ffad1f6fb64,472627047,0,0x0,8
tick,0x7ffad1f6fb64,472643035,0,0x0,8
tick,0x7ffad1f6fb64,472658047,0,0x0,8
tick,0x7ffad1f6fb64,472673069,0,0x0,8
tick,0x7ffad1f6fb64,472689081,0,0x0,8
tick,0x7ffad1f6fb64,472704135,0,0x0,8
tick,0x7ffad1f6fb64,472720103,0,0x0,8
tick,0x7ffad1f6fb64,472735184,0,0x0,8
tick,0x7ffad1f6fb64,472750333,0,0x0,8
tick,0x7ffad1f6fb64,472766158,0,0x0,8
tick,0x7ffad1f6fb64,472781149,0,0x0,8
tick,0x7ffad1f6fb64,472796179,0,0x0,8
tick,0x7ffad1f6fb64,472811245,0,0x0,8
tick,0x7ffad1f6fb64,472827210,0,0x0,8
tick,0x7ffad1f6fb64,472842209,0,0x0,8
tick,0x7ffad1f6fb64,472858273,0,0x0,8
tick,0x7ffad1f6fb64,472874258,0,0x0,8
tick,0x7ffad1f6fb64,472889287,0,0x0,8
tick,0x7ffad1f6fb64,472904300,0,0x0,8
tick,0x7ffad1f6fb64,472919346,0,0x0,8
tick,0x7ffad1f6fb64,472934306,0,0x0,8
tick,0x7ffad1f6fb64,472950379,0,0x0,8
tick,0x7ffad1f6fb64,472965334,0,0x0,8
tick,0x7ffad1f6fb64,472980352,0,0x0,8
tick,0x7ffad1f6fb64,472995406,0,0x0,8
tick,0x7ffad1f6fb64,473010382,0,0x0,8
tick,0x7ffad1f6fb64,473025425,0,0x0,8
tick,0x7ffad1f6fb64,473040410,0,0x0,8
tick,0x7ffad1f6fb64,473055391,0,0x0,8
tick,0x7ffad1f6fb64,473070523,0,0x0,8
tick,0x7ffad1f6fb64,473086435,0,0x0,8
tick,0x7ffad1f6fb64,473101463,0,0x0,8
tick,0x7ffad1f6fb64,473117477,0,0x0,8
tick,0x7ffad1f6fb64,473132490,0,0x0,8
tick,0x7ffad1f6fb64,473148485,0,0x0,8
tick,0x7ffad1f6fb64,473163522,0,0x0,8
tick,0x7ffad1f6fb64,473178534,0,0x0,8
tick,0x7ffad1f6fb64,473194526,0,0x0,8
tick,0x7ffad1f6fb64,473210551,0,0x0,8
tick,0x7ffad1f6fb64,473225573,0,0x0,8
tick,0x7ffad1f6fb64,473240604,0,0x0,8
tick,0x7ffad1f6fb64,473256602,0,0x0,8
tick,0x7ffad1f6fb64,473272623,0,0x0,8
tick,0x7ffad1f6fb64,473287618,0,0x0,8
tick,0x7ffad1f6fb64,473302635,0,0x0,8
tick,0x7ffad1f6fb64,473317647,0,0x0,8
tick,0x7ffad1f6fb64,473333661,0,0x0,8
tick,0x7ffad1f6fb64,473349691,0,0x0,8
tick,0x7ffad1f6fb64,473364698,0,0x0,8
tick,0x7ffad1f6fb64,473379722,0,0x0,8
tick,0x7ffad1f6fb64,473394733,0,0x0,8
tick,0x7ffad1f6fb64,473409750,0,0x0,8
tick,0x7ffad1f6fb64,473424742,0,0x0,8
tick,0x7ffad1f6fb64,473439772,0,0x0,8
tick,0x7ffad1f6fb64,473455847,0,0x0,8
tick,0x7ffad1f6fb64,473471812,0,0x0,8
tick,0x7ffad1f6fb64,473486817,0,0x0,8
tick,0x7ffad1f6fb64,473502817,0,0x0,8
tick,0x7ffad1f6fb64,473518068,0,0x0,8
tick,0x7ffad1f6fb64,473533841,0,0x0,8
tick,0x7ffad1f6fb64,473549852,0,0x0,8
tick,0x7ffad1f6fb64,473565972,0,0x0,8
tick,0x7ffad1f6fb64,473581871,0,0x0,8
tick,0x7ffad1f6fb64,473596898,0,0x0,8
tick,0x7ffad1f6fb64,473612920,0,0x0,8
tick,0x7ffad1f6fb64,473628951,0,0x0,8
tick,0x7ffad1f6fb64,473644171,0,0x0,8
tick,0x7ffad1f6fb64,473659104,0,0x0,8
tick,0x7ffad1f6fb64,473673976,0,0x0,8
tick,0x7ffad1f6fb64,473688986,0,0x0,8
tick,0x7ffad1f6fb64,473703983,0,0x0,8
tick,0x7ffad1f6fb64,473719029,0,0x0,8
tick,0x7ffad1f6fb64,473735011,0,0x0,8
tick,0x7ffad1f6fb64,473750067,0,0x0,8
tick,0x7ffad1f6fb64,473766310,0,0x0,8
tick,0x7ffad1f6fb64,473781084,0,0x0,8
tick,0x7ffad1f6fb64,473796070,0,0x0,8
tick,0x7ffad1f6fb64,473811122,0,0x0,8
tick,0x7ffad1f6fb64,473826115,0,0x0,8
tick,0x7ffad1f6fb64,473842121,0,0x0,8
tick,0x7ffad1f6fb64,473857392,0,0x0,8
tick,0x7ffad1f6fb64,473873158,0,0x0,8
tick,0x7ffad1f6fb64,473889275,0,0x0,8
tick,0x7ffad1f6fb64,473904188,0,0x0,8
tick,0x7ffad1f6fb64,473919391,0,0x0,8
tick,0x7ffad1f6fb64,473934212,0,0x0,8
tick,0x7ffad1f6fb64,473949206,0,0x0,8
tick,0x7ffad1f6fb64,473965262,0,0x0,8
tick,0x7ffad1f6fb64,473980245,0,0x0,8
tick,0x7ffad1f6fb64,473995278,0,0x0,8
tick,0x7ffad1f6fb64,474010255,0,0x0,8
tick,0x7ffad1f6fb64,474025286,0,0x0,8
tick,0x7ffad1f6fb64,474040291,0,0x0,8
tick,0x7ffad1f6fb64,474056297,0,0x0,8
tick,0x7ffad1f6fb64,474071374,0,0x0,8
tick,0x7ffad1f6fb64,474087361,0,0x0,8
tick,0x7ffad1f6fb64,474102369,0,0x0,8
tick,0x7ffad1f6fb64,474117420,0,0x0,8
tick,0x7ffad1f6fb64,474133399,0,0x0,8
tick,0x7ffad1f6fb64,474149408,0,0x0,8
tick,0x7ffad1f6fb64,474165438,0,0x0,8
tick,0x7ffad1f6fb64,474180462,0,0x0,8
tick,0x7ffad1f6fb64,474195440,0,0x0,8
tick,0x7ffad1f6fb64,474210477,0,0x0,8
tick,0x7ffad1f6fb64,474225471,0,0x0,8
tick,0x7ffad1f6fb64,474240487,0,0x0,8
tick,0x7ffad1f6fb64,474255528,0,0x0,8
tick,0x7ffad1f6fb64,474270544,0,0x0,8
tick,0x7ffad1f6fb64,474285522,0,0x0,8
tick,0x7ffad1f6fb64,474301512,0,0x0,8
tick,0x7ffad1f6fb64,474316614,0,0x0,8
tick,0x7ffad1f6fb64,474331563,0,0x0,8
tick,0x7ffad1f6fb64,474347613,0,0x0,8
tick,0x7ffad1f6fb64,474363599,0,0x0,8
tick,0x7ffad1f6fb64,474379609,0,0x0,8
tick,0x7ffad1f6fb64,474395626,0,0x0,8
tick,0x7ffad1f6fb64,474410634,0,0x0,8
tick,0x7ffad1f6fb64,474425700,0,0x0,8
tick,0x7ffad1f6fb64,474440657,0,0x0,8
tick,0x7ffad1f6fb64,474456685,0,0x0,8
tick,0x7ffad1f6fb64,474472711,0,0x0,8
tick,0x7ffad1f6fb64,474488697,0,0x0,8
tick,0x7ffad1f6fb64,474503715,0,0x0,8
tick,0x7ffad1f6fb64,474519732,0,0x0,8
tick,0x7ffad1f6fb64,474534760,0,0x0,8
tick,0x7ffad1f6fb64,474549759,0,0x0,8
tick,0x7ffad1f6fb64,474565814,0,0x0,8
tick,0x7ffad1f6fb64,474580837,0,0x0,8
tick,0x7ffad1f6fb64,474595819,0,0x0,8
tick,0x7ffad1f6fb64,474611827,0,0x0,8
tick,0x7ffad1f6fb64,474627832,0,0x0,8
tick,0x7ffad1f6fb64,474642878,0,0x0,8
tick,0x7ffad1f6fb64,474658875,0,0x0,8
tick,0x7ffad1f6fb64,474673920,0,0x0,8
tick,0x7ffad1f6fb64,474688941,0,0x0,8
tick,0x7ffad1f6fb64,474703904,0,0x0,8
tick,0x7ffad1f6fb64,474719917,0,0x0,8
tick,0x7ffad1f6fb64,474734931,0,0x0,8
tick,0x7ffad1f6fb64,474749944,0,0x0,8
tick,0x7ffad1f6fb64,474765089,0,0x0,8
tick,0x7ffad1f6fb64,474780008,0,0x0,8
tick,0x7ffad1f6fb64,474795001,0,0x0,8
tick,0x7ffad1f6fb64,474810989,0,0x0,8
tick,0x7ffad1f6fb64,474826027,0,0x0,8
tick,0x7ffad1f6fb64,474841015,0,0x0,8
tick,0x7ffad1f6fb64,474856107,0,0x0,8
tick,0x7ffad1f6fb64,474872053,0,0x0,8
tick,0x7ffad1f6fb64,474888092,0,0x0,8
tick,0x7ffad1f6fb64,474903079,0,0x0,8
tick,0x7ffad1f6fb64,474918148,0,0x0,8
tick,0x7ffad1f6fb64,474934144,0,0x0,8
tick,0x7ffad1f6fb64,474949179,0,0x0,8
tick,0x7ffad1f6fb64,474964168,0,0x0,8
tick,0x7ffad1f6fb64,474980206,0,0x0,8
tick,0x7ffad1f6fb64,474995191,0,0x0,8
tick,0x7ffad1f6fb64,475011234,0,0x0,8
tick,0x7ffad1f6fb64,475027214,0,0x0,8
tick,0x7ffad1f6fb64,475042234,0,0x0,8
tick,0x7ffad1f6fb64,475058248,0,0x0,8
tick,0x7ffad1f6fb64,475074265,0,0x0,8
tick,0x7ffad1f6fb64,475090296,0,0x0,8
tick,0x7ffad1f6fb64,475105289,0,0x0,8
tick,0x7ffad1f6fb64,475120284,0,0x0,8
tick,0x7ffad1f6fb64,475136356,0,0x0,8
tick,0x7ffad1f6fb64,475152338,0,0x0,8
tick,0x7ffad1f6fb64,475168349,0,0x0,8
tick,0x7ffad1f6fb64,475183329,0,0x0,8
tick,0x7ffad1f6fb64,475198413,0,0x0,8
tick,0x7ffad1f6fb64,475214378,0,0x0,8
tick,0x7ffad1f6fb64,475230376,0,0x0,8
tick,0x7ffad1f6fb64,475245409,0,0x0,8
tick,0x7ffad1f6fb64,475261423,0,0x0,8
tick,0x7ffad1f6fb64,475276445,0,0x0,8
tick,0x7ffad1f6fb64,475292475,0,0x0,8
tick,0x7ffad1f6fb64,475308468,0,0x0,8
tick,0x7ffad1f6fb64,475324564,0,0x0,8
tick,0x7ffad1f6fb64,475339510,0,0x0,8
tick,0x7ffad1f6fb64,475355524,0,0x0,8
tick,0x7ffad1f6fb64,475370529,0,0x0,8
tick,0x7ffad1f6fb64,475386535,0,0x0,8
tick,0x7ffad1f6fb64,475402544,0,0x0,8
tick,0x7ffad1f6fb64,475417564,0,0x0,8
tick,0x7ffad1f6fb64,475432701,0,0x0,8
tick,0x7ffad1f6fb64,475448594,0,0x0,8
tick,0x7ffad1f6fb64,475464601,0,0x0,8
tick,0x7ffad1f6fb64,475479614,0,0x0,8
tick,0x7ffad1f6fb64,475495630,0,0x0,8
tick,0x7ffad1f6fb64,475511694,0,0x0,8
tick,0x7ffad1f6fb64,475526656,0,0x0,8
tick,0x7ffad1f6fb64,475541689,0,0x0,8
tick,0x7ffad1f6fb64,475557675,0,0x0,8
tick,0x7ffad1f6fb64,475573689,0,0x0,8
tick,0x7ffad1f6fb64,475589721,0,0x0,8
tick,0x7ffad1f6fb64,475604768,0,0x0,8
tick,0x7ffad1f6fb64,475619915,0,0x0,8
tick,0x7ffad1f6fb64,475635747,0,0x0,8
tick,0x7ffad1f6fb64,475651778,0,0x0,8
tick,0x7ffad1f6fb64,475666784,0,0x0,8
tick,0x7ffad1f6fb64,475681789,0,0x0,8
tick,0x7ffad1f6fb64,475698091,0,0x0,8
tick,0x7ffad1f6fb64,475712884,0,0x0,8
tick,0x7ffad1f6fb64,475727888,0,0x0,8
tick,0x7ffad1f6fb64,475742864,0,0x0,8
tick,0x7ffad1f6fb64,475758877,0,0x0,8
tick,0x7ffad1f6fb64,475774892,0,0x0,8
tick,0x7ffad1f6fb64,475790966,0,0x0,8
tick,0x7ffad1f6fb64,475805932,0,0x0,8
tick,0x7ffad1f6fb64,475821947,0,0x0,8
tick,0x7ffad1f6fb64,475837939,0,0x0,8
tick,0x7ffad1f6fb64,475853946,0,0x0,8
tick,0x7ffad1f6fb64,475869976,0,0x0,8
tick,0x7ffad1f6fb64,475884989,0,0x0,8
tick,0x7ffad1f6fb64,475899987,0,0x0,8
tick,0x7ffad1f6fb64,475916026,0,0x0,8
tick,0x7ffad1f6fb64,475932024,0,0x0,8
tick,0x7ffad1f6fb64,475947054,0,0x0,8
tick,0x7ffad1f6fb64,475963067,0,0x0,8
tick,0x7ffad1f6fb64,475978109,0,0x0,8
tick,0x7ffad1f6fb64,475994086,0,0x0,8
tick,0x7ffad1f6fb64,476010118,0,0x0,8
tick,0x7ffad1f6fb64,476025098,0,0x0,8
tick,0x7ffad1f6fb64,476040113,0,0x0,8
tick,0x7ffad1f6fb64,476055103,0,0x0,8
tick,0x7ffad1f6fb64,476070153,0,0x0,8
tick,0x7ffad1f6fb64,476086390,0,0x0,8
tick,0x7ffad1f6fb64,476102191,0,0x0,8
tick,0x7ffad1f6fb64,476117203,0,0x0,8
tick,0x7ffad1f6fb64,476133209,0,0x0,8
tick,0x7ffad1f6fb64,476148213,0,0x0,8
tick,0x7ffad1f6fb64,476164252,0,0x0,8
tick,0x7ffad1f6fb64,476179257,0,0x0,8
tick,0x7ffad1f6fb64,476194287,0,0x0,8
tick,0x7ffad1f6fb64,476210278,0,0x0,8
tick,0x7ffad1f6fb64,476226277,0,0x0,8
tick,0x7ffad1f6fb64,476241303,0,0x0,8
tick,0x7ffad1f6fb64,476257355,0,0x0,8
tick,0x7ffad1f6fb64,476273358,0,0x0,8
tick,0x7ffad1f6fb64,476289329,0,0x0,8
tick,0x7ffad1f6fb64,476304383,0,0x0,8
tick,0x7ffad1f6fb64,476319456,0,0x0,8
tick,0x7ffad1f6fb64,476334395,0,0x0,8
tick,0x7ffad1f6fb64,476350398,0,0x0,8
tick,0x7ffad1f6fb64,476366477,0,0x0,8
tick,0x7ffad1f6fb64,476381469,0,0x0,8
tick,0x7ffad1f6fb64,476396443,0,0x0,8
tick,0x7ffad1f6fb64,476411539,0,0x0,8
tick,0x7ffad1f6fb64,476427490,0,0x0,8
tick,0x7ffad1f6fb64,476442490,0,0x0,8
tick,0x7ffad1f6fb64,476458524,0,0x0,8
tick,0x7ffad1f6fb64,476473535,0,0x0,8
tick,0x7ffad1f6fb64,476488582,0,0x0,8
tick,0x7ffad1f6fb64,476504555,0,0x0,8
tick,0x7ffad1f6fb64,476520584,0,0x0,8
tick,0x7ffad1f6fb64,476536573,0,0x0,8
tick,0x7ffad1f6fb64,476552721,0,0x0,8
tick,0x7ffad1f6fb64,476568633,0,0x0,8
tick,0x7ffad1f6fb64,476583604,0,0x0,8
tick,0x7ffad1f6fb64,476599652,0,0x0,8
tick,0x7ffad1f6fb64,476615633,0,0x0,8
tick,0x7ffad1f6fb64,476630692,0,0x0,8
tick,0x7ffad1f6fb64,476646676,0,0x0,8
tick,0x7ffad1f6fb64,476662688,0,0x0,8
tick,0x7ffad1f6fb64,476678784,0,0x0,8
tick,0x7ffad1f6fb64,476694717,0,0x0,8
tick,0x7ffad1f6fb64,476709745,0,0x0,8
tick,0x7ffad1f6fb64,476725739,0,0x0,8
tick,0x7ffad1f6fb64,476740771,0,0x0,8
tick,0x7ffad1f6fb64,476756775,0,0x0,8
tick,0x7ffad1f6fb64,476771787,0,0x0,8
tick,0x7ffad1f6fb64,476787792,0,0x0,8
tick,0x7ffad1f6fb64,476802812,0,0x0,8
tick,0x7ffad1f6fb64,476818868,0,0x0,8
tick,0x7ffad1f6fb64,476833859,0,0x0,8
tick,0x7ffad1f6fb64,476848876,0,0x0,8
tick,0x7ffad1f6fb64,476864873,0,0x0,8
tick,0x7ffad1f6fb64,476879910,0,0x0,8
tick,0x7ffad1f6fb64,476895923,0,0x0,8
tick,0x7ffad1f6fb64,476910909,0,0x0,8
tick,0x7ffad1f6fb64,476925971,0,0x0,8
tick,0x7ffad1f6fb64,476941938,0,0x0,8
tick,0x7ffad1f6fb64,476957955,0,0x0,8
tick,0x7ffad1f6fb64,476972971,0,0x0,8
tick,0x7ffad1f6fb64,476988988,0,0x0,8
tick,0x7ffad1f6fb64,477004146,0,0x0,8
tick,0x7ffad1f6fb64,477020026,0,0x0,8
tick,0x7ffad1f6fb64,477035047,0,0x0,8
tick,0x7ffad1f6fb64,477050023,0,0x0,8
tick,0x7ffad1f6fb64,477065061,0,0x0,8
tick,0x7ffad1f6fb64,477080078,0,0x0,8
tick,0x7ffad1f6fb64,477095083,0,0x0,8
tick,0x7ffad1f6fb64,477111103,0,0x0,8
tick,0x7ffad1f6fb64,477127132,0,0x0,8
tick,0x7ffad1f6fb64,477143155,0,0x0,8
tick,0x7ffad1f6fb64,477158177,0,0x0,8
tick,0x7ffad1f6fb64,477174153,0,0x0,8
tick,0x7ffad1f6fb64,477190183,0,0x0,8
tick,0x7ffad1f6fb64,477205303,0,0x0,8
tick,0x7ffad1f6fb64,477220189,0,0x0,8
tick,0x7ffad1f6fb64,477235193,0,0x0,8
tick,0x7ffad1f6fb64,477250226,0,0x0,8
tick,0x7ffad1f6fb64,477265234,0,0x0,8
tick,0x7ffad1f6fb64,477280246,0,0x0,8
tick,0x7ffad1f6fb64,477295257,0,0x0,8
tick,0x7ffad1f6fb64,477311264,0,0x0,8
tick,0x7ffad1f6fb64,477327307,0,0x0,8
tick,0x7ffad1f6fb64,477342309,0,0x0,8
tick,0x7ffad1f6fb64,477358352,0,0x0,8
tick,0x7ffad1f6fb64,477374335,0,0x0,8
tick,0x7ffad1f6fb64,477389360,0,0x0,8
tick,0x7ffad1f6fb64,477405393,0,0x0,8
tick,0x7ffad1f6fb64,477420395,0,0x0,8
tick,0x7ffad1f6fb64,477436397,0,0x0,8
tick,0x7ffad1f6fb64,477452405,0,0x0,8
tick,0x7ffad1f6fb64,477468437,0,0x0,8
tick,0x7ffad1f6fb64,477483427,0,0x0,8
tick,0x7ffad1f6fb64,477499480,0,0x0,8
tick,0x7ffad1f6fb64,477515585,0,0x0,8
tick,0x7ffad1f6fb64,477530471,0,0x0,8
tick,0x7ffad1f6fb64,477546479,0,0x0,8
tick,0x7ffad1f6fb64,477561504,0,0x0,8
tick,0x7ffad1f6fb64,477577530,0,0x0,8
tick,0x7ffad1f6fb64,477593561,0,0x0,8
tick,0x7ffad1f6fb64,477609560,0,0x0,8
tick,0x7ffad1f6fb64,477624571,0,0x0,8
tick,0x7ffad1f6fb64,477639615,0,0x0,8
tick,0x7ffad1f6fb64,477655622,0,0x0,8
tick,0x7ffad1f6fb64,477670621,0,0x0,8
tick,0x7ffad1f6fb64,477685645,0,0x0,8
tick,0x7ffad1f6fb64,477701646,0,0x0,8
tick,0x7ffad1f6fb64,477716669,0,0x0,8
tick,0x7ffad1f6fb64,477732694,0,0x0,8
tick,0x7ffad1f6fb64,477747698,0,0x0,8
tick,0x7ffad1f6fb64,477763695,0,0x0,8
tick,0x7ffad1f6fb64,477779754,0,0x0,8
tick,0x7ffad1f6fb64,477794776,0,0x0,8
tick,0x7ffad1f6fb64,477810704,0,0x0,8
tick,0x7ffad1f6fb64,477825723,0,0x0,8
tick,0x7ffad1f6fb64,477840971,0,0x0,8
tick,0x7ffad1f6fb64,477856776,0,0x0,8
tick,0x7ffad1f6fb64,477871795,0,0x0,8
tick,0x7ffad1f6fb64,477887795,0,0x0,8
tick,0x7ffad1f6fb64,477902818,0,0x0,8
tick,0x7ffad1f6fb64,477917817,0,0x0,8
tick,0x7ffad1f6fb64,477932878,0,0x0,8
tick,0x7ffad1f6fb64,477948861,0,0x0,8
tick,0x7ffad1f6fb64,477964854,0,0x0,8
tick,0x7ffad1f6fb64,477979871,0,0x0,8
tick,0x7ffad1f6fb64,477994949,0,0x0,8
tick,0x7ffad1f6fb64,478009942,0,0x0,8
tick,0x7ffad1f6fb64,478025925,0,0x0,8
tick,0x7ffad1f6fb64,478041954,0,0x0,8
tick,0x7ffad1f6fb64,478056952,0,0x0,8
tick,0x7ffad1f6fb64,478072964,0,0x0,8
tick,0x7ffad1f6fb64,478089012,0,0x0,8
tick,0x7ffad1f6fb64,478103996,0,0x0,8
tick,0x7ffad1f6fb64,478120056,0,0x0,8
tick,0x7ffad1f6fb64,478135010,0,0x0,8
tick,0x7ffad1f6fb64,478150032,0,0x0,8
tick,0x7ffad1f6fb64,478165104,0,0x0,8
tick,0x7ffad1f6fb64,478180064,0,0x0,8
tick,0x7ffad1f6fb64,478195076,0,0x0,8
tick,0x7ffad1f6fb64,478211089,0,0x0,8
tick,0x7ffad1f6fb64,478226103,0,0x0,8
tick,0x7ffad1f6fb64,478241112,0,0x0,8
tick,0x7ffad1f6fb64,478257151,0,0x0,8
tick,0x7ffad1f6fb64,478273194,0,0x0,8
tick,0x7ffad1f6fb64,478289151,0,0x0,8
tick,0x7ffad1f6fb64,478304195,0,0x0,8
tick,0x7ffad1f6fb64,478319197,0,0x0,8
tick,0x7ffad1f6fb64,478334210,0,0x0,8
tick,0x7ffad1f6fb64,478349264,0,0x0,8
tick,0x7ffad1f6fb64,478365254,0,0x0,8
tick,0x7ffad1f6fb64,478380306,0,0x0,8
tick,0x7ffad1f6fb64,478395279,0,0x0,8
tick,0x7ffad1f6fb64,478410273,0,0x0,8
tick,0x7ffad1f6fb64,478426285,0,0x0,8
tick,0x7ffad1f6fb64,478441299,0,0x0,8
tick,0x7ffad1f6fb64,478457306,0,0x0,8
tick,0x7ffad1f6fb64,478472320,0,0x0,8
tick,0x7ffad1f6fb64,478487348,0,0x0,8
tick,0x7ffad1f6fb64,478502365,0,0x0,8
tick,0x7ffad1f6fb64,478517367,0,0x0,8
tick,0x7ffad1f6fb64,478533377,0,0x0,8
tick,0x7ffad1f6fb64,478548404,0,0x0,8
tick,0x7ffad1f6fb64,478563415,0,0x0,8
tick,0x7ffad1f6fb64,478578427,0,0x0,8
tick,0x7ffad1f6fb64,478594452,0,0x0,8
tick,0x7ffad1f6fb64,478609451,0,0x0,8
tick,0x7ffad1f6fb64,478624457,0,0x0,8
tick,0x7ffad1f6fb64,478639484,0,0x0,8
tick,0x7ffad1f6fb64,478655494,0,0x0,8
tick,0x7ffad1f6fb64,478670533,0,0x0,8
tick,0x7ffad1f6fb64,478686689,0,0x0,8
tick,0x7ffad1f6fb64,478701551,0,0x0,8
tick,0x7ffad1f6fb64,478716547,0,0x0,8
tick,0x7ffad1f6fb64,478731564,0,0x0,8
tick,0x7ffad1f6fb64,478747575,0,0x0,8
tick,0x7ffad1f6fb64,478762599,0,0x0,8
tick,0x7ffad1f6fb64,478777603,0,0x0,8
tick,0x7ffad1f6fb64,478793607,0,0x0,8
tick,0x7ffad1f6fb64,478808643,0,0x0,8
tick,0x7ffad1f6fb64,478824652,0,0x0,8
tick,0x7ffad1f6fb64,478839700,0,0x0,8
tick,0x7ffad1f6fb64,478855703,0,0x0,8
tick,0x7ffad1f6fb64,478871716,0,0x0,8
tick,0x7ffad1f6fb64,478887697,0,0x0,8
tick,0x7ffad1f6fb64,478902702,0,0x0,8
tick,0x7ffad1f6fb64,478918755,0,0x0,8
tick,0x7ffad1f6fb64,478933751,0,0x0,8
tick,0x7ffad1f6fb64,478949774,0,0x0,8
tick,0x7ffad1f6fb64,478965922,0,0x0,8
tick,0x7ffad1f6fb64,478981860,0,0x0,8
tick,0x7ffad1f6fb64,478996821,0,0x0,8
tick,0x7ffad1f6fb64,479011920,0,0x0,8
tick,0x7ffad1f6fb64,479027868,0,0x0,8
tick,0x7ffad1f6fb64,479043883,0,0x0,8
tick,0x7ffad1f6fb64,479058888,0,0x0,8
tick,0x7ffad1f6fb64,479075075,0,0x0,8
tick,0x7ffad1f6fb64,479090931,0,0x0,8
tick,0x7ffad1f6fb64,479105956,0,0x0,8
tick,0x7ffad1f6fb64,479121026,0,0x0,8
tick,0x7ffad1f6fb64,479136960,0,0x0,8
tick,0x7ffad1f6fb64,479152953,0,0x0,8
tick,0x7ffad1f6fb64,479168957,0,0x0,8
tick,0x7ffad1f6fb64,479184028,0,0x0,8
tick,0x7ffad1f6fb64,479199022,0,0x0,8
tick,0x7ffad1f6fb64,479215022,0,0x0,8
tick,0x7ffad1f6fb64,479231033,0,0x0,8
tick,0x7ffad1f6fb64,479246064,0,0x0,8
tick,0x7ffad1f6fb64,479262063,0,0x0,8
tick,0x7ffad1f6fb64,479278082,0,0x0,8
tick,0x7ffad1f6fb64,479293113,0,0x0,8
tick,0x7ffad1f6fb64,479309141,0,0x0,8
tick,0x7ffad1f6fb64,479325150,0,0x0,8
tick,0x7ffad1f6fb64,479340177,0,0x0,8
tick,0x7ffad1f6fb64,479356158,0,0x0,8
tick,0x7ffad1f6fb64,479371227,0,0x0,8
tick,0x7ffad1f6fb64,479386181,0,0x0,8
tick,0x7ffad1f6fb64,479401183,0,0x0,8
tick,0x7ffad1f6fb64,479417223,0,0x0,8
tick,0x7ffad1f6fb64,479432207,0,0x0,8
tick,0x7ffad1f6fb64,479447253,0,0x0,8
tick,0x7ffad1f6fb64,479462254,0,0x0,8
tick,0x7ffad1f6fb64,479477281,0,0x0,8
tick,0x7ffad1f6fb64,479492256,0,0x0,8
tick,0x7ffad1f6fb64,479507290,0,0x0,8
tick,0x7ffad1f6fb64,479522317,0,0x0,8
tick,0x7ffad1f6fb64,479538326,0,0x0,8
tick,0x7ffad1f6fb64,479554319,0,0x0,8
tick,0x7ffad1f6fb64,479569340,0,0x0,8
tick,0x7ffad1f6fb64,479585394,0,0x0,8
tick,0x7ffad1f6fb64,479600392,0,0x0,8
tick,0x7ffad1f6fb64,479616377,0,0x0,8
tick,0x7ffad1f6fb64,479631457,0,0x0,8
tick,0x7ffad1f6fb64,479646412,0,0x0,8
tick,0x7ffad1f6fb64,479661488,0,0x0,8
tick,0x7ffad1f6fb64,479676446,0,0x0,8
tick,0x7ffad1f6fb64,479691478,0,0x0,8
tick,0x7ffad1f6fb64,479707483,0,0x0,8
tick,0x7ffad1f6fb64,479722518,0,0x0,8
tick,0x7ffad1f6fb64,479737533,0,0x0,8
tick,0x7ffad1f6fb64,479753509,0,0x0,8
tick,0x7ffad1f6fb64,479768568,0,0x0,8
tick,0x7ffad1f6fb64,479784536,0,0x0,8
tick,0x7ffad1f6fb64,479799549,0,0x0,8
tick,0x7ffad1f6fb64,479815555,0,0x0,8
tick,0x7ffad1f6fb64,479831579,0,0x0,8
tick,0x7ffad1f6fb64,479846621,0,0x0,8
tick,0x7ffad1f6fb64,479862605,0,0x0,8
tick,0x7ffad1f6fb64,479878638,0,0x0,8
tick,0x7ffad1f6fb64,479893659,0,0x0,8
tick,0x7ffad1f6fb64,479908668,0,0x0,8
tick,0x7ffad1f6fb64,479923691,0,0x0,8
tick,0x7ffad1f6fb64,479939741,0,0x0,8
tick,0x7ffad1f6fb64,479954752,0,0x0,8
tick,0x7ffad1f6fb64,479970759,0,0x0,8
tick,0x7ffad1f6fb64,479985732,0,0x0,8
tick,0x7ffad1f6fb64,480000726,0,0x0,8
tick,0x7ffad1f6fb64,480016775,0,0x0,8
tick,0x7ffad1f6fb64,480032958,0,0x0,8
tick,0x7ffad1f6fb64,480048791,0,0x0,8
tick,0x7ffad1f6fb64,480064801,0,0x0,8
tick,0x7ffad1f6fb64,480079826,0,0x0,8
tick,0x7ffad1f6fb64,480094908,0,0x0,8
tick,0x7ffad1f6fb64,480109857,0,0x0,8
tick,0x7ffad1f6fb64,480125883,0,0x0,8
tick,0x7ffad1f6fb64,480140880,0,0x0,8
tick,0x7ffad1f6fb64,480156863,0,0x0,8
tick,0x7ffad1f6fb64,480172915,0,0x0,8
tick,0x7ffad1f6fb64,480188924,0,0x0,8
tick,0x7ffad1f6fb64,480205062,0,0x0,8
tick,0x7ffad1f6fb64,480219953,0,0x0,8
tick,0x7ffad1f6fb64,480234966,0,0x0,8
tick,0x7ffad1f6fb64,480249966,0,0x0,8
tick,0x7ffad1f6fb64,480265970,0,0x0,8
tick,0x7ffad1f6fb64,480282020,0,0x0,8
tick,0x7ffad1f6fb64,480298026,0,0x0,8
tick,0x7ffad1f6fb64,480313140,0,0x0,8
tick,0x7ffad1f6fb64,480329030,0,0x0,8
tick,0x7ffad1f6fb64,480344039,0,0x0,8
tick,0x7ffad1f6fb64,480359097,0,0x0,8
tick,0x7ffad1f6fb64,480374108,0,0x0,8
tick,0x7ffad1f6fb64,480390155,0,0x0,8
tick,0x7ffad1f6fb64,480406116,0,0x0,8
tick,0x7ffad1f6fb64,480421133,0,0x0,8
tick,0x7ffad1f6fb64,480436125,0,0x0,8
tick,0x7ffad1f6fb64,480452156,0,0x0,8
tick,0x7ffad1f6fb64,480468199,0,0x0,8
tick,0x7ffad1f6fb64,480484160,0,0x0,8
tick,0x7ffad1f6fb64,480499204,0,0x0,8
tick,0x7ffad1f6fb64,480515186,0,0x0,8
tick,0x7ffad1f6fb64,480531230,0,0x0,8
tick,0x7ffad1f6fb64,480546240,0,0x0,8
tick,0x7ffad1f6fb64,480561226,0,0x0,8
tick,0x7ffad1f6fb64,480577284,0,0x0,8
tick,0x7ffad1f6fb64,480593289,0,0x0,8
tick,0x7ffad1f6fb64,480608329,0,0x0,8
tick,0x7ffad1f6fb64,480623277,0,0x0,8
tick,0x7ffad1f6fb64,480638345,0,0x0,8
tick,0x7ffad1f6fb64,480653360,0,0x0,8
tick,0x7ffad1f6fb64,480669350,0,0x0,8
tick,0x7ffad1f6fb64,480685370,0,0x0,8
tick,0x7ffad1f6fb64,480700379,0,0x0,8
tick,0x7ffad1f6fb64,480716469,0,0x0,8
tick,0x7ffad1f6fb64,480732391,0,0x0,8
tick,0x7ffad1f6fb64,480748427,0,0x0,8
tick,0x7ffad1f6fb64,480764482,0,0x0,8
tick,0x7ffad1f6fb64,480779481,0,0x0,8
tick,0x7ffad1f6fb64,480795459,0,0x0,8
tick,0x7ffad1f6fb64,480811458,0,0x0,8
tick,0x7ffad1f6fb64,480827475,0,0x0,8
tick,0x7ffad1f6fb64,480842475,0,0x0,8
tick,0x7ffad1f6fb64,480858514,0,0x0,8
tick,0x7ffad1f6fb64,480873537,0,0x0,8
tick,0x7ffad1f6fb64,480888551,0,0x0,8
tick,0x7ffad1f6fb64,480903587,0,0x0,8
tick,0x7ffad1f6fb64,480919622,0,0x0,8
tick,0x7ffad1f6fb64,480935631,0,0x0,8
tick,0x7ffad1f6fb64,480951595,0,0x0,8
tick,0x7ffad1f6fb64,480966653,0,0x0,8
tick,0x7ffad1f6fb64,480981636,0,0x0,8
tick,0x7ffad1f6fb64,480997636,0,0x0,8
tick,0x7ffad1f6fb64,481012648,0,0x0,8
tick,0x7ffad1f6fb64,481028680,0,0x0,8
tick,0x7ffad1f6fb64,481043693,0,0x0,8
tick,0x7ffad1f6fb64,481059686,0,0x0,8
tick,0x7ffad1f6fb64,481075729,0,0x0,8
tick,0x7ffad1f6fb64,481091742,0,0x0,8
tick,0x7ffad1f6fb64,481106747,0,0x0,8
tick,0x7ffad1f6fb64,481122750,0,0x0,8
tick,0x7ffad1f6fb64,481138800,0,0x0,8
tick,0x7ffad1f6fb64,481153820,0,0x0,8
tick,0x7ffad1f6fb64,481168815,0,0x0,8
tick,0x7ffad1f6fb64,481183828,0,0x0,8
tick,0x7ffad1f6fb64,481198823,0,0x0,8
tick,0x7ffad1f6fb64,481213862,0,0x0,8
tick,0x7ffad1f6fb64,481228870,0,0x0,8
tick,0x7ffad1f6fb64,481245096,0,0x0,8
tick,0x7ffad1f6fb64,481260895,0,0x0,8
tick,0x7ffad1f6fb64,481276913,0,0x0,8
tick,0x7ffad1f6fb64,481291906,0,0x0,8
tick,0x7ffad1f6fb64,481306931,0,0x0,8
tick,0x7ffad1f6fb64,481322942,0,0x0,8
tick,0x7ffad1f6fb64,481338964,0,0x0,8
tick,0x7ffad1f6fb64,481355107,0,0x0,8
tick,0x7ffad1f6fb64,481370990,0,0x0,8
tick,0x7ffad1f6fb64,481386997,0,0x0,8
tick,0x7ffad1f6fb64,481402031,0,0x0,8
tick,0x7ffad1f6fb64,481417056,0,0x0,8
tick,0x7ffad1f6fb64,481432040,0,0x0,8
tick,0x7ffad1f6fb64,481448074,0,0x0,8
tick,0x7ffad1f6fb64,481464068,0,0x0,8
tick,0x7ffad1f6fb64,481479108,0,0x0,8
tick,0x7ffad1f6fb64,481495090,0,0x0,8
tick,0x7ffad1f6fb64,481511110,0,0x0,8
tick,0x7ffad1f6fb64,481526149,0,0x0,8
tick,0x7ffad1f6fb64,481542140,0,0x0,8
tick,0x7ffad1f6fb64,481558133,0,0x0,8
tick,0x7ffad1f6fb64,481573176,0,0x0,8
tick,0x7ffad1f6fb64,481588188,0,0x0,8
tick,0x7ffad1f6fb64,481604191,0,0x0,8
tick,0x7ffad1f6fb64,481619227,0,0x0,8
tick,0x7ffad1f6fb64,481634226,0,0x0,8
tick,0x7ffad1f6fb64,481650244,0,0x0,8
tick,0x7ffad1f6fb64,481665246,0,0x0,8
tick,0x7ffad1f6fb64,481680254,0,0x0,8
tick,0x7ffad1f6fb64,481695270,0,0x0,8
tick,0x7ffad1f6fb64,481711291,0,0x0,8
tick,0x7ffad1f6fb64,481727321,0,0x0,8
tick,0x7ffad1f6fb64,481743360,0,0x0,8
tick,0x7ffad1f6fb64,481759334,0,0x0,8
tick,0x7ffad1f6fb64,481774339,0,0x0,8
tick,0x7ffad1f6fb64,481789367,0,0x0,8
tick,0x7ffad1f6fb64,481805387,0,0x0,8
tick,0x7ffad1f6fb64,481820426,0,0x0,8
tick,0x7ffad1f6fb64,481836505,0,0x0,8
tick,0x7ffad1f6fb64,481851459,0,0x0,8
tick,0x7ffad1f6fb64,481866419,0,0x0,8
tick,0x7ffad1f6fb64,481881435,0,0x0,8
tick,0x7ffad1f6fb64,481896482,0,0x0,8
tick,0x7ffad1f6fb64,481911475,0,0x0,8
tick,0x7ffad1f6fb64,481927492,0,0x0,8
tick,0x7ffad1f6fb64,481943533,0,0x0,8
tick,0x7ffad1f6fb64,481959555,0,0x0,8
tick,0x7ffad1f6fb64,481974545,0,0x0,8
tick,0x7ffad1f6fb64,481989568,0,0x0,8
tick,0x7ffad1f6fb64,482005567,0,0x0,8
tick,0x7ffad1f6fb64,482020597,0,0x0,8
tick,0x7ffad1f6fb64,482036632,0,0x0,8
tick,0x7ffad1f6fb64,482052603,0,0x0,8
tick,0x7ffad1f6fb64,482067654,0,0x0,8
tick,0x7ffad1f6fb64,482082632,0,0x0,8
tick,0x7ffad1f6fb64,482097647,0,0x0,8
tick,0x7ffad1f6fb64,482113768,0,0x0,8
tick,0x7ffad1f6fb64,482128693,0,0x0,8
tick,0x7ffad1f6fb64,482143745,0,0x0,8
tick,0x7ffad1f6fb64,482158706,0,0x0,8
tick,0x7ffad1f6fb64,482174727,0,0x0,8
tick,0x7ffad1f6fb64,482190731,0,0x0,8
tick,0x7ffad1f6fb64,482205748,0,0x0,8
tick,0x7ffad1f6fb64,482221785,0,0x0,8
tick,0x7ffad1f6fb64,482237796,0,0x0,8
tick,0x7ffad1f6fb64,482253820,0,0x0,8
tick,0x7ffad1f6fb64,482269850,0,0x0,8
tick,0x7ffad1f6fb64,482285851,0,0x0,8
tick,0x7ffad1f6fb64,482300859,0,0x0,8
tick,0x7ffad1f6fb64,482316900,0,0x0,8
tick,0x7ffad1f6fb64,482331915,0,0x0,8
tick,0x7ffad1f6fb64,482347913,0,0x0,8
tick,0x7ffad1f6fb64,482363884,0,0x0,8
tick,0x7ffad1f6fb64,482379923,0,0x0,8
tick,0x7ffad1f6fb64,482394942,0,0x0,8
tick,0x7ffad1f6fb64,482410951,0,0x0,8
tick,0x7ffad1f6fb64,482426947,0,0x0,8
